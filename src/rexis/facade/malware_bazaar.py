from typing import Any, Dict

from malwarebazaar.api import Bazaar
from malwarebazaar.models import Sample
from rexis.utils.config import settings


def query_malware_bazaar(query_type: str, query_value: str, amount: int = 100) -> Dict[Any, Sample]:
    """
    Queries the MalwareBazaar API for malware samples based on the specified query type and value.
    Args:
        query_type (str): The type of query to perform. Supported types are:
            - "hash": Query by a specific hash value.
            - "tag": Query by a specific tag.
            - "signature": Query by a specific signature.
            - "filetype": Query by a specific file type.
        query_value (str): The value associated with the query type (e.g., hash value, tag name, etc.).
        amount (int, optional): The maximum number of results to retrieve. Defaults to 100.
    Returns:
        Dict[Any, Sample]: A dictionary containing the results of the query.
    Raises:
        ValueError: If an unsupported query type is provided, if no results are found, 
                    or if an error occurs while querying the MalwareBazaar API.
    """
    bazaar = Bazaar(api_key=settings.malware_bazaaar_api_key)

    result = None
    try:
        if query_type == "hash":
            result = bazaar.query_hash(hash=query_value)
        elif query_type == "tag":
            result = bazaar.query_tag(tag=query_value, limit=amount)
        elif query_type == "signature":
            result = bazaar.query_signature(signature=query_value, limit=amount)
        elif query_type == "filetype":
            result = bazaar.query_filetype(filetype=query_value, limit=amount)
        else:
            print(f"Unsupported query type: {query_type}")
    except Exception as e:
        raise ValueError(f"Error querying MalwareBazaar API: {e}")

    if result == None or "data" not in result:
        raise ValueError(f"No results found for {query_type}: {query_value}")
    
    return result


def download_sample(sample_hash: str, output_path: str) -> None:
    """
    Downloads a malware sample from the MalwareBazaar API using its hash.

    Args:
        sample_hash (str): The hash of the sample to download.
        output_path (str): The file path where the sample will be saved.

    Raises:
        ValueError: If the download fails or the sample is not found.
    """
    bazaar = Bazaar(api_key=settings.malware_bazaaar_api_key)

    try:
        sample_data = bazaar.download_file(sample_hash)
        if not sample_data:
            raise ValueError(f"Sample with hash {sample_hash} not found or could not be downloaded.")

        with open(output_path, "wb") as file:
            file.write(sample_data)
        
        print(f"Sample {sample_hash} downloaded successfully to {output_path}.")
    except Exception as e:
        raise ValueError(f"Error downloading sample: {e}")
