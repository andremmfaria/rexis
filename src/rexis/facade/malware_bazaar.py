from typing import Any, Dict

from malwarebazaar.api import Bazaar
from malwarebazaar.models import Sample
from rexis.utils.config import settings


def query_malware_bazaar(query_type: str, query_value: str) -> Dict[Any, Sample]:
    """
    Queries malware samples and metadata from the MalwareBazaar API using the official library.

    Args:
        query_type (str): The type of query (e.g., 'hash', 'tag', 'signature').
        query_value (str): The value for the query (e.g., hash value, tag name).

    Returns:
        Optional[Dict]: The response from the MalwareBazaar API as a dictionary, or None if an error occurs.
    """
    bazaar = Bazaar(api_key=settings.malware_bazaaar_api_key)

    result = None
    try:
        if query_type == "hash":
            result = bazaar.query_hash(query_value)
        elif query_type == "tag":
            result = bazaar.query_tag(query_value)
        elif query_type == "signature":
            result = bazaar.query_signature(query_value)
        else:
            print(f"Unsupported query type: {query_type}")
    except Exception as e:
        raise ValueError(f"Error querying MalwareBazaar API: {e}")

    if result == None or "data" not in result:
        raise ValueError(f"No results found for {query_type}: {query_value}")
    
    return result
