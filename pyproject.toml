[project]
name = "rexis"
version = "0.1.0"
description = "Experimental framework designed to enhance static malware analysis using Large Language Models (LLMs) integrated with Retrieval-Augmented Generation (RAG)"
authors = [{ name = "Andre Faria", email = "andremarcalfaria@gmail.com" }]
requires-python = "<3.14,>=3.11"
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "malwarebazaar>=0.2.7",
    "dynaconf>=3.2.10",
    "openai>=1.75.0",
    "haystack-ai[openai,pgvector]>=2.12.2",
    "pgvector-haystack>=3.2.0",
    "vt-py>=0.20.0",
    "pyfiglet>=1.0.2",
    "rich>=14.0.0",
    "typer>=0.15.2",
]

[project.scripts]
rexis = "rexis.main:main"
populate-db = "rexis.main:populate_db"
analyze-prompt = "rexis.main:analyze_prompt"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "flake8>=7.2.0",
    "black>=25.1.0",
    "mypy>=1.15.0",
    "coverage>=7.8.0",
    "isort>=6.0.1",
    "ipython>=9.1.0",
    "pylint>=3.3.6",
    "tomli>=2.2.1",
    "pydocstyle>=6.3.0",
    "pre-commit>=4.2.0",
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
fail_under = 0

[tool.isort]
profile = "hug"
src_paths = ["isort", "test"]

[tool.pylint.main]
fail-under = 1
py-version = "3.11"

[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
docstring-min-length = -1
const-naming-style = "UPPER_CASE"

[tool.pylint.format]
max-line-length = 100

[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true
envlist = py311

[testenv]
allowlist_externals = poetry
commands =
    pdm install -v
    pdm run isort .
    pdm run black .
    pdm run pylint ./**/*.py
    pdm run coverage run -m pytest
    pdm run coverage report
"""

[tool.pdm]
distribution = true

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
