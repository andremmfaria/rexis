[project]
name = "rexis"
version = "0.1.0"
description = "Experimental framework designed to enhance static malware analysis using Large Language Models (LLMs) integrated with Retrieval-Augmented Generation (RAG)"
authors = [{ name = "Andre Faria", email = "andremarcalfaria@gmail.com" }]
requires-python = ">=3.13"
readme = "README.md"
license = {text = "MIT"}
dependencies = [
  "openai",
  "haystack-ai",
  "tqdm",
  "requests",
  "pandas",
  "scikit-learn",
  "psycopg[binary]",
  "pgvector",
  "dynaconf",
]
scripts = { rexis = "rexis.main:main" }

[dependency-groups]
dev = [
    "pytest",
    "flake8",
    "black",
    "mypy",
    "coverage",
    "isort",
    "ipython",
    "pylint",
    "tomli",
    "pydocstyle",
    "pre-commit",
]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
fail_under = 0

[tool.isort]
profile = "hug"
src_paths = ["isort", "test"]

[tool.pylint.main]
fail-under = 1
py-version = "3.10"

[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
docstring-min-length = -1
const-naming-style = "UPPER_CASE"

[tool.pylint.format]
max-line-length = 100

[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true
envlist = py310

[testenv]
allowlist_externals = poetry
commands =
    pdm install -v
    pdm run isort .
    pdm run black .
    pdm run pylint ./**/*.py
    pdm run coverage run -m pytest
    pdm run coverage report
"""

[tool.pdm]
distribution = true

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
