{
  "program": {
    "name": "10abf4518c37c5852817b74292c939a7646abbb6fa538e7ffd0a1e384b533207.exe",
    "format": "Portable Executable (PE)",
    "language": "x86/little/32/default",
    "compiler": "Visual Studio",
    "image_base": "00400000",
    "size": 10662638,
    "sha256": "10abf4518c37c5852817b74292c939a7646abbb6fa538e7ffd0a1e384b533207"
  },
  "functions": [
    {
      "name": "FUN_00401000",
      "entry": "00401000",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401010",
      "entry": "00401010",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401020",
      "entry": "00401020",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401040",
      "entry": "00401040",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401050",
      "entry": "00401050",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401060",
      "entry": "00401060",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401070",
      "entry": "00401070",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401090",
      "entry": "00401090",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004010b0",
      "entry": "004010b0",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004010d0",
      "entry": "004010d0",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004010f0",
      "entry": "004010f0",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401100",
      "entry": "00401100",
      "size": 335,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040124f",
      "entry": "0040124f",
      "size": 127,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "guard_check_icall",
      "entry": "004012d0",
      "size": 3,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004012d3",
      "entry": "004012d3",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004012f1",
      "entry": "004012f1",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401316",
      "entry": "00401316",
      "size": 117,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040138b",
      "entry": "0040138b",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004013ba",
      "entry": "004013ba",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004013dc",
      "entry": "004013dc",
      "size": 414,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040157a",
      "entry": "0040157a",
      "size": 76,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004015c6",
      "entry": "004015c6",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004015fb",
      "entry": "004015fb",
      "size": 69,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00401645",
      "entry": "00401645",
      "size": 72,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00401692",
      "entry": "00401692",
      "size": 102,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004016f8",
      "entry": "004016f8",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00401710",
      "entry": "00401710",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00401732",
      "entry": "00401732",
      "size": 183,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004017e9",
      "entry": "004017e9",
      "size": 192,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004018a9",
      "entry": "004018a9",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004018c3",
      "entry": "004018c3",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004018f6",
      "entry": "004018f6",
      "size": 141,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00401983",
      "entry": "00401983",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004019af",
      "entry": "004019af",
      "size": 85,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00401a04",
      "entry": "00401a04",
      "size": 1003,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401df0",
      "entry": "00401df0",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00401df8",
      "entry": "00401df8",
      "size": 88,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401e50",
      "entry": "00401e50",
      "size": 247,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401f47",
      "entry": "00401f47",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00401f6d",
      "entry": "00401f6d",
      "size": 111,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00401fdc",
      "entry": "00401fdc",
      "size": 69,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00402021",
      "entry": "00402021",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00402063",
      "entry": "00402063",
      "size": 85,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_004015fb",
      "entry": "004020b8",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004020bd",
      "entry": "004020bd",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004020d7",
      "entry": "004020d7",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004020fa",
      "entry": "004020fa",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00402112",
      "entry": "00402112",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00402134",
      "entry": "00402134",
      "size": 155,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004021cf",
      "entry": "004021cf",
      "size": 58,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00402209",
      "entry": "00402209",
      "size": 7,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00402210",
      "entry": "00402210",
      "size": 1627,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040286b",
      "entry": "0040286b",
      "size": 2700,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004032f7",
      "entry": "004032f7",
      "size": 2102,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00403b2d",
      "entry": "00403b2d",
      "size": 141,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00403bba",
      "entry": "00403bba",
      "size": 691,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00403e6d",
      "entry": "00403e6d",
      "size": 113,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "RemoveAll",
      "entry": "00403ede",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00403efb",
      "entry": "00403efb",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00403f4a",
      "entry": "00403f4a",
      "size": 89,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00403fa3",
      "entry": "00403fa3",
      "size": 89,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00403ffc",
      "entry": "00403ffc",
      "size": 65,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040403d",
      "entry": "0040403d",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040405f",
      "entry": "0040405f",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FID_conflict:__vsnprintf_c_l",
      "entry": "00404065",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00404092",
      "entry": "00404092",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004040b0",
      "entry": "004040b0",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004040bc",
      "entry": "004040bc",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004040fe",
      "entry": "004040fe",
      "size": 1050,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00404518",
      "entry": "00404518",
      "size": 4367,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405627",
      "entry": "00405627",
      "size": 198,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004056ed",
      "entry": "004056ed",
      "size": 124,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405769",
      "entry": "00405769",
      "size": 184,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405821",
      "entry": "00405821",
      "size": 144,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004058b1",
      "entry": "004058b1",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405912",
      "entry": "00405912",
      "size": 392,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405a9a",
      "entry": "00405a9a",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00405abd",
      "entry": "00405abd",
      "size": 123,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_00401645",
      "entry": "00405b38",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00405b3d",
      "entry": "00405b3d",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00405b48",
      "entry": "00405b48",
      "size": 259,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405c4b",
      "entry": "00405c4b",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00405ca1",
      "entry": "00405ca1",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00405cac",
      "entry": "00405cac",
      "size": 110,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00405d1a",
      "entry": "00405d1a",
      "size": 180,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00405dce",
      "entry": "00405dce",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405dff",
      "entry": "00405dff",
      "size": 56,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405e37",
      "entry": "00405e37",
      "size": 171,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00405ef0",
      "entry": "00405ef0",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00405f02",
      "entry": "00405f02",
      "size": 106,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00405f80",
      "entry": "00405f80",
      "size": 5,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00405f85",
      "entry": "00405f85",
      "size": 139,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00406010",
      "entry": "00406010",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040603a",
      "entry": "0040603a",
      "size": 232,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406122",
      "entry": "00406122",
      "size": 704,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004063e2",
      "entry": "004063e2",
      "size": 599,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406639",
      "entry": "00406639",
      "size": 523,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00406844",
      "entry": "00406844",
      "size": 306,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00406976",
      "entry": "00406976",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00406986",
      "entry": "00406986",
      "size": 510,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406b84",
      "entry": "00406b84",
      "size": 21,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00406b99",
      "entry": "00406b99",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406baa",
      "entry": "00406baa",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00406bd5",
      "entry": "00406bd5",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406bfd",
      "entry": "00406bfd",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406c23",
      "entry": "00406c23",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "thunk_FUN_00406e47",
      "entry": "00406c31",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406c36",
      "entry": "00406c36",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00406c74",
      "entry": "00406c74",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00406ca7",
      "entry": "00406ca7",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00406cba",
      "entry": "00406cba",
      "size": 39,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00406ce1",
      "entry": "00406ce1",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406d0c",
      "entry": "00406d0c",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406d1a",
      "entry": "00406d1a",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406d35",
      "entry": "00406d35",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406d5b",
      "entry": "00406d5b",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406d83",
      "entry": "00406d83",
      "size": 72,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406dcb",
      "entry": "00406dcb",
      "size": 124,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00406e47",
      "entry": "00406e47",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406e7a",
      "entry": "00406e7a",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00406e98",
      "entry": "00406e98",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406eb5",
      "entry": "00406eb5",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00406edb",
      "entry": "00406edb",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00406f04",
      "entry": "00406f04",
      "size": 161,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00406fa5",
      "entry": "00406fa5",
      "size": 1116,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407401",
      "entry": "00407401",
      "size": 321,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407542",
      "entry": "00407542",
      "size": 156,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004075de",
      "entry": "004075de",
      "size": 474,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004077b8",
      "entry": "004077b8",
      "size": 39,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004077df",
      "entry": "004077df",
      "size": 130,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407861",
      "entry": "00407861",
      "size": 262,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407967",
      "entry": "00407967",
      "size": 166,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407a0d",
      "entry": "00407a0d",
      "size": 107,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407a78",
      "entry": "00407a78",
      "size": 3,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407a7b",
      "entry": "00407a7b",
      "size": 33,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00407a9c",
      "entry": "00407a9c",
      "size": 113,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407b0d",
      "entry": "00407b0d",
      "size": 145,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407b9e",
      "entry": "00407b9e",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00407bca",
      "entry": "00407bca",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00407be7",
      "entry": "00407be7",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00407c0d",
      "entry": "00407c0d",
      "size": 87,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407c64",
      "entry": "00407c64",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00407c7d",
      "entry": "00407c7d",
      "size": 309,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00407db2",
      "entry": "00407db2",
      "size": 526,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00407fc0",
      "entry": "00407fc0",
      "size": 343,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00408117",
      "entry": "00408117",
      "size": 80,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00408167",
      "entry": "00408167",
      "size": 285,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00408284",
      "entry": "00408284",
      "size": 428,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00408430",
      "entry": "00408430",
      "size": 94,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040848e",
      "entry": "0040848e",
      "size": 3271,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00409155",
      "entry": "00409155",
      "size": 192,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00409215",
      "entry": "00409215",
      "size": 142,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004092a3",
      "entry": "004092a3",
      "size": 223,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00409382",
      "entry": "00409382",
      "size": 468,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00409556",
      "entry": "00409556",
      "size": 68,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040959a",
      "entry": "0040959a",
      "size": 72,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004095f0",
      "entry": "004095f0",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409620",
      "entry": "00409620",
      "size": 78,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040966e",
      "entry": "0040966e",
      "size": 224,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040974e",
      "entry": "0040974e",
      "size": 55,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00409785",
      "entry": "00409785",
      "size": 149,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040981a",
      "entry": "0040981a",
      "size": 120,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00409892",
      "entry": "00409892",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004098bc",
      "entry": "004098bc",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004098e0",
      "entry": "004098e0",
      "size": 348,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409a3c",
      "entry": "00409a3c",
      "size": 56,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409a74",
      "entry": "00409a74",
      "size": 336,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409bd0",
      "entry": "00409bd0",
      "size": 407,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409d70",
      "entry": "00409d70",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409d9f",
      "entry": "00409d9f",
      "size": 3,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00409da2",
      "entry": "00409da2",
      "size": 221,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409e80",
      "entry": "00409e80",
      "size": 137,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00409f09",
      "entry": "00409f09",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00409f1a",
      "entry": "00409f1a",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409f42",
      "entry": "00409f42",
      "size": 56,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00409f7a",
      "entry": "00409f7a",
      "size": 311,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040a0b1",
      "entry": "0040a0b1",
      "size": 222,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a18f",
      "entry": "0040a18f",
      "size": 81,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a1e0",
      "entry": "0040a1e0",
      "size": 81,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a231",
      "entry": "0040a231",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a243",
      "entry": "0040a243",
      "size": 76,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a28f",
      "entry": "0040a28f",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a2a6",
      "entry": "0040a2a6",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a2b2",
      "entry": "0040a2b2",
      "size": 148,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a346",
      "entry": "0040a346",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a354",
      "entry": "0040a354",
      "size": 409,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a4ed",
      "entry": "0040a4ed",
      "size": 87,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a544",
      "entry": "0040a544",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040a55a",
      "entry": "0040a55a",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040a56d",
      "entry": "0040a56d",
      "size": 100,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a5d1",
      "entry": "0040a5d1",
      "size": 173,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040a67e",
      "entry": "0040a67e",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040a69b",
      "entry": "0040a69b",
      "size": 377,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040a814",
      "entry": "0040a814",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040a84a",
      "entry": "0040a84a",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040a85a",
      "entry": "0040a85a",
      "size": 39,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040a881",
      "entry": "0040a881",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "thunk_FUN_0040a89d",
      "entry": "0040a898",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040a89d",
      "entry": "0040a89d",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040a8ce",
      "entry": "0040a8ce",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040a8e0",
      "entry": "0040a8e0",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040a8f9",
      "entry": "0040a8f9",
      "size": 120,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040a971",
      "entry": "0040a971",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040a99e",
      "entry": "0040a99e",
      "size": 111,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040aa12",
      "entry": "0040aa12",
      "size": 68,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040aa56",
      "entry": "0040aa56",
      "size": 90,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040aab0",
      "entry": "0040aab0",
      "size": 58,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040aaea",
      "entry": "0040aaea",
      "size": 48,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ab1a",
      "entry": "0040ab1a",
      "size": 105,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ab83",
      "entry": "0040ab83",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040abb6",
      "entry": "0040abb6",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ac05",
      "entry": "0040ac05",
      "size": 148,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ac99",
      "entry": "0040ac99",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040acc4",
      "entry": "0040acc4",
      "size": 154,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ad5e",
      "entry": "0040ad5e",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040ad87",
      "entry": "0040ad87",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ada6",
      "entry": "0040ada6",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040addb",
      "entry": "0040addb",
      "size": 82,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ae2d",
      "entry": "0040ae2d",
      "size": 82,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ae7f",
      "entry": "0040ae7f",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040ae92",
      "entry": "0040ae92",
      "size": 100,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040aef6",
      "entry": "0040aef6",
      "size": 46,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040af24",
      "entry": "0040af24",
      "size": 546,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b146",
      "entry": "0040b146",
      "size": 110,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b1b4",
      "entry": "0040b1b4",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040b1dc",
      "entry": "0040b1dc",
      "size": 414,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b37a",
      "entry": "0040b37a",
      "size": 337,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b4cb",
      "entry": "0040b4cb",
      "size": 33,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b4ec",
      "entry": "0040b4ec",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b505",
      "entry": "0040b505",
      "size": 161,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b5a6",
      "entry": "0040b5a6",
      "size": 73,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040b5f4",
      "entry": "0040b5f4",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040b61e",
      "entry": "0040b61e",
      "size": 114,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040b690",
      "entry": "0040b690",
      "size": 52,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b6c4",
      "entry": "0040b6c4",
      "size": 168,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b76c",
      "entry": "0040b76c",
      "size": 367,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b8db",
      "entry": "0040b8db",
      "size": 82,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b92d",
      "entry": "0040b92d",
      "size": 33,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b94e",
      "entry": "0040b94e",
      "size": 67,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040b991",
      "entry": "0040b991",
      "size": 141,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ba1e",
      "entry": "0040ba1e",
      "size": 143,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040baad",
      "entry": "0040baad",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bb03",
      "entry": "0040bb03",
      "size": 394,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bc8d",
      "entry": "0040bc8d",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bc98",
      "entry": "0040bc98",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bcc3",
      "entry": "0040bcc3",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bcf8",
      "entry": "0040bcf8",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bd1a",
      "entry": "0040bd1a",
      "size": 131,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bd9d",
      "entry": "0040bd9d",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bdb4",
      "entry": "0040bdb4",
      "size": 63,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040bdf3",
      "entry": "0040bdf3",
      "size": 107,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040be5e",
      "entry": "0040be5e",
      "size": 506,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c058",
      "entry": "0040c058",
      "size": 109,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c0c5",
      "entry": "0040c0c5",
      "size": 388,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c249",
      "entry": "0040c249",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c27e",
      "entry": "0040c27e",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c29a",
      "entry": "0040c29a",
      "size": 74,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c2e4",
      "entry": "0040c2e4",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c310",
      "entry": "0040c310",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c335",
      "entry": "0040c335",
      "size": 57,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c36e",
      "entry": "0040c36e",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c3b0",
      "entry": "0040c3b0",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040c3b6",
      "entry": "0040c3b6",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040c3bf",
      "entry": "0040c3bf",
      "size": 103,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040c426",
      "entry": "0040c426",
      "size": 1375,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040c985",
      "entry": "0040c985",
      "size": 75,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040c9d0",
      "entry": "0040c9d0",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ca1f",
      "entry": "0040ca1f",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040ca36",
      "entry": "0040ca36",
      "size": 93,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ca93",
      "entry": "0040ca93",
      "size": 182,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040cb49",
      "entry": "0040cb49",
      "size": 58,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040cb83",
      "entry": "0040cb83",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040cbaf",
      "entry": "0040cbaf",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040cbc6",
      "entry": "0040cbc6",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040cbfb",
      "entry": "0040cbfb",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040cc3d",
      "entry": "0040cc3d",
      "size": 32,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040cc5d",
      "entry": "0040cc5d",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ccac",
      "entry": "0040ccac",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ccdb",
      "entry": "0040ccdb",
      "size": 32,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040ccfb",
      "entry": "0040ccfb",
      "size": 107,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040cd66",
      "entry": "0040cd66",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040cd8a",
      "entry": "0040cd8a",
      "size": 182,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ce40",
      "entry": "0040ce40",
      "size": 161,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040cee1",
      "entry": "0040cee1",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040cf3d",
      "entry": "0040cf3d",
      "size": 151,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040cfd4",
      "entry": "0040cfd4",
      "size": 125,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040d051",
      "entry": "0040d051",
      "size": 72,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d099",
      "entry": "0040d099",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d0b6",
      "entry": "0040d0b6",
      "size": 21,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d0cb",
      "entry": "0040d0cb",
      "size": 73,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d114",
      "entry": "0040d114",
      "size": 492,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d300",
      "entry": "0040d300",
      "size": 104,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d368",
      "entry": "0040d368",
      "size": 87,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040d3bf",
      "entry": "0040d3bf",
      "size": 73,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040d40d",
      "entry": "0040d40d",
      "size": 71,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040d459",
      "entry": "0040d459",
      "size": 95,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040d4b8",
      "entry": "0040d4b8",
      "size": 196,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d57c",
      "entry": "0040d57c",
      "size": 190,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d640",
      "entry": "0040d640",
      "size": 153,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040d6e0",
      "entry": "0040d6e0",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040d710",
      "entry": "0040d710",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040d780",
      "entry": "0040d780",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040d7a0",
      "entry": "0040d7a0",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040d7d0",
      "entry": "0040d7d0",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040d800",
      "entry": "0040d800",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040d81c",
      "entry": "0040d81c",
      "size": 128,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d89c",
      "entry": "0040d89c",
      "size": 80,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d8ec",
      "entry": "0040d8ec",
      "size": 196,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d9b0",
      "entry": "0040d9b0",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040d9f0",
      "entry": "0040d9f0",
      "size": 82,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040da42",
      "entry": "0040da42",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040da67",
      "entry": "0040da67",
      "size": 2042,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040e261",
      "entry": "0040e261",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040e27c",
      "entry": "0040e27c",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040e29e",
      "entry": "0040e29e",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040e2c1",
      "entry": "0040e2c1",
      "size": 39,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040e2e8",
      "entry": "0040e2e8",
      "size": 713,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040e5b1",
      "entry": "0040e5b1",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040e5cb",
      "entry": "0040e5cb",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FID_conflict:__vsnprintf_l",
      "entry": "0040e5e6",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0040e617",
      "entry": "0040e617",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040e648",
      "entry": "0040e648",
      "size": 84,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040e69c",
      "entry": "0040e69c",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040e6b5",
      "entry": "0040e6b5",
      "size": 475,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040e890",
      "entry": "0040e890",
      "size": 245,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040e985",
      "entry": "0040e985",
      "size": 50,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040e9b7",
      "entry": "0040e9b7",
      "size": 1219,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ee7a",
      "entry": "0040ee7a",
      "size": 138,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040ef04",
      "entry": "0040ef04",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ef2e",
      "entry": "0040ef2e",
      "size": 180,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040efe2",
      "entry": "0040efe2",
      "size": 494,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040f1d0",
      "entry": "0040f1d0",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040f1e8",
      "entry": "0040f1e8",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "thunk_FUN_0040f279",
      "entry": "0040f204",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040f209",
      "entry": "0040f209",
      "size": 112,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040f279",
      "entry": "0040f279",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040f28c",
      "entry": "0040f28c",
      "size": 57,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040f2c5",
      "entry": "0040f2c5",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0040f303",
      "entry": "0040f303",
      "size": 65,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040f344",
      "entry": "0040f344",
      "size": 182,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040f3fa",
      "entry": "0040f3fa",
      "size": 75,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0040f445",
      "entry": "0040f445",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040f461",
      "entry": "0040f461",
      "size": 2169,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040fcda",
      "entry": "0040fcda",
      "size": 194,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040fd9c",
      "entry": "0040fd9c",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040fdcd",
      "entry": "0040fdcd",
      "size": 159,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040fe6c",
      "entry": "0040fe6c",
      "size": 199,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0040ff33",
      "entry": "0040ff33",
      "size": 227,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410016",
      "entry": "00410016",
      "size": 70,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041005c",
      "entry": "0041005c",
      "size": 91,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004100b7",
      "entry": "004100b7",
      "size": 429,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410264",
      "entry": "00410264",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041028f",
      "entry": "0041028f",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004102ba",
      "entry": "004102ba",
      "size": 183,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410371",
      "entry": "00410371",
      "size": 185,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041042a",
      "entry": "0041042a",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041045b",
      "entry": "0041045b",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041047a",
      "entry": "0041047a",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041048d",
      "entry": "0041048d",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004104a4",
      "entry": "004104a4",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004104bd",
      "entry": "004104bd",
      "size": 195,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410580",
      "entry": "00410580",
      "size": 39,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004105a7",
      "entry": "004105a7",
      "size": 46,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_00411fbb",
      "entry": "004105d5",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004105da",
      "entry": "004105da",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410602",
      "entry": "00410602",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410637",
      "entry": "00410637",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00410659",
      "entry": "00410659",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00410695",
      "entry": "00410695",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004106a7",
      "entry": "004106a7",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004106e3",
      "entry": "004106e3",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00410708",
      "entry": "00410708",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041071e",
      "entry": "0041071e",
      "size": 5,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00410723",
      "entry": "00410723",
      "size": 153,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004107bc",
      "entry": "004107bc",
      "size": 95,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041081b",
      "entry": "0041081b",
      "size": 72,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410863",
      "entry": "00410863",
      "size": 1445,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410e08",
      "entry": "00410e08",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00410e46",
      "entry": "00410e46",
      "size": 167,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00410eed",
      "entry": "00410eed",
      "size": 148,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00410f86",
      "entry": "00410f86",
      "size": 93,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00410fe4",
      "entry": "00410fe4",
      "size": 59,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041101f",
      "entry": "0041101f",
      "size": 127,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041109e",
      "entry": "0041109e",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004110dc",
      "entry": "004110dc",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004110f3",
      "entry": "004110f3",
      "size": 100,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00411160",
      "entry": "00411160",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041116e",
      "entry": "0041116e",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004111cf",
      "entry": "004111cf",
      "size": 57,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00411208",
      "entry": "00411208",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00411218",
      "entry": "00411218",
      "size": 370,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041138a",
      "entry": "0041138a",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004113a4",
      "entry": "004113a4",
      "size": 46,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004113d2",
      "entry": "004113d2",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041140e",
      "entry": "0041140e",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041146a",
      "entry": "0041146a",
      "size": 293,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041158f",
      "entry": "0041158f",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004115bb",
      "entry": "004115bb",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004115da",
      "entry": "004115da",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004115fe",
      "entry": "004115fe",
      "size": 693,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "thunk_FUN_0041dca1",
      "entry": "0041193e",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411943",
      "entry": "00411943",
      "size": 174,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004119f1",
      "entry": "004119f1",
      "size": 301,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411b1e",
      "entry": "00411b1e",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00411b42",
      "entry": "00411b42",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_0041b568",
      "entry": "00411b58",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411b5d",
      "entry": "00411b5d",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411b63",
      "entry": "00411b63",
      "size": 3,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411b66",
      "entry": "00411b66",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_0041dec2",
      "entry": "00411b7f",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411b84",
      "entry": "00411b84",
      "size": 57,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411bbd",
      "entry": "00411bbd",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00411bfd",
      "entry": "00411bfd",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411c3b",
      "entry": "00411c3b",
      "size": 364,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411da7",
      "entry": "00411da7",
      "size": 56,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411ddf",
      "entry": "00411ddf",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411e15",
      "entry": "00411e15",
      "size": 271,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411f24",
      "entry": "00411f24",
      "size": 131,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_00411f24",
      "entry": "00411fa7",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411fac",
      "entry": "00411fac",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411fbb",
      "entry": "00411fbb",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00411fdd",
      "entry": "00411fdd",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041203e",
      "entry": "0041203e",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412067",
      "entry": "00412067",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412089",
      "entry": "00412089",
      "size": 305,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004121c0",
      "entry": "004121c0",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004121e0",
      "entry": "004121e0",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004121f8",
      "entry": "004121f8",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412210",
      "entry": "00412210",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00412239",
      "entry": "00412239",
      "size": 73,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "thunk_FUN_00414872",
      "entry": "00412287",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041228c",
      "entry": "0041228c",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412297",
      "entry": "00412297",
      "size": 189,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412360",
      "entry": "00412360",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412380",
      "entry": "00412380",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412391",
      "entry": "00412391",
      "size": 56,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004123c9",
      "entry": "004123c9",
      "size": 129,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00412450",
      "entry": "00412450",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041247a",
      "entry": "0041247a",
      "size": 196,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041253e",
      "entry": "0041253e",
      "size": 105,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004125a7",
      "entry": "004125a7",
      "size": 891,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00412922",
      "entry": "00412922",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041293c",
      "entry": "0041293c",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412971",
      "entry": "00412971",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004129cd",
      "entry": "004129cd",
      "size": 164,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00412a71",
      "entry": "00412a71",
      "size": 327,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00412bb8",
      "entry": "00412bb8",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412bde",
      "entry": "00412bde",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412bfc",
      "entry": "00412bfc",
      "size": 52,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00412c30",
      "entry": "00412c30",
      "size": 88,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00412c88",
      "entry": "00412c88",
      "size": 309,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00412dbd",
      "entry": "00412dbd",
      "size": 440,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00412f75",
      "entry": "00412f75",
      "size": 171,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413020",
      "entry": "00413020",
      "size": 71,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413067",
      "entry": "00413067",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413083",
      "entry": "00413083",
      "size": 88,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004130db",
      "entry": "004130db",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413106",
      "entry": "00413106",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00413137",
      "entry": "00413137",
      "size": 371,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004132aa",
      "entry": "004132aa",
      "size": 205,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413377",
      "entry": "00413377",
      "size": 380,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004134f3",
      "entry": "004134f3",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413529",
      "entry": "00413529",
      "size": 117,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041359e",
      "entry": "0041359e",
      "size": 260,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004136a2",
      "entry": "004136a2",
      "size": 245,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00413797",
      "entry": "00413797",
      "size": 374,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041390d",
      "entry": "0041390d",
      "size": 1241,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413de6",
      "entry": "00413de6",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413e0b",
      "entry": "00413e0b",
      "size": 315,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00413f46",
      "entry": "00413f46",
      "size": 87,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00413f9d",
      "entry": "00413f9d",
      "size": 135,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414024",
      "entry": "00414024",
      "size": 100,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00414088",
      "entry": "00414088",
      "size": 823,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004143bf",
      "entry": "004143bf",
      "size": 711,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414686",
      "entry": "00414686",
      "size": 293,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004147ab",
      "entry": "004147ab",
      "size": 199,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00414872",
      "entry": "00414872",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00414894",
      "entry": "00414894",
      "size": 437,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00414a49",
      "entry": "00414a49",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00414a76",
      "entry": "00414a76",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00414ac5",
      "entry": "00414ac5",
      "size": 117,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414b3a",
      "entry": "00414b3a",
      "size": 99,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414b9d",
      "entry": "00414b9d",
      "size": 175,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414c4c",
      "entry": "00414c4c",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414ca8",
      "entry": "00414ca8",
      "size": 21,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00414cbd",
      "entry": "00414cbd",
      "size": 77,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414d0a",
      "entry": "00414d0a",
      "size": 186,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414dc4",
      "entry": "00414dc4",
      "size": 142,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00414e52",
      "entry": "00414e52",
      "size": 212,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00414f26",
      "entry": "00414f26",
      "size": 167,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00414fcd",
      "entry": "00414fcd",
      "size": 565,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00415202",
      "entry": "00415202",
      "size": 720,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004154d2",
      "entry": "004154d2",
      "size": 93,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041552f",
      "entry": "0041552f",
      "size": 3355,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041624a",
      "entry": "0041624a",
      "size": 2706,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00416cdc",
      "entry": "00416cdc",
      "size": 1143,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00417153",
      "entry": "00417153",
      "size": 1645,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004177c0",
      "entry": "004177c0",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004177ef",
      "entry": "004177ef",
      "size": 2560,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004181ef",
      "entry": "004181ef",
      "size": 770,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004184f1",
      "entry": "004184f1",
      "size": 65,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00418532",
      "entry": "00418532",
      "size": 303,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00418661",
      "entry": "00418661",
      "size": 345,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004187ba",
      "entry": "004187ba",
      "size": 378,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00418934",
      "entry": "00418934",
      "size": 68,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00418978",
      "entry": "00418978",
      "size": 148,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00418a0c",
      "entry": "00418a0c",
      "size": 445,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00418bc9",
      "entry": "00418bc9",
      "size": 91,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00418c24",
      "entry": "00418c24",
      "size": 58,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00418c5e",
      "entry": "00418c5e",
      "size": 32,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00418c80",
      "entry": "00418c80",
      "size": 13,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00418c8d",
      "entry": "00418c8d",
      "size": 995,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419070",
      "entry": "00419070",
      "size": 71,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004190b7",
      "entry": "004190b7",
      "size": 85,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041910c",
      "entry": "0041910c",
      "size": 103,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00419178",
      "entry": "00419178",
      "size": 152,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00419220",
      "entry": "00419220",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419230",
      "entry": "00419230",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419240",
      "entry": "00419240",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419250",
      "entry": "00419250",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419260",
      "entry": "00419260",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419270",
      "entry": "00419270",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419280",
      "entry": "00419280",
      "size": 5,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419285",
      "entry": "00419285",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041929d",
      "entry": "0041929d",
      "size": 108,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00419310",
      "entry": "00419310",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419320",
      "entry": "00419320",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419330",
      "entry": "00419330",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419338",
      "entry": "00419338",
      "size": 58,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_00419380",
      "entry": "00419380",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419390",
      "entry": "00419390",
      "size": 13,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041939d",
      "entry": "0041939d",
      "size": 128,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00419420",
      "entry": "00419420",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419430",
      "entry": "00419430",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419440",
      "entry": "00419440",
      "size": 13,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419450",
      "entry": "00419450",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419470",
      "entry": "00419470",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419480",
      "entry": "00419480",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419490",
      "entry": "00419490",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004194a0",
      "entry": "004194a0",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004194d0",
      "entry": "004194d0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004194e0",
      "entry": "004194e0",
      "size": 130,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419570",
      "entry": "00419570",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419580",
      "entry": "00419580",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004195aa",
      "entry": "004195aa",
      "size": 65,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004195eb",
      "entry": "004195eb",
      "size": 294,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00419711",
      "entry": "00419711",
      "size": 337,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00419862",
      "entry": "00419862",
      "size": 223,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00419950",
      "entry": "00419950",
      "size": 5,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419955",
      "entry": "00419955",
      "size": 274,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419a70",
      "entry": "00419a70",
      "size": 229,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419b60",
      "entry": "00419b60",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419b70",
      "entry": "00419b70",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419b80",
      "entry": "00419b80",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419b90",
      "entry": "00419b90",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419ba0",
      "entry": "00419ba0",
      "size": 100,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419c04",
      "entry": "00419c04",
      "size": 103,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00419c70",
      "entry": "00419c70",
      "size": 39,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419ca0",
      "entry": "00419ca0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419cb0",
      "entry": "00419cb0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419cc0",
      "entry": "00419cc0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419cd0",
      "entry": "00419cd0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419ce0",
      "entry": "00419ce0",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419cfe",
      "entry": "00419cfe",
      "size": 464,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419ed0",
      "entry": "00419ed0",
      "size": 5,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00419ed5",
      "entry": "00419ed5",
      "size": 316,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041a020",
      "entry": "0041a020",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a030",
      "entry": "0041a030",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a040",
      "entry": "0041a040",
      "size": 5,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a050",
      "entry": "0041a050",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a060",
      "entry": "0041a060",
      "size": 13,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a070",
      "entry": "0041a070",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a0bf",
      "entry": "0041a0bf",
      "size": 195,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041a182",
      "entry": "0041a182",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041a1af",
      "entry": "0041a1af",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041a1d4",
      "entry": "0041a1d4",
      "size": 220,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041a2b0",
      "entry": "0041a2b0",
      "size": 104,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041a318",
      "entry": "0041a318",
      "size": 161,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041a3b9",
      "entry": "0041a3b9",
      "size": 61,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041a400",
      "entry": "0041a400",
      "size": 55,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041a440",
      "entry": "0041a440",
      "size": 74,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041a48a",
      "entry": "0041a48a",
      "size": 316,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a5c6",
      "entry": "0041a5c6",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a5e4",
      "entry": "0041a5e4",
      "size": 33,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a605",
      "entry": "0041a605",
      "size": 33,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a626",
      "entry": "0041a626",
      "size": 39,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041a64d",
      "entry": "0041a64d",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a663",
      "entry": "0041a663",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a699",
      "entry": "0041a699",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a6c2",
      "entry": "0041a6c2",
      "size": 290,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a7e4",
      "entry": "0041a7e4",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041a80c",
      "entry": "0041a80c",
      "size": 701,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041aac9",
      "entry": "0041aac9",
      "size": 226,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041abab",
      "entry": "0041abab",
      "size": 89,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041ac04",
      "entry": "0041ac04",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041ac16",
      "entry": "0041ac16",
      "size": 102,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041ac7c",
      "entry": "0041ac7c",
      "size": 77,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041acce",
      "entry": "0041acce",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041ad10",
      "entry": "0041ad10",
      "size": 194,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041add2",
      "entry": "0041add2",
      "size": 93,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041ae2f",
      "entry": "0041ae2f",
      "size": 158,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041aecd",
      "entry": "0041aecd",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0041af0f",
      "entry": "0041af0f",
      "size": 137,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041af98",
      "entry": "0041af98",
      "size": 251,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b093",
      "entry": "0041b093",
      "size": 250,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Catch@0041b18d",
      "entry": "0041b18d",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Catch_All@0041b1b0",
      "entry": "0041b1b0",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b1be",
      "entry": "0041b1be",
      "size": 178,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b270",
      "entry": "0041b270",
      "size": 164,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b314",
      "entry": "0041b314",
      "size": 273,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b425",
      "entry": "0041b425",
      "size": 105,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b48e",
      "entry": "0041b48e",
      "size": 218,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b568",
      "entry": "0041b568",
      "size": 87,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b5c0",
      "entry": "0041b5c0",
      "size": 285,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b6dd",
      "entry": "0041b6dd",
      "size": 153,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041b776",
      "entry": "0041b776",
      "size": 101,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0041b7e0",
      "entry": "0041b7e0",
      "size": 2614,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041c220",
      "entry": "0041c220",
      "size": 932,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041c5c4",
      "entry": "0041c5c4",
      "size": 300,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041c6f0",
      "entry": "0041c6f0",
      "size": 77,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041c73f",
      "entry": "0041c73f",
      "size": 3292,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041d453",
      "entry": "0041d453",
      "size": 129,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041d4d4",
      "entry": "0041d4d4",
      "size": 300,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041d600",
      "entry": "0041d600",
      "size": 148,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041d694",
      "entry": "0041d694",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041d69e",
      "entry": "0041d69e",
      "size": 241,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041d78f",
      "entry": "0041d78f",
      "size": 612,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041d9f3",
      "entry": "0041d9f3",
      "size": 95,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041da52",
      "entry": "0041da52",
      "size": 200,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Catch@0041db1a",
      "entry": "0041db1a",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Catch_All@0041db3d",
      "entry": "0041db3d",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041db4b",
      "entry": "0041db4b",
      "size": 147,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041dbde",
      "entry": "0041dbde",
      "size": 93,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041dc3b",
      "entry": "0041dc3b",
      "size": 102,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041dca1",
      "entry": "0041dca1",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041dcdd",
      "entry": "0041dcdd",
      "size": 144,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041dd6d",
      "entry": "0041dd6d",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041dda0",
      "entry": "0041dda0",
      "size": 203,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041de6b",
      "entry": "0041de6b",
      "size": 87,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041dec2",
      "entry": "0041dec2",
      "size": 90,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041df1e",
      "entry": "0041df1e",
      "size": 691,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_ShowWindow",
      "entry": "0041e1d1",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e1db",
      "entry": "0041e1db",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetDlgItem",
      "entry": "0041e1ec",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_EnableWindow",
      "entry": "0041e1f6",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetWindowTextW",
      "entry": "0041e200",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetParent",
      "entry": "0041e20a",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetWindowPos",
      "entry": "0041e214",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetDlgItemTextW",
      "entry": "0041e21e",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetSystemMetrics",
      "entry": "0041e228",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetClientRect",
      "entry": "0041e232",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetWindowRect",
      "entry": "0041e23c",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetWindowLongW",
      "entry": "0041e246",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetWindowLongW",
      "entry": "0041e250",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetProcessDefaultLayout",
      "entry": "0041e25a",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetWindow",
      "entry": "0041e264",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_LoadStringW",
      "entry": "0041e26e",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_OemToCharBuffA",
      "entry": "0041e278",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CharUpperW",
      "entry": "0041e282",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_DefWindowProcW",
      "entry": "0041e28c",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_RegisterClassExW",
      "entry": "0041e296",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CreateWindowExW",
      "entry": "0041e2a0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_IsWindow",
      "entry": "0041e2aa",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_DestroyWindow",
      "entry": "0041e2b4",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_UpdateWindow",
      "entry": "0041e2be",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_MapWindowPoints",
      "entry": "0041e2c8",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CopyRect",
      "entry": "0041e2d2",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_LoadCursorW",
      "entry": "0041e2dc",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SendMessageW",
      "entry": "0041e2e6",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetDC",
      "entry": "0041e2f0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_ReleaseDC",
      "entry": "0041e2fa",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_MessageBoxW",
      "entry": "0041e304",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_FindWindowExW",
      "entry": "0041e30e",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetClassNameW",
      "entry": "0041e318",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CopyImage",
      "entry": "0041e322",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_wvsprintfW",
      "entry": "0041e32c",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetMessageW",
      "entry": "0041e336",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_TranslateMessage",
      "entry": "0041e340",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_DispatchMessageW",
      "entry": "0041e34a",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_PeekMessageW",
      "entry": "0041e354",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_PostMessageW",
      "entry": "0041e35e",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_WaitForInputIdle",
      "entry": "0041e368",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_IsWindowVisible",
      "entry": "0041e372",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_DialogBoxParamW",
      "entry": "0041e37c",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_EndDialog",
      "entry": "0041e386",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetDlgItemTextW",
      "entry": "0041e390",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SendDlgItemMessageW",
      "entry": "0041e39a",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetFocus",
      "entry": "0041e3a4",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetForegroundWindow",
      "entry": "0041e3ae",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetSysColor",
      "entry": "0041e3b8",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_LoadBitmapW",
      "entry": "0041e3c2",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_LoadIconW",
      "entry": "0041e3cc",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_DestroyIcon",
      "entry": "0041e3d6",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_IsDialogMessageW",
      "entry": "0041e3e0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CreateCompatibleBitmap",
      "entry": "0041e3ea",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e3f4",
      "entry": "0041e3f4",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CreateCompatibleDC",
      "entry": "0041e405",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_DeleteDC",
      "entry": "0041e40f",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_DeleteObject",
      "entry": "0041e419",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetDeviceCaps",
      "entry": "0041e423",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SelectObject",
      "entry": "0041e42d",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_StretchBlt",
      "entry": "0041e437",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CreateDIBSection",
      "entry": "0041e441",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetObjectW",
      "entry": "0041e44b",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetOpenFileNameW",
      "entry": "0041e455",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e45f",
      "entry": "0041e45f",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_GetSaveFileNameW",
      "entry": "0041e470",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CommDlgExtendedError",
      "entry": "0041e47a",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e484",
      "entry": "0041e484",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_OpenProcessToken",
      "entry": "0041e495",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_AdjustTokenPrivileges",
      "entry": "0041e49f",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SetFileSecurityW",
      "entry": "0041e4a9",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_LookupPrivilegeValueW",
      "entry": "0041e4b3",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_AllocateAndInitializeSid",
      "entry": "0041e4bd",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_FreeSid",
      "entry": "0041e4c7",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CheckTokenMembership",
      "entry": "0041e4d1",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_RegCloseKey",
      "entry": "0041e4db",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_RegCreateKeyExW",
      "entry": "0041e4e5",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_RegOpenKeyExW",
      "entry": "0041e4ef",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_RegQueryValueExW",
      "entry": "0041e4f9",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_RegSetValueExW",
      "entry": "0041e503",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHGetMalloc",
      "entry": "0041e50d",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e517",
      "entry": "0041e517",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHGetPathFromIDListW",
      "entry": "0041e528",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHBrowseForFolderW",
      "entry": "0041e532",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHFileOperationW",
      "entry": "0041e53c",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_ShellExecuteExW",
      "entry": "0041e546",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHGetFileInfoW",
      "entry": "0041e550",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHGetFolderLocation",
      "entry": "0041e55a",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHChangeNotify",
      "entry": "0041e564",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CoSetProxyBlanket",
      "entry": "0041e56e",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e578",
      "entry": "0041e578",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CoCreateInstance",
      "entry": "0041e589",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CreateStreamOnHGlobal",
      "entry": "0041e593",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_CLSIDFromString",
      "entry": "0041e59d",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_OleInitialize",
      "entry": "0041e5a7",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_OleUninitialize",
      "entry": "0041e5b1",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DloadAcquireSectionWriteAccess",
      "entry": "0041e5bb",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e5ee",
      "entry": "0041e5ee",
      "size": 118,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DloadLock",
      "entry": "0041e664",
      "size": 63,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e6a3",
      "entry": "0041e6a3",
      "size": 111,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041e712",
      "entry": "0041e712",
      "size": 123,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DloadProtectSection",
      "entry": "0041e78d",
      "size": 110,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DloadReleaseSectionWriteAccess",
      "entry": "0041e7fb",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DloadUnlock",
      "entry": "0041e831",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___delayLoadHelper2@8",
      "entry": "0041e85d",
      "size": 623,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_SHAutoComplete",
      "entry": "0041eacc",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "DelayLoad_InitCommonControlsEx",
      "entry": "0041eae7",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "GdipAlloc",
      "entry": "0041eb02",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdipFree",
      "entry": "0041eb08",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdipCloneImage",
      "entry": "0041eb0e",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdipDisposeImage",
      "entry": "0041eb14",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdipCreateBitmapFromStream",
      "entry": "0041eb1a",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdipCreateBitmapFromStreamICM",
      "entry": "0041eb20",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdipCreateHBITMAPFromBitmap",
      "entry": "0041eb26",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdiplusStartup",
      "entry": "0041eb2c",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "GdiplusShutdown",
      "entry": "0041eb32",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "unknown"
    },
    {
      "name": "FUN_0041eb38",
      "entry": "0041eb38",
      "size": 77,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0041eb68",
      "entry": "0041eb68",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0041eb78",
      "entry": "0041eb78",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__alldiv",
      "entry": "0041eba0",
      "size": 170,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__alloca_probe",
      "entry": "0041ec50",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "`eh_vector_constructor_iterator'",
      "entry": "0041ec7b",
      "size": 90,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041ecdb",
      "entry": "0041ecdb",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "`eh_vector_destructor_iterator'",
      "entry": "0041ecef",
      "size": 105,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041ed64",
      "entry": "0041ed64",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__ArrayUnwind",
      "entry": "0041ed74",
      "size": 76,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__aullshr",
      "entry": "0041ee10",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041ee30",
      "entry": "0041ee30",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041ee53",
      "entry": "0041ee53",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "0041ee5c",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__cdecl"
    },
    {
      "name": "find_pe_section",
      "entry": "0041ee61",
      "size": 68,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___scrt_acquire_startup_lock",
      "entry": "0041eea5",
      "size": 50,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___scrt_initialize_crt",
      "entry": "0041eed7",
      "size": 57,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___scrt_initialize_onexit_tables",
      "entry": "0041ef10",
      "size": 135,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___scrt_is_nonwritable_in_current_image",
      "entry": "0041ef97",
      "size": 126,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___scrt_release_startup_lock",
      "entry": "0041f02b",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___scrt_uninitialize_crt",
      "entry": "0041f048",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__onexit",
      "entry": "0041f070",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_atexit",
      "entry": "0041f09d",
      "size": 21,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__allshl",
      "entry": "0041f0c0",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "__allmul",
      "entry": "0041f0e0",
      "size": 52,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__allrem",
      "entry": "0041f120",
      "size": 178,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__aulldiv",
      "entry": "0041f1e0",
      "size": 104,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__aullrem",
      "entry": "0041f250",
      "size": 117,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f2c5",
      "entry": "0041f2c5",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0041f2e0",
      "entry": "0041f2e0",
      "size": 171,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f390",
      "entry": "0041f390",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f3a0",
      "entry": "0041f3a0",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__scrt_common_main_seh",
      "entry": "0041f3b2",
      "size": 318,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "entry",
      "entry": "0041f530",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f540",
      "entry": "0041f540",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041f55b",
      "entry": "0041f55b",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041f580",
      "entry": "0041f580",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0041f5ad",
      "entry": "0041f5ad",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "0041f5e7",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__SEH_prolog4",
      "entry": "0041f5f0",
      "size": 69,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__SEH_epilog4",
      "entry": "0041f640",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f654",
      "entry": "0041f654",
      "size": 468,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f828",
      "entry": "0041f828",
      "size": 4,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___scrt_is_ucrt_dll_in_use",
      "entry": "0041f82c",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f838",
      "entry": "0041f838",
      "size": 283,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___scrt_get_show_window_mode",
      "entry": "0041f953",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_0041f990",
      "entry": "0041f984",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f990",
      "entry": "0041f990",
      "size": 3,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f993",
      "entry": "0041f993",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041f9d5",
      "entry": "0041f9d5",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___scrt_unhandled_exception_filter@4",
      "entry": "0041f9f0",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fa46",
      "entry": "0041fa46",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___get_entropy",
      "entry": "0041fa4e",
      "size": 77,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___security_init_cookie",
      "entry": "0041fa9b",
      "size": 75,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0041fae6",
      "entry": "0041fae6",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041faec",
      "entry": "0041faec",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb00",
      "entry": "0041fb00",
      "size": 3,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__initialize_default_precision",
      "entry": "0041fb03",
      "size": 33,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb24",
      "entry": "0041fb24",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb2a",
      "entry": "0041fb2a",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb47",
      "entry": "0041fb47",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb53",
      "entry": "0041fb53",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb59",
      "entry": "0041fb59",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb5f",
      "entry": "0041fb5f",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fb90",
      "entry": "0041fb90",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0041fbbc",
      "entry": "0041fbbc",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0041fbca",
      "entry": "0041fbca",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0041fbf2",
      "entry": "0041fbf2",
      "size": 250,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_com_issue_error",
      "entry": "0041fcf0",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "ConvertStringToBSTR",
      "entry": "0041fd10",
      "size": 366,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_com_error",
      "entry": "0041fea0",
      "size": 63,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "_com_error",
      "entry": "0041fee0",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "~_com_error",
      "entry": "0041ff30",
      "size": 50,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "`scalar_deleting_destructor'",
      "entry": "0041ff70",
      "size": 75,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "_com_raise_error",
      "entry": "0041ffc0",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_memset",
      "entry": "0041fff0",
      "size": 346,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___DestructExceptionObject",
      "entry": "00420150",
      "size": 142,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_CallMemberFunction0",
      "entry": "004201f1",
      "size": 13,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_FilterSetCurrentException",
      "entry": "004201fe",
      "size": 88,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__IsExceptionObjectToBeDestroyed",
      "entry": "00420256",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___AdjustPointer",
      "entry": "0042027c",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___FrameUnwindFilter",
      "entry": "004202a1",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004202f7",
      "entry": "004202f7",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00420300",
      "entry": "00420300",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00420310",
      "entry": "00420310",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00420320",
      "entry": "00420320",
      "size": 1330,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "GetRangeOfTrysToCheck",
      "entry": "00420894",
      "size": 111,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00420904",
      "entry": "00420904",
      "size": 93,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00420961",
      "entry": "00420961",
      "size": 246,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_JumpToContinuation",
      "entry": "00420a57",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_UnwindNestedFrames",
      "entry": "00420a87",
      "size": 83,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__CatchGuardHandler",
      "entry": "00420ada",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__CreateFrameInfo",
      "entry": "00420b0b",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__FindAndUnlinkFrame",
      "entry": "00420b2f",
      "size": 71,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__TranslatorGuardHandler",
      "entry": "00420b77",
      "size": 152,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FID_conflict:___CxxFrameHandler3",
      "entry": "00420c14",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00420c4a",
      "entry": "00420c4a",
      "size": 5627,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004222c6",
      "entry": "004222c6",
      "size": 199,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__CxxThrowException@8",
      "entry": "0042238d",
      "size": 108,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004223f9",
      "entry": "004223f9",
      "size": 628,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00422670",
      "entry": "00422670",
      "size": 299,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042279b",
      "entry": "0042279b",
      "size": 161,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___std_exception_copy",
      "entry": "0042283c",
      "size": 99,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___std_exception_destroy",
      "entry": "0042289f",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_ValidateLocalCookies",
      "entry": "004228c0",
      "size": 50,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__except_handler4",
      "entry": "00422900",
      "size": 350,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___vcrt_initialize",
      "entry": "00422a5e",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___vcrt_uninitialize",
      "entry": "00422a7d",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___std_type_info_compare",
      "entry": "00422a94",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00422ad0",
      "entry": "00422ad0",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___vcrt_getptd",
      "entry": "00422aec",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___vcrt_getptd_noexit",
      "entry": "00422afa",
      "size": 146,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___vcrt_initialize_ptd",
      "entry": "00422b8c",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___vcrt_uninitialize_ptd",
      "entry": "00422bbf",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "BuildCatchObjectHelperInternal<class___FrameHandler3>",
      "entry": "00422bda",
      "size": 308,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "BuildCatchObjectInternal<class___FrameHandler3>",
      "entry": "00422d18",
      "size": 140,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "CatchIt<class___FrameHandler3>",
      "entry": "00422db1",
      "size": 128,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00422e31",
      "entry": "00422e31",
      "size": 932,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FindHandlerForForeignException<class___FrameHandler3>",
      "entry": "004231d6",
      "size": 309,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FID_conflict:___TypeMatch",
      "entry": "0042330c",
      "size": 142,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__InternalCxxFrameHandler<class___FrameHandler3>",
      "entry": "0042339a",
      "size": 258,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004234a0",
      "entry": "004234a0",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004234bb",
      "entry": "004234bb",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "operator==",
      "entry": "004234d3",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004234f2",
      "entry": "004234f2",
      "size": 177,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00423645",
      "entry": "00423645",
      "size": 124,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004236c1",
      "entry": "004236c1",
      "size": 32,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Catch_All@004236e1",
      "entry": "004236e1",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "ExFilterRethrow",
      "entry": "00423700",
      "size": 74,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FrameUnwindToEmptyState",
      "entry": "0042374a",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FrameUnwindToState",
      "entry": "00423762",
      "size": 195,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00423830",
      "entry": "00423830",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042384a",
      "entry": "0042384a",
      "size": 153,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_CallMemberFunction1",
      "entry": "004238e4",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_CallMemberFunction2",
      "entry": "004238f4",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00423907",
      "entry": "00423907",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__CallSettingFrame@12",
      "entry": "00423920",
      "size": 76,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___except_validate_context_record",
      "entry": "0042396c",
      "size": 48,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004239a0",
      "entry": "004239a0",
      "size": 159,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00423a40",
      "entry": "00423a40",
      "size": 70,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_EH4_CallFilterFunc",
      "entry": "00423a90",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "_EH4_TransferToHandler",
      "entry": "00423ab0",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "_EH4_GlobalUnwind2",
      "entry": "00423ad0",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "_EH4_LocalUnwind",
      "entry": "00423af0",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "___vcrt_initialize_locks",
      "entry": "00423b07",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___vcrt_uninitialize_locks",
      "entry": "00423b43",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "try_get_first_available_module",
      "entry": "00423b72",
      "size": 155,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "try_get_function",
      "entry": "00423c0d",
      "size": 74,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___vcrt_FlsAlloc",
      "entry": "00423c57",
      "size": 59,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___vcrt_FlsFree",
      "entry": "00423c92",
      "size": 59,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___vcrt_FlsGetValue",
      "entry": "00423ccd",
      "size": 59,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___vcrt_FlsSetValue",
      "entry": "00423d08",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___vcrt_InitializeCriticalSectionEx",
      "entry": "00423d46",
      "size": 71,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "unexpected",
      "entry": "00423d8d",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "GetCurrentState",
      "entry": "00423daa",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "SetState",
      "entry": "00423dc7",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00423de0",
      "entry": "00423de0",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "__NLG_Notify",
      "entry": "00423df0",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00423e10",
      "entry": "00423e10",
      "size": 3,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_wcslen",
      "entry": "00423e13",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "00423e2e",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00423e33",
      "entry": "00423e33",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00423e3e",
      "entry": "00423e3e",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_wcscmp",
      "entry": "00423e49",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_strlen",
      "entry": "00423e90",
      "size": 139,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_vsprintf<class___crt_stdio_output::standard_base,char>",
      "entry": "00423f1b",
      "size": 380,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_vsprintf<class___crt_stdio_output::standard_base,wchar_t>",
      "entry": "00424097",
      "size": 389,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "count<char>",
      "entry": "0042421c",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "ensure_buffer_is_big_enough<char>",
      "entry": "00424234",
      "size": 134,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "is_wide_character_specifier<char>",
      "entry": "004242ba",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "is_wide_character_specifier<wchar_t>",
      "entry": "004242fa",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "scratch_data<char>",
      "entry": "00424349",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "type_case_integer_parse_into_buffer<>",
      "entry": "00424367",
      "size": 117,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "type_case_integer_parse_into_buffer<>",
      "entry": "004243dc",
      "size": 136,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "write_multiple_characters<class___crt_stdio_output::string_output_adapter<char>,char>",
      "entry": "00424464",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "write_multiple_characters<class___crt_stdio_output::string_output_adapter<wchar_t>,char>",
      "entry": "00424490",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_data<char>",
      "entry": "004244c1",
      "size": 71,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "common_data<wchar_t>",
      "entry": "00424508",
      "size": 76,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "output_adapter_data<>",
      "entry": "00424554",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "output_adapter_data<>",
      "entry": "00424590",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "output_processor<>",
      "entry": "004245cc",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "output_processor<>",
      "entry": "00424601",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "_LocaleUpdate",
      "entry": "00424636",
      "size": 131,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "~formatting_buffer",
      "entry": "004246b9",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "operator=",
      "entry": "004246d3",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "crop_zeroes",
      "entry": "004246f7",
      "size": 87,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "find_next_state",
      "entry": "0042474e",
      "size": 50,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "find_next_state",
      "entry": "00424780",
      "size": 52,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "force_decimal_point",
      "entry": "004247b4",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "parse_int_from_format_string",
      "entry": "00424810",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "parse_int_from_format_string",
      "entry": "0042486c",
      "size": 94,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "process",
      "entry": "004248ca",
      "size": 249,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "process",
      "entry": "004249e6",
      "size": 254,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "state_case_flag",
      "entry": "00424b06",
      "size": 61,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_flag",
      "entry": "00424b43",
      "size": 61,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_normal",
      "entry": "00424b80",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_normal",
      "entry": "00424b9f",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_normal_common",
      "entry": "00424bbe",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_normal_common",
      "entry": "00424be8",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_normal_tchar",
      "entry": "00424c03",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_precision",
      "entry": "00424c64",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_precision",
      "entry": "00424c8c",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_size",
      "entry": "00424cb5",
      "size": 361,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_size",
      "entry": "00424e1e",
      "size": 380,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_type",
      "entry": "00424f9a",
      "size": 559,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "state_case_type",
      "entry": "004251c9",
      "size": 605,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "state_case_width",
      "entry": "00425426",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "state_case_width",
      "entry": "00425451",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "to_integer_size",
      "entry": "0042547d",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "type_case_Z",
      "entry": "004254d9",
      "size": 99,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_Z",
      "entry": "0042553c",
      "size": 99,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_a",
      "entry": "0042559f",
      "size": 346,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_a",
      "entry": "004256f9",
      "size": 370,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_c_tchar",
      "entry": "0042586b",
      "size": 144,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_c_tchar",
      "entry": "004258fb",
      "size": 152,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_integer",
      "entry": "00425993",
      "size": 330,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "type_case_n",
      "entry": "00425add",
      "size": 116,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_o",
      "entry": "00425b51",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_p",
      "entry": "00425b70",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_s",
      "entry": "00425b88",
      "size": 115,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_s",
      "entry": "00425bfb",
      "size": 116,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "type_case_s_compute_narrow_string_length",
      "entry": "00425c6f",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "validate",
      "entry": "00425caf",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "write_character",
      "entry": "00425cca",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "write_character",
      "entry": "00425d0c",
      "size": 69,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "write_stored_string_tchar",
      "entry": "00425d51",
      "size": 167,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "write_stored_string_tchar",
      "entry": "00425df8",
      "size": 139,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "write_string",
      "entry": "00425e83",
      "size": 147,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "write_string",
      "entry": "00425f16",
      "size": 154,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "___stdio_common_vsprintf",
      "entry": "00425fb0",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___stdio_common_vswprintf",
      "entry": "00425fd4",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_initialize_clock",
      "entry": "00426000",
      "size": 102,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_wcscpy",
      "entry": "00426066",
      "size": 34,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_wcsncmp",
      "entry": "00426088",
      "size": 58,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_wcsncpy",
      "entry": "004260c2",
      "size": 67,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_wcspbrk",
      "entry": "00426105",
      "size": 69,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042614a",
      "entry": "0042614a",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_bsearch",
      "entry": "00426159",
      "size": 214,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "shortsort",
      "entry": "00426230",
      "size": 147,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "swap",
      "entry": "004262d0",
      "size": 57,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_qsort",
      "entry": "00426310",
      "size": 916,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_strcmp",
      "entry": "004266b0",
      "size": 133,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_strncmp",
      "entry": "00426740",
      "size": 115,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_strncpy",
      "entry": "004267c0",
      "size": 292,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__byteswap_ulong",
      "entry": "004268e4",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00426911",
      "entry": "00426911",
      "size": 295,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00426a38",
      "entry": "00426a38",
      "size": 439,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "is_overflow_condition<unsigned_long>",
      "entry": "00426bef",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "make_c_string_character_source<>",
      "entry": "00426c22",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<char>_>",
      "entry": "00426c3d",
      "size": 552,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<wchar_t>_>",
      "entry": "00426e65",
      "size": 1765,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "unget",
      "entry": "0042754a",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "unget",
      "entry": "00427572",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "__chvalidchk_l",
      "entry": "0042759e",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__ischartype_l",
      "entry": "004275c8",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FID_conflict:_atoi",
      "entry": "004275fb",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__wcsdup",
      "entry": "00427625",
      "size": 96,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_wcscat",
      "entry": "00427686",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_tox_l<&bool___cdecl_internal_islower_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_upper(int,struct___crt_locale_pointers*_const)>",
      "entry": "004276b7",
      "size": 330,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_tox_l<&bool___cdecl_internal_isupper_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_lower(int,struct___crt_locale_pointers*_const)>",
      "entry": "00427801",
      "size": 330,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "internal_islower_l",
      "entry": "0042794b",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "internal_isupper_l",
      "entry": "00427968",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__tolower_l",
      "entry": "00427985",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__toupper_l",
      "entry": "0042799f",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_tolower",
      "entry": "004279b9",
      "size": 48,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_toupper",
      "entry": "004279e9",
      "size": 48,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "initialize",
      "entry": "00427a19",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_00427a4a",
      "entry": "00427a4a",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__callnewh",
      "entry": "00427a5e",
      "size": 68,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__query_new_handler",
      "entry": "00427aa2",
      "size": 70,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00427aeb",
      "entry": "00427aeb",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "terminate",
      "entry": "00427af4",
      "size": 52,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__seh_filter_exe",
      "entry": "00427b30",
      "size": 371,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__crt_fast_encode_pointer<>",
      "entry": "00427ca3",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "atexit_exception_filter",
      "entry": "00427cc2",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_exit",
      "entry": "00427cd5",
      "size": 261,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00427ddf",
      "entry": "00427ddf",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "exit_or_terminate_process",
      "entry": "00427dee",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "is_managed_app",
      "entry": "00427e2f",
      "size": 68,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "try_cor_exit_process",
      "entry": "00427e73",
      "size": 106,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00427edd",
      "entry": "00427edd",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__cexit",
      "entry": "00427efb",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__exit",
      "entry": "00427f0a",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__register_thread_local_exe_atexit_callback",
      "entry": "00427f20",
      "size": 56,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_exit",
      "entry": "00427f58",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_configure_argv<char>",
      "entry": "00427f6e",
      "size": 292,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "parse_command_line<char>",
      "entry": "00428092",
      "size": 373,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_allocate_buffer_for_argv",
      "entry": "00428207",
      "size": 85,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042825c",
      "entry": "0042825c",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_initialize_environment_nolock<char>",
      "entry": "00428267",
      "size": 89,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "create_environment<char>",
      "entry": "004282c0",
      "size": 208,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "free_environment<char>",
      "entry": "00428391",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "uninitialize<>",
      "entry": "004283c0",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "uninitialize_environment_internal<>",
      "entry": "00428400",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "uninitialize_environment_internal<>",
      "entry": "00428420",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___dcrt_uninitialize_environments_nolock",
      "entry": "0042843b",
      "size": 55,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "common_initialize_environment_nolock<char>",
      "entry": "00428472",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__cdecl"
    },
    {
      "name": "operator()<class_<lambda_800076c951b434888f4765a74a194fcc>,class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>&,class_<lambda_6dbb1268764f43b569ce7b67e331d33a>_>",
      "entry": "00428477",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004284bc",
      "entry": "004284bc",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "operator()<class_<lambda_995298e7d72eb4c2aab26c0585b3abe5>,class_<lambda_275893d493268fdec8709772e3fcec0e>&,class_<lambda_293819299cbf9a7022e18b56a874bb5c>_>",
      "entry": "004284c8",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0042850d",
      "entry": "0042850d",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_275893d493268fdec8709772e3fcec0e>_>",
      "entry": "00428519",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>_>",
      "entry": "00428541",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "operator()",
      "entry": "00428569",
      "size": 288,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "operator()",
      "entry": "00428689",
      "size": 321,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004287ca",
      "entry": "004287ca",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__execute_onexit_table",
      "entry": "004287e0",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__initialize_onexit_table",
      "entry": "004287fd",
      "size": 61,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__register_onexit_function",
      "entry": "0042883a",
      "size": 36,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00428860",
      "entry": "00428860",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00428880",
      "entry": "00428880",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004288a0",
      "entry": "004288a0",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004288b0",
      "entry": "004288b0",
      "size": 61,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004288f0",
      "entry": "004288f0",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00428900",
      "entry": "00428900",
      "size": 119,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_initialize",
      "entry": "00428977",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_uninitialize",
      "entry": "00428989",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042899b",
      "entry": "0042899b",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004289a1",
      "entry": "004289a1",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_has_user_matherr",
      "entry": "004289b0",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004289c9",
      "entry": "004289c9",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_invoke_user_matherr",
      "entry": "004289e0",
      "size": 73,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___setusermatherr",
      "entry": "00428a29",
      "size": 21,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__get_narrow_winmain_command_line",
      "entry": "00428a3e",
      "size": 83,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__initterm",
      "entry": "00428a91",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__initterm_e",
      "entry": "00428aed",
      "size": 69,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__set_fmode",
      "entry": "00428b32",
      "size": 61,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_set_locale_changed",
      "entry": "00428b6f",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_uninitialize_locale",
      "entry": "00428b80",
      "size": 73,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00428bc9",
      "entry": "00428bc9",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__configthreadlocale",
      "entry": "00428bd2",
      "size": 98,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00428c34",
      "entry": "00428c34",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__set_new_mode",
      "entry": "00428c3a",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00428c69",
      "entry": "00428c69",
      "size": 6,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__controlfp_s",
      "entry": "00428c6f",
      "size": 95,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__strdup",
      "entry": "00428cce",
      "size": 85,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_abort",
      "entry": "00428d24",
      "size": 67,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_strcpy_s",
      "entry": "00428d67",
      "size": 90,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00428dc1",
      "entry": "00428dc1",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "00428dcc",
      "size": 58,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__malloc_base",
      "entry": "00428e06",
      "size": 78,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__realloc_base",
      "entry": "00428e54",
      "size": 105,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_call_reportfault",
      "entry": "00428ebd",
      "size": 315,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00428ff8",
      "entry": "00428ff8",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__invalid_parameter",
      "entry": "0042900c",
      "size": 122,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00429087",
      "entry": "00429087",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__invoke_watson",
      "entry": "00429097",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__isdigit_l",
      "entry": "004290ca",
      "size": 56,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_isdigit",
      "entry": "00429102",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FID_conflict:___acrt_errno_from_os_error",
      "entry": "0042912f",
      "size": 67,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_errno_map_os_error",
      "entry": "00429172",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___doserrno",
      "entry": "00429195",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__errno",
      "entry": "004291a8",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_strtol",
      "entry": "004291bb",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_wcstol",
      "entry": "004291e7",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__mbtowc_l",
      "entry": "00429213",
      "size": 250,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_mbtowc",
      "entry": "0042930d",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__wctomb_s_l",
      "entry": "00429327",
      "size": 289,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_wctomb_s",
      "entry": "00429448",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "operator()<>",
      "entry": "00429465",
      "size": 68,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004294a9",
      "entry": "004294a9",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "operator()<>",
      "entry": "004294b5",
      "size": 85,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042950a",
      "entry": "0042950a",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "operator()<>",
      "entry": "00429516",
      "size": 63,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00429555",
      "entry": "00429555",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "operator()<>",
      "entry": "00429561",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042959d",
      "entry": "0042959d",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_6250bd4b2a391816dd638c3bf72b0bcb>_>",
      "entry": "004295a9",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_b2ea41f6bbb362cd97d94c6828d90b61>_>",
      "entry": "004295d1",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_be2b3da3f62db62e9dad5dc70221a656>_>",
      "entry": "004295f9",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_e69574bed617af4e071282c136b37893>_>",
      "entry": "00429621",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "construct_ptd",
      "entry": "00429649",
      "size": 121,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "destroy_fls",
      "entry": "004296d0",
      "size": 33,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "destroy_ptd",
      "entry": "004296f1",
      "size": 169,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "replace_current_thread_locale_nolock",
      "entry": "0042979a",
      "size": 75,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_getptd",
      "entry": "004297e5",
      "size": 131,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_getptd_noexit",
      "entry": "00429869",
      "size": 133,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_initialize_ptd",
      "entry": "004298f0",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_uninitialize_ptd",
      "entry": "00429920",
      "size": 26,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_update_locale_info",
      "entry": "0042993a",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_update_multibyte_info",
      "entry": "00429967",
      "size": 45,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__acrt_fp_classify",
      "entry": "00429994",
      "size": 108,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__acrt_fp_is_negative",
      "entry": "00429a00",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fp_format_a",
      "entry": "00429a1e",
      "size": 771,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fp_format_e",
      "entry": "00429d21",
      "size": 155,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fp_format_e_internal",
      "entry": "00429dbc",
      "size": 330,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fp_format_f",
      "entry": "00429f07",
      "size": 141,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fp_format_f_internal",
      "entry": "00429f94",
      "size": 215,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fp_format_g",
      "entry": "0042a06b",
      "size": 200,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fp_format_nan_or_infinity",
      "entry": "0042a133",
      "size": 247,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "shift_bytes",
      "entry": "0042a22b",
      "size": 52,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_fp_format",
      "entry": "0042a25f",
      "size": 330,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__fileno",
      "entry": "0042a3a9",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_initialize_stdio",
      "entry": "0042a3d0",
      "size": 200,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_uninitialize_stdio",
      "entry": "0042a4a0",
      "size": 76,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__lock_file",
      "entry": "0042a4ec",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042a500",
      "entry": "0042a500",
      "size": 20,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__get_printf_count_output",
      "entry": "0042a514",
      "size": 21,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "initialize_inherited_file_handles_nolock",
      "entry": "0042a529",
      "size": 182,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "initialize_stdio_handles_nolock",
      "entry": "0042a5df",
      "size": 182,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_initialize_lowio",
      "entry": "0042a6a0",
      "size": 74,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042a6ed",
      "entry": "0042a6ed",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_uninitialize_lowio",
      "entry": "0042a700",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__acrt_stdio_free_stream",
      "entry": "0042a72c",
      "size": 59,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___pctype_func",
      "entry": "0042a767",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_iswctype",
      "entry": "0042a78d",
      "size": 95,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__isctype_l",
      "entry": "0042a7ec",
      "size": 210,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_wcscpy_s",
      "entry": "0042a8be",
      "size": 100,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__isleadbyte_l",
      "entry": "0042a922",
      "size": 57,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__acrt_LCMapStringA_stat",
      "entry": "0042a95b",
      "size": 541,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_LCMapStringA",
      "entry": "0042ab78",
      "size": 75,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__freea_crt",
      "entry": "0042abc3",
      "size": 32,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_initialize_locks",
      "entry": "0042abf0",
      "size": 65,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_lock",
      "entry": "0042ac31",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_uninitialize_locks",
      "entry": "0042ac50",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_unlock",
      "entry": "0042ac81",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "try_get_function",
      "entry": "0042ac98",
      "size": 156,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "try_get_module",
      "entry": "0042ad34",
      "size": 123,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_FlsAlloc@4",
      "entry": "0042adaf",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_FlsFree@4",
      "entry": "0042ae05",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_FlsGetValue@4",
      "entry": "0042ae5b",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_FlsSetValue@8",
      "entry": "0042aeb1",
      "size": 89,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_InitializeCriticalSectionEx@12",
      "entry": "0042af0a",
      "size": 98,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_LCMapStringEx@36",
      "entry": "0042af6c",
      "size": 136,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_LocaleNameToLCID@8",
      "entry": "0042aff4",
      "size": 92,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_initialize_winapi_thunks",
      "entry": "0042b050",
      "size": 38,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_is_packaged_app",
      "entry": "0042b076",
      "size": 135,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "___acrt_uninitialize_winapi_thunks",
      "entry": "0042b100",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__calloc_base",
      "entry": "0042b136",
      "size": 93,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042b1a0",
      "entry": "0042b1a0",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_expand_argv_wildcards<char>",
      "entry": "0042b1b8",
      "size": 399,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "copy_and_add_argument_to_buffer<char>",
      "entry": "0042b348",
      "size": 149,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "expand_argument_wildcards<char>",
      "entry": "0042b3de",
      "size": 388,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "~argument_list<char>",
      "entry": "0042b562",
      "size": 37,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "append",
      "entry": "0042b587",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "expand_if_necessary",
      "entry": "0042b5bc",
      "size": 135,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_0042b643",
      "entry": "0042b643",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "operator()<class_<lambda_978dc153c237d78434369da87b74ff60>,class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>&,class_<lambda_4a8533e2866a575feecb8298ce776b0d>_>",
      "entry": "0042b64e",
      "size": 55,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0042b685",
      "entry": "0042b685",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>_>",
      "entry": "0042b691",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "operator()",
      "entry": "0042b6b9",
      "size": 196,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "CPtoLocaleName",
      "entry": "0042b77d",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "getSystemCP",
      "entry": "0042b7bb",
      "size": 115,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "setSBCS",
      "entry": "0042b82e",
      "size": 101,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "setSBUpLow",
      "entry": "0042b893",
      "size": 404,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "setmbcp_internal",
      "entry": "0042ba27",
      "size": 257,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_initialize_multibyte",
      "entry": "0042bb30",
      "size": 30,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_update_thread_multibyte_data",
      "entry": "0042bb4e",
      "size": 150,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042bbdf",
      "entry": "0042bbdf",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__setmbcp_nolock",
      "entry": "0042bbf0",
      "size": 497,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_memcpy_s",
      "entry": "0042bde1",
      "size": 129,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "x_ismbbtype_l",
      "entry": "0042be62",
      "size": 89,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__ismbblead",
      "entry": "0042bebb",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042bee0",
      "entry": "0042bee0",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "find_end_of_double_null_terminated_sequence",
      "entry": "0042bef9",
      "size": 55,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___dcrt_get_narrow_environment_from_os",
      "entry": "0042bf30",
      "size": 131,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042bfb3",
      "entry": "0042bfb3",
      "size": 120,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042c030",
      "entry": "0042c030",
      "size": 17,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042c050",
      "entry": "0042c050",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_execute_initializers",
      "entry": "0042c05a",
      "size": 131,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_execute_uninitializers",
      "entry": "0042c0dd",
      "size": 77,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "operator()<>",
      "entry": "0042c12a",
      "size": 75,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042c178",
      "entry": "0042c178",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_ec61778202f4f5fc7e7711acc23c3bca>_>",
      "entry": "0042c184",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "get_global_action_nolock",
      "entry": "0042c1ac",
      "size": 66,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "siglookup",
      "entry": "0042c1ee",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_get_sigabrt_handler",
      "entry": "0042c216",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_initialize_signal_handlers",
      "entry": "0042c22d",
      "size": 59,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042c268",
      "entry": "0042c268",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "_raise",
      "entry": "0042c271",
      "size": 490,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042c431",
      "entry": "0042c431",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_lowio_create_handle_array",
      "entry": "0042c479",
      "size": 122,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_lowio_destroy_handle_array",
      "entry": "0042c4f3",
      "size": 53,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_lowio_ensure_fh_exists",
      "entry": "0042c528",
      "size": 140,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042c5b7",
      "entry": "0042c5b7",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_lowio_lock_fh",
      "entry": "0042c5c0",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_lowio_unlock_fh",
      "entry": "0042c5e3",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__free_osfhnd",
      "entry": "0042c606",
      "size": 145,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__get_osfhandle",
      "entry": "0042c697",
      "size": 106,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_locale_free_monetary",
      "entry": "0042c701",
      "size": 254,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_locale_free_numeric",
      "entry": "0042c7ff",
      "size": 105,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "free_crt_array_internal",
      "entry": "0042c868",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_locale_free_time",
      "entry": "0042c8a4",
      "size": 228,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_GetStringTypeA",
      "entry": "0042c988",
      "size": 285,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_add_locale_ref",
      "entry": "0042caa5",
      "size": 125,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_free_locale",
      "entry": "0042cb22",
      "size": 330,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_locale_add_lc_time_reference",
      "entry": "0042cc6c",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_locale_free_lc_time_if_unreferenced",
      "entry": "0042cc95",
      "size": 48,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_locale_release_lc_time_reference",
      "entry": "0042ccc5",
      "size": 41,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_release_locale_ref",
      "entry": "0042ccee",
      "size": 129,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_update_thread_locale_data",
      "entry": "0042cd6f",
      "size": 107,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042cdd5",
      "entry": "0042cdd5",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__updatetlocinfoEx_nolock",
      "entry": "0042cde6",
      "size": 80,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___hw_cw_sse2",
      "entry": "0042ce36",
      "size": 171,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__clearfp",
      "entry": "0042cee1",
      "size": 222,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__control87",
      "entry": "0042cfbf",
      "size": 770,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__hw_cw",
      "entry": "0042d2c1",
      "size": 153,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_fp_strflt_to_string",
      "entry": "0042d35a",
      "size": 188,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "scoped_fp_state_reset",
      "entry": "0042d416",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "divide",
      "entry": "0042d440",
      "size": 1192,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_fltout",
      "entry": "0042d8ee",
      "size": 5019,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__fcloseall",
      "entry": "0042ec8a",
      "size": 151,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042ed21",
      "entry": "0042ed21",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_stdio_flush_nolock",
      "entry": "0042ed2a",
      "size": 102,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__fflush_nolock",
      "entry": "0042ed90",
      "size": 71,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__flushall",
      "entry": "0042edd7",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_flush_all",
      "entry": "0042ede0",
      "size": 188,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042ee85",
      "entry": "0042ee85",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042eeaf",
      "entry": "0042eeaf",
      "size": 9,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "___acrt_stdio_free_buffer_nolock",
      "entry": "0042eeb8",
      "size": 62,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__isatty",
      "entry": "0042eef6",
      "size": 86,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___strncnt",
      "entry": "0042ef4c",
      "size": 28,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "GetTableIndexFromLocaleName",
      "entry": "0042ef68",
      "size": 188,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___acrt_DownlevelLocaleNameToLCID",
      "entry": "0042f024",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_tcsncpy_s<char>",
      "entry": "0042f050",
      "size": 177,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042f101",
      "entry": "0042f101",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_strpbrk",
      "entry": "0042f110",
      "size": 64,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__mbsdec",
      "entry": "0042f150",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__mbsdec_l",
      "entry": "0042f167",
      "size": 141,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042f200",
      "entry": "0042f200",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042f20f",
      "entry": "0042f20f",
      "size": 51,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___set_fpsr_sse2",
      "entry": "0042f242",
      "size": 72,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__clrfp",
      "entry": "0042f2b8",
      "size": 19,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__ctrlfp",
      "entry": "0042f2cb",
      "size": 44,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042f2f7",
      "entry": "0042f2f7",
      "size": 91,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__statfp",
      "entry": "0042f352",
      "size": 18,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "fegetenv",
      "entry": "0042f364",
      "size": 29,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "fesetenv",
      "entry": "0042f381",
      "size": 73,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "feholdexcept",
      "entry": "0042f3ca",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042f460",
      "entry": "0042f460",
      "size": 79,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_0042f4b8",
      "entry": "0042f4b8",
      "size": 197,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042f570",
      "entry": "0042f570",
      "size": 470,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "write_double_translated_ansi_nolock",
      "entry": "0042f68d",
      "size": 435,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "write_double_translated_unicode_nolock",
      "entry": "0042f840",
      "size": 109,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "write_requires_double_translation_nolock",
      "entry": "0042f8ad",
      "size": 118,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "write_text_ansi_nolock",
      "entry": "0042f923",
      "size": 223,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "write_text_utf16le_nolock",
      "entry": "0042fa02",
      "size": 238,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "write_text_utf8_nolock",
      "entry": "0042faf0",
      "size": 301,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__write",
      "entry": "0042fc1d",
      "size": 221,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_0042fcdf",
      "entry": "0042fcdf",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__write_nolock",
      "entry": "0042fd08",
      "size": 524,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "common_lseek_nolock<__int64>",
      "entry": "0042ff14",
      "size": 126,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__lseeki64_nolock",
      "entry": "0042ff92",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__fclose_nolock",
      "entry": "0042ffad",
      "size": 118,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "_fclose",
      "entry": "00430023",
      "size": 115,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00430099",
      "entry": "00430099",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "operator()<class_<lambda_61cee617f5178ae960314fd4d05640a0>,class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>&,class_<lambda_9cd88cf8ad10232537feb2133f08c833>_>",
      "entry": "004300a3",
      "size": 137,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_0043012f",
      "entry": "0043012f",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__acrt_lowio_lock_fh_and_call<class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>_>",
      "entry": "0043013b",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__commit",
      "entry": "00430163",
      "size": 111,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___ascii_strnicmp",
      "entry": "004301e0",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "operator()<class_<lambda_123407a5e2ac06da108355a851863b7a>,class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>&,class_<lambda_ae55bdf541ad94d75914d381c370e64d>_>",
      "entry": "00430241",
      "size": 115,
      "is_thunk": false,
      "calling_convention": "__thiscall"
    },
    {
      "name": "FUN_004302b7",
      "entry": "004302b7",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__acrt_lowio_lock_fh_and_call<class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>_>",
      "entry": "004302c3",
      "size": 40,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__close",
      "entry": "004302eb",
      "size": 127,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__close_nolock",
      "entry": "0043036a",
      "size": 156,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___get_abstract_control_sse2",
      "entry": "00430406",
      "size": 125,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___get_abstract_control_x87",
      "entry": "00430483",
      "size": 115,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___get_machine_control",
      "entry": "004304f6",
      "size": 113,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___get_machine_control_sse2",
      "entry": "00430567",
      "size": 128,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___get_machine_status_sse2",
      "entry": "004305e7",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___get_machine_status_x87",
      "entry": "00430648",
      "size": 97,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__getfpcontrolword",
      "entry": "004306a9",
      "size": 67,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__getfpstatusword",
      "entry": "004306ec",
      "size": 168,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__setfpcontrolword",
      "entry": "00430794",
      "size": 128,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__setfpstatusword",
      "entry": "00430814",
      "size": 128,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004308a0",
      "entry": "004308a0",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004308b0",
      "entry": "004308b0",
      "size": 24,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004308ce",
      "entry": "004308ce",
      "size": 614,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00430f6c",
      "entry": "00430f6c",
      "size": 25,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00430fc8",
      "entry": "00430fc8",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__math_exit",
      "entry": "00430feb",
      "size": 42,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "FUN_004310d0",
      "entry": "004310d0",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "__startOneArgErrorHandling",
      "entry": "004310e7",
      "size": 60,
      "is_thunk": false,
      "calling_convention": "__fastcall"
    },
    {
      "name": "___libm_error_support",
      "entry": "00431123",
      "size": 536,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__putwch_nolock",
      "entry": "004313f4",
      "size": 69,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00431439",
      "entry": "00431439",
      "size": 106,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004314a3",
      "entry": "004314a3",
      "size": 299,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__87except",
      "entry": "004315ce",
      "size": 267,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_004316d9",
      "entry": "004316d9",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__errcode",
      "entry": "004316ef",
      "size": 52,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__except1",
      "entry": "00431723",
      "size": 206,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__handle_exc",
      "entry": "004317f1",
      "size": 480,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__raise_exc",
      "entry": "004319d1",
      "size": 35,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__raise_exc_ex",
      "entry": "004319f4",
      "size": 753,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__set_errno_from_matherr",
      "entry": "00431ce5",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__umatherr",
      "entry": "00431d14",
      "size": 162,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00431db6",
      "entry": "00431db6",
      "size": 212,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__set_exp",
      "entry": "00431e8a",
      "size": 47,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__sptype",
      "entry": "00431eb9",
      "size": 94,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "___dcrt_lowio_initialize_console_output",
      "entry": "00431f17",
      "size": 31,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00431f40",
      "entry": "00431f40",
      "size": 23,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__fpclass",
      "entry": "00431f57",
      "size": 164,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "IsProcessorFeaturePresent",
      "entry": "00431ffe",
      "size": 6,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__alloca_probe_16",
      "entry": "00432010",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__alloca_probe_8",
      "entry": "00432026",
      "size": 22,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__FindPESection",
      "entry": "00432040",
      "size": 67,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__IsNonwritableInCurrentImage",
      "entry": "00432090",
      "size": 164,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00432150",
      "entry": "00432150",
      "size": 49,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__EH_prolog3_catch",
      "entry": "00432181",
      "size": 54,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__aulldvrm",
      "entry": "004321c0",
      "size": 149,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__alldvrm",
      "entry": "00432260",
      "size": 223,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "__SEH_prolog4_GS",
      "entry": "00432340",
      "size": 72,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "FUN_00432390",
      "entry": "00432390",
      "size": 15,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "thunk_FUN_004323b0",
      "entry": "004323a0",
      "size": 5,
      "is_thunk": true,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_004323b0",
      "entry": "004323b0",
      "size": 124,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432430",
      "entry": "00432430",
      "size": 311,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "__filter_x86_sse2_floating_point_exception_default",
      "entry": "00432567",
      "size": 120,
      "is_thunk": false,
      "calling_convention": "__cdecl"
    },
    {
      "name": "Unwind@004325e0",
      "entry": "004325e0",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004325e8",
      "entry": "004325e8",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004325f6",
      "entry": "004325f6",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432604",
      "entry": "00432604",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432612",
      "entry": "00432612",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432620",
      "entry": "00432620",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043264d",
      "entry": "0043264d",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432666",
      "entry": "00432666",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043267f",
      "entry": "0043267f",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432698",
      "entry": "00432698",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004326b1",
      "entry": "004326b1",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004326ca",
      "entry": "004326ca",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004326e6",
      "entry": "004326e6",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004326ee",
      "entry": "004326ee",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004326fc",
      "entry": "004326fc",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043270a",
      "entry": "0043270a",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432718",
      "entry": "00432718",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432726",
      "entry": "00432726",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432745",
      "entry": "00432745",
      "size": 21,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043275a",
      "entry": "0043275a",
      "size": 27,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432786",
      "entry": "00432786",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043278e",
      "entry": "0043278e",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004327aa",
      "entry": "004327aa",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004327c3",
      "entry": "004327c3",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004327ce",
      "entry": "004327ce",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004327d9",
      "entry": "004327d9",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004327f5",
      "entry": "004327f5",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432800",
      "entry": "00432800",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432821",
      "entry": "00432821",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043283d",
      "entry": "0043283d",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432848",
      "entry": "00432848",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432864",
      "entry": "00432864",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043286f",
      "entry": "0043286f",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432888",
      "entry": "00432888",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004328a1",
      "entry": "004328a1",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004328bd",
      "entry": "004328bd",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004328de",
      "entry": "004328de",
      "size": 13,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004328fc",
      "entry": "004328fc",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432904",
      "entry": "00432904",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043290c",
      "entry": "0043290c",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432925",
      "entry": "00432925",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432933",
      "entry": "00432933",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432952",
      "entry": "00432952",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432960",
      "entry": "00432960",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043296e",
      "entry": "0043296e",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043297c",
      "entry": "0043297c",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@0043298c",
      "entry": "0043298c",
      "size": 16,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004329ad",
      "entry": "004329ad",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004329c9",
      "entry": "004329c9",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004329e2",
      "entry": "004329e2",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004329ed",
      "entry": "004329ed",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@004329f8",
      "entry": "004329f8",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432a03",
      "entry": "00432a03",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432a0e",
      "entry": "00432a0e",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432a1c",
      "entry": "00432a1c",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432a2a",
      "entry": "00432a2a",
      "size": 14,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432a49",
      "entry": "00432a49",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432a62",
      "entry": "00432a62",
      "size": 43,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432a9e",
      "entry": "00432a9e",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432ab7",
      "entry": "00432ab7",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432ad0",
      "entry": "00432ad0",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432adb",
      "entry": "00432adb",
      "size": 8,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432af4",
      "entry": "00432af4",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432b10",
      "entry": "00432b10",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "Unwind@00432b2c",
      "entry": "00432b2c",
      "size": 11,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432b70",
      "entry": "00432b70",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432b80",
      "entry": "00432b80",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432b90",
      "entry": "00432b90",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432ba0",
      "entry": "00432ba0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432bb0",
      "entry": "00432bb0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432bc0",
      "entry": "00432bc0",
      "size": 10,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    },
    {
      "name": "FUN_00432bd0",
      "entry": "00432bd0",
      "size": 12,
      "is_thunk": false,
      "calling_convention": "__stdcall"
    }
  ],
  "imports": [
    "AdjustTokenPrivileges",
    "AllocConsole",
    "AllocateAndInitializeSid",
    "AttachConsole",
    "CLSIDFromString",
    "CharUpperW",
    "CheckTokenMembership",
    "CloseHandle",
    "CoCreateInstance",
    "CoSetProxyBlanket",
    "CommDlgExtendedError",
    "CompareStringW",
    "CopyImage",
    "CopyRect",
    "CreateCompatibleBitmap",
    "CreateCompatibleDC",
    "CreateDIBSection",
    "CreateDirectoryW",
    "CreateEventW",
    "CreateFileMappingW",
    "CreateFileW",
    "CreateHardLinkW",
    "CreateSemaphoreW",
    "CreateStreamOnHGlobal",
    "CreateThread",
    "CreateWindowExW",
    "DecodePointer",
    "DefWindowProcW",
    "DeleteCriticalSection",
    "DeleteDC",
    "DeleteFileW",
    "DeleteObject",
    "DestroyIcon",
    "DestroyWindow",
    "DeviceIoControl",
    "DialogBoxParamW",
    "DispatchMessageW",
    "EnableWindow",
    "EncodePointer",
    "EndDialog",
    "EnterCriticalSection",
    "ExitProcess",
    "ExpandEnvironmentStringsW",
    "FileTimeToLocalFileTime",
    "FileTimeToSystemTime",
    "FindClose",
    "FindFirstFileExA",
    "FindFirstFileW",
    "FindNextFileA",
    "FindNextFileW",
    "FindResourceW",
    "FindWindowExW",
    "FlushFileBuffers",
    "FoldStringW",
    "FormatMessageW",
    "FreeConsole",
    "FreeEnvironmentStringsW",
    "FreeLibrary",
    "FreeSid",
    "GdipAlloc",
    "GdipCloneImage",
    "GdipCreateBitmapFromStream",
    "GdipCreateBitmapFromStreamICM",
    "GdipCreateHBITMAPFromBitmap",
    "GdipDisposeImage",
    "GdipFree",
    "GdiplusShutdown",
    "GdiplusStartup",
    "GetACP",
    "GetCPInfo",
    "GetClassNameW",
    "GetClientRect",
    "GetCommandLineA",
    "GetCommandLineW",
    "GetConsoleCP",
    "GetConsoleMode",
    "GetCurrentDirectoryW",
    "GetCurrentProcess",
    "GetCurrentProcessId",
    "GetCurrentThreadId",
    "GetDC",
    "GetDateFormatW",
    "GetDeviceCaps",
    "GetDlgItem",
    "GetDlgItemTextW",
    "GetEnvironmentStringsW",
    "GetExitCodeProcess",
    "GetFileAttributesW",
    "GetFileType",
    "GetFullPathNameW",
    "GetLastError",
    "GetLocalTime",
    "GetLocaleInfoW",
    "GetLongPathNameW",
    "GetMessageW",
    "GetModuleFileNameA",
    "GetModuleFileNameW",
    "GetModuleHandleExW",
    "GetModuleHandleW",
    "GetNumberFormatW",
    "GetOEMCP",
    "GetObjectW",
    "GetOpenFileNameW",
    "GetParent",
    "GetProcAddress",
    "GetProcessAffinityMask",
    "GetProcessHeap",
    "GetSaveFileNameW",
    "GetShortPathNameW",
    "GetStartupInfoW",
    "GetStdHandle",
    "GetStringTypeW",
    "GetSysColor",
    "GetSystemDirectoryW",
    "GetSystemInfo",
    "GetSystemMetrics",
    "GetSystemTime",
    "GetSystemTimeAsFileTime",
    "GetTempPathW",
    "GetTickCount",
    "GetTimeFormatW",
    "GetVersionExW",
    "GetWindow",
    "GetWindowLongW",
    "GetWindowRect",
    "GlobalAlloc",
    "GlobalFree",
    "GlobalLock",
    "GlobalUnlock",
    "HeapAlloc",
    "HeapFree",
    "HeapReAlloc",
    "HeapSize",
    "InitCommonControlsEx",
    "InitializeCriticalSection",
    "InitializeCriticalSectionAndSpinCount",
    "InitializeSListHead",
    "InterlockedDecrement",
    "IsDBCSLeadByte",
    "IsDebuggerPresent",
    "IsDialogMessageW",
    "IsProcessorFeaturePresent",
    "IsValidCodePage",
    "IsWindow",
    "IsWindowVisible",
    "LCMapStringW",
    "LeaveCriticalSection",
    "LoadBitmapW",
    "LoadCursorW",
    "LoadIconW",
    "LoadLibraryExA",
    "LoadLibraryExW",
    "LoadLibraryW",
    "LoadResource",
    "LoadStringW",
    "LocalFileTimeToFileTime",
    "LocalFree",
    "LockResource",
    "LookupPrivilegeValueW",
    "MapViewOfFile",
    "MapWindowPoints",
    "MessageBoxW",
    "MoveFileExW",
    "MoveFileW",
    "MultiByteToWideChar",
    "OemToCharBuffA",
    "OleInitialize",
    "OleUninitialize",
    "OpenFileMappingW",
    "OpenProcessToken",
    "Ordinal_2",
    "Ordinal_6",
    "Ordinal_9",
    "PeekMessageW",
    "PostMessageW",
    "QueryPerformanceCounter",
    "QueryPerformanceFrequency",
    "RaiseException",
    "ReadFile",
    "RegCloseKey",
    "RegCreateKeyExW",
    "RegOpenKeyExW",
    "RegQueryValueExW",
    "RegSetValueExW",
    "RegisterClassExW",
    "ReleaseDC",
    "ReleaseSemaphore",
    "RemoveDirectoryW",
    "ResetEvent",
    "RtlUnwind",
    "SHAutoComplete",
    "SHBrowseForFolderW",
    "SHChangeNotify",
    "SHFileOperationW",
    "SHGetFileInfoW",
    "SHGetFolderLocation",
    "SHGetMalloc",
    "SHGetPathFromIDListW",
    "SelectObject",
    "SendDlgItemMessageW",
    "SendMessageW",
    "SetCurrentDirectoryW",
    "SetDlgItemTextW",
    "SetEndOfFile",
    "SetEnvironmentVariableW",
    "SetEvent",
    "SetFileAttributesW",
    "SetFilePointer",
    "SetFilePointerEx",
    "SetFileSecurityW",
    "SetFileTime",
    "SetFocus",
    "SetForegroundWindow",
    "SetLastError",
    "SetProcessDefaultLayout",
    "SetStdHandle",
    "SetThreadExecutionState",
    "SetThreadPriority",
    "SetUnhandledExceptionFilter",
    "SetWindowLongW",
    "SetWindowPos",
    "SetWindowTextW",
    "ShellExecuteExW",
    "ShowWindow",
    "SizeofResource",
    "Sleep",
    "StretchBlt",
    "SystemTimeToFileTime",
    "SystemTimeToTzSpecificLocalTime",
    "TerminateProcess",
    "TlsAlloc",
    "TlsFree",
    "TlsGetValue",
    "TlsSetValue",
    "TranslateMessage",
    "TzSpecificLocalTimeToSystemTime",
    "UnhandledExceptionFilter",
    "UnmapViewOfFile",
    "UpdateWindow",
    "VirtualProtect",
    "VirtualQuery",
    "WaitForInputIdle",
    "WaitForSingleObject",
    "WideCharToMultiByte",
    "WriteConsoleW",
    "WriteFile",
    "wvsprintfW"
  ],
  "strings": [
    "!This program cannot be run in DOS mode.\r\r\n$",
    "Rich<>\r",
    ".text",
    "`.rdata",
    "@.data",
    ".didat",
    ".rsrc",
    "@.reloc",
    "hp+C",
    "tASW",
    "^VQP",
    "t1h!0",
    "QQSV",
    "F WP",
    "hA&C",
    "hA&C",
    "F2Pj9",
    "hp6C",
    "9RuJ+",
    "_^[d",
    "C2Pj<",
    "C2Pj",
    "8RuA",
    "G2Pj9",
    "F2Pj",
    "tcSj\\",
    "j_Xf",
    "L$$uu",
    "D$,h",
    "t,Ph",
    "D$4j",
    "v'Ph",
    "D$4j",
    "D$TP",
    "D$\\P",
    "D$,P",
    "D$XP",
    "D$0P",
    "D$0P",
    "^][_",
    "E@QQQQP",
    "\rt4J",
    "9N$|",
    "MTuu3",
    "hx6C",
    "hp6C",
    "C2Pj",
    "C2PPj",
    "_^[d",
    "M0WS",
    "C2Pj",
    "C2PPu^h",
    "9}Hr",
    "Ekt1",
    "C2PPj",
    "ETt(",
    "t(Ph",
    "~(WP",
    "ETt\rVQ",
    "hp6C",
    "C2Pj",
    "_^[d",
    "F2Pj",
    "F2Pj",
    "F2Pj",
    "F2Pj",
    "G2Pj",
    "SUVW",
    "_^][",
    "F2Pj8",
    "_^][",
    "|$\\j",
    "L$l3",
    "D$,r",
    "D$4:",
    "D$H3",
    "3t$0",
    "D$X3",
    "3T$ ",
    "D$@3",
    "3T$(",
    "D$L3",
    "3\\$$",
    "D$\\3",
    "3\\$<",
    "3l$ ",
    "3l$D",
    "T$X3",
    "3|$T",
    "3D$P",
    "_^][",
    ")\\$Pf",
    ")d$`",
    "T$ f",
    ")l$@f",
    "|$4f",
    "d$@f",
    "|$8f",
    "|$@f",
    "nt$4",
    "nL$ f",
    "D$@f",
    "|$@f",
    "nL$,f",
    "nT$(f",
    "nL$$f",
    "n|$0f",
    "|$@f",
    "nL$0f",
    "|$@f",
    "nL$,f",
    "nD$$f",
    "t$@f",
    "nt$4",
    "nL$(f",
    "|$@f",
    "nT$ f",
    "t$@f",
    "nL$(f",
    "nT$4f",
    "|$@f",
    "nD$0f",
    "n|$$f",
    "t$@f",
    "nD$ f",
    "|$@f",
    "nD$,f",
    "t$@f",
    "nt$,",
    "nD$$f",
    "|$@f",
    "nT$(f",
    "nD$ f",
    "n|$4f",
    "t$@f",
    "|$@f",
    "nL$0f",
    "n|$$f",
    "t$@f",
    "nt$0",
    "nD$,f",
    "|$@f",
    "nT$(f",
    "t$@f",
    "n|$ f",
    "|$@f",
    "nT$ f",
    "nD$4f",
    "n|$0f",
    "t$@f",
    "nD$4f",
    "|$@f",
    "n|$,f",
    "t$@f",
    "|$@f",
    "nL$(",
    "nT$(f",
    "nD$$f",
    "t$@f",
    "nD$0f",
    "|$@f",
    "nL$4",
    "nT$$f",
    "t$@f",
    "nt$,",
    "|$@f",
    "nL$ f",
    "nT$,f",
    "t$@f",
    "nL$4f",
    "|$@f",
    "nD$(f",
    "n|$0f",
    "t$@f",
    "nt$$",
    "|$@f",
    "nD$ f",
    "t$@f",
    "nt$$",
    "|$@f",
    "nL$ ",
    "t$@f",
    "nD$(f",
    "|$@f",
    "nT$,f",
    "nL$4f",
    "D$<f",
    "nD$,f",
    "A@PQ",
    "voSUQ",
    "A@PQ",
    "[^]_",
    "SUVW",
    "j@XP",
    "[j VW",
    "_^][",
    "^j@WU",
    "\\$ +|$ !t$",
    "L$ @",
    "T$$9t$",
    "SUVWj",
    ">*u:",
    "t,j.Xj\\f",
    "_^][",
    "QQSUV",
    "t$(W",
    "l$ U",
    "t$$UW",
    "_^][YY",
    "t$0WV",
    "u(Wj",
    "QSVWh",
    "hA&C",
    "$UVW",
    "|$43",
    "SUUUU",
    "D$$Pj",
    "D$(Pj ",
    "u'UUUU",
    "D$ Pj Vj ",
    "D$`P",
    "D$hP",
    "D$hP",
    "D$8P",
    "D$LP",
    "D$dP",
    "D$,Pi",
    "D$(Ph",
    "D$ P",
    "D$,P",
    "_^][",
    "D$ P",
    "D$0P",
    "D$tVP",
    "D$8P",
    "D$\\P",
    "D$ Pj",
    "D$xP",
    "j _W",
    "D$$P",
    "D$PP",
    "D$|P",
    "D$XP",
    "D$8P",
    "_^][",
    "j _W",
    "UUWP",
    "D$<P",
    "D$hP",
    "UVWj@_;",
    "D$TP",
    "D$X[",
    "Pj6Q",
    "D$tP",
    "\n4\\F",
    "j@X+",
    "D$xP",
    "_^][",
    "ulWj@X;",
    "PPPP",
    "j [S",
    "l$$VW3",
    "D$4;",
    ";|$$",
    "D$ f",
    "D$0f",
    "\\$(;",
    "D$03",
    "x_^][",
    "D$4;",
    ";|$$s",
    "D$ K",
    "l$0f",
    "D$0f",
    "D$0f",
    "\\$0f",
    "{GFB",
    "t]SUWj\r[j\n]",
    "t4SW",
    "^_][",
    "uLf9n",
    "f9.u",
    "SVWh",
    "h48C",
    "h@8C",
    "j\\Xf",
    "F(PW",
    "PQPP",
    "_^[d",
    "G2PjR",
    "t-f9F",
    "C2PjS",
    "_^[d",
    "QQSUVW",
    "|$(W",
    "t^j.",
    "u+f9G",
    "_^][YY",
    "hL8C",
    "hT8C",
    "SPj 3",
    "t!SSS",
    "QQSV",
    "_^[d",
    "u\rWjD",
    "_^][",
    "PUVQ",
    "C2Pjt",
    "D$ P",
    "tLVS",
    "^][_",
    "C2Pj",
    "G2Pjt",
    "D$hP",
    "QSUV",
    "|$$W",
    "t:j_[f9^",
    "u\nj\\Xf",
    "_^][Y",
    "jIZ_",
    "8Wgt}QR",
    "QRVS",
    "_^[d",
    "jEYjX",
    "twf;",
    "C2QPu8h",
    "jIYf;",
    "txjEYf;",
    "s2Vj;",
    "jPXf9E",
    "C2PjG",
    "C2PQ",
    "t\nf;u",
    "C2Pj",
    "QSUVW",
    "t$ V",
    "t$4VU",
    "_^][Y",
    "Wh\\8C",
    "_^[d",
    "hA&C",
    "t\rh8",
    "PUWS",
    "D$(P",
    "_^][YY",
    "D$0P",
    "L$(RQ",
    "_^][",
    "\\$ PW",
    "D$ PQ",
    "u89G",
    "[]^_",
    "L$,3",
    "L$$P",
    "QQUV",
    "[^]YY",
    ":t+U",
    "]u&V",
    " t\rj",
    "D$8P",
    "D$LP",
    "L$$P",
    "L$0P",
    "_^][",
    "UVWh",
    "hA&C",
    "^][_",
    "u\"hT",
    "v0W3",
    "u'h8",
    "PhLWC",
    "0SSSSSQ",
    "SSj\n",
    "WSj0",
    "0RQP",
    "PUWt\n",
    "D$ P",
    "_^][",
    "D$ P",
    "D$ Pt\n",
    "QQSU",
    "f;T$",
    "?t\"f;",
    "t&f;",
    "j.Z3",
    "j*_f9y",
    "u\nf9Y",
    "YYf9X",
    "t$$VU",
    "u\tf9",
    "_^][YY",
    "hA&C",
    "j\\Zf9TN",
    "Wj.]",
    "f9/u",
    "Sj\\[",
    "u)f9_",
    "t2j.",
    "j\\[f",
    "j.][f9.u",
    "QhD9C",
    "WVj\\^f;",
    "uMf9w",
    "Y;D$",
    "s^_[",
    "tySVW",
    "v3Uj.]",
    "t'WPV",
    "hP9C",
    "j\\Xf9",
    "VhP9C",
    "Vh\\9C",
    "WhP9C",
    "v7WhP9C",
    "j\\Xf9",
    "tFj ",
    "h,9C",
    "_^][",
    "0j\\Yf9",
    "?u\tf9H",
    "UVW3",
    "~9j.]",
    " t#f;",
    "{f9M",
    "L$ f",
    "D$,P",
    "j_Xf",
    "4{f9",
    "_^][",
    "t1f;",
    "f9.t[S",
    "j_Yf",
    "f9.u",
    "_[^]",
    "QSUVW",
    "u%Sh",
    "_^][Y",
    "j:[f",
    "j1Yf",
    "Yj:[",
    "j0];",
    "f;D$",
    "jaXf",
    "Sh$9C",
    "VWj;",
    "j\\_f",
    "N$t\n",
    "F _^",
    "PSUV",
    "T$$2",
    ";L$,s",
    "D$$A",
    "D$$u",
    "!\\$8",
    "|$(;|$4",
    "*D$$",
    "+D$ P",
    "+D$$P",
    "T$D3",
    "!D$D3",
    "L$(;L$4",
    "D$8G",
    "|$<;",
    "t$$+",
    "L$(3",
    "D$<+",
    "+D$@P",
    "+t$@V",
    "T$,;",
    "\\$<~",
    "t$$j",
    "D$0;",
    "|$(3",
    "T$@]3",
    "L$,A",
    "_^][",
    "Y+L$",
    "SVj Y+M",
    ":\nu7VRj",
    "_^][",
    "QQSU",
    "_^][YY",
    "}\n@;",
    "W9u to",
    "^][Y",
    "QQSV",
    "_^[d",
    "SUVW",
    "L$$3",
    ";{,|",
    ";k(v\t",
    ";K,|",
    ";k(v",
    "C,tB",
    "CTPj",
    "CtPQ",
    "_^][",
    "w%WS",
    "N8WS",
    "u\rWS",
    "hA&C",
    "hA&C",
    "o(9w,v'S",
    "YY;w,r",
    "t<kF",
    "E|VWk",
    "E jP",
    "E j:P",
    "PVWk8",
    "Phl:C",
    "h@:C",
    "Ph<:C",
    "Ph8:C",
    "jPh4:C",
    "VjPP",
    "t Vk0",
    "SVWj\\XP",
    "G;= ",
    "EDj*Zf9",
    "au j",
    "F;u(",
    "0QWV",
    "t\nf;U",
    "j:Zf9",
    "j Yf9LC",
    ":f;}(t",
    "f;}<u",
    "Aj Xf9",
    "h,:C",
    "E@YY",
    "Af;U(t",
    "f;U<u",
    "uAj\t",
    "j\"Yf",
    "j\rYf;",
    "j\nYf;",
    "f;M<u\r3",
    "j\"Xf9Dw",
    "wj\"Xf9",
    "u0;EH",
    "f;M<u\r3",
    "j\"Xf9Dw",
    "wj\"Xf9",
    "~<YY9^,v",
    "C;^,r",
    "SUVW",
    "hP:C",
    "D$`jPP",
    "D$`P",
    "D$hP",
    "D$,PW",
    "D$PPW",
    "L$4+L$,",
    "t$8A+t$0",
    "T$XF",
    "D$$d",
    "+l$\\+",
    "\\$(+",
    "+t$ ",
    "\\$,y",
    "t$DVSj",
    "D$,PW",
    "Ph\\:C",
    "D$@PW",
    "L$D+",
    "jd^+L$4",
    "t$DP",
    "D$P+",
    "|$,Pjd",
    "+t$<",
    "_^][",
    "QQSU3",
    "_][YY",
    "D$8U-",
    "@uCj ",
    "\\$<]",
    "|$lt",
    "t$pW",
    "D$\\P",
    "T$hSV",
    "D$x+",
    "D$TP",
    "D$V3",
    "D$W3",
    "D$Z3",
    "T$T3",
    "D$[3",
    "l$<3<",
    "|$@3",
    "E(3D$",
    "M43L$",
    "],3\\$",
    "3T$<",
    "E$3D$H3t$@3\\$D",
    "D$ t",
    "3T$\\3t$`3\\$d3D$h",
    "D$XP",
    "D$ j",
    "^[_]",
    "0SUV",
    "~L;]",
    "L$ 2",
    "0D$!",
    "0D$\"",
    "0D$#",
    "0D$0",
    "0D$1",
    "0D$2",
    "0D$3j",
    "_^][",
    "u3hx:C",
    "t[QP",
    "SUVWt\n",
    "|$@j@",
    "|$,W",
    "D$$3",
    "3\\$ ",
    "D$$3",
    "Z3L$ ",
    "D$$3",
    "#L$,",
    "D$$3L$0",
    "#L$,",
    "L$ 3L$",
    "D$(#",
    "3L$ ",
    "W83W$3W",
    "3w 373w",
    "\\$ j",
    "T$(3t$",
    "L$ 3",
    "L$$3",
    "T$03",
    "T$,@#",
    "D$03t",
    "D$,3t",
    "l$4j",
    "D$,Z",
    "L$$3",
    "_^][",
    "DSUV",
    "t$TWj8[",
    "tFv-j@Y;",
    "_^][",
    "\\$HVW",
    "?vUUj@^+",
    "D$T+",
    "l$\\V",
    "t$XWj?_",
    "vzj@[+",
    "D$ PV",
    "D$`+",
    "D$ PV",
    "t$\\;",
    "D$`+",
    "_^][",
    "SUVW",
    "t7v\"j@Z;",
    "_^][",
    "t9Vj@^+",
    "^_][",
    "SUVW",
    "l$83",
    "_^][",
    "j\"Zf;",
    "u(f9V",
    "[_^Y",
    "j\tY;",
    "\\$x3",
    "l$xBV3",
    "s7Vj\nSU",
    "0j\nSf",
    "D|$G",
    "t\tj-Xf",
    "YY_^[",
    " t\nj",
    "PSSSSSSh ",
    "SUVW3",
    "h8<C",
    "t_hL<C",
    "h`<C",
    "D$4(=C",
    "D$8D=C",
    "D$<T=C",
    "D$@h=C",
    "D$d8>C",
    "D$hP>C",
    "D$lh>C",
    "tySSWV",
    "t Uh",
    "hPBC",
    "PWhhBC",
    "_^][",
    "SUVW",
    "j@_E",
    "SWSS",
    "SUUS",
    "hA&C",
    "h(CC",
    "vpUW",
    "_]^[Y",
    "LSVW",
    "D$8P",
    "D$HP",
    "D$<PS",
    "D$LP",
    "D$ P",
    "D$<P",
    "L$$+D$ ",
    "D$,P",
    "HSUVW",
    "D$(f",
    "D$*f",
    "D$.f",
    "D$0f",
    "D$2f",
    "D$43",
    "D$6f",
    "D$,P",
    "D$8P",
    "D$H3",
    "D$<PV",
    "D$LP",
    "D$ P",
    "D$<P",
    "D$$+L$ ",
    "VWjd_",
    "t&Vh",
    "_^][",
    "_^][",
    "PPWVj",
    "f9:t\nA",
    "j0X3",
    "9w2j\nZ",
    "QSVW",
    "_^[d",
    "hA&C",
    "B;0r\rB",
    "hA&C",
    "t/h`#A",
    "Yt\nj",
    "9{Pr",
    "9{Pr",
    ";C|t\r+C|#",
    "_^[d",
    ";F|t",
    "+F|#",
    "F$tL",
    "QQSUV",
    "t$ W",
    ";L$ r",
    "9t$ vL",
    "GCB<",
    ";T$ r",
    ";L$ s",
    ";D$ r",
    "_^][YY",
    "^[_]",
    "#D$$P",
    "C#\\$$",
    "^_][Y",
    "_^][",
    "QQSUV",
    "_^][YY",
    "D>*;",
    "[_^]",
    "l$(3",
    "^_][",
    "D$ P",
    "ucWj",
    "]_^[",
    "W8\\$",
    "GYY;",
    "GYY;",
    "QQSVW",
    "9_ u",
    "h`#A",
    "_^[d",
    "QSUV",
    "T3)F",
    "_^][Y",
    "j@SP",
    "D$\\P",
    "_^][",
    "D$$SUV",
    "uxf9Y",
    "_^][",
    "D$ P",
    "t$ 3",
    "Z:L$",
    "_^][",
    "t^SV",
    "sLf;",
    "D$0P",
    "L$,Q",
    "_^][",
    "D<,G",
    "sLf;",
    "D<,G",
    "D$,h2",
    "_^[]",
    "_^[d",
    "_^[d",
    "SUVW",
    "_^][",
    "L:);",
    "L7)_",
    "SUVW",
    "l$ ;",
    "th9.ud",
    "_^][",
    "t$ W",
    "L$,;",
    "T$$t&W",
    "t$$;",
    "|$$;",
    "_^][",
    "+F|#",
    "s?;N|t:",
    "T$ j",
    "T$ j",
    "\\$ t\r",
    "_^][",
    "+F|#",
    "s?;N|t:",
    "\\$ j",
    "Y+L$ ",
    "j$Y+",
    "F|PSW",
    "L$ ;",
    "rv9|$",
    "]_^[",
    "L$ j",
    "F|PQ",
    "SUVW",
    "D$03",
    "!T$(",
    "u/UQ",
    "L$ +",
    "L$(3",
    "D$(+",
    "T$ ;l$(r",
    "D$ F",
    "D$ ;t$$r",
    "iT$0",
    "_^][",
    "t$DW",
    "4s/j",
    "L$(;",
    "s'@f",
    "\\$0j",
    "Y+L$0",
    "D$8PW",
    "D$Df",
    "L$0j",
    "T$,j",
    "]_^[",
    "\\$@UV",
    "D$,;",
    "\t;L$,|3;",
    "4s1j",
    "L$(;",
    "l$4j",
    "Y+L$4",
    "l$(;",
    "D$0j$Y+",
    "L$(;",
    "D$,Y+",
    "j Y+L$0",
    "L$4;",
    "ro9|$(sA",
    "D$8PQ",
    "l$(t\r",
    "L$4j",
    "_^][",
    "(SUV",
    "tdf9+tR",
    "u8WU",
    "_^][",
    "\\$$9",
    "T$(;",
    "A9D$",
    "Y;L$",
    "A;T$$",
    "kD$ \tA;",
    "kD$ ",
    "D$0@f",
    "_^][",
    "T$ ;",
    "_^][",
    "l$$V",
    "L$$f",
    "_^][",
    "SUVW",
    "D$,3",
    "D$ Q",
    "G2Pj",
    "G2VP",
    "D$8P",
    "D$8P",
    "G2VP",
    "D$4P",
    "L$4Q",
    "D$8P",
    "D$0PjE",
    "_^][",
    "^(^[Y",
    "hA&C",
    "hA&C",
    "tMSh",
    "^[]_",
    "<A>t",
    "rHQP",
    "t$ P",
    "uO9o",
    "tJ9o uE9o",
    "UUUUj",
    "hPFC",
    "j Xf9",
    "YYu\rhpFC",
    "\tUj@",
    "_^[YY",
    "9K Q",
    "0QQQ",
    "V,]^[Y",
    "Xj\nZf;",
    "uJf9V",
    "uDf9F",
    "u>f9V",
    "u8j\n",
    ",__f9~",
    "_h0GC",
    "[_]YY",
    "Sh,UC",
    "Sh|TC",
    "^[_]",
    "h|TC",
    "7_^[",
    "QQUV",
    "j\rXj Z",
    "j\nXf;",
    "&u&3",
    "u#j Z",
    "j Zj\r",
    "u!j\rYj",
    "j\nZf",
    "f;T$",
    "j Zj\r",
    "[_^]YY",
    "D$,+D$$PV",
    "t$,3",
    "@Vh\\EC",
    "tJ9s uE9s",
    "Wh|TC",
    "N,9l$",
    "USUj",
    "0USU",
    "USUj",
    "]^[Y",
    "Ph\\TC",
    "ShLUC",
    "VQh<UC",
    "9] t",
    "t%jXV",
    "QQVWhdGC",
    "SUW3",
    "_^YY",
    "D$0UPj",
    "W;L$<u\n;l$@u",
    "PhTGC",
    "@PWh\\UC",
    "WWWWS",
    "0WSP",
    "N WhlUC",
    "t$,P",
    "D$\\3",
    "|$pf",
    "D$dXWWf",
    "D$0PW",
    "D$l(",
    "t$ P",
    "D$8PQ",
    "WWWWS",
    "^_][",
    "$SUVWj",
    "|$ ;",
    "t$@S",
    "t$(PP",
    "t$(U",
    "t$XPP",
    "jPPV",
    "VWhlGC",
    "hA&C",
    "hxPC",
    "SUWV",
    "0jfV",
    "@_^][",
    "tGSVWj\\",
    "_^[3",
    "ubhh",
    "u1jd",
    "VWh,",
    "EZ;l$(",
    "uij\"[",
    "\\$$u%",
    "f;L$",
    "t\rj\"",
    "Yj\"8D$",
    "f;L$",
    "D$$3",
    "_^][",
    "SVW3",
    "hPPC",
    "VPjfW",
    "@_^[",
    "\rt?f",
    "SUVWh",
    "nf9.u",
    "{taf",
    "D$$P",
    "VVVVP",
    "t9VVV",
    "UUhdQC",
    "t$,SVW",
    "PUhr",
    "PUhC",
    "@_^][",
    "SWje",
    "u\rje",
    "f98tNV",
    "WhlPC",
    "h0QC",
    "PjfW",
    "PPPj",
    "SjiW",
    "PjkW",
    "hdQC",
    "h|QC",
    "_^[d",
    "^UUhq",
    "PjeW",
    "D$4PU",
    "D$$Pj",
    "D$$PUh",
    "D$0P",
    "Ph0PC",
    "PjjW",
    "udj2",
    "PhDPC",
    "PjhW",
    "D$(P",
    "D$,P",
    "D$4PU",
    "D$$PV",
    "D$$PUV",
    "D$0P",
    "Ph0PC",
    "PjkW",
    "tKj2",
    "PhDPC",
    "PjiW",
    "_^][",
    "Lu!f",
    "j%Xf",
    "f9=r",
    ".u'f9O",
    "PShdSC",
    "Yj\\Yf9",
    "Ys VW",
    "j\"XP",
    "WShC",
    "PShC",
    "u)f9",
    "j\"[f9",
    "j Xf;",
    "j/Xf;",
    "uJj/Y",
    "Uj S",
    "tfj\"]f9+u",
    "f9(tSVWS",
    "Y_^]",
    "\\SUVW",
    "PPUV",
    "PSh:",
    "\\$pA",
    "PQhD",
    "t$tj",
    "PPUV",
    "_^][",
    "SUWV",
    "SjfV",
    "@_^][",
    "UVWj",
    "D$,PV",
    "D$,P",
    "[_^]",
    "Wj<_W",
    "Uj\"Yf;",
    "l$$j\"Xf;",
    "Aj\"Xf;",
    "j Xf",
    "Nj _",
    "Hf9<N",
    "D$(r",
    "D$PP",
    "t\nSV",
    "=z{E",
    "htPC",
    "hrXE",
    "toVh",
    "VVVh",
    "hDQC",
    "VhTQC",
    "uFV3",
    "VVVV",
    "t!VVV",
    "hxPC",
    "USVW",
    "VhPPC",
    "SVWj",
    "tjUh",
    "tGWSSVU",
    "t-WSh",
    "D$ P",
    "D$\"P",
    "D$\"P",
    "D$$Ph",
    "D$|Ph",
    "D$0h0QC",
    "5|{E",
    "=z{E",
    "={{E",
    "QRPh",
    "QRPh",
    "QRPh,",
    "QRPhL",
    "QRPhl",
    "QRPh",
    "u[h|UC",
    "DtEVW",
    "_^[]",
    "4SVW",
    "t-9X",
    "<8PE",
    ";|84u\r",
    "QRPh",
    "QRPh",
    "%P2C",
    "%p2C",
    "%X2C",
    "%T2C",
    "%\\2C",
    "%`2C",
    "%d2C",
    "%h2C",
    "%l2C",
    "WVS3",
    "Y_^[",
    "Y_^[",
    "t>+}",
    "8csm",
    "Y_^[",
    "Y_^[",
    "VPWh",
    "Y_^[",
    "Yt\nj",
    "Y__^[",
    "SVW3",
    "Genu",
    "5ineI",
    "5ntel",
    "t#=`",
    "_^[3",
    ">csm",
    "SVWP",
    "Y_^[",
    "t9WV",
    "8csm",
    "Y_^[",
    "t2VW",
    ">csm",
    "?RCC",
    "?MOC",
    "?csm",
    "oF f",
    "oF f",
    "oF f",
    "oV f",
    "o^0f",
    "of@f",
    "onPf",
    "ov`f",
    "o~pf",
    "FGIu",
    "FGIu",
    "QQSVWd",
    ";p$u",
    "p$^]",
    "jjjjj",
    "Sj [",
    "hcsm",
    "\rq<xA",
    "f9\ntJ",
    "f9\nu",
    "^_[3",
    "8_^]",
    "8csm",
    "=` F",
    "BVj(j",
    "h` F",
    "YYPV",
    "Y_^[",
    "Y_^[",
    "u SW",
    "_^[]",
    "dSVW",
    ";csm",
    ";csm",
    "u\t9s",
    ";csm",
    "u$9G",
    "v!8E",
    "u QW",
    "uf_^[",
    ";MOC",
    ";RCC",
    "@u)j",
    "u Qj",
    "@_^[]",
    "9p u\"",
    ":csm",
    "ft&9q",
    ":csm",
    "r49z",
    "@_^[]",
    "Y_^[",
    ">csm",
    "8csm",
    "t0QW",
    "Y_^[",
    "URPQQh@:B",
    "L$,3",
    "UVWS",
    "[_^]",
    "SVWj",
    "_^[]",
    "QSVW",
    "h8cC",
    "VhPcC",
    "hHcC",
    "hPcC",
    "VhdcC",
    "h\\cC",
    "hdcC",
    "VhtcC",
    "hlcC",
    "htcC",
    "UQPXY]Y[",
    "~8@_",
    "F4^[]",
    "QQSV",
    "~8@_",
    "F4^[",
    "~!Sf",
    "_[^]",
    "\t<et",
    "Wj\nQ",
    "Wj\nQ",
    "<Pt8",
    "y1*t\n",
    "y2*t\n",
    "A1<Fu",
    "<Nu&",
    "u<dt",
    "<Xu]",
    "8lu\r@",
    "Tt1jhZ;",
    "OjlZ;",
    "^$+^8+",
    "jAZjX",
    ">t6;",
    "t\tj-Xf",
    "jXXf;",
    "jA_f;",
    "t0jXXf",
    "jAXf;",
    "~$+~8+",
    "y1*t\n",
    "y2*t\n",
    "F1<at\r<At\t",
    "F1<gt",
    "v(PQ",
    "F1<gt",
    "N @@",
    "QQVW",
    "jgYjG",
    "F2f;",
    "v(PQ",
    "F2jgYf;",
    "jGYf;",
    "N @@",
    "jsXf",
    "F8SP",
    "9F(~",
    "W49u",
    "BBF;u",
    "u&9E",
    "C;^8u",
    "QQSV",
    "G;~8u",
    "QQVW",
    "t\rf;1u",
    "SVWf9",
    "_^[]",
    "t&:a",
    "j X+",
    "j X+",
    "t\rf9:t",
    "f9:t",
    "t\rf9:t",
    "f9:t",
    "f9:t",
    ",0<\tw",
    "u=j\n_",
    "j0Xj",
    "j:Xf;",
    "u0jAXf;",
    "jZXf;",
    "j0Xf;",
    "j:Xf;",
    "u0jAXf;",
    "jZXf;",
    "t1;E",
    "j\nQQ",
    "PPPPP",
    "f9\nu",
    "99t\t",
    "wOtD",
    "j Y+",
    "=$!F",
    "j Y+",
    "\r !F",
    "h@\"F",
    "hL\"F",
    "t#Vh",
    "j Y+",
    "PWWS",
    "A98u",
    ">\"u\r",
    ">\"u1",
    "< t1<\tt-",
    "=0\"F",
    "QQSVW",
    "PPPPP",
    "Y_^]",
    "5<\"F",
    "58\"F",
    "j Y+",
    "j Y;E",
    "j Y+",
    "j _;",
    "j Y+",
    "h@\"F",
    "j Y+",
    "h@\"F",
    "$L\"F",
    "hpeC",
    "hpeC",
    "35\\\"F",
    "t <\"u",
    "PPPPP",
    "35p\"F",
    "PPPPP",
    "j\rX]",
    "~';_",
    "GWVj\t",
    "QVWSj",
    "FLY;",
    "uIhd",
    "uQhd",
    "_^[]",
    "0SVW",
    "u$SW",
    "8] j0",
    "j0Yf",
    "v6j0",
    "Wj0XPV",
    "jdSQ",
    "j\nSQ",
    "Fj0X",
    "80t/",
    "-jd_;",
    "j\n_;",
    "PPPPP",
    "Wj0V",
    "_^[t\n",
    "QWPV",
    " _^[",
    "PPPPP",
    "QQVW",
    "u,t6",
    "$[_^",
    "=x\"F",
    "5t\"F",
    "=x\"F",
    "5x\"F",
    "%x\"F",
    "9\r|\"F",
    "SVW3",
    "9E(j",
    "PPPPPWS",
    "QQQP",
    "PP9E u:PPVWP",
    "_^[]",
    "Wu\rVVS",
    "^[_]",
    "Vh@yC",
    "h8yC",
    "h@yC",
    "VhTyC",
    "hLyC",
    "hTyC",
    "VhdyC",
    "h\\yC",
    "hdyC",
    "VhxyC",
    "hpyC",
    "hxyC",
    "PPPPP",
    "PPPPP",
    "WWWPWS",
    "u-PWWS",
    "PQhh",
    "PQhp",
    "_^[]",
    "IH;A",
    "SSVWh ",
    "9wLt",
    "X_^]",
    "f9:t!V",
    "f9:u",
    "QSVW",
    "YWWW",
    "SVWW",
    "WSVPP",
    "j,hh",
    "j Y+",
    "QQSWj0j@",
    "Y_[^]",
    "xg;5",
    "_^[]",
    "x';\r",
    "_^[]",
    "9E WW",
    "t4SWV",
    "Y_^[",
    "YY^]",
    "j@%@",
    "?5|\r",
    "u\n_3",
    "wIPS3",
    "j Y+",
    "j X+",
    "jrY;",
    "j Y+",
    "j X+",
    "jrY;",
    "j X+",
    "j X+",
    "jrY;",
    "stW;",
    "stW;",
    "YYj\nZ;",
    "_^[t\r",
    "PPPPP",
    ";5t\"F",
    "~0WPQ",
    "5x\"F",
    "x$;\r",
    "SVW3",
    "r\rf;",
    "u\r9M",
    "PPPPPPPP",
    "<$tL",
    "|%=2",
    "Ht$;}",
    "\nu,j\rXj",
    "j\r[S",
    "C<\nu",
    "j\rZf",
    "\nu\tj\rZf",
    "SShU\r",
    "(@t\t",
    "x7;5",
    "x7;5",
    " SVW3",
    " SVW3",
    "QQSV",
    "_^[]",
    "Y_^[",
    "Y_^[",
    "v\tN+D$",
    "WVU3",
    "v\tN+D$",
    "Maximum allowed array size (%u) is exceeded",
    "hc%u",
    "xc%u",
    "SeSecurityPrivilege",
    "SeRestorePrivilege",
    "SeCreateSymbolicLinkPrivilege",
    "\\??\\",
    "UNC\\",
    "rtmp%d",
    "ROOT\\CIMV2",
    "SELECT * FROM Win32_OperatingSystem",
    "LName",
    "Windows 10",
    ".rar",
    ".exe",
    ".sfx",
    "?*<>|\"",
    "%c:\\",
    "\\\\?\\",
    "COM#",
    "LPT#",
    "*messages***",
    "*messages***",
    "STRINGS",
    "DIALOG",
    "MENU",
    "DIRECTION",
    "$%s:",
    "@%s:",
    "s$%s:%s",
    "$%s:",
    "CAPTION",
    "SIZE",
    "Crypt32.dll",
    "CryptProtectMemory",
    "CryptUnprotectMemory",
    "CryptProtectMemory failed",
    "CryptUnprotectMemory failed",
    "vRQ>",
    "\r8STs\ne",
    "\njv.",
    "LwH'",
    "xlistpos",
    "kernel32",
    "SetDllDirectoryW",
    "SetDefaultDllDirectories",
    "version.dll",
    "DXGIDebug.dll",
    "sfc_os.dll",
    "SSPICLI.DLL",
    "rsaenh.dll",
    "UXTheme.dll",
    "dwmapi.dll",
    "cryptbase.dll",
    "lpk.dll",
    "usp10.dll",
    "clbcatq.dll",
    "comres.dll",
    "ws2_32.dll",
    "ws2help.dll",
    "psapi.dll",
    "ieframe.dll",
    "ntshrui.dll",
    "atl.dll",
    "setupapi.dll",
    "apphelp.dll",
    "userenv.dll",
    "netapi32.dll",
    "shdocvw.dll",
    "crypt32.dll",
    "msasn1.dll",
    "cryptui.dll",
    "wintrust.dll",
    "shell32.dll",
    "secur32.dll",
    "cabinet.dll",
    "oleaccrc.dll",
    "ntmarta.dll",
    "profapi.dll",
    "WindowsCodecs.dll",
    "srvcli.dll",
    "cscapi.dll",
    "slc.dll",
    "imageres.dll",
    "dnsapi.DLL",
    "iphlpapi.DLL",
    "WINNSI.DLL",
    "netutils.dll",
    "mpr.dll",
    "devrtl.dll",
    "propsys.dll",
    "mlang.dll",
    "samcli.dll",
    "samlib.dll",
    "wkscli.dll",
    "dfscli.dll",
    "browcli.dll",
    "rasadhlp.dll",
    "dhcpcsvc6.dll",
    "dhcpcsvc.dll",
    "XmlLite.dll",
    "linkinfo.dll",
    "cryptsp.dll",
    "RpcRtRemote.dll",
    "aclui.dll",
    "dsrole.dll",
    "peerdist.dll",
    "uxtheme.dll",
    "Please remove %s from %s folder. It is unsecure to run %s until it is done.",
    "CreateThread failed",
    "\nWaitForMultipleObjects error %d, GetLastError %d",
    "\nThread pool initialization failed.",
    "%s: %s",
    "Unknown exception",
    "bad allocation",
    "Z2fQ`",
    "ARarHtmlClassName",
    "Shell.Explorer",
    "about:blank",
    "<html>",
    "<head><meta http-equiv=\"content-type\" content=\"text/html; charset=",
    "utf-8\"></head>",
    "</html>",
    "</p>",
    "<br>",
    "<style>",
    "</style>",
    "<style>body{font-family:\"Arial\";font-size:12;}</style>",
    "&nbsp;",
    "AEDIT",
    "riched20.dll",
    "s:IDS_BROWSETITLE",
    "s:IDS_CMDEXTRACTING",
    "s:IDS_SKIPPING",
    "s:IDS_UNEXPEOF",
    "s:IDS_FILEHEADERBROKEN",
    "s:IDS_HEADERBROKEN",
    "s:IDS_MAINHEADERBROKEN",
    "s:IDS_CMTHEADERBROKEN",
    "s:IDS_CMTBROKEN",
    "s:IDS_OUTOFMEMORYERROR",
    "s:IDS_UNKNOWNMETHOD",
    "s:IDS_CANNOTOPEN",
    "s:IDS_CANNOTCREATE",
    "s:IDS_CANNOTMKDIR",
    "s:IDS_ENCRCRCFAILED",
    "s:IDS_EXTRCRCFAILED",
    "s:IDS_PACKEDDATACRCFAILED",
    "s:IDS_WRITEERROR",
    "s:IDS_READERROR",
    "s:IDS_CLOSEERROR",
    "s:IDS_CANNOTFINDVOL",
    "s:IDS_BADARCHIVE",
    "s:IDS_EXTRACTING",
    "s:IDS_ASKNEXTVOLTITLE",
    "s:IDS_ARCHEADERBROKEN",
    "s:IDS_DONE",
    "s:IDS_ERROR",
    "s:IDS_ERRORS",
    "s:IDS_BYTES",
    "s:IDS_MODIFIEDON",
    "s:IDS_BADFOLDER",
    "s:IDS_CREATEERRORS",
    "s:IDS_RESTARTHINT",
    "s:IDS_CRCERRORS",
    "s:IDS_ALLFILES",
    "s:IDS_TITLE1",
    "s:IDS_TITLE1A",
    "s:IDS_TITLE2",
    "s:IDS_TITLE3",
    "s:IDS_TITLE4",
    "s:IDS_TITLE5",
    "s:IDS_TITLE6",
    "s:IDS_ARCBROKEN",
    "s:IDS_EXTRFILESTO",
    "s:IDS_EXTRFILESTOTEMP",
    "s:IDS_EXTRACTBUTTON",
    "s:IDS_EXTRACTPROGRESS",
    "s:IDS_MAXPATHLIMIT",
    "s:IDS_UNKENCMETHOD",
    "s:IDS_WRONGPASSWORD",
    "s:IDS_WRONGFILEPASSWORD",
    "s:IDS_COPYERROR",
    "s:IDS_CANNOTCREATELNKS",
    "s:IDS_CANNOTCREATELNKH",
    "s:IDS_ERRLNKTARGET",
    "s:IDS_NEEDADMIN",
    "s:IDS_PAUSE",
    "s:IDS_CONTINUE",
    "s:IDS_SECWARNING",
    "s:IDS_SECDELDLL",
    "$STARTDLG:SIZE",
    "$STARTDLG:CAPTION",
    "$STARTDLG:IDC_DESTEDITTITLE",
    "$STARTDLG:IDC_CHANGEDIR",
    "$STARTDLG:IDC_PROGRESSBARTITLE",
    "$STARTDLG:IDOK",
    "$STARTDLG:IDCANCEL",
    "$REPLACEFILEDLG:SIZE",
    "$REPLACEFILEDLG:CAPTION",
    "$REPLACEFILEDLG:IDC_OWRFILEEXISTS",
    "$REPLACEFILEDLG:IDC_OWRASKREPLACE",
    "$REPLACEFILEDLG:IDC_OWRQUESTION",
    "$REPLACEFILEDLG:IDC_OWRYES",
    "$REPLACEFILEDLG:IDC_OWRALL",
    "$REPLACEFILEDLG:IDC_OWRRENAME",
    "$REPLACEFILEDLG:IDC_OWRNO",
    "$REPLACEFILEDLG:IDC_OWRNOALL",
    "$REPLACEFILEDLG:IDC_OWRCANCEL",
    "$RENAMEDLG:SIZE",
    "$RENAMEDLG:CAPTION",
    "$RENAMEDLG:IDOK",
    "$RENAMEDLG:IDCANCEL",
    "$RENAMEDLG:IDC_RENAMEFROM",
    "$RENAMEDLG:IDC_RENAMETO",
    "$GETPASSWORD1:SIZE",
    "$GETPASSWORD1:CAPTION",
    "$GETPASSWORD1:IDC_PASSWORDENTER",
    "$GETPASSWORD1:IDOK",
    "$GETPASSWORD1:IDCANCEL",
    "$LICENSEDLG:SIZE",
    "$LICENSEDLG:CAPTION",
    "$LICENSEDLG:IDOK",
    "$LICENSEDLG:IDCANCEL",
    "$ASKNEXTVOL:SIZE",
    "$ASKNEXTVOL:CAPTION",
    "$ASKNEXTVOL:IDC_NEXTVOLINFO1",
    "$ASKNEXTVOL:IDC_NEXTVOLFIND",
    "$ASKNEXTVOL:IDC_NEXTVOLINFO2",
    "$ASKNEXTVOL:IDOK",
    "$ASKNEXTVOL:IDCANCEL",
    "RarSFX",
    "STATIC",
    "REPLACEFILEDLG",
    "RENAMEDLG",
    "%s %s %s",
    "%s %s",
    "GETPASSWORD1",
    "ASKNEXTVOL",
    "winrarsfxmappingfile.tmp",
    "sfxname",
    "%4d-%02d-%02d-%02d-%02d-%02d-%03d",
    "sfxstime",
    "STARTDLG",
    "sfxcmd",
    "sfxpar",
    "LICENSEDLG",
    "__tmp_rar_sfx_access_check_%u",
    "-el -s2 \"-d%s\" \"-sp%s\"",
    "runas",
    "\"%s\"\n%s",
    "Delete",
    "Text",
    "Title",
    "Path",
    "Silent",
    "Overwrite",
    "Setup",
    "TempMode",
    "License",
    "Presetup",
    "Shortcut",
    "SavePath",
    "Update",
    "SetupCode",
    "%s.%d.tmp",
    "Software\\Microsoft\\Windows\\CurrentVersion",
    "ProgramFilesDir",
    "HIDE",
    "%s%s%u",
    ".lnk",
    ".inf",
    "Install",
    "Software\\WinRAR SFX",
    "USER32.dll",
    "GDI32.dll",
    "COMDLG32.dll",
    "ADVAPI32.dll",
    "SHELL32.dll",
    "ole32.dll",
    "KERNEL32.DLL",
    "AcquireSRWLockExclusive",
    "ReleaseSRWLockExclusive",
    "SHLWAPI.dll",
    "COMCTL32.dll",
    "bad array new length",
    "<5IkQ",
    "s1q4",
    "<5IkQ",
    "<5IkQ",
    "bad exception",
    "__based(",
    "__cdecl",
    "__pascal",
    "__stdcall",
    "__thiscall",
    "__fastcall",
    "__vectorcall",
    "__clrcall",
    "__eabi",
    "__swift_1",
    "__swift_2",
    "__swift_3",
    "__ptr64",
    "__restrict",
    "__unaligned",
    "restrict(",
    " new",
    " delete",
    "operator",
    "`vftable'",
    "`vbtable'",
    "`vcall'",
    "`typeof'",
    "`local static guard'",
    "`string'",
    "`vbase destructor'",
    "`vector deleting destructor'",
    "`default constructor closure'",
    "`scalar deleting destructor'",
    "`vector constructor iterator'",
    "`vector destructor iterator'",
    "`vector vbase constructor iterator'",
    "`virtual displacement map'",
    "`eh vector constructor iterator'",
    "`eh vector destructor iterator'",
    "`eh vector vbase constructor iterator'",
    "`copy constructor closure'",
    "`udt returning'",
    "`RTTI",
    "`local vftable'",
    "`local vftable constructor closure'",
    " new[]",
    " delete[]",
    "`omni callsig'",
    "`placement delete closure'",
    "`placement delete[] closure'",
    "`managed vector constructor iterator'",
    "`managed vector destructor iterator'",
    "`eh vector copy constructor iterator'",
    "`eh vector vbase copy constructor iterator'",
    "`dynamic initializer for '",
    "`dynamic atexit destructor for '",
    "`vector copy constructor iterator'",
    "`vector vbase copy constructor iterator'",
    "`managed vector copy constructor iterator'",
    "`local static thread guard'",
    "operator \"\" ",
    "operator co_await",
    "operator<=>",
    " Type Descriptor'",
    " Base Class Descriptor at (",
    " Base Class Array'",
    " Class Hierarchy Descriptor'",
    " Complete Object Locator'",
    "`anonymous namespace'",
    "C<pi-ms-win-core-fibers-l1-1-1",
    "<pi-ms-win-core-synch-l1-2-0",
    "api-ms-",
    "FlsAlloc",
    "FlsFree",
    "FlsGetValue",
    "FlsSetValue",
    "InitializeCriticalSectionEx",
    "( 8PX",
    "700WP",
    "`h````",
    "xpxxxx",
    "(null)",
    "(null)",
    "mscoree.dll",
    "CorExitProcess",
    "R\rS\rW",
    "l\rm p",
    "NAN(SNAN)",
    "nan(snan)",
    "NAN(IND)",
    "nan(ind)",
    "e+000",
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
    "January",
    "February",
    "March",
    "April",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
    "MM/dd/yy",
    "dddd, MMMM dd, yyyy",
    "HH:mm:ss",
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
    "January",
    "February",
    "March",
    "April",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
    "MM/dd/yy",
    "dddd, MMMM dd, yyyy",
    "HH:mm:ss",
    "en-US",
    "         (((((                  H",
    "      (                          ",
    "         (((((                  H",
    " !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~",
    " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~",
    "Capi-ms-win-appmodel-runtime-l1-1-1",
    "<pi-ms-win-core-datetime-l1-1-1",
    "<pi-ms-win-core-fibers-l1-1-1",
    "<pi-ms-win-core-file-l2-1-1",
    "<pi-ms-win-core-localization-l1-2-1",
    "<pi-ms-win-core-localization-obsolete-l1-2-0",
    "<pi-ms-win-core-processthreads-l1-1-2",
    "<pi-ms-win-core-string-l1-1-0",
    "<pi-ms-win-core-synch-l1-2-0",
    "<pi-ms-win-core-sysinfo-l1-2-1",
    "<pi-ms-win-core-winrt-l1-1-0",
    "<pi-ms-win-core-xstate-l2-1-0",
    "api-ms-win-rtcore-ntuser-window-l1-1-0",
    "api-ms-win-security-systemfunctions-l1-1-0",
    "ext-ms-win-kernel32-package-current-l1-1-0",
    "ext-ms-win-ntuser-dialogbox-l1-1-0",
    "ext-ms-win-ntuser-windowstation-l1-1-0",
    "advapi32",
    "kernel32",
    "user32",
    "FlsAlloc",
    "FlsFree",
    "FlsGetValue",
    "FlsSetValue",
    "GetCurrentPackageId",
    "InitializeCriticalSectionEx",
    "LCMapStringEx",
    "LocaleNameToLCID",
    "Cja-JP",
    "zh-CN",
    "ko-KR",
    "zh-TW",
    "d8L2",
    "[aOni*{",
    "@2&@",
    "\"RP(",
    "eLK(w",
    "m\nXo",
    "FEMh",
    "h0'D",
    "owM&",
    "~ $s%r",
    "@b;zO]",
    "$qE}",
    ";*xh",
    "[\"93",
    "iu+-,",
    "\\lo}",
    "obwQ4",
    "&Sgw",
    "R\tE]",
    "?nz(",
    "=87M",
    "v2!L.2",
    "\tcQr",
    "X/4B",
    "k=yI",
    "^<V7w",
    "W&|.",
    "1#INF",
    "1#QNAN",
    "1#SNAN",
    "1#IND",
    "zh-CHS",
    "ar-SA",
    "bg-BG",
    "ca-ES",
    "cs-CZ",
    "da-DK",
    "de-DE",
    "el-GR",
    "fi-FI",
    "fr-FR",
    "he-IL",
    "hu-HU",
    "is-IS",
    "it-IT",
    "nl-NL",
    "nb-NO",
    "pl-PL",
    "pt-BR",
    "ro-RO",
    "ru-RU",
    "hr-HR",
    "sk-SK",
    "sq-AL",
    "sv-SE",
    "th-TH",
    "tr-TR",
    "ur-PK",
    "id-ID",
    "uk-UA",
    "be-BY",
    "sl-SI",
    "et-EE",
    "lv-LV",
    "lt-LT",
    "fa-IR",
    "vi-VN",
    "hy-AM",
    "az-AZ-Latn",
    "eu-ES",
    "mk-MK",
    "tn-ZA",
    "xh-ZA",
    "zu-ZA",
    "af-ZA",
    "ka-GE",
    "fo-FO",
    "hi-IN",
    "mt-MT",
    "se-NO",
    "ms-MY",
    "kk-KZ",
    "ky-KG",
    "sw-KE",
    "uz-UZ-Latn",
    "tt-RU",
    "bn-IN",
    "pa-IN",
    "gu-IN",
    "ta-IN",
    "te-IN",
    "kn-IN",
    "ml-IN",
    "mr-IN",
    "sa-IN",
    "mn-MN",
    "cy-GB",
    "gl-ES",
    "kok-IN",
    "syr-SY",
    "div-MV",
    "quz-BO",
    "ns-ZA",
    "mi-NZ",
    "ar-IQ",
    "de-CH",
    "en-GB",
    "es-MX",
    "fr-BE",
    "it-CH",
    "nl-BE",
    "nn-NO",
    "pt-PT",
    "sr-SP-Latn",
    "sv-FI",
    "az-AZ-Cyrl",
    "se-SE",
    "ms-BN",
    "uz-UZ-Cyrl",
    "quz-EC",
    "ar-EG",
    "zh-HK",
    "de-AT",
    "en-AU",
    "es-ES",
    "fr-CA",
    "sr-SP-Cyrl",
    "se-FI",
    "quz-PE",
    "ar-LY",
    "zh-SG",
    "de-LU",
    "en-CA",
    "es-GT",
    "fr-CH",
    "hr-BA",
    "smj-NO",
    "ar-DZ",
    "zh-MO",
    "de-LI",
    "en-NZ",
    "es-CR",
    "fr-LU",
    "bs-BA-Latn",
    "smj-SE",
    "ar-MA",
    "en-IE",
    "es-PA",
    "fr-MC",
    "sr-BA-Latn",
    "sma-NO",
    "ar-TN",
    "en-ZA",
    "es-DO",
    "sr-BA-Cyrl",
    "sma-SE",
    "ar-OM",
    "en-JM",
    "es-VE",
    "sms-FI",
    "ar-YE",
    "en-CB",
    "es-CO",
    "smn-FI",
    "ar-SY",
    "en-BZ",
    "es-PE",
    "ar-JO",
    "en-TT",
    "es-AR",
    "ar-LB",
    "en-ZW",
    "es-EC",
    "ar-KW",
    "en-PH",
    "es-CL",
    "ar-AE",
    "es-UY",
    "ar-BH",
    "es-PY",
    "ar-QA",
    "es-BO",
    "es-SV",
    "es-HN",
    "es-NI",
    "es-PR",
    "zh-CHT",
    "af-za",
    "ar-ae",
    "ar-bh",
    "ar-dz",
    "ar-eg",
    "ar-iq",
    "ar-jo",
    "ar-kw",
    "ar-lb",
    "ar-ly",
    "ar-ma",
    "ar-om",
    "ar-qa",
    "ar-sa",
    "ar-sy",
    "ar-tn",
    "ar-ye",
    "az-az-cyrl",
    "az-az-latn",
    "be-by",
    "bg-bg",
    "bn-in",
    "bs-ba-latn",
    "ca-es",
    "cs-cz",
    "cy-gb",
    "da-dk",
    "de-at",
    "de-ch",
    "de-de",
    "de-li",
    "de-lu",
    "div-mv",
    "el-gr",
    "en-au",
    "en-bz",
    "en-ca",
    "en-cb",
    "en-gb",
    "en-ie",
    "en-jm",
    "en-nz",
    "en-ph",
    "en-tt",
    "en-us",
    "en-za",
    "en-zw",
    "es-ar",
    "es-bo",
    "es-cl",
    "es-co",
    "es-cr",
    "es-do",
    "es-ec",
    "es-es",
    "es-gt",
    "es-hn",
    "es-mx",
    "es-ni",
    "es-pa",
    "es-pe",
    "es-pr",
    "es-py",
    "es-sv",
    "es-uy",
    "es-ve",
    "et-ee",
    "eu-es",
    "fa-ir",
    "fi-fi",
    "fo-fo",
    "fr-be",
    "fr-ca",
    "fr-ch",
    "fr-fr",
    "fr-lu",
    "fr-mc",
    "gl-es",
    "gu-in",
    "he-il",
    "hi-in",
    "hr-ba",
    "hr-hr",
    "hu-hu",
    "hy-am",
    "id-id",
    "is-is",
    "it-ch",
    "it-it",
    "ja-jp",
    "ka-ge",
    "kk-kz",
    "kn-in",
    "kok-in",
    "ko-kr",
    "ky-kg",
    "lt-lt",
    "lv-lv",
    "mi-nz",
    "mk-mk",
    "ml-in",
    "mn-mn",
    "mr-in",
    "ms-bn",
    "ms-my",
    "mt-mt",
    "nb-no",
    "nl-be",
    "nl-nl",
    "nn-no",
    "ns-za",
    "pa-in",
    "pl-pl",
    "pt-br",
    "pt-pt",
    "quz-bo",
    "quz-ec",
    "quz-pe",
    "ro-ro",
    "ru-ru",
    "sa-in",
    "se-fi",
    "se-no",
    "se-se",
    "sk-sk",
    "sl-si",
    "sma-no",
    "sma-se",
    "smj-no",
    "smj-se",
    "smn-fi",
    "sms-fi",
    "sq-al",
    "sr-ba-cyrl",
    "sr-ba-latn",
    "sr-sp-cyrl",
    "sr-sp-latn",
    "sv-fi",
    "sv-se",
    "sw-ke",
    "syr-sy",
    "ta-in",
    "te-in",
    "th-th",
    "tn-za",
    "tr-tr",
    "tt-ru",
    "uk-ua",
    "ur-pk",
    "uz-uz-cyrl",
    "uz-uz-latn",
    "vi-vn",
    "xh-za",
    "zh-chs",
    "zh-cht",
    "zh-cn",
    "zh-hk",
    "zh-mo",
    "zh-sg",
    "zh-tw",
    "zu-za",
    "log10",
    "lzZ?",
    "log10",
    "asin",
    "acos",
    "sqrt",
    "\tk8=",
    "?5Wg4p",
    "Nv$^",
    "w(@\t",
    "BC .=",
    "(lX ",
    "#{ =",
    "`~R=",
    "}s\"=",
    "\tE[\n",
    "%S#[k",
    "\"B <1=",
    "\\-!y",
    "#.X'=",
    "i9+=",
    "?tanh",
    "atan",
    "atan2",
    "ceil",
    "floor",
    "fabs",
    "modf",
    "ldexp",
    "_cabs",
    "_hypot",
    "fmod",
    "frexp",
    "_logb",
    "_nextafter",
    "sinh",
    "cosh",
    "CONOUT$",
    "RSDS",
    "D:\\Projects\\WinRAR\\sfx\\build\\sfxrar32\\Release\\sfxrar.pdb",
    ".text$di",
    ".text$mn",
    ".text$x",
    ".text$yd",
    ".idata$5",
    ".00cfg",
    ".CRT$XCA",
    ".CRT$XCAA",
    ".CRT$XCU",
    ".CRT$XCZ",
    ".CRT$XIA",
    ".CRT$XIAA",
    ".CRT$XIAC",
    ".CRT$XIC",
    ".CRT$XIZ",
    ".CRT$XPA",
    ".CRT$XPX",
    ".CRT$XPXA",
    ".CRT$XPZ",
    ".CRT$XTA",
    ".CRT$XTZ",
    ".gfids",
    ".rdata",
    ".rdata$r",
    ".rdata$sxdata",
    ".rdata$voltmd",
    ".rdata$zzzdbg",
    ".rtc$IAA",
    ".rtc$IZZ",
    ".rtc$TAA",
    ".rtc$TZZ",
    ".xdata$x",
    ".didat$2",
    ".didat$3",
    ".didat$4",
    ".didat$6",
    ".didat$7",
    ".edata",
    ".idata$2",
    ".idata$3",
    ".idata$4",
    ".idata$6",
    ".data",
    ".data$r",
    ".data$rs",
    ".bss",
    ".didat$5",
    ".rsrc$01",
    ".rsrc$02",
    "ShowWindow",
    "GetDlgItem",
    "EnableWindow",
    "SetWindowTextW",
    "GetParent",
    "SetWindowPos",
    "SetDlgItemTextW",
    "GetSystemMetrics",
    "GetClientRect",
    "GetWindowRect",
    "GetWindowLongW",
    "SetWindowLongW",
    "SetProcessDefaultLayout",
    "GetWindow",
    "LoadStringW",
    "OemToCharBuffA",
    "CharUpperW",
    "DefWindowProcW",
    "RegisterClassExW",
    "CreateWindowExW",
    "IsWindow",
    "DestroyWindow",
    "UpdateWindow",
    "MapWindowPoints",
    "CopyRect",
    "LoadCursorW",
    "SendMessageW",
    "GetDC",
    "ReleaseDC",
    "MessageBoxW",
    "FindWindowExW",
    "GetClassNameW",
    "CopyImage",
    "wvsprintfW",
    "GetMessageW",
    "TranslateMessage",
    "DispatchMessageW",
    "PeekMessageW",
    "PostMessageW",
    "WaitForInputIdle",
    "IsWindowVisible",
    "DialogBoxParamW",
    "EndDialog",
    "GetDlgItemTextW",
    "SendDlgItemMessageW",
    "SetFocus",
    "SetForegroundWindow",
    "GetSysColor",
    "LoadBitmapW",
    "LoadIconW",
    "DestroyIcon",
    "IsDialogMessageW",
    "CreateCompatibleBitmap",
    "CreateCompatibleDC",
    "DeleteDC",
    "DeleteObject",
    "GetDeviceCaps",
    "SelectObject",
    "StretchBlt",
    "CreateDIBSection",
    "GetObjectW",
    "GetOpenFileNameW",
    "GetSaveFileNameW",
    "CommDlgExtendedError",
    "OpenProcessToken",
    "AdjustTokenPrivileges",
    "SetFileSecurityW",
    "LookupPrivilegeValueW",
    "AllocateAndInitializeSid",
    "FreeSid",
    "CheckTokenMembership",
    "RegCloseKey",
    "RegCreateKeyExW",
    "RegOpenKeyExW",
    "RegQueryValueExW",
    "RegSetValueExW",
    "SHGetMalloc",
    "SHGetPathFromIDListW",
    "SHBrowseForFolderW",
    "SHFileOperationW",
    "ShellExecuteExW",
    "SHGetFileInfoW",
    "SHGetFolderLocation",
    "SHChangeNotify",
    "CoSetProxyBlanket",
    "CoCreateInstance",
    "CreateStreamOnHGlobal",
    "CLSIDFromString",
    "OleInitialize",
    "OleUninitialize",
    "SHAutoComplete",
    "InitCommonControlsEx",
    "sfxrar.exe",
    "GetLastError",
    "SetLastError",
    "FormatMessageW",
    "GetCurrentProcess",
    "DeviceIoControl",
    "SetFileTime",
    "CloseHandle",
    "CreateDirectoryW",
    "RemoveDirectoryW",
    "CreateFileW",
    "DeleteFileW",
    "CreateHardLinkW",
    "GetShortPathNameW",
    "GetLongPathNameW",
    "MoveFileW",
    "GetFileType",
    "GetStdHandle",
    "WriteFile",
    "ReadFile",
    "FlushFileBuffers",
    "SetEndOfFile",
    "SetFilePointer",
    "SetFileAttributesW",
    "GetFileAttributesW",
    "FindClose",
    "FindFirstFileW",
    "FindNextFileW",
    "InterlockedDecrement",
    "GetVersionExW",
    "GetCurrentDirectoryW",
    "GetFullPathNameW",
    "FoldStringW",
    "GetModuleFileNameW",
    "GetModuleHandleW",
    "FindResourceW",
    "FreeLibrary",
    "GetProcAddress",
    "GetCurrentProcessId",
    "ExitProcess",
    "SetThreadExecutionState",
    "Sleep",
    "LoadLibraryW",
    "GetSystemDirectoryW",
    "CompareStringW",
    "AllocConsole",
    "FreeConsole",
    "AttachConsole",
    "WriteConsoleW",
    "GetProcessAffinityMask",
    "CreateThread",
    "SetThreadPriority",
    "InitializeCriticalSection",
    "EnterCriticalSection",
    "LeaveCriticalSection",
    "DeleteCriticalSection",
    "SetEvent",
    "ResetEvent",
    "ReleaseSemaphore",
    "WaitForSingleObject",
    "CreateEventW",
    "CreateSemaphoreW",
    "GetSystemTime",
    "SystemTimeToTzSpecificLocalTime",
    "TzSpecificLocalTimeToSystemTime",
    "SystemTimeToFileTime",
    "FileTimeToLocalFileTime",
    "LocalFileTimeToFileTime",
    "FileTimeToSystemTime",
    "GetCPInfo",
    "IsDBCSLeadByte",
    "MultiByteToWideChar",
    "WideCharToMultiByte",
    "GlobalAlloc",
    "LockResource",
    "GlobalLock",
    "GlobalUnlock",
    "GlobalFree",
    "LoadResource",
    "SizeofResource",
    "SetCurrentDirectoryW",
    "GetExitCodeProcess",
    "GetLocalTime",
    "GetTickCount",
    "MapViewOfFile",
    "UnmapViewOfFile",
    "CreateFileMappingW",
    "OpenFileMappingW",
    "GetCommandLineW",
    "SetEnvironmentVariableW",
    "ExpandEnvironmentStringsW",
    "GetTempPathW",
    "MoveFileExW",
    "GetLocaleInfoW",
    "GetTimeFormatW",
    "GetDateFormatW",
    "GetNumberFormatW",
    "KERNEL32.dll",
    "OLEAUT32.dll",
    "GdipAlloc",
    "GdipFree",
    "GdipCloneImage",
    "GdipDisposeImage",
    "GdipCreateBitmapFromStream",
    "GdipCreateBitmapFromStreamICM",
    "GdipCreateHBITMAPFromBitmap",
    "GdiplusStartup",
    "GdiplusShutdown",
    "gdiplus.dll",
    "RaiseException",
    "GetSystemInfo",
    "VirtualProtect",
    "VirtualQuery",
    "LoadLibraryExA",
    "IsProcessorFeaturePresent",
    "IsDebuggerPresent",
    "UnhandledExceptionFilter",
    "SetUnhandledExceptionFilter",
    "GetStartupInfoW",
    "QueryPerformanceCounter",
    "GetCurrentThreadId",
    "GetSystemTimeAsFileTime",
    "InitializeSListHead",
    "TerminateProcess",
    "LocalFree",
    "RtlUnwind",
    "EncodePointer",
    "InitializeCriticalSectionAndSpinCount",
    "TlsAlloc",
    "TlsGetValue",
    "TlsSetValue",
    "TlsFree",
    "LoadLibraryExW",
    "QueryPerformanceFrequency",
    "GetModuleHandleExW",
    "GetModuleFileNameA",
    "GetACP",
    "HeapFree",
    "HeapAlloc",
    "HeapReAlloc",
    "GetStringTypeW",
    "LCMapStringW",
    "FindFirstFileExA",
    "FindNextFileA",
    "IsValidCodePage",
    "GetOEMCP",
    "GetCommandLineA",
    "GetEnvironmentStringsW",
    "FreeEnvironmentStringsW",
    "GetProcessHeap",
    "SetStdHandle",
    "HeapSize",
    "GetConsoleCP",
    "GetConsoleMode",
    "SetFilePointerEx",
    "DecodePointer",
    "c|w{",
    "9JLX",
    "~=d]",
    "2:\nI",
    " (08@P`p",
    "1dbXi",
    "/{Ody",
    "/Cez",
    "\r6p{",
    "\ro(ue",
    "                          ",
    "abcdefghijklmnopqrstuvwxyz",
    "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
    "                          ",
    "abcdefghijklmnopqrstuvwxyz",
    "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
    ".?AW4RAR_EXIT@@",
    ".?AVbad_alloc@std@@",
    ".?AVexception@std@@",
    ".?AVbad_array_new_length@std@@",
    ".?AV_com_error@@",
    ".?AVbad_exception@std@@",
    ".?AVtype_info@@",
    "PNG\nASKNEXTVOL",
    "GETPASSWORD1\nLICENSEDLG\tRENAMEDLG",
    "REPLACEFILEDLG",
    "STARTDLG",
    "PNG\r\n",
    "\rIHDR",
    "gAMA",
    " cHRM",
    "\tpHYs",
    "tIME",
    "bKGD",
    "IDATx",
    "vuOuefweV$y",
    "/\"3\tn",
    "d{a?b\\l",
    "GtzV",
    "_8~i",
    "w9~a\\",
    "_8~a~",
    "c_qQ_}",
    "c~QL",
    "jZ0.",
    "SL}\\&",
    "ez`G",
    ".UQr",
    "`[]_",
    "%XWr",
    "|/c\\",
    "=;zm2",
    "0m*T",
    "VKSY0",
    "KsU5",
    "',C3",
    "$n\n)",
    "%n*\nxaj",
    "-L+2",
    "'_c?!k",
    "E4J,",
    "`emJ",
    "R9wS",
    "T^*[",
    "\\,l4",
    "\tm,tN",
    "!kZM",
    "~.jA",
    "R_xS",
    "r[T%e\t",
    "IEND",
    "PNG\r\n",
    "\rIHDR",
    "gAMA",
    " cHRM",
    "\tpHYs",
    "bKGD",
    "\rIDATx",
    "qRQl",
    "C@p!",
    "Bp!b",
    "C@p!",
    "Bp!b",
    "``u#",
    "?1s^R",
    "\\f\nz",
    "SPPI",
    "\\\n\ty",
    ".j\\d",
    "e.3E",
    "\\>.{|",
    "-[jE>y,",
    "-\\<1",
    "pIZQ",
    "xT28FX",
    "\"e.w",
    ":%=U.",
    "1jpQ",
    "1vpQM",
    ")1|pQ",
    "2Qd(",
    "%H#\\",
    "@\rr=",
    "bX(\\",
    "*[`|",
    ",.R.",
    "%H}lx",
    "E=9q",
    "%@lx",
    "2+pQm",
    "401pQm",
    "o1CpQm0",
    "E99Bb",
    " 9Bb",
    "!1Ip\tP'w",
    "yCoc",
    "6_La",
    "\\N/X",
    "v.09",
    "3z.g-]`",
    "Y`tp",
    "I\r1y",
    ",\\`2E&X",
    "-Sm\n",
    "-Q\r\n",
    "E:3g",
    "om\\^\\p",
    ".,0z",
    "v.//",
    "\\T;+",
    "6/2.",
    "^^(k",
    "/0?'",
    "w7X`",
    "$5eX`",
    "=#F.0",
    "bhmc",
    ";Kp1",
    "&F^l",
    "\tc61",
    "SYc61r",
    "NM:u",
    "f,0r,",
    "6yvg",
    ".Vt8g",
    "XS[F",
    "u_Agr,",
    ".vuL",
    "|fJL",
    "Gyk-7",
    ".1HN",
    "6y3&T.",
    ",F~G",
    "=/\\b",
    "sc\"&",
    "{^&OK",
    "L8M}",
    "SE26",
    "[epIB",
    "Gv&F~2",
    "QM~2^~",
    "<F3\ty",
    "p1{T",
    "l'F~M",
    "l}Ib",
    "\"\\(@",
    "+2p!",
    ")'/<4t",
    "\\(@p!",
    ".Dp!",
    "%[\"R",
    "IEND",
    "PNG\r\n",
    "\rIHDR",
    "orNT",
    "8]IDATx",
    "*IE0",
    "aeYr",
    "\\\r7 ",
    "_#z#",
    "!AqB",
    "OD(+",
    "O`\">WdL",
    "E\nk]",
    "E8#N",
    "D 1V",
    "V%Qd#",
    "Vqlx'E",
    "V>MZ",
    ">A\"`",
    "H\n3a",
    "&lryp",
    "&\\HNFR",
    ">{mP3",
    "GR))",
    "q\"'C",
    "A}\\]7",
    "v'~,",
    "W&o3!",
    "td*q",
    "L/W[",
    "#Dv2",
    "R-\tvb",
    "x}zG",
    "9hb_",
    "\rSxq",
    "|k'B",
    "ldT*0",
    "g(q_",
    "9'!T",
    "\t\rV{",
    "vR#)Y",
    "hTZ?\r",
    "/&4kT",
    "19Bs",
    "&(,t6&",
    "2l<G",
    "AI}\"v",
    "M^&<",
    "_[T %",
    "m[ '",
    "w[+G",
    "eaY0V",
    "m bZ",
    "h?o+",
    "n#Dx",
    "]:HN",
    ";61?",
    "[DcD",
    "p'b1",
    "~\"9\t@",
    "2;\nd",
    "z\n|k&",
    "1px+",
    "<xfv",
    "x0(i",
    "{1g&",
    "Y:\nM",
    "]R%8",
    "q}b*/`",
    "4\"8\t",
    "vxft",
    "U\n*jEb",
    "pOJA",
    "'x`\r",
    "TZ>\nj",
    "CjNt",
    "[ps<",
    "N+8rII0V",
    "G|[`",
    "Y~%S}",
    " 7Qk0",
    "%qKPS",
    "9(\t@L",
    "ovY)qKb-v,6",
    "*pIsPj",
    ".S{p",
    "8~91",
    "zVp>W",
    "T:>o]I",
    "#mPc;",
    "g^_|",
    ";HD'",
    "O pB",
    "0A\";\t",
    "G`KV",
    "b1sb*",
    "#''`",
    "VO:L",
    "j]uQ",
    "Msp5",
    "@ f-*",
    "0\\^(",
    "(h\r)",
    ">#=V",
    "~I\rB",
    "u6RZ=",
    "{V;V",
    "nFLH",
    "<d~\"",
    "c.X%",
    "LB\t@",
    "!ebFS",
    "oSd]",
    "Fo|OK",
    " xft",
    "+-6/|",
    "=/\nj",
    "`LL~N",
    "W9%jv^",
    "6U ph",
    "nWDq",
    "FM~%",
    "gv7n",
    "}J{i9",
    "wnRKt",
    "X(A$",
    ">-\rBn",
    "y0Ql",
    "-[_yl",
    "HjHT",
    "Wje#",
    "m`c4w",
    "J F!",
    "cV6:x",
    "pf\tcu",
    "]\\q?",
    "FbVD",
    "z:@ ",
    "~:P\r",
    "&!!Fg",
    "D~{\t",
    "\nM\\B",
    "'2$d",
    "2]gM1",
    "CDr&N",
    "8p*>",
    "g\">]V",
    "%b&m",
    "CIar",
    "QzDz",
    "X+!2",
    "g=&B",
    "B#D[",
    "X\\.z ",
    "%ZZk",
    "8#gD",
    "IEND",
    "wQ\tg",
    "RwSMb",
    "(&B)...",
    "ceQ&^\tgdk",
    "(&E):",
    "}T\rT",
    "}T\rT",
    "~X[(W",
    "/f&T",
    "fbc:N",
    "(&Y)",
    "(&A)",
    "}T\rT(",
    "(&R)",
    "(&N)",
    "(&L)",
    "(&C)",
    "WinRAR ",
    "N9Y(",
    "(&D)",
    "(&W)...",
    "hRichEdit20W",
    "\njmsctls_progress32",
    "ck(W",
    "ck(W",
    "4xOW",
    "~b0R_cOW",
    "v4Y\t",
    "]_cOW",
    "4Y_cOW\t",
    "]_cOWPA",
    " %s\n",
    "N9Y ",
    " %s ",
    "0_cOW",
    "vpenc!h",
    " %s ",
    " %s ",
    "penc",
    "_cOW\n",
    "ck(W",
    " %s ",
    "N4Y_cOWPA",
    "@b\tgck(W",
    " Windows ",
    "4xOW",
    "eHr,g",
    "@b\tg",
    "b<style>body{font-family:\"Arial,",
    "[SO\"",
    "\";font-size:12;}</style><ul><li>",
    " <b>",
    "</b> ",
    "</li><br><br>)<ul><li>",
    " <b>",
    "</b> ",
    "</li><br><br>)<li>",
    "O(u ",
    " <b>",
    "</b> ",
    "h-N\t",
    "</li>",
    "<br><br> <li>",
    "N9Y\rNX[(W",
    "SKNMR",
    "</li></ul>",
    "]_cOW",
    "N0R ",
    " %s ",
    "N0R4N",
    "N\rT;`",
    " %d ",
    "*NW[&{",
    " %s ",
    "x\rNcknx",
    "\t%s ",
    "x\rNcknx",
    "l\rY6R ",
    " %s ",
    " %s\n",
    " %s\n",
    "tXTCgP",
    "[hQf",
    "N9Y ",
    " %s ",
    "/f\rN",
    "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">\r\n<assemblyIdentity\r\n  version=\"1.0.0.0\"\r\n  processorArchitecture=\"*\"\r\n  name=\"WinRAR SFX\"\r\n  type=\"win32\"/>\r\n<description>WinRAR SFX module</description>\r\n<trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v2\">\r\n  <security>\r\n    <requestedPrivileges>\r\n      <requestedExecutionLevel level=\"asInvoker\"            \r\n      uiAccess=\"false\"/>\r\n    </requestedPrivileges>\r\n  </security>\r\n</trustInfo>\r\n<dependency>\r\n  <dependentAssembly>\r\n    <assemblyIdentity\r\n      type=\"win32\"\r\n      name=\"Microsoft.Windows.Common-Controls\"\r\n      version=\"6.0.0.0\"\r\n      processorArchitecture=\"*\"\r\n      publicKeyToken=\"6595b64144ccf1df\"\r\n      language=\"*\"/>\r\n  </dependentAssembly>\r\n</dependency>\r\n<compatibility xmlns=\"urn:schemas-microsoft-com:compatibility.v1\">\r\n  <application>\r\n    <!--The ID below indicates application support for Windows Vista -->\r\n      <supportedOS Id=\"{e2011457-1546-43c5-a5fe-008deee3d3f0}\"/>\r\n    <!--The ID below indicates application support for Windows 7 -->\r\n      <supportedOS Id=\"{35138b9a-5d96-4fbd-8e2d-a2440225f93a}\"/>\r\n    <!--The ID below indicates application support for Windows 8 -->\r\n      <supportedOS Id=\"{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}\"/>\r\n  </application>\r\n</compatibility>\r\n<asmv3:application xmlns:asmv3=\"urn:schemas-microsoft-com:asm.v3\">\r\n  <asmv3:windowsSettings xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">\r\n    <dpiAware>true</dpiAware>\r\n  </asmv3:windowsSettings>\r\n</asmv3:application>\r\n</assembly>\r\n\r\nPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGX",
    "0!0+0A0V0a0q0{0",
    "252=2_2",
    "3,3L3\\3k3r3|3",
    "6N7]7",
    "9Q9[9",
    ":8:z:",
    "=Q>b?n?",
    ",1e2}2",
    "20S0`0",
    "2%2m2{2",
    "3\t4G4",
    "=8>F>K>b>g>",
    "?;?M?",
    ",0R0;1F1W1",
    "2!3D3L3",
    "4D4L4[4a4l4s4",
    "70:Q:",
    ";H<y=",
    "4:5n5",
    "5=6_6",
    "8/8L8]8}8",
    "8a9n9",
    "9g:!;",
    "?4?U?l?",
    "060i0",
    "1!2V2",
    "545h5",
    "5@6Q6",
    "7*767",
    "?%?:?D?M?]?",
    "0U0h0",
    "1/1K1m1",
    "6*7\t9",
    ";O<~=",
    "n0w0",
    "151:2",
    "8f:n:",
    "=)>A>",
    "6%7Z7",
    "8?9J9a9o9",
    ":`:l:",
    ";+;4;E;",
    ";+<,=",
    "2\"2.2",
    "3D3K3",
    "6*676W6t6z6",
    "7*71787?7J7[7b7i7p7",
    "8 8'8.858<8H8O8V8]8e8l8s8z8\\:c:o:",
    ";/;9;",
    "< <,<9<N<U<c<z<",
    "=,=>=M=]=r=",
    "=q?|?",
    "l0{0",
    "0'161E1T1",
    "2J3S3^3",
    "2M4g6",
    "888Z8t8~8",
    "9#9+939;9C9K9S9[9c9k9s9{9",
    ":&:1:<:G:R:]:h:s:~:",
    ";#;.;9;D;k;",
    "< <_<t<",
    ">,>?>",
    ">#?=?V?b?n?",
    "080E0P0U0a0m0",
    "1S2e2v2",
    "5%555;6B6X6]6A7",
    "9\"9&9*9.92969:9|9",
    "J3h3",
    "9::w:",
    "45Q5g5",
    "@0G0h1o1X?",
    "1-141;1B1I1[1",
    "2;3Y3i3",
    "4\r5+5S5",
    "646=6W6u6",
    "6V7a7l7",
    "8/8T8",
    "8,939",
    ";+<=<U<^<",
    "=1>S>",
    ">F?T?]?l?",
    "1 131@1K1b1u1",
    "2&292G2R2i2|2",
    "30393e3",
    "525>5Y5t5",
    "6W6h6w6",
    "7/7@7d7",
    "8\t9\"969J9",
    "9=:X:j:~:",
    ";';4;A;i;u;",
    "<1<I<l<r<",
    "<)=b=q=",
    "=?>O>T>i>",
    "?7?D?L?R?V?v?",
    "2,2h2",
    "314C4Y4v4",
    "4+5{5",
    "6&696>6R6W6c6l6",
    "7F7i7x7",
    "9\"9?9E9Q9Z9b9m9w9",
    "9<:j:",
    ";E;U;`;l;",
    "<0<6<I<S<q<",
    "='=M=]=",
    ">\">6><>B>\\>j>p>",
    "?\"?4?9?N?W?m?",
    "0\"010<0F0O0]0h0t0}0",
    "1(181k1",
    "2#3D3Z3p3",
    "4 4j4",
    "5(5J5X5^5",
    "5c6k6w6",
    "9*9A9^9w9",
    ":$:5:s:",
    ";&;F;O;X;",
    "<8<H<V<",
    "=\r=2=7=B=N=\\=",
    "=_>~>",
    "0&0L0Z0`0",
    "4#4'4+4/43474;4?4C4G4K4O4",
    "5\"5+515A5[5",
    "6M6Z6c6q6w6}6",
    "7\"767_7f7o7t8~8",
    "909?9[9i9p9v9",
    ":#:,:5:K:S:n:s:",
    ";8;F;Z;d;y;",
    ";,<2<I<c<t<~<",
    "='=-=2=8=>=L=S=Y=",
    ">)>9>F>\\>",
    "?4?P?^?p?x?",
    "0:0V0\\0c0n0t0z0",
    "1 1,12171B1H1Q1^1h1n1",
    "2)232=2G2Q2[2e2o2y2",
    "3#3-373A3K3U3_3i3s3}3",
    "4$4.484B4L4V4c4q4{4",
    "5)535=5G5Q5[5e5o5|5",
    "6&6,626;6B6p6w6}6",
    "7\"7+767<7B7K7",
    "8!8=8D8J8T8q8",
    "9.9@9Z9o9{9",
    "9=:I:O:d:",
    ";\";(;.;4;~<",
    "<*=w=",
    "?;?J?a?g?m?s?y?",
    "@0M0u0",
    "3 4%424l4",
    "4P5h5n5",
    "6Y6c6l6",
    "7&7b7l7u7~7",
    "808F8",
    "929<9o9",
    "9H:b:q:z:",
    ":%;K;T;Z;b;g;z;",
    "<%<+<2<9<@<G<N<U<\\<d<l<t<",
    ">!>Y>",
    "?8?K?]?{?",
    "%080",
    "1T3g3",
    "3A5x5",
    "5+6064686<6",
    "9*9r9",
    "F2J2N2R2V2Z2^2b2f2j2n2r2v2z2~2",
    "334r6",
    ";+;S;g;",
    ";,<;<",
    "6e7p9u9",
    ":\n;&;F;T;[;a;",
    "<A<\\<a<f<",
    "=5=?=K=P=U=v=",
    "0T6]6e6c7u7",
    ";<<X<Z=",
    "040=0C0M0R0W0\\0a1",
    "272g2",
    "3(4z4",
    "9S:e:",
    ";8;l<",
    "=-=C=Z=a=m=",
    ">*>3>{>",
    ">&?8?>?R?",
    "'000i0t0i2",
    "4,4<4A4K4P4[4f4z4",
    "5F6^6",
    "6>7U7",
    "8)8a8f8",
    "9&9,979?9J9P9[9a9o9x9}9",
    ":8:I:R:",
    ";e;r;",
    ";,<5<a<j<7=",
    "=4>:>",
    "0C0`0k0",
    "1\"1<1l1",
    "5d5`6t6",
    "7'888S8_8p8y8",
    "8!929G9Q9t9~9q>",
    "<1{1",
    "4 4.4>4S4j4",
    "5!575p5",
    "5-6?6u6",
    "9=:7;",
    "<;<B<U<c<j<p<",
    "=@=Y=h=t=",
    ">!><>F>b>m>r>w>",
    "?!?&?G?W?s?~?",
    "0.0Q0\\0i0~0",
    "1+1s1y1",
    "4!5H5Q6",
    "787B7S7X7m7",
    ";2;F;Q;h;",
    ";0<f<y<",
    "=?=f=",
    ">;?^?",
    "2090R0a0",
    "1-1K1V1",
    "162C2P2]2t2;3",
    "5+5k5z5",
    "6-6h6o6",
    "7)7;7M7_7q7",
    "8\"848F8X8",
    "9`:r:",
    "<9=r=",
    "91A1x1",
    "8-<4<;<B<",
    "0F062<2E2P2`2",
    "3-3\"4b4",
    "4$5H5S5`5r5",
    "5W6l6u6~6",
    "939Q9",
    "< <S<p<",
    "=m=\r>|>",
    ">O?Y?",
    "1D2w2",
    "9\t9'9/9",
    "90:Z:b:",
    ";!<X<u<",
    "?&?{?",
    "0,171B1H1Q1",
    "2-2X2p2",
    "3\n4)4r4",
    "5A7{8",
    "8#<&=7=&?,?1?A?R?",
    "1A3^3",
    "3!464m586D6]6v6",
    "6<7F7[7}7",
    "848[8",
    "9@:Y:",
    ";#;?;\\;q;",
    "6l8p8t8x8|8",
    "@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4",
    "5 5$5(5,5054585<5@5D5H5L5P5T5X5@7D7",
    "54686@6H6",
    "9 9(90989@9H9P9X9`9h9p9x9",
    ": :(:0:8:@:H:P:X:`:h:p:x:",
    "; ;(;0;8;@;H;P;X;`;h;p;x;",
    "< <(<0<8<@<H<P<X<`<h<p<x<",
    "5 5$5,5054585<5@5D5H5T5\\5`5d5h5l5",
    "; ;$;(;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;",
    "4 4$4(4,4044484<4",
    ",444<4D4L4T4\\4d4l4t4|4",
    "5$5,545<5D5L5T5\\5d5l5t5|5",
    "6$6,646<6D6L6T6\\6d6l6t6|6",
    "7$7,747<7D7L7T7\\7d7l7t7|7",
    "8$8,848<8D8L8T8\\8d8l8t8|8",
    "9$9,949<9D9L9T9\\9d9l9t9|9",
    ":$:,:4:<:D:L:T:\\:d:l:t:|:",
    ";$;,;4;<;D;",
    "H5P5X5`5h5p5x5",
    "6 6(60686@6H6P6X6`6h6p6x6",
    "7 7(70787@7H7P7X7`7h7p7x7",
    "8 8(80888@8H8P8X8`8h8p8x8",
    "9 9(90989@9H9P9X9`9h9p9x9",
    ": :(:0:8:@:H:P:X:`:h:p:x:",
    "; ;(;0;8;@;H;P;X;`;h;p;x;",
    "< <(<0<8<@<H<P<X<`<",
    "Z6^6b6f6",
    "0$0,040<0D0L0T0\\0d0l0t0|0",
    "2 2024282@2X2h2l2|2",
    "2@8P8\\8",
    "909<9\\9h9",
    ":D:L:T:p:x:",
    ";(;H;P;\\;|;",
    "<<<H<h<t<",
    "=(=0=8=@=H=P=\\=|=",
    ">4>@>d>",
    "?,?<?D?T?`?h?",
    "0,080p0",
    "1,1D1H1P1X1`1h1|1",
    "1 2,242\\2`2|2",
    "3 3$3@3`3",
    "4 4@4`4",
    "5 5,5D5H5h5",
    "$0(0,0004080",
    "3 3,383D3P3\\3h3t3",
    "4(444@4L4X4d4p4|4",
    "5$505<5H5T5`5l5x5",
    "6 6,686D6P6\\6h6t6",
    "7$787D7H7L7P7T7X7\\7`7d7h7l7p7t7x7",
    "909<9@9D9`9d9l9",
    "> ?8?T?p?",
    "0 0$0(0,040<0@0D0L0P0T0X0\\0`0d0h0l0t0x0|0",
    "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1t1x1|1"
  ],
  "sections": [
    {
      "name": "Headers",
      "start": "00400000",
      "end": "004003ff",
      "size": 1024,
      "initialized": true,
      "read": true,
      "write": false,
      "execute": false,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": "",
      "comment": "",
      "entropy": 3.1225,
      "strings_count": 8,
      "functions_count": 0,
      "bytes_total": 1024,
      "bytes_sampled": 1024,
      "bytes_truncated": false
    },
    {
      "name": ".text",
      "start": "00401000",
      "end": "00432bff",
      "size": 203776,
      "initialized": true,
      "read": true,
      "write": false,
      "execute": true,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": "",
      "comment": "",
      "entropy": 6.713,
      "strings_count": 1432,
      "functions_count": 1437,
      "bytes_total": 203776,
      "bytes_sampled": 203776,
      "bytes_truncated": false
    },
    {
      "name": ".rdata",
      "start": "00433000",
      "end": "0043dfff",
      "size": 45056,
      "initialized": true,
      "read": true,
      "write": false,
      "execute": false,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": "",
      "comment": "",
      "entropy": 5.2623,
      "strings_count": 1135,
      "functions_count": 0,
      "bytes_total": 45056,
      "bytes_sampled": 45056,
      "bytes_truncated": false
    },
    {
      "name": ".data",
      "start": "0043e000",
      "end": "0046271f",
      "size": 149280,
      "initialized": true,
      "read": true,
      "write": true,
      "execute": false,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": "",
      "comment": "",
      "entropy": 0.1917,
      "strings_count": 21,
      "functions_count": 0,
      "bytes_total": 149280,
      "bytes_sampled": 149280,
      "bytes_truncated": false
    },
    {
      "name": ".didat",
      "start": "00463000",
      "end": "004631ff",
      "size": 512,
      "initialized": true,
      "read": true,
      "write": true,
      "execute": false,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": "",
      "comment": "",
      "entropy": 3.3327,
      "strings_count": 0,
      "functions_count": 0,
      "bytes_total": 512,
      "bytes_sampled": 512,
      "bytes_truncated": false
    },
    {
      "name": ".rsrc",
      "start": "00464000",
      "end": "0046b5ff",
      "size": 30208,
      "initialized": true,
      "read": true,
      "write": false,
      "execute": false,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": "",
      "comment": "",
      "entropy": 7.6092,
      "strings_count": 387,
      "functions_count": 0,
      "bytes_total": 30208,
      "bytes_sampled": 30208,
      "bytes_truncated": false
    },
    {
      "name": ".reloc",
      "start": "0046c000",
      "end": "0046e3ff",
      "size": 9216,
      "initialized": true,
      "read": true,
      "write": false,
      "execute": false,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": "",
      "comment": "",
      "entropy": 6.623,
      "strings_count": 297,
      "functions_count": 0,
      "bytes_total": 9216,
      "bytes_sampled": 9216,
      "bytes_truncated": false
    },
    {
      "name": "tdb",
      "start": "ffdff000",
      "end": "ffdfffff",
      "size": 4096,
      "initialized": true,
      "read": true,
      "write": true,
      "execute": false,
      "volatile": false,
      "overlay": false,
      "loaded": true,
      "type": "Default",
      "source_name": null,
      "comment": null,
      "entropy": 0.0098,
      "strings_count": 0,
      "functions_count": 0,
      "bytes_total": 4096,
      "bytes_sampled": 4096,
      "bytes_truncated": false
    }
  ],
  "libraries": [
    "KERNEL32.DLL",
    "OLEAUT32.DLL",
    "GDIPLUS.DLL",
    "USER32.DLL",
    "GDI32.DLL",
    "COMDLG32.DLL",
    "ADVAPI32.DLL",
    "SHELL32.DLL",
    "OLE32.DLL",
    "SHLWAPI.DLL",
    "COMCTL32.DLL"
  ],
  "exports": [
    "??$?RV<lambda_123407a5e2ac06da108355a851863b7a>@@AAV<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>@@V<lambda_ae55bdf541ad94d75914d381c370e64d>@@@?$__crt_seh_guarded_call@H@@QAEH$$QAV<lambda_123407a5e2ac06da108355a851863b7a>@@AAV<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>@@$$QAV<lambda_ae55bdf541ad94d75914d381c370e64d>@@@Z",
    "??$?RV<lambda_61cee617f5178ae960314fd4d05640a0>@@AAV<lambda_6978c1fb23f02e42e1d9e99668cc68aa>@@V<lambda_9cd88cf8ad10232537feb2133f08c833>@@@?$__crt_seh_guarded_call@H@@QAEH$$QAV<lambda_61cee617f5178ae960314fd4d05640a0>@@AAV<lambda_6978c1fb23f02e42e1d9e99668cc68aa>@@$$QAV<lambda_9cd88cf8ad10232537feb2133f08c833>@@@Z",
    "??$?RV<lambda_800076c951b434888f4765a74a194fcc>@@AAV<lambda_4e60a939b0d047cfe11ddc22648dfba9>@@V<lambda_6dbb1268764f43b569ce7b67e331d33a>@@@?$__crt_seh_guarded_call@H@@QAEH$$QAV<lambda_800076c951b434888f4765a74a194fcc>@@AAV<lambda_4e60a939b0d047cfe11ddc22648dfba9>@@$$QAV<lambda_6dbb1268764f43b569ce7b67e331d33a>@@@Z",
    "??$?RV<lambda_978dc153c237d78434369da87b74ff60>@@AAV<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>@@V<lambda_4a8533e2866a575feecb8298ce776b0d>@@@?$__crt_seh_guarded_call@X@@QAEX$$QAV<lambda_978dc153c237d78434369da87b74ff60>@@AAV<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>@@$$QAV<lambda_4a8533e2866a575feecb8298ce776b0d>@@@Z",
    "??$?RV<lambda_995298e7d72eb4c2aab26c0585b3abe5>@@AAV<lambda_275893d493268fdec8709772e3fcec0e>@@V<lambda_293819299cbf9a7022e18b56a874bb5c>@@@?$__crt_seh_guarded_call@H@@QAEH$$QAV<lambda_995298e7d72eb4c2aab26c0585b3abe5>@@AAV<lambda_275893d493268fdec8709772e3fcec0e>@@$$QAV<lambda_293819299cbf9a7022e18b56a874bb5c>@@@Z",
    "??$BuildCatchObjectHelperInternal@V__FrameHandler3@@@@YAHPAUEHExceptionRecord@@PAXPBU_s_HandlerType@@PBU_s_CatchableType@@@Z",
    "??$BuildCatchObjectInternal@V__FrameHandler3@@@@YAXPAUEHExceptionRecord@@PAXPBU_s_HandlerType@@PBU_s_CatchableType@@@Z",
    "??$CatchIt@V__FrameHandler3@@@@YAXPAUEHExceptionRecord@@PAUEHRegistrationNode@@PAU_CONTEXT@@PAXPBU_s_FuncInfo@@PBU_s_HandlerType@@PBU_s_CatchableType@@PBU_s_TryBlockMapEntry@@H1EE@Z",
    "??$FindHandlerForForeignException@V__FrameHandler3@@@@YAXPAUEHExceptionRecord@@PAUEHRegistrationNode@@PAU_CONTEXT@@PAXPBU_s_FuncInfo@@HH1@Z",
    "??$TypeMatchHelper@$$CBU_s_HandlerType@@@@YAHPBU_s_HandlerType@@PBU_s_CatchableType@@PBU_s_ThrowInfo@@@Z",
    "??$TypeMatchHelper@V__FrameHandler3@@@@YAHPBU_s_HandlerType@@PBU_s_CatchableType@@PBU_s_ThrowInfo@@@Z",
    "??$__InternalCxxFrameHandler@V__FrameHandler3@@@@YA?AW4_EXCEPTION_DISPOSITION@@PAUEHExceptionRecord@@PAUEHRegistrationNode@@PAU_CONTEXT@@PAXPBU_s_FuncInfo@@H1E@Z",
    "??$__acrt_lock_and_call@V<lambda_275893d493268fdec8709772e3fcec0e>@@@@YAHW4__acrt_lock_id@@$$QAV<lambda_275893d493268fdec8709772e3fcec0e>@@@Z",
    "??$__acrt_lock_and_call@V<lambda_4e60a939b0d047cfe11ddc22648dfba9>@@@@YAHW4__acrt_lock_id@@$$QAV<lambda_4e60a939b0d047cfe11ddc22648dfba9>@@@Z",
    "??$__acrt_lock_and_call@V<lambda_6250bd4b2a391816dd638c3bf72b0bcb>@@@@YAXW4__acrt_lock_id@@$$QAV<lambda_6250bd4b2a391816dd638c3bf72b0bcb>@@@Z",
    "??$__acrt_lock_and_call@V<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>@@@@YAXW4__acrt_lock_id@@$$QAV<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>@@@Z",
    "??$__acrt_lock_and_call@V<lambda_b2ea41f6bbb362cd97d94c6828d90b61>@@@@YAXW4__acrt_lock_id@@$$QAV<lambda_b2ea41f6bbb362cd97d94c6828d90b61>@@@Z",
    "??$__acrt_lock_and_call@V<lambda_be2b3da3f62db62e9dad5dc70221a656>@@@@YAXW4__acrt_lock_id@@$$QAV<lambda_be2b3da3f62db62e9dad5dc70221a656>@@@Z",
    "??$__acrt_lock_and_call@V<lambda_e69574bed617af4e071282c136b37893>@@@@YAXW4__acrt_lock_id@@$$QAV<lambda_e69574bed617af4e071282c136b37893>@@@Z",
    "??$__acrt_lock_and_call@V<lambda_ec61778202f4f5fc7e7711acc23c3bca>@@@@YAP6AXH@ZW4__acrt_lock_id@@$$QAV<lambda_ec61778202f4f5fc7e7711acc23c3bca>@@@Z",
    "??$__acrt_lowio_lock_fh_and_call@V<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>@@@@YAHH$$QAV<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>@@@Z",
    "??$__acrt_lowio_lock_fh_and_call@V<lambda_6978c1fb23f02e42e1d9e99668cc68aa>@@@@YAHH$$QAV<lambda_6978c1fb23f02e42e1d9e99668cc68aa>@@@Z",
    "??$common_configure_argv@D@@YAHW4_crt_argv_mode@@@Z",
    "??$common_expand_argv_wildcards@D@@YAHQAPADQAPAPAD@Z",
    "??$common_initialize_environment_nolock@D@@YAHXZ",
    "??$common_lseek_nolock@_J@@YA_JH_JH@Z",
    "??$common_tcsncpy_s@D@@YAHQADIQBDI@Z",
    "??$common_tox_l@$1?internal_islower_l@@YA_NHQAU__crt_locale_pointers@@@Z$1?internal_map_upper@@YAHH0@Z@@YAHHKQAU__crt_locale_pointers@@@Z",
    "??$common_tox_l@$1?internal_isupper_l@@YA_NHQAU__crt_locale_pointers@@@Z$1?internal_map_lower@@YAHH0@Z@@YAHHKQAU__crt_locale_pointers@@@Z",
    "??$common_vsprintf@Vstandard_base@__crt_stdio_output@@D@@YAH_KQADIQBDQAU__crt_locale_pointers@@1@Z",
    "??$common_vsprintf@Vstandard_base@__crt_stdio_output@@_W@@YAH_KQA_WIQB_WQAU__crt_locale_pointers@@QAD@Z",
    "??$copy_and_add_argument_to_buffer@D@@YAHQBD0IAAV?$argument_list@D@?A0xfd16de3c@@@Z",
    "??$count@D@formatting_buffer@__crt_stdio_output@@QBEIXZ",
    "??$create_environment@D@@YAQAPADQAD@Z",
    "??$ensure_buffer_is_big_enough@D@formatting_buffer@__crt_stdio_output@@QAE_NI@Z",
    "??$expand_argument_wildcards@D@@YAHQAD0AAV?$argument_list@D@?A0xfd16de3c@@@Z",
    "??$free_environment@D@@YAXQAPAD@Z",
    "??$is_overflow_condition@K@__crt_strtox@@YA_NIK@Z",
    "??$is_wide_character_specifier@D@__crt_stdio_output@@YA_N_KDW4length_modifier@0@@Z",
    "??$is_wide_character_specifier@_W@__crt_stdio_output@@YA_N_K_WW4length_modifier@0@@Z",
    "??$parse_command_line@D@@YAXPADPAPAD0PAI2@Z",
    "??$parse_integer@KV?$c_string_character_source@D@__crt_strtox@@@__crt_strtox@@YAKQAU__crt_locale_pointers@@V?$c_string_character_source@D@0@H_N@Z",
    "??$parse_integer@KV?$c_string_character_source@_W@__crt_strtox@@@__crt_strtox@@YAKQAU__crt_locale_pointers@@V?$c_string_character_source@_W@0@H_N@Z",
    "??$scratch_data@D@formatting_buffer@__crt_stdio_output@@QAEPADXZ",
    "??$write_multiple_characters@V?$string_output_adapter@D@__crt_stdio_output@@D@__crt_stdio_output@@YAXABV?$string_output_adapter@D@0@DHQAH@Z",
    "??$write_multiple_characters@V?$string_output_adapter@_W@__crt_stdio_output@@D@__crt_stdio_output@@YAXABV?$string_output_adapter@_W@0@DHQAH@Z",
    "??0?$common_data@D@__crt_stdio_output@@IAE@XZ",
    "??0?$common_data@_W@__crt_stdio_output@@IAE@XZ",
    "??0_LocaleUpdate@@QAE@QAU__crt_locale_pointers@@@Z",
    "??0_com_error@@QAE@ABV0@@Z",
    "??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z",
    "??0scoped_fp_state_reset@?A0x3568b024@@QAE@XZ",
    "??1?$argument_list@D@?A0xfd16de3c@@QAE@XZ",
    "??1_com_error@@UAE@XZ",
    "??1formatting_buffer@__crt_stdio_output@@QAE@XZ",
    "??4?$__crt_unique_heap_ptr@DU__crt_internal_free_policy@@@@QAEAAV0@$$QAV0@@Z",
    "??8type_info@@QBE_NABV0@@Z",
    "??R<lambda_275893d493268fdec8709772e3fcec0e>@@QBEHXZ",
    "??R<lambda_4e60a939b0d047cfe11ddc22648dfba9>@@QBEHXZ",
    "??R<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>@@QBEXXZ",
    "??_G_com_error@@UAEPAXI@Z",
    "??_L@YGXPAXIIP6EX0@Z1@Z",
    "??_M@YGXPAXIIP6EX0@Z@Z",
    "?CPtoLocaleName@@YAPB_WH@Z",
    "?DloadAcquireSectionWriteAccess@@YGXXZ",
    "?DloadLock@@YGXXZ",
    "?DloadProtectSection@@YGXKPAK@Z",
    "?DloadReleaseSectionWriteAccess@@YGXXZ",
    "?DloadUnlock@@YGXXZ",
    "?ExFilterRethrow@@YAHPAU_EXCEPTION_POINTERS@@@Z",
    "?FrameUnwindToEmptyState@__FrameHandler3@@SAXPAUEHRegistrationNode@@PAXPBU_s_FuncInfo@@@Z",
    "?FrameUnwindToState@__FrameHandler3@@SAXPAUEHRegistrationNode@@PAXPBU_s_FuncInfo@@H@Z",
    "?GetCurrentState@__FrameHandler3@@SAHPAUEHRegistrationNode@@PAXPBU_s_FuncInfo@@@Z",
    "?GetRangeOfTrysToCheck@__FrameHandler3@@SA?AU?$pair@Viterator@TryBlockMap@__FrameHandler3@@V123@@std@@AAVTryBlockMap@1@HPAXPBU_s_FuncInfo@@H@Z",
    "?GetTableIndexFromLocaleName@@YAHPB_W@Z",
    "?SetState@__FrameHandler3@@SAXPAUEHRegistrationNode@@PBU_s_FuncInfo@@H@Z",
    "?_CallMemberFunction0@@YGXQAX0@Z",
    "?_CallMemberFunction1@@YGXQAX00@Z",
    "?_CallMemberFunction2@@YGXQAX00H@Z",
    "?_FilterSetCurrentException@@YAKPAU_EXCEPTION_POINTERS@@E@Z",
    "?_JumpToContinuation@@YGXPAXPAUEHRegistrationNode@@@Z",
    "?_UnwindNestedFrames@@YGXPAUEHRegistrationNode@@PAUEHExceptionRecord@@@Z",
    "?__ArrayUnwind@@YGXPAXIIP6EX0@Z@Z",
    "?__acrt_LCMapStringA_stat@@YAHPAU__crt_locale_pointers@@PB_WKPBDHPADHHH@Z",
    "?__acrt_fp_classify@@YA?AW4__acrt_fp_class@@ABN@Z",
    "?__acrt_fp_is_negative@@YA_NABN@Z",
    "?__acrt_stdio_free_stream@@YAXV__crt_stdio_stream@@@Z",
    "?__scrt_common_main_seh@@YAHXZ",
    "?_com_issue_error@@YGXJ@Z",
    "?_com_raise_error@@YGXJPAUIErrorInfo@@@Z",
    "?atexit_exception_filter@@YAHK@Z",
    "?common_exit@@YAXHW4_crt_exit_cleanup_mode@@W4_crt_exit_return_mode@@@Z",
    "?construct_ptd@@YAXQAU__acrt_ptd@@QAPAU__crt_locale_data@@@Z",
    "?crop_zeroes@__crt_stdio_output@@YAXPADQAU__crt_locale_pointers@@@Z",
    "?destroy_fls@@YGXPAX@Z",
    "?destroy_ptd@@YAXQAU__acrt_ptd@@@Z",
    "?divide@__crt_strtox@@YA_KAAUbig_integer@1@ABU21@@Z",
    "?exit_or_terminate_process@@YAXI@Z",
    "?find_end_of_double_null_terminated_sequence@@YAPB_WQB_W@Z",
    "?find_pe_section@@YAPAU_IMAGE_SECTION_HEADER@@QAEI@Z",
    "?force_decimal_point@__crt_stdio_output@@YAXPADQAU__crt_locale_pointers@@@Z",
    "?fp_format_a@@YAHQBNPADIQADIH_NIQAU__crt_locale_pointers@@@Z",
    "?fp_format_e@@YAHQBNQADI1IH_NIQAU__crt_locale_pointers@@@Z",
    "?fp_format_e_internal@@YAHQADIH_NIQAU_strflt@@1QAU__crt_locale_pointers@@@Z",
    "?fp_format_f@@YAHQBNQADI1IHQAU__crt_locale_pointers@@@Z",
    "?fp_format_f_internal@@YAHQADIHQAU_strflt@@_NQAU__crt_locale_pointers@@@Z",
    "?fp_format_g@@YAHQBNQADI1IH_NIQAU__crt_locale_pointers@@@Z",
    "?fp_format_nan_or_infinity@@YAHW4__acrt_fp_class@@_NPADI1@Z",
    "?free_crt_array_internal@@YAXQAPBXI@Z",
    "?getSystemCP@@YAHH@Z",
    "?get_global_action_nolock@@YAPAP6AXH@ZH@Z",
    "?initialize@?$dual_state_global@PAPAD@__crt_state_management@@QAEXQAPAD@Z",
    "?initialize_inherited_file_handles_nolock@@YAXXZ",
    "?initialize_stdio_handles_nolock@@YAXXZ",
    "?internal_islower_l@@YA_NHQAU__crt_locale_pointers@@@Z",
    "?internal_isupper_l@@YA_NHQAU__crt_locale_pointers@@@Z",
    "?is_managed_app@@YA_NXZ",
    "?process@?$output_processor@DV?$string_output_adapter@D@__crt_stdio_output@@V?$standard_base@DV?$string_output_adapter@D@__crt_stdio_output@@@2@@__crt_stdio_output@@QAEHXZ",
    "?process@?$output_processor@_WV?$string_output_adapter@_W@__crt_stdio_output@@V?$standard_base@_WV?$string_output_adapter@_W@__crt_stdio_output@@@2@@__crt_stdio_output@@QAEHXZ",
    "?replace_current_thread_locale_nolock@@YAXQAU__acrt_ptd@@QAU__crt_locale_data@@@Z",
    "?setSBCS@@YAXPAU__crt_multibyte_data@@@Z",
    "?setSBUpLow@@YAXPAU__crt_multibyte_data@@@Z",
    "?setmbcp_internal@@YAHH_N@Z",
    "?shift_bytes@@YAXQADI0H@Z",
    "?shortsort@@YAXPAD0IP6AHPBX1@Z@Z",
    "?siglookup@@YAPAU__crt_signal_action_t@@HQAU1@@Z",
    "?state_case_type@?$output_processor@DV?$string_output_adapter@D@__crt_stdio_output@@V?$standard_base@DV?$string_output_adapter@D@__crt_stdio_output@@@2@@__crt_stdio_output@@AAE_NXZ",
    "?state_case_type@?$output_processor@_WV?$string_output_adapter@_W@__crt_stdio_output@@V?$standard_base@_WV?$string_output_adapter@_W@__crt_stdio_output@@@2@@__crt_stdio_output@@AAE_NXZ",
    "?swap@@YAXPAD0I@Z",
    "?to_integer_size@__crt_stdio_output@@YAIW4length_modifier@1@@Z",
    "?try_cor_exit_process@@YAXI@Z",
    "?try_get_first_available_module@@YAPAUHINSTANCE__@@QBW4module_id@?A0x9d0f8d90@@0@Z",
    "?try_get_function@@YAPAXW4function_id@?A0x9b56aee1@@QBDQBW4module_id@2@2@Z",
    "?try_get_function@@YAPAXW4function_id@?A0x9d0f8d90@@QBDQBW4module_id@2@2@Z",
    "?unget@?$c_string_character_source@D@__crt_strtox@@QAEXD@Z",
    "?unget@?$c_string_character_source@_W@__crt_strtox@@QAEX_W@Z",
    "?validate@?$c_string_character_source@_W@__crt_strtox@@QBE_NXZ",
    "?write_character@?$string_output_adapter@D@__crt_stdio_output@@QBE_NDQAH@Z",
    "?write_character@?$string_output_adapter@_W@__crt_stdio_output@@QBE_N_WQAH@Z",
    "?write_double_translated_ansi_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z",
    "?write_double_translated_unicode_nolock@@YA?AUwrite_result@?A0x4add88c5@@QBDI@Z",
    "?write_requires_double_translation_nolock@@YA_NH@Z",
    "?write_string@?$string_output_adapter@D@__crt_stdio_output@@QBEXQBDHQAH1@Z",
    "?write_string@?$string_output_adapter@_W@__crt_stdio_output@@QBEXQB_WHQAH1@Z",
    "?write_text_ansi_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z",
    "?write_text_utf16le_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z",
    "?write_text_utf8_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z",
    "?x_ismbbtype_l@@YAHPAU__crt_locale_pointers@@IHH@Z",
    "@_EH4_CallFilterFunc@8",
    "@_EH4_GlobalUnwind2@8",
    "@_EH4_LocalUnwind@16",
    "@_EH4_TransferToHandler@8",
    "ActivationContextStackPointer",
    "ActiveFrame",
    "ActiveRpcHandle",
    "ActivityId",
    "ArbitraryUserPointer",
    "BuildCatchObjectHelperInternal<class___FrameHandler3>",
    "BuildCatchObjectInternal<class___FrameHandler3>",
    "CPtoLocaleName",
    "Catch@0041b18d",
    "Catch@0041db1a",
    "CatchIt<class___FrameHandler3>",
    "Catch_All@0041b1b0",
    "Catch_All@0041db3d",
    "Catch_All@004236e1",
    "ClientId",
    "ConvertStringToBSTR",
    "CountOfOwnedCriticalSections",
    "CrossTebFlags",
    "CsrClientThread",
    "CurrentLocale",
    "CurrentTransactionHandle",
    "DAT_00000005",
    "DAT_00433280",
    "DAT_004332b4",
    "DAT_004332b8",
    "DAT_004332d4",
    "DAT_004332d8",
    "DAT_004332e8",
    "DAT_004332ec",
    "DAT_004332f0",
    "DAT_004335f0",
    "DAT_004335f4",
    "DAT_00433670",
    "DAT_00433678",
    "DAT_00433680",
    "DAT_00433694",
    "DAT_004336a8",
    "DAT_004336b4",
    "DAT_004336c0",
    "DAT_004336c1",
    "DAT_004336c2",
    "DAT_004336c3",
    "DAT_004336c4",
    "DAT_004336c5",
    "DAT_004336c6",
    "DAT_004336c7",
    "DAT_004336c8",
    "DAT_004336c9",
    "DAT_004336ca",
    "DAT_004336cb",
    "DAT_004336cc",
    "DAT_004336cd",
    "DAT_004336ce",
    "DAT_004336cf",
    "DAT_004336d0",
    "DAT_004336d1",
    "DAT_00433760",
    "DAT_00433764",
    "DAT_00433780",
    "DAT_00433790",
    "DAT_004337a0",
    "DAT_0043384c",
    "DAT_00433854",
    "DAT_00433888",
    "DAT_0043388c",
    "DAT_004338d0",
    "DAT_004338f8",
    "DAT_00433924",
    "DAT_0043393c",
    "DAT_0043395c",
    "DAT_00433964",
    "DAT_00433966",
    "DAT_0043396c",
    "DAT_00433974",
    "DAT_0043397c",
    "DAT_004339c8",
    "DAT_004339d0",
    "DAT_00433a14",
    "DAT_00433a1c",
    "DAT_00433a24",
    "DAT_00433a2c",
    "DAT_00433a34",
    "DAT_00433a38",
    "DAT_00433a3c",
    "DAT_00433b28",
    "DAT_004343d8",
    "DAT_004343e0",
    "DAT_004343f4",
    "DAT_00434420",
    "DAT_00434422",
    "DAT_00434430",
    "DAT_00434754",
    "DAT_00434764",
    "DAT_0043506c",
    "DAT_00435074",
    "DAT_0043517c",
    "DAT_00435208",
    "DAT_00435384",
    "DAT_00435394",
    "DAT_0043539c",
    "DAT_0043545c",
    "DAT_0043547c",
    "DAT_0043548c",
    "DAT_0043549c",
    "DAT_004354ac",
    "DAT_004354bc",
    "DAT_004354cc",
    "DAT_004354dc",
    "DAT_004354ec",
    "DAT_004354fc",
    "DAT_0043550c",
    "DAT_0043551c",
    "DAT_0043552c",
    "DAT_0043553c",
    "DAT_0043554c",
    "DAT_0043555c",
    "DAT_0043556c",
    "DAT_004355c8",
    "DAT_004355cc",
    "DAT_0043574c",
    "DAT_0043581c",
    "DAT_00436348",
    "DAT_0043635c",
    "DAT_0043636c",
    "DAT_00436380",
    "DAT_00436394",
    "DAT_00436398",
    "DAT_004363b8",
    "DAT_00436430",
    "DAT_004364c0",
    "DAT_004364c4",
    "DAT_004364c8",
    "DAT_00436570",
    "DAT_00436578",
    "DAT_0043657c",
    "DAT_004366d8",
    "DAT_004366dc",
    "DAT_004366e0",
    "DAT_004366e4",
    "DAT_00436720",
    "DAT_00436724",
    "DAT_00436728",
    "DAT_0043672c",
    "DAT_00436730",
    "DAT_00436734",
    "DAT_00436738",
    "DAT_00436780",
    "DAT_00436784",
    "DAT_00436788",
    "DAT_0043678c",
    "DAT_00436790",
    "DAT_00436794",
    "DAT_00436798",
    "DAT_0043679c",
    "DAT_004367a0",
    "DAT_004367a4",
    "DAT_004367a8",
    "DAT_004367ac",
    "DAT_004367d4",
    "DAT_004367dc",
    "DAT_00436818",
    "DAT_0043681c",
    "DAT_0043684c",
    "DAT_00436854",
    "DAT_0043685c",
    "DAT_00436864",
    "DAT_0043686c",
    "DAT_00436874",
    "DAT_0043687c",
    "DAT_00436900",
    "DAT_00436908",
    "DAT_00436910",
    "DAT_00436918",
    "DAT_00436920",
    "DAT_00436928",
    "DAT_00436930",
    "DAT_00436938",
    "DAT_00436940",
    "DAT_00436948",
    "DAT_00436950",
    "DAT_00436958",
    "DAT_00436a10",
    "DAT_00436a18",
    "DAT_00436bea",
    "DAT_00436ef0",
    "DAT_00437170",
    "DAT_004372f0",
    "DAT_00437938",
    "DAT_0043794c",
    "DAT_0043795c",
    "DAT_00437970",
    "DAT_00437984",
    "DAT_004379a0",
    "DAT_004379c4",
    "DAT_004379dc",
    "DAT_004382d4",
    "DAT_00438346",
    "DAT_00438347",
    "DAT_004383dc",
    "DAT_004383de",
    "DAT_004383df",
    "DAT_00438404",
    "DAT_00438428",
    "DAT_00438d58",
    "DAT_0043954c",
    "DAT_0043a498",
    "DAT_0043a4a4",
    "DAT_0043a4c0",
    "DAT_0043a4d0",
    "DAT_0043a4e0",
    "DAT_0043a4f0",
    "DAT_0043a500",
    "DAT_0043a510",
    "DAT_0043a520",
    "DAT_0043a530",
    "DAT_0043a540",
    "DAT_0043a550",
    "DAT_0043a560",
    "DAT_0043a570",
    "DAT_0043a580",
    "DAT_0043a590",
    "DAT_0043a5a0",
    "DAT_0043a5b0",
    "DAT_0043a5b8",
    "DAT_0043a5d0",
    "DAT_0043a5e0",
    "DAT_0043a5f0",
    "DAT_0043a600",
    "DAT_0043a61a",
    "DAT_0043a670",
    "DAT_0043a6b0",
    "DAT_0043a6b8",
    "DAT_0043a6f4",
    "DAT_0043a700",
    "DAT_0043a704",
    "DAT_0043a708",
    "DAT_0043a710",
    "DAT_0043a718",
    "DAT_0043a720",
    "DAT_0043a730",
    "DAT_0043ab40",
    "DAT_0043af50",
    "DAT_0043afe8",
    "DAT_0043aff0",
    "DAT_0043b0e0",
    "DAT_0043b0e8",
    "DAT_0043b0f0",
    "DAT_0043b118",
    "DAT_0043b2f8",
    "DAT_0043b80c",
    "DAT_0043b810",
    "DAT_0043b814",
    "DAT_0043b818",
    "DAT_0043ba38",
    "DAT_0043beb8",
    "DAT_0043bed4",
    "DAT_0043bef0",
    "DAT_0043c058",
    "DAT_0043c078",
    "DAT_0043c098",
    "DAT_0043c0b8",
    "DAT_0043c0d8",
    "DAT_0043c0f4",
    "DAT_0043c114",
    "DAT_0043c130",
    "DAT_0043c14c",
    "DAT_0043c180",
    "DAT_0043c1a0",
    "DAT_0043c1c8",
    "DAT_0043c248",
    "DAT_0043c268",
    "DAT_0043c284",
    "DAT_0043c2c0",
    "DAT_0043c2e0",
    "DAT_0043c300",
    "DAT_0043c328",
    "DAT_0043c348",
    "DAT_0043c368",
    "DAT_0043c388",
    "DAT_0043c3a8",
    "DAT_0043c3c8",
    "DAT_0043c3e8",
    "DAT_0043c408",
    "DAT_0043c428",
    "DAT_0043c448",
    "DAT_0043c468",
    "DAT_0043c488",
    "DAT_0043c4a8",
    "DAT_0043c4c8",
    "DAT_0043c4e8",
    "DAT_0043c508",
    "DAT_0043c530",
    "DAT_0043c550",
    "DAT_0043c570",
    "DAT_0043c590",
    "DAT_0043c5b0",
    "DAT_0043c5d0",
    "DAT_0043e000",
    "DAT_0043e020",
    "DAT_0043e040",
    "DAT_0043e044",
    "DAT_0043e04c",
    "DAT_0043e050",
    "DAT_0043e054",
    "DAT_0043e078",
    "DAT_0043e098",
    "DAT_0043e099",
    "DAT_0043e0c9",
    "DAT_0043e0e5",
    "DAT_0043e155",
    "DAT_0043e15d",
    "DAT_0043e198",
    "DAT_0043e199",
    "DAT_0043e1a8",
    "DAT_0043e1ac",
    "DAT_0043e1d8",
    "DAT_0043e1f4",
    "DAT_0043e210",
    "DAT_0043e214",
    "DAT_0043e270",
    "DAT_0043e274",
    "DAT_0043e280",
    "DAT_0043e720",
    "DAT_0043e728",
    "DAT_0043e72c",
    "DAT_0043e73c",
    "DAT_0043e7a0",
    "DAT_0043e7a4",
    "DAT_0043e7a8",
    "DAT_0043e7ac",
    "DAT_0043e7b8",
    "DAT_0043e7d0",
    "DAT_0043e7e0",
    "DAT_0043e7e4",
    "DAT_0043e7e8",
    "DAT_0043e7ec",
    "DAT_0043e7f0",
    "DAT_0043e7f4",
    "DAT_0043e7f8",
    "DAT_0043e7fc",
    "DAT_0043e800",
    "DAT_0043e810",
    "DAT_0043e820",
    "DAT_0043e858",
    "DAT_0043e968",
    "DAT_0043e970",
    "DAT_0043e978",
    "DAT_0043e9a8",
    "DAT_0043e9ac",
    "DAT_0043e9ae",
    "DAT_0043e9b8",
    "DAT_0043e9b9",
    "DAT_0043e9ba",
    "DAT_0043e9bb",
    "DAT_0043e9c0",
    "DAT_0043e9c1",
    "DAT_0043e9c8",
    "DAT_0043ea68",
    "DAT_0043eb70",
    "DAT_0043ec70",
    "DAT_0043ee94",
    "DAT_0043ee98",
    "DAT_0043eef0",
    "DAT_0043ef00",
    "DAT_0043ef10",
    "DAT_0043eff0",
    "DAT_0043f000",
    "DAT_0043f010",
    "DAT_0043f020",
    "DAT_00441021",
    "DAT_00441022",
    "DAT_00441023",
    "DAT_00441028",
    "DAT_0044102c",
    "DAT_00441030",
    "DAT_00441094",
    "DAT_00441098",
    "DAT_004410a4",
    "DAT_004410a8",
    "DAT_004410ac",
    "DAT_004410b0",
    "DAT_004410b1",
    "DAT_004410b8",
    "DAT_004410c0",
    "DAT_004450c0",
    "DAT_004450c8",
    "DAT_0044512b",
    "DAT_00445144",
    "DAT_004451c8",
    "DAT_004451c9",
    "DAT_004451ca",
    "DAT_004451cb",
    "DAT_004451cd",
    "DAT_004451ce",
    "DAT_004455c8",
    "DAT_004455c9",
    "DAT_004455ca",
    "DAT_004455cb",
    "DAT_004455ce",
    "DAT_004455cf",
    "DAT_004459c8",
    "DAT_004459c9",
    "DAT_004459ca",
    "DAT_004459cb",
    "DAT_004459cc",
    "DAT_004459cf",
    "DAT_00445dc8",
    "DAT_00445dc9",
    "DAT_00445dca",
    "DAT_00445dcb",
    "DAT_00445dcc",
    "DAT_00445dcd",
    "DAT_004461c8",
    "DAT_004461c9",
    "DAT_004461ca",
    "DAT_004461cb",
    "DAT_004465c8",
    "DAT_004465c9",
    "DAT_004465ca",
    "DAT_004465cb",
    "DAT_004469c8",
    "DAT_004469c9",
    "DAT_004469ca",
    "DAT_004469cb",
    "DAT_00446dc8",
    "DAT_00446dc9",
    "DAT_00446dca",
    "DAT_00446dcb",
    "DAT_004471c8",
    "DAT_004471c9",
    "DAT_004471ca",
    "DAT_004471cb",
    "DAT_004475c8",
    "DAT_004475c9",
    "DAT_004475ca",
    "DAT_004475cb",
    "DAT_004479c8",
    "DAT_004479c9",
    "DAT_004479ca",
    "DAT_004479cb",
    "DAT_00447dc8",
    "DAT_00447dc9",
    "DAT_00447dca",
    "DAT_00447dcb",
    "DAT_004481c8",
    "DAT_004481d0",
    "DAT_004481d4",
    "DAT_004481d8",
    "DAT_004481e0",
    "DAT_004481e8",
    "DAT_004482f0",
    "DAT_004482f4",
    "DAT_004483f0",
    "DAT_004483f2",
    "DAT_00448430",
    "DAT_00448434",
    "DAT_00448438",
    "DAT_00448440",
    "DAT_00448444",
    "DAT_0044844c",
    "DAT_00448450",
    "DAT_00448454",
    "DAT_00448455",
    "DAT_00448456",
    "DAT_00448457",
    "DAT_00448458",
    "DAT_0044845c",
    "DAT_00448460",
    "DAT_00448461",
    "DAT_00448462",
    "DAT_00448463",
    "DAT_00448464",
    "DAT_00448468",
    "DAT_00449468",
    "DAT_0044946a",
    "DAT_0044a46c",
    "DAT_0044a470",
    "DAT_0044a471",
    "DAT_0044a472",
    "DAT_0044b472",
    "DAT_0044c472",
    "DAT_0044c476",
    "DAT_0044c572",
    "DAT_0044c574",
    "DAT_0044c575",
    "DAT_0044c576",
    "DAT_0044c577",
    "DAT_0044c578",
    "DAT_004536d3",
    "DAT_004536d4",
    "DAT_0045370c",
    "DAT_0045370f",
    "DAT_00454848",
    "DAT_0045484c",
    "DAT_00454850",
    "DAT_00455872",
    "DAT_00456892",
    "DAT_00457894",
    "DAT_00457a78",
    "DAT_00457a7c",
    "DAT_00457b7a",
    "DAT_00457b7b",
    "DAT_00457b7c",
    "DAT_00457b80",
    "DAT_00457b82",
    "DAT_0045bb82",
    "DAT_0045cb82",
    "DAT_0045db82",
    "DAT_0045eb82",
    "DAT_0045eb86",
    "DAT_0045ec83",
    "DAT_0045ec84",
    "DAT_0045ec88",
    "DAT_0045ec8c",
    "DAT_0045ec90",
    "DAT_0045fc90",
    "DAT_0045fc94",
    "DAT_0045fc98",
    "DAT_0045fc9c",
    "DAT_0045fca0",
    "DAT_0045fca4",
    "DAT_0045fca8",
    "DAT_0045fcac",
    "DAT_0045fcb0",
    "DAT_0045fcb2",
    "DAT_0045fcb4",
    "DAT_0045fcb8",
    "DAT_00461cb8",
    "DAT_00461cbc",
    "DAT_00461cbd",
    "DAT_00461cd8",
    "DAT_00461cdc",
    "DAT_00461ce0",
    "DAT_00461ce4",
    "DAT_00461ce8",
    "DAT_00461cec",
    "DAT_00461cf0",
    "DAT_00461cfc",
    "DAT_00461d00",
    "DAT_00461d04",
    "DAT_00461d05",
    "DAT_00461d08",
    "DAT_00461d0c",
    "DAT_00461d10",
    "DAT_00461d14",
    "DAT_00461d18",
    "DAT_00461d1c",
    "DAT_00461d20",
    "DAT_00461d24",
    "DAT_00461d28",
    "DAT_00461d30",
    "DAT_00461d38",
    "DAT_00461d40",
    "DAT_00461d44",
    "DAT_00461d4c",
    "DAT_00461d50",
    "DAT_00461d54",
    "DAT_00461d90",
    "DAT_00461e1c",
    "DAT_00461e20",
    "DAT_00461e24",
    "DAT_00461e28",
    "DAT_00461e2c",
    "DAT_00461e30",
    "DAT_00461e34",
    "DAT_00461e38",
    "DAT_00461e3c",
    "DAT_00461e40",
    "DAT_00461e44",
    "DAT_00461e48",
    "DAT_00461e4c",
    "DAT_00461e50",
    "DAT_00461e54",
    "DAT_00461e58",
    "DAT_0046205c",
    "DAT_00462060",
    "DAT_00462070",
    "DAT_00462088",
    "DAT_004620a0",
    "DAT_004620e0",
    "DAT_004620ec",
    "DAT_00462108",
    "DAT_0046210c",
    "DAT_00462110",
    "DAT_00462114",
    "DAT_00462118",
    "DAT_0046211c",
    "DAT_00462120",
    "DAT_00462124",
    "DAT_00462128",
    "DAT_00462230",
    "DAT_00462234",
    "DAT_00462238",
    "DAT_0046223c",
    "DAT_00462240",
    "DAT_0046224c",
    "DAT_00462258",
    "DAT_0046225c",
    "DAT_00462260",
    "DAT_00462261",
    "DAT_00462262",
    "DAT_00462264",
    "DAT_00462268",
    "DAT_0046226c",
    "DAT_00462270",
    "DAT_00462274",
    "DAT_00462278",
    "DAT_0046227c",
    "DAT_00462280",
    "DAT_00462284",
    "DAT_00462288",
    "DAT_00462290",
    "DAT_00462294",
    "DAT_00462480",
    "DAT_00462490",
    "DAT_00462498",
    "DAT_004624b0",
    "DAT_004625d0",
    "DAT_004625d8",
    "DAT_004625dc",
    "DAT_00462628",
    "DAT_0046262c",
    "DAT_004626a8",
    "DAT_004626ac",
    "DAT_004626b0",
    "DAT_004626b4",
    "DAT_004626b8",
    "DAT_004626c4",
    "DAT_004626c8",
    "DAT_004626cc",
    "DAT_004626d0",
    "DAT_004626d4",
    "DAT_004626d8",
    "DAT_004626dc",
    "DAT_004626e0",
    "DAT_004626e4",
    "DAT_004626e8",
    "DAT_004626ec",
    "DAT_004626f0",
    "DAT_004626f4",
    "DAT_004626f8",
    "DAT_004626fc",
    "DAT_00462700",
    "DAT_00462704",
    "DAT_00462708",
    "DAT_0046270c",
    "DAT_00462710",
    "DAT_00462714",
    "DAT_00462718",
    "DAT_0046271c",
    "DWORD_0043d0a4",
    "DWORD_0046c000",
    "DbgSsReserved",
    "DeallocationStack",
    "DelayLoad_AdjustTokenPrivileges",
    "DelayLoad_AllocateAndInitializeSid",
    "DelayLoad_CLSIDFromString",
    "DelayLoad_CharUpperW",
    "DelayLoad_CheckTokenMembership",
    "DelayLoad_CoCreateInstance",
    "DelayLoad_CoSetProxyBlanket",
    "DelayLoad_CommDlgExtendedError",
    "DelayLoad_CopyImage",
    "DelayLoad_CopyRect",
    "DelayLoad_CreateCompatibleBitmap",
    "DelayLoad_CreateCompatibleDC",
    "DelayLoad_CreateDIBSection",
    "DelayLoad_CreateStreamOnHGlobal",
    "DelayLoad_CreateWindowExW",
    "DelayLoad_DefWindowProcW",
    "DelayLoad_DeleteDC",
    "DelayLoad_DeleteObject",
    "DelayLoad_DestroyIcon",
    "DelayLoad_DestroyWindow",
    "DelayLoad_DialogBoxParamW",
    "DelayLoad_DispatchMessageW",
    "DelayLoad_EnableWindow",
    "DelayLoad_EndDialog",
    "DelayLoad_FindWindowExW",
    "DelayLoad_FreeSid",
    "DelayLoad_GetClassNameW",
    "DelayLoad_GetClientRect",
    "DelayLoad_GetDC",
    "DelayLoad_GetDeviceCaps",
    "DelayLoad_GetDlgItem",
    "DelayLoad_GetDlgItemTextW",
    "DelayLoad_GetMessageW",
    "DelayLoad_GetObjectW",
    "DelayLoad_GetOpenFileNameW",
    "DelayLoad_GetParent",
    "DelayLoad_GetSaveFileNameW",
    "DelayLoad_GetSysColor",
    "DelayLoad_GetSystemMetrics",
    "DelayLoad_GetWindow",
    "DelayLoad_GetWindowLongW",
    "DelayLoad_GetWindowRect",
    "DelayLoad_InitCommonControlsEx",
    "DelayLoad_IsDialogMessageW",
    "DelayLoad_IsWindow",
    "DelayLoad_IsWindowVisible",
    "DelayLoad_LoadBitmapW",
    "DelayLoad_LoadCursorW",
    "DelayLoad_LoadIconW",
    "DelayLoad_LoadStringW",
    "DelayLoad_LookupPrivilegeValueW",
    "DelayLoad_MapWindowPoints",
    "DelayLoad_MessageBoxW",
    "DelayLoad_OemToCharBuffA",
    "DelayLoad_OleInitialize",
    "DelayLoad_OleUninitialize",
    "DelayLoad_OpenProcessToken",
    "DelayLoad_PeekMessageW",
    "DelayLoad_PostMessageW",
    "DelayLoad_RegCloseKey",
    "DelayLoad_RegCreateKeyExW",
    "DelayLoad_RegOpenKeyExW",
    "DelayLoad_RegQueryValueExW",
    "DelayLoad_RegSetValueExW",
    "DelayLoad_RegisterClassExW",
    "DelayLoad_ReleaseDC",
    "DelayLoad_SHAutoComplete",
    "DelayLoad_SHBrowseForFolderW",
    "DelayLoad_SHChangeNotify",
    "DelayLoad_SHFileOperationW",
    "DelayLoad_SHGetFileInfoW",
    "DelayLoad_SHGetFolderLocation",
    "DelayLoad_SHGetMalloc",
    "DelayLoad_SHGetPathFromIDListW",
    "DelayLoad_SelectObject",
    "DelayLoad_SendDlgItemMessageW",
    "DelayLoad_SendMessageW",
    "DelayLoad_SetDlgItemTextW",
    "DelayLoad_SetFileSecurityW",
    "DelayLoad_SetFocus",
    "DelayLoad_SetForegroundWindow",
    "DelayLoad_SetProcessDefaultLayout",
    "DelayLoad_SetWindowLongW",
    "DelayLoad_SetWindowPos",
    "DelayLoad_SetWindowTextW",
    "DelayLoad_ShellExecuteExW",
    "DelayLoad_ShowWindow",
    "DelayLoad_StretchBlt",
    "DelayLoad_TranslateMessage",
    "DelayLoad_UpdateWindow",
    "DelayLoad_WaitForInputIdle",
    "DelayLoad_wvsprintfW",
    "DloadAcquireSectionWriteAccess",
    "DloadLock",
    "DloadProtectSection",
    "DloadReleaseSectionWriteAccess",
    "DloadUnlock",
    "EnvironmentPointer",
    "EtwLocalData",
    "EtwTraceData",
    "ExFilterRethrow",
    "ExceptionCode",
    "ExceptionList",
    "FID_conflict:___CxxFrameHandler3",
    "FID_conflict:___TypeMatch",
    "FID_conflict:___acrt_errno_from_os_error",
    "FID_conflict:__vsnprintf_c_l",
    "FID_conflict:__vsnprintf_l",
    "FID_conflict:_atoi",
    "FID_conflict:_free",
    "FUN_00401000",
    "FUN_00401010",
    "FUN_00401020",
    "FUN_00401040",
    "FUN_00401050",
    "FUN_00401060",
    "FUN_00401070",
    "FUN_00401090",
    "FUN_004010b0",
    "FUN_004010d0",
    "FUN_004010f0",
    "FUN_00401100",
    "FUN_0040124f",
    "FUN_004012d3",
    "FUN_004012f1",
    "FUN_00401316",
    "FUN_0040138b",
    "FUN_004013ba",
    "FUN_004013dc",
    "FUN_0040157a",
    "FUN_004015c6",
    "FUN_004015fb",
    "FUN_00401645",
    "FUN_00401692",
    "FUN_004016f8",
    "FUN_00401710",
    "FUN_00401732",
    "FUN_004017e9",
    "FUN_004018a9",
    "FUN_004018c3",
    "FUN_004018f6",
    "FUN_00401983",
    "FUN_004019af",
    "FUN_00401a04",
    "FUN_00401df0",
    "FUN_00401df8",
    "FUN_00401e50",
    "FUN_00401f47",
    "FUN_00401f6d",
    "FUN_00401fdc",
    "FUN_00402021",
    "FUN_00402063",
    "FUN_004020bd",
    "FUN_004020d7",
    "FUN_004020fa",
    "FUN_00402112",
    "FUN_00402134",
    "FUN_004021cf",
    "FUN_00402209",
    "FUN_00402210",
    "FUN_0040286b",
    "FUN_004032f7",
    "FUN_00403b2d",
    "FUN_00403bba",
    "FUN_00403e6d",
    "FUN_00403efb",
    "FUN_00403f4a",
    "FUN_00403fa3",
    "FUN_00403ffc",
    "FUN_0040403d",
    "FUN_0040405f",
    "FUN_00404092",
    "FUN_004040b0",
    "FUN_004040bc",
    "FUN_004040fe",
    "FUN_00404518",
    "FUN_00405627",
    "FUN_004056ed",
    "FUN_00405769",
    "FUN_00405821",
    "FUN_004058b1",
    "FUN_00405912",
    "FUN_00405a9a",
    "FUN_00405abd",
    "FUN_00405b3d",
    "FUN_00405b48",
    "FUN_00405c4b",
    "FUN_00405ca1",
    "FUN_00405cac",
    "FUN_00405d1a",
    "FUN_00405dce",
    "FUN_00405dff",
    "FUN_00405e37",
    "FUN_00405ef0",
    "FUN_00405f02",
    "FUN_00405f80",
    "FUN_00405f85",
    "FUN_00406010",
    "FUN_0040603a",
    "FUN_00406122",
    "FUN_004063e2",
    "FUN_00406639",
    "FUN_00406844",
    "FUN_00406976",
    "FUN_00406986",
    "FUN_00406b84",
    "FUN_00406b99",
    "FUN_00406baa",
    "FUN_00406bd5",
    "FUN_00406bfd",
    "FUN_00406c23",
    "FUN_00406c36",
    "FUN_00406c74",
    "FUN_00406ca7",
    "FUN_00406cba",
    "FUN_00406ce1",
    "FUN_00406d0c",
    "FUN_00406d1a",
    "FUN_00406d35",
    "FUN_00406d5b",
    "FUN_00406d83",
    "FUN_00406dcb",
    "FUN_00406e47",
    "FUN_00406e7a",
    "FUN_00406e98",
    "FUN_00406eb5",
    "FUN_00406edb",
    "FUN_00406f04",
    "FUN_00406fa5",
    "FUN_00407401",
    "FUN_00407542",
    "FUN_004075de",
    "FUN_004077b8",
    "FUN_004077df",
    "FUN_00407861",
    "FUN_00407967",
    "FUN_00407a0d",
    "FUN_00407a78",
    "FUN_00407a7b",
    "FUN_00407a9c",
    "FUN_00407b0d",
    "FUN_00407b9e",
    "FUN_00407bca",
    "FUN_00407be7",
    "FUN_00407c0d",
    "FUN_00407c64",
    "FUN_00407c7d",
    "FUN_00407db2",
    "FUN_00407fc0",
    "FUN_00408117",
    "FUN_00408167",
    "FUN_00408284",
    "FUN_00408430",
    "FUN_0040848e",
    "FUN_00409155",
    "FUN_00409215",
    "FUN_004092a3",
    "FUN_00409382",
    "FUN_00409556",
    "FUN_0040959a",
    "FUN_004095f0",
    "FUN_00409620",
    "FUN_0040966e",
    "FUN_0040974e",
    "FUN_00409785",
    "FUN_0040981a",
    "FUN_00409892",
    "FUN_004098bc",
    "FUN_004098e0",
    "FUN_00409a3c",
    "FUN_00409a74",
    "FUN_00409bd0",
    "FUN_00409d70",
    "FUN_00409d9f",
    "FUN_00409da2",
    "FUN_00409e80",
    "FUN_00409f09",
    "FUN_00409f1a",
    "FUN_00409f42",
    "FUN_00409f7a",
    "FUN_0040a0b1",
    "FUN_0040a18f",
    "FUN_0040a1e0",
    "FUN_0040a231",
    "FUN_0040a243",
    "FUN_0040a28f",
    "FUN_0040a2a6",
    "FUN_0040a2b2",
    "FUN_0040a346",
    "FUN_0040a354",
    "FUN_0040a4ed",
    "FUN_0040a544",
    "FUN_0040a55a",
    "FUN_0040a56d",
    "FUN_0040a5d1",
    "FUN_0040a67e",
    "FUN_0040a69b",
    "FUN_0040a814",
    "FUN_0040a84a",
    "FUN_0040a85a",
    "FUN_0040a881",
    "FUN_0040a89d",
    "FUN_0040a8ce",
    "FUN_0040a8e0",
    "FUN_0040a8f9",
    "FUN_0040a971",
    "FUN_0040a99e",
    "FUN_0040aa12",
    "FUN_0040aa56",
    "FUN_0040aab0",
    "FUN_0040aaea",
    "FUN_0040ab1a",
    "FUN_0040ab83",
    "FUN_0040abb6",
    "FUN_0040ac05",
    "FUN_0040ac99",
    "FUN_0040acc4",
    "FUN_0040ad5e",
    "FUN_0040ad87",
    "FUN_0040ada6",
    "FUN_0040addb",
    "FUN_0040ae2d",
    "FUN_0040ae7f",
    "FUN_0040ae92",
    "FUN_0040aef6",
    "FUN_0040af24",
    "FUN_0040b146",
    "FUN_0040b1b4",
    "FUN_0040b1dc",
    "FUN_0040b37a",
    "FUN_0040b4cb",
    "FUN_0040b4ec",
    "FUN_0040b505",
    "FUN_0040b5a6",
    "FUN_0040b5f4",
    "FUN_0040b61e",
    "FUN_0040b690",
    "FUN_0040b6c4",
    "FUN_0040b76c",
    "FUN_0040b8db",
    "FUN_0040b92d",
    "FUN_0040b94e",
    "FUN_0040b991",
    "FUN_0040ba1e",
    "FUN_0040baad",
    "FUN_0040bb03",
    "FUN_0040bc8d",
    "FUN_0040bc98",
    "FUN_0040bcc3",
    "FUN_0040bcf8",
    "FUN_0040bd1a",
    "FUN_0040bd9d",
    "FUN_0040bdb4",
    "FUN_0040bdf3",
    "FUN_0040be5e",
    "FUN_0040c058",
    "FUN_0040c0c5",
    "FUN_0040c249",
    "FUN_0040c27e",
    "FUN_0040c29a",
    "FUN_0040c2e4",
    "FUN_0040c310",
    "FUN_0040c335",
    "FUN_0040c36e",
    "FUN_0040c3b0",
    "FUN_0040c3b6",
    "FUN_0040c3bf",
    "FUN_0040c426",
    "FUN_0040c985",
    "FUN_0040c9d0",
    "FUN_0040ca1f",
    "FUN_0040ca36",
    "FUN_0040ca93",
    "FUN_0040cb49",
    "FUN_0040cb83",
    "FUN_0040cbaf",
    "FUN_0040cbc6",
    "FUN_0040cbfb",
    "FUN_0040cc3d",
    "FUN_0040cc5d",
    "FUN_0040ccac",
    "FUN_0040ccdb",
    "FUN_0040ccfb",
    "FUN_0040cd66",
    "FUN_0040cd8a",
    "FUN_0040ce40",
    "FUN_0040cee1",
    "FUN_0040cf3d",
    "FUN_0040cfd4",
    "FUN_0040d051",
    "FUN_0040d099",
    "FUN_0040d0b6",
    "FUN_0040d0cb",
    "FUN_0040d114",
    "FUN_0040d300",
    "FUN_0040d368",
    "FUN_0040d3bf",
    "FUN_0040d40d",
    "FUN_0040d459",
    "FUN_0040d4b8",
    "FUN_0040d57c",
    "FUN_0040d640",
    "FUN_0040d6e0",
    "FUN_0040d710",
    "FUN_0040d780",
    "FUN_0040d7a0",
    "FUN_0040d7d0",
    "FUN_0040d800",
    "FUN_0040d81c",
    "FUN_0040d89c",
    "FUN_0040d8ec",
    "FUN_0040d9b0",
    "FUN_0040d9f0",
    "FUN_0040da42",
    "FUN_0040da67",
    "FUN_0040e261",
    "FUN_0040e27c",
    "FUN_0040e29e",
    "FUN_0040e2c1",
    "FUN_0040e2e8",
    "FUN_0040e5b1",
    "FUN_0040e5cb",
    "FUN_0040e617",
    "FUN_0040e648",
    "FUN_0040e69c",
    "FUN_0040e6b5",
    "FUN_0040e890",
    "FUN_0040e985",
    "FUN_0040e9b7",
    "FUN_0040ee7a",
    "FUN_0040ef04",
    "FUN_0040ef2e",
    "FUN_0040efe2",
    "FUN_0040f1d0",
    "FUN_0040f1e8",
    "FUN_0040f209",
    "FUN_0040f279",
    "FUN_0040f28c",
    "FUN_0040f2c5",
    "FUN_0040f303",
    "FUN_0040f344",
    "FUN_0040f3fa",
    "FUN_0040f445",
    "FUN_0040f461",
    "FUN_0040fcda",
    "FUN_0040fd9c",
    "FUN_0040fdcd",
    "FUN_0040fe6c",
    "FUN_0040ff33",
    "FUN_00410016",
    "FUN_0041005c",
    "FUN_004100b7",
    "FUN_00410264",
    "FUN_0041028f",
    "FUN_004102ba",
    "FUN_00410371",
    "FUN_0041042a",
    "FUN_0041045b",
    "FUN_0041047a",
    "FUN_0041048d",
    "FUN_004104a4",
    "FUN_004104bd",
    "FUN_00410580",
    "FUN_004105a7",
    "FUN_004105da",
    "FUN_00410602",
    "FUN_00410637",
    "FUN_00410659",
    "FUN_00410695",
    "FUN_004106a7",
    "FUN_004106e3",
    "FUN_00410708",
    "FUN_0041071e",
    "FUN_00410723",
    "FUN_004107bc",
    "FUN_0041081b",
    "FUN_00410863",
    "FUN_00410e08",
    "FUN_00410e46",
    "FUN_00410eed",
    "FUN_00410f86",
    "FUN_00410fe4",
    "FUN_0041101f",
    "FUN_0041109e",
    "FUN_004110dc",
    "FUN_004110f3",
    "FUN_00411160",
    "FUN_0041116e",
    "FUN_004111cf",
    "FUN_00411208",
    "FUN_00411218",
    "FUN_0041138a",
    "FUN_004113a4",
    "FUN_004113d2",
    "FUN_0041140e",
    "FUN_0041146a",
    "FUN_0041158f",
    "FUN_004115bb",
    "FUN_004115da",
    "FUN_004115fe",
    "FUN_00411943",
    "FUN_004119f1",
    "FUN_00411b1e",
    "FUN_00411b42",
    "FUN_00411b5d",
    "FUN_00411b63",
    "FUN_00411b66",
    "FUN_00411b84",
    "FUN_00411bbd",
    "FUN_00411bfd",
    "FUN_00411c3b",
    "FUN_00411da7",
    "FUN_00411ddf",
    "FUN_00411e15",
    "FUN_00411f24",
    "FUN_00411fac",
    "FUN_00411fbb",
    "FUN_00411fdd",
    "FUN_0041203e",
    "FUN_00412067",
    "FUN_00412089",
    "FUN_004121c0",
    "FUN_004121e0",
    "FUN_004121f8",
    "FUN_00412210",
    "FUN_00412239",
    "FUN_0041228c",
    "FUN_00412297",
    "FUN_00412360",
    "FUN_00412380",
    "FUN_00412391",
    "FUN_004123c9",
    "FUN_00412450",
    "FUN_0041247a",
    "FUN_0041253e",
    "FUN_004125a7",
    "FUN_00412922",
    "FUN_0041293c",
    "FUN_00412971",
    "FUN_004129cd",
    "FUN_00412a71",
    "FUN_00412bb8",
    "FUN_00412bde",
    "FUN_00412bfc",
    "FUN_00412c30",
    "FUN_00412c88",
    "FUN_00412dbd",
    "FUN_00412f75",
    "FUN_00413020",
    "FUN_00413067",
    "FUN_00413083",
    "FUN_004130db",
    "FUN_00413106",
    "FUN_00413137",
    "FUN_004132aa",
    "FUN_00413377",
    "FUN_004134f3",
    "FUN_00413529",
    "FUN_0041359e",
    "FUN_004136a2",
    "FUN_00413797",
    "FUN_0041390d",
    "FUN_00413de6",
    "FUN_00413e0b",
    "FUN_00413f46",
    "FUN_00413f9d",
    "FUN_00414024",
    "FUN_00414088",
    "FUN_004143bf",
    "FUN_00414686",
    "FUN_004147ab",
    "FUN_00414872",
    "FUN_00414894",
    "FUN_00414a49",
    "FUN_00414a76",
    "FUN_00414ac5",
    "FUN_00414b3a",
    "FUN_00414b9d",
    "FUN_00414c4c",
    "FUN_00414ca8",
    "FUN_00414cbd",
    "FUN_00414d0a",
    "FUN_00414dc4",
    "FUN_00414e52",
    "FUN_00414f26",
    "FUN_00414fcd",
    "FUN_00415202",
    "FUN_004154d2",
    "FUN_0041552f",
    "FUN_0041624a",
    "FUN_00416cdc",
    "FUN_00417153",
    "FUN_004177c0",
    "FUN_004177ef",
    "FUN_004181ef",
    "FUN_004184f1",
    "FUN_00418532",
    "FUN_00418661",
    "FUN_004187ba",
    "FUN_00418934",
    "FUN_00418978",
    "FUN_00418a0c",
    "FUN_00418bc9",
    "FUN_00418c24",
    "FUN_00418c5e",
    "FUN_00418c80",
    "FUN_00418c8d",
    "FUN_00419070",
    "FUN_004190b7",
    "FUN_0041910c",
    "FUN_00419178",
    "FUN_00419220",
    "FUN_00419230",
    "FUN_00419240",
    "FUN_00419250",
    "FUN_00419260",
    "FUN_00419270",
    "FUN_00419280",
    "FUN_00419285",
    "FUN_0041929d",
    "FUN_00419310",
    "FUN_00419320",
    "FUN_00419330",
    "FUN_00419338",
    "FUN_00419380",
    "FUN_00419390",
    "FUN_0041939d",
    "FUN_00419420",
    "FUN_00419430",
    "FUN_00419440",
    "FUN_00419450",
    "FUN_00419470",
    "FUN_00419480",
    "FUN_00419490",
    "FUN_004194a0",
    "FUN_004194d0",
    "FUN_004194e0",
    "FUN_00419570",
    "FUN_00419580",
    "FUN_004195aa",
    "FUN_004195eb",
    "FUN_00419711",
    "FUN_00419862",
    "FUN_00419950",
    "FUN_00419955",
    "FUN_00419a70",
    "FUN_00419b60",
    "FUN_00419b70",
    "FUN_00419b80",
    "FUN_00419b90",
    "FUN_00419ba0",
    "FUN_00419c04",
    "FUN_00419c70",
    "FUN_00419ca0",
    "FUN_00419cb0",
    "FUN_00419cc0",
    "FUN_00419cd0",
    "FUN_00419ce0",
    "FUN_00419cfe",
    "FUN_00419ed0",
    "FUN_00419ed5",
    "FUN_0041a020",
    "FUN_0041a030",
    "FUN_0041a040",
    "FUN_0041a050",
    "FUN_0041a060",
    "FUN_0041a070",
    "FUN_0041a0bf",
    "FUN_0041a182",
    "FUN_0041a1af",
    "FUN_0041a1d4",
    "FUN_0041a2b0",
    "FUN_0041a318",
    "FUN_0041a3b9",
    "FUN_0041a400",
    "FUN_0041a440",
    "FUN_0041a48a",
    "FUN_0041a5c6",
    "FUN_0041a5e4",
    "FUN_0041a605",
    "FUN_0041a626",
    "FUN_0041a64d",
    "FUN_0041a663",
    "FUN_0041a699",
    "FUN_0041a6c2",
    "FUN_0041a7e4",
    "FUN_0041a80c",
    "FUN_0041aac9",
    "FUN_0041abab",
    "FUN_0041ac04",
    "FUN_0041ac16",
    "FUN_0041ac7c",
    "FUN_0041acce",
    "FUN_0041ad10",
    "FUN_0041add2",
    "FUN_0041ae2f",
    "FUN_0041aecd",
    "FUN_0041af0f",
    "FUN_0041af98",
    "FUN_0041b093",
    "FUN_0041b1be",
    "FUN_0041b270",
    "FUN_0041b314",
    "FUN_0041b425",
    "FUN_0041b48e",
    "FUN_0041b568",
    "FUN_0041b5c0",
    "FUN_0041b6dd",
    "FUN_0041b776",
    "FUN_0041b7e0",
    "FUN_0041c220",
    "FUN_0041c5c4",
    "FUN_0041c6f0",
    "FUN_0041c73f",
    "FUN_0041d453",
    "FUN_0041d4d4",
    "FUN_0041d600",
    "FUN_0041d694",
    "FUN_0041d69e",
    "FUN_0041d78f",
    "FUN_0041d9f3",
    "FUN_0041da52",
    "FUN_0041db4b",
    "FUN_0041dbde",
    "FUN_0041dc3b",
    "FUN_0041dca1",
    "FUN_0041dcdd",
    "FUN_0041dd6d",
    "FUN_0041dda0",
    "FUN_0041de6b",
    "FUN_0041dec2",
    "FUN_0041df1e",
    "FUN_0041e1db",
    "FUN_0041e3f4",
    "FUN_0041e45f",
    "FUN_0041e484",
    "FUN_0041e517",
    "FUN_0041e578",
    "FUN_0041e5ee",
    "FUN_0041e6a3",
    "FUN_0041e712",
    "FUN_0041eb38",
    "FUN_0041eb68",
    "FUN_0041eb78",
    "FUN_0041ecdb",
    "FUN_0041ed64",
    "FUN_0041ee30",
    "FUN_0041ee53",
    "FUN_0041f2c5",
    "FUN_0041f2e0",
    "FUN_0041f390",
    "FUN_0041f3a0",
    "FUN_0041f540",
    "FUN_0041f55b",
    "FUN_0041f580",
    "FUN_0041f5ad",
    "FUN_0041f654",
    "FUN_0041f828",
    "FUN_0041f838",
    "FUN_0041f990",
    "FUN_0041f993",
    "FUN_0041f9d5",
    "FUN_0041fa46",
    "FUN_0041fae6",
    "FUN_0041faec",
    "FUN_0041fb00",
    "FUN_0041fb24",
    "FUN_0041fb2a",
    "FUN_0041fb47",
    "FUN_0041fb53",
    "FUN_0041fb59",
    "FUN_0041fb5f",
    "FUN_0041fb90",
    "FUN_0041fbbc",
    "FUN_0041fbca",
    "FUN_0041fbf2",
    "FUN_004202f7",
    "FUN_00420300",
    "FUN_00420320",
    "FUN_00420904",
    "FUN_00420961",
    "FUN_00420c4a",
    "FUN_004222c6",
    "FUN_004223f9",
    "FUN_00422670",
    "FUN_0042279b",
    "FUN_00422ad0",
    "FUN_00422e31",
    "FUN_004234a0",
    "FUN_004234bb",
    "FUN_004234f2",
    "FUN_00423645",
    "FUN_004236c1",
    "FUN_00423830",
    "FUN_0042384a",
    "FUN_00423907",
    "FUN_004239a0",
    "FUN_00423a40",
    "FUN_00423de0",
    "FUN_00423e10",
    "FUN_00423e33",
    "FUN_00423e3e",
    "FUN_0042614a",
    "FUN_00426911",
    "FUN_00426a38",
    "FUN_00427a4a",
    "FUN_00427aeb",
    "FUN_00427ddf",
    "FUN_00427edd",
    "FUN_0042825c",
    "FUN_004284bc",
    "FUN_0042850d",
    "FUN_004287ca",
    "FUN_00428860",
    "FUN_00428880",
    "FUN_004288a0",
    "FUN_004288b0",
    "FUN_004288f0",
    "FUN_00428900",
    "FUN_0042899b",
    "FUN_004289a1",
    "FUN_004289c9",
    "FUN_00428bc9",
    "FUN_00428c34",
    "FUN_00428c69",
    "FUN_00428dc1",
    "FUN_00428ff8",
    "FUN_00429087",
    "FUN_004294a9",
    "FUN_0042950a",
    "FUN_00429555",
    "FUN_0042959d",
    "FUN_0042a500",
    "FUN_0042a6ed",
    "FUN_0042b1a0",
    "FUN_0042b643",
    "FUN_0042b685",
    "FUN_0042bbdf",
    "FUN_0042bee0",
    "FUN_0042bfb3",
    "FUN_0042c030",
    "FUN_0042c050",
    "FUN_0042c178",
    "FUN_0042c268",
    "FUN_0042c431",
    "FUN_0042c5b7",
    "FUN_0042cdd5",
    "FUN_0042ed21",
    "FUN_0042ee85",
    "FUN_0042eeaf",
    "FUN_0042f101",
    "FUN_0042f200",
    "FUN_0042f20f",
    "FUN_0042f2f7",
    "FUN_0042f460",
    "FUN_0042f4b8",
    "FUN_0042f570",
    "FUN_0042fcdf",
    "FUN_00430099",
    "FUN_0043012f",
    "FUN_004302b7",
    "FUN_004308a0",
    "FUN_004308b0",
    "FUN_004308ce",
    "FUN_00430f6c",
    "FUN_00430fc8",
    "FUN_004310d0",
    "FUN_00431439",
    "FUN_004314a3",
    "FUN_004316d9",
    "FUN_00431db6",
    "FUN_00431f40",
    "FUN_00432150",
    "FUN_00432390",
    "FUN_004323b0",
    "FUN_00432430",
    "FUN_00432b70",
    "FUN_00432b80",
    "FUN_00432b90",
    "FUN_00432ba0",
    "FUN_00432bb0",
    "FUN_00432bc0",
    "FUN_00432bd0",
    "FiberData",
    "FindHandlerForForeignException<class___FrameHandler3>",
    "FlsData",
    "FpSoftwareStatusRegister",
    "FuncInfo_0043b854",
    "FuncInfo_0043b878",
    "FuncInfo_0043b8d4",
    "FuncInfo_0043b908",
    "FuncInfo_0043b934",
    "FuncInfo_0043b960",
    "FuncInfo_0043b98c",
    "FuncInfo_0043b9b0",
    "FuncInfo_0043ba14",
    "FuncInfo_0043ba84",
    "FuncInfo_0043bac0",
    "FuncInfo_0043baf4",
    "FuncInfo_0043bb20",
    "FuncInfo_0043bb54",
    "FuncInfo_0043bb88",
    "FuncInfo_0043bbbc",
    "FuncInfo_0043bbe8",
    "FuncInfo_0043bc14",
    "FuncInfo_0043bc40",
    "FuncInfo_0043bc6c",
    "FuncInfo_0043bca8",
    "FuncInfo_0043bcdc",
    "FuncInfo_0043bd00",
    "FuncInfo_0043bd54",
    "FuncInfo_0043bd88",
    "FuncInfo_0043bdb4",
    "FuncInfo_0043bde0",
    "FuncInfo_0043be0c",
    "FuncInfo_0043be38",
    "FuncInfo_0043be5c",
    "FuncInfo_0043bf58",
    "FuncInfo_0043bfb0",
    "FuncInfo_0043c004",
    "FuncInfo_0043c030",
    "FuncInfo_0043c224",
    "GdiBatchCount",
    "GdiCLientTID",
    "GdiCachedProcessHandle",
    "GdiClientPID",
    "GdiTebBatch",
    "GdiThreadLocalInfo",
    "GdipAlloc",
    "GdipCloneImage",
    "GdipCreateBitmapFromStream",
    "GdipCreateBitmapFromStreamICM",
    "GdipCreateHBITMAPFromBitmap",
    "GdipDisposeImage",
    "GdipFree",
    "GdiplusShutdown",
    "GdiplusStartup",
    "GetTableIndexFromLocaleName",
    "GuaranteedStackBytes",
    "GuardCFFunctionTable",
    "HandlerType_0043c1f0",
    "HandlerType_ARRAY_0043bf38",
    "HandlerType_ARRAY_0043bf90",
    "HardErrorMode",
    "HeapVirtualAffinity",
    "IMAGE_DEBUG_DIRECTORY_0043b11c",
    "IMAGE_DIRECTORY_ENTRY_EXPORT_0043d070",
    "IMAGE_DOS_HEADER_00400000",
    "IMAGE_DOS_HEADER_00400000.e_cblp",
    "IMAGE_DOS_HEADER_00400000.e_lfanew",
    "IMAGE_IMPORT_BY_NAME_10_0043c8da",
    "IMAGE_IMPORT_BY_NAME_10_0043c97a",
    "IMAGE_IMPORT_BY_NAME_10_0043ca5c",
    "IMAGE_IMPORT_BY_NAME_10_0043ca96",
    "IMAGE_IMPORT_BY_NAME_10_0043cb3e",
    "IMAGE_IMPORT_BY_NAME_10_0043cbb0",
    "IMAGE_IMPORT_BY_NAME_11_0043c89c",
    "IMAGE_IMPORT_BY_NAME_11_0043c8aa",
    "IMAGE_IMPORT_BY_NAME_11_0043c9a6",
    "IMAGE_IMPORT_BY_NAME_11_0043caa2",
    "IMAGE_IMPORT_BY_NAME_11_0043cc4a",
    "IMAGE_IMPORT_BY_NAME_11_0043cc6c",
    "IMAGE_IMPORT_BY_NAME_12_0043c986",
    "IMAGE_IMPORT_BY_NAME_12_0043ca36",
    "IMAGE_IMPORT_BY_NAME_12_0043ca68",
    "IMAGE_IMPORT_BY_NAME_12_0043cab0",
    "IMAGE_IMPORT_BY_NAME_12_0043cb94",
    "IMAGE_IMPORT_BY_NAME_12_0043cba2",
    "IMAGE_IMPORT_BY_NAME_12_0043cbbc",
    "IMAGE_IMPORT_BY_NAME_12_0043cd50",
    "IMAGE_IMPORT_BY_NAME_12_0043cda6",
    "IMAGE_IMPORT_BY_NAME_13_0043c8b8",
    "IMAGE_IMPORT_BY_NAME_13_0043c8e6",
    "IMAGE_IMPORT_BY_NAME_13_0043ca08",
    "IMAGE_IMPORT_BY_NAME_13_0043ca44",
    "IMAGE_IMPORT_BY_NAME_13_0043cae6",
    "IMAGE_IMPORT_BY_NAME_13_0043caf6",
    "IMAGE_IMPORT_BY_NAME_13_0043cc1a",
    "IMAGE_IMPORT_BY_NAME_13_0043cc3a",
    "IMAGE_IMPORT_BY_NAME_14_0043c91c",
    "IMAGE_IMPORT_BY_NAME_14_0043c92c",
    "IMAGE_IMPORT_BY_NAME_14_0043c9f8",
    "IMAGE_IMPORT_BY_NAME_14_0043ca76",
    "IMAGE_IMPORT_BY_NAME_14_0043ca86",
    "IMAGE_IMPORT_BY_NAME_14_0043cc2a",
    "IMAGE_IMPORT_BY_NAME_14_0043cd70",
    "IMAGE_IMPORT_BY_NAME_14_0043ce94",
    "IMAGE_IMPORT_BY_NAME_15_0043c8c8",
    "IMAGE_IMPORT_BY_NAME_15_0043c93c",
    "IMAGE_IMPORT_BY_NAME_15_0043c94e",
    "IMAGE_IMPORT_BY_NAME_15_0043c994",
    "IMAGE_IMPORT_BY_NAME_15_0043c9b4",
    "IMAGE_IMPORT_BY_NAME_15_0043cd94",
    "IMAGE_IMPORT_BY_NAME_15_0043ce08",
    "IMAGE_IMPORT_BY_NAME_15_0043ce30",
    "IMAGE_IMPORT_BY_NAME_15_0043ceb6",
    "IMAGE_IMPORT_BY_NAME_16_0043c8f6",
    "IMAGE_IMPORT_BY_NAME_16_0043c9da",
    "IMAGE_IMPORT_BY_NAME_16_0043ca18",
    "IMAGE_IMPORT_BY_NAME_16_0043cb1a",
    "IMAGE_IMPORT_BY_NAME_16_0043cb2c",
    "IMAGE_IMPORT_BY_NAME_16_0043cb4a",
    "IMAGE_IMPORT_BY_NAME_16_0043cd5e",
    "IMAGE_IMPORT_BY_NAME_16_0043cdf6",
    "IMAGE_IMPORT_BY_NAME_16_0043ce82",
    "IMAGE_IMPORT_BY_NAME_16_0043cea4",
    "IMAGE_IMPORT_BY_NAME_17_0043c908",
    "IMAGE_IMPORT_BY_NAME_17_0043c9c6",
    "IMAGE_IMPORT_BY_NAME_17_0043cabe",
    "IMAGE_IMPORT_BY_NAME_17_0043cad2",
    "IMAGE_IMPORT_BY_NAME_17_0043cb06",
    "IMAGE_IMPORT_BY_NAME_17_0043cbca",
    "IMAGE_IMPORT_BY_NAME_17_0043cc58",
    "IMAGE_IMPORT_BY_NAME_17_0043cc7a",
    "IMAGE_IMPORT_BY_NAME_17_0043cc8e",
    "IMAGE_IMPORT_BY_NAME_17_0043ccba",
    "IMAGE_IMPORT_BY_NAME_17_0043cce6",
    "IMAGE_IMPORT_BY_NAME_17_0043cd80",
    "IMAGE_IMPORT_BY_NAME_17_0043cde2",
    "IMAGE_IMPORT_BY_NAME_17_0043ce56",
    "IMAGE_IMPORT_BY_NAME_18_0043ce42",
    "IMAGE_IMPORT_BY_NAME_19_0043cbf8",
    "IMAGE_IMPORT_BY_NAME_19_0043cdcc",
    "IMAGE_IMPORT_BY_NAME_20_0043cb5c",
    "IMAGE_IMPORT_BY_NAME_20_0043cb7e",
    "IMAGE_IMPORT_BY_NAME_20_0043ce1a",
    "IMAGE_IMPORT_BY_NAME_21_0043cca2",
    "IMAGE_IMPORT_BY_NAME_21_0043cd38",
    "IMAGE_IMPORT_BY_NAME_21_0043cdb4",
    "IMAGE_IMPORT_BY_NAME_21_0043cec8",
    "IMAGE_IMPORT_BY_NAME_22_0043ccce",
    "IMAGE_IMPORT_BY_NAME_22_0043ccfa",
    "IMAGE_IMPORT_BY_NAME_22_0043ce6a",
    "IMAGE_IMPORT_BY_NAME_23_0043cbde",
    "IMAGE_IMPORT_BY_NAME_24_0043c960",
    "IMAGE_IMPORT_BY_NAME_25_0043cd12",
    "IMAGE_IMPORT_BY_NAME_6_0043ca54",
    "IMAGE_IMPORT_BY_NAME_8_0043cd2e",
    "IMAGE_IMPORT_BY_NAME_9_0043c9ec",
    "IMAGE_IMPORT_BY_NAME_9_0043ca2a",
    "IMAGE_IMPORT_BY_NAME_9_0043cb72",
    "IMAGE_IMPORT_BY_NAME_9_0043cc0e",
    "IMAGE_LOAD_CONFIG_DIRECTORY32_004355f8",
    "IMAGE_LOAD_CONFIG_DIRECTORY32_004355f8.GuardFlags",
    "IMAGE_NT_HEADERS32_00400110",
    "IMAGE_NT_HEADERS32_00400110.FileHeader.NumberOfSections",
    "IMAGE_NT_HEADERS32_00400110.FileHeader.SizeOfOptionalHeader",
    "IMAGE_NT_HEADERS32_00400110.OptionalHeader.DataDirectory[13].VirtualAddress",
    "IMAGE_NT_HEADERS32_00400110.OptionalHeader.Magic",
    "IMAGE_NT_HEADERS32_00400110.OptionalHeader.NumberOfRvaAndSizes",
    "IMAGE_RESOURCE_DIRECTORY_00464000",
    "IMAGE_SECTION_HEADER_00400208.Misc",
    "IMAGE_SECTION_HEADER_00400208.VirtualAddress",
    "IMAGE_SECTION_HEADER_00400230.Characteristics",
    "IMAGE_SECTION_HEADER_00400230.Misc",
    "IMAGE_SECTION_HEADER_00400230.VirtualAddress",
    "IdealProcessorValue",
    "ImgDelayDescr@0043c5ec",
    "ImgDelayDescr@0043c5ec.pIAT",
    "ImgDelayDescr@0043c60c",
    "ImgDelayDescr@0043c62c",
    "ImgDelayDescr@0043c64c",
    "ImgDelayDescr@0043c66c",
    "ImgDelayDescr@0043c68c",
    "ImgDelayDescr@0043c6ac",
    "ImgDelayDescr@0043c6cc",
    "ImgDelayDescr_Bound_IAT@0043cee0",
    "ImgDelayDescr_Bound_IAT@0043cfb4",
    "ImgDelayDescr_Bound_IAT@0043cfdc",
    "ImgDelayDescr_Bound_IAT@0043cfec",
    "ImgDelayDescr_Bound_IAT@0043d020",
    "ImgDelayDescr_Bound_IAT@0043d044",
    "ImgDelayDescr_Bound_IAT@0043d060",
    "ImgDelayDescr_Bound_IAT@0043d068",
    "ImgDelayDescr_IAT@00463000",
    "ImgDelayDescr_IAT@00463034",
    "ImgDelayDescr_IAT@0046303c",
    "ImgDelayDescr_IAT@0046304c",
    "ImgDelayDescr_IAT@00463074",
    "ImgDelayDescr_IAT@00463098",
    "ImgDelayDescr_IAT@004630a0",
    "ImgDelayDescr_IAT@00463174",
    "ImgDelayDescr_INT@0043c70c",
    "ImgDelayDescr_INT@0043c740",
    "ImgDelayDescr_INT@0043c748",
    "ImgDelayDescr_INT@0043c758",
    "ImgDelayDescr_INT@0043c780",
    "ImgDelayDescr_INT@0043c7a4",
    "ImgDelayDescr_INT@0043c7ac",
    "ImgDelayDescr_INT@0043c880",
    "ImgDelayDescr_Module_Handle@00461cc0",
    "ImgDelayDescr_Module_Handle@00461cc4",
    "ImgDelayDescr_Module_Handle@00461cc8",
    "ImgDelayDescr_Module_Handle@00461ccc",
    "ImgDelayDescr_Module_Handle@00461cd0",
    "ImgDelayDescr_Module_Handle@00461cd4",
    "ImgDelayDescr_Module_Handle@00461cf4",
    "ImgDelayDescr_Module_Handle@00461cf8",
    "Instrumentation",
    "IsImpersonating",
    "IsProcessorFeaturePresent",
    "LAB_0040115f",
    "LAB_0040120d",
    "LAB_00401213",
    "LAB_0040123b",
    "LAB_00401241",
    "LAB_00401243",
    "LAB_00401245",
    "LAB_004012c7",
    "LAB_004012c9",
    "LAB_00401378",
    "LAB_00401385",
    "LAB_004013ae",
    "LAB_00401476",
    "LAB_0040147a",
    "LAB_0040147c",
    "LAB_0040162b",
    "LAB_00401633",
    "LAB_00401678",
    "LAB_00401680",
    "LAB_004016c3",
    "LAB_004016c4",
    "LAB_0040172c",
    "LAB_00401771",
    "LAB_00401786",
    "LAB_004017a0",
    "LAB_004017c7",
    "LAB_004017dd",
    "LAB_004017e5",
    "LAB_00401828",
    "LAB_0040183d",
    "LAB_0040185a",
    "LAB_00401887",
    "LAB_0040189d",
    "LAB_004018a5",
    "LAB_004018bd",
    "LAB_004018c0",
    "LAB_004018e6",
    "LAB_004018f2",
    "LAB_00401941",
    "LAB_00401945",
    "LAB_0040197b",
    "LAB_0040197d",
    "LAB_004019a7",
    "LAB_004019aa",
    "LAB_004019bf",
    "LAB_00401a00",
    "LAB_00401aa0",
    "LAB_00401aed",
    "LAB_00401b3e",
    "LAB_00401b41",
    "LAB_00401b48",
    "LAB_00401b76",
    "LAB_00401b8f",
    "LAB_00401ba0",
    "LAB_00401ba2",
    "LAB_00401bb3",
    "LAB_00401bbc",
    "LAB_00401bd4",
    "LAB_00401c00",
    "LAB_00401c21",
    "LAB_00401c49",
    "LAB_00401c5a",
    "LAB_00401c5d",
    "LAB_00401c71",
    "LAB_00401c7e",
    "LAB_00401c8d",
    "LAB_00401c97",
    "LAB_00401cc3",
    "LAB_00401d11",
    "LAB_00401d18",
    "LAB_00401d39",
    "LAB_00401d3b",
    "LAB_00401d43",
    "LAB_00401d4d",
    "LAB_00401d54",
    "LAB_00401d61",
    "LAB_00401d77",
    "LAB_00401d79",
    "LAB_00401d7f",
    "LAB_00401dc1",
    "LAB_00401dd3",
    "LAB_00401de8",
    "LAB_00401e3a",
    "LAB_00401e42",
    "LAB_00401e4a",
    "LAB_00401e4b",
    "LAB_00401ece",
    "LAB_00401eee",
    "LAB_00401efb",
    "LAB_00401f0f",
    "LAB_00401f2f",
    "LAB_00401f36",
    "LAB_00401fc7",
    "LAB_00401fd0",
    "LAB_0040201b",
    "LAB_0040201d",
    "LAB_00402057",
    "LAB_004020ac",
    "LAB_004020d1",
    "LAB_004020d4",
    "LAB_00402133",
    "LAB_0040215c",
    "LAB_0040215f",
    "LAB_0040216d",
    "LAB_00402180",
    "LAB_00402195",
    "LAB_0040219c",
    "LAB_004021a4",
    "LAB_004021b0",
    "LAB_004021b9",
    "LAB_004021bc",
    "LAB_004021ca",
    "LAB_004021fe",
    "LAB_00402254",
    "LAB_0040226f",
    "LAB_0040228f",
    "LAB_004022f4",
    "LAB_004022f8",
    "LAB_00402321",
    "LAB_00402329",
    "LAB_00402339",
    "LAB_0040234c",
    "LAB_0040239c",
    "LAB_004023ad",
    "LAB_004023b9",
    "LAB_00402409",
    "LAB_0040241e",
    "LAB_00402436",
    "LAB_0040244d",
    "LAB_00402463",
    "LAB_00402479",
    "LAB_00402485",
    "LAB_004024d2",
    "LAB_00402503",
    "LAB_00402556",
    "LAB_0040259a",
    "LAB_004025ac",
    "LAB_004025b4",
    "LAB_004025da",
    "LAB_004025e8",
    "LAB_0040261b",
    "LAB_0040262e",
    "LAB_00402639",
    "LAB_0040266f",
    "LAB_00402679",
    "LAB_0040269b",
    "LAB_004026ca",
    "LAB_004026f1",
    "LAB_00402728",
    "LAB_00402780",
    "LAB_00402831",
    "LAB_00402849",
    "LAB_0040285e",
    "LAB_00402861",
    "LAB_004028c5",
    "LAB_004028ec",
    "LAB_004028f8",
    "LAB_00402923",
    "LAB_00402926",
    "LAB_0040299b",
    "LAB_004029b8",
    "LAB_004029ba",
    "LAB_004029c5",
    "LAB_004029cf",
    "LAB_004029dc",
    "LAB_004029f5",
    "LAB_004029fa",
    "LAB_004029fd",
    "LAB_00402a84",
    "LAB_00402ae1",
    "LAB_00402b0a",
    "LAB_00402b8c",
    "LAB_00402b91",
    "LAB_00402ba8",
    "LAB_00402baa",
    "LAB_00402bd1",
    "LAB_00402be3",
    "LAB_00402c90",
    "LAB_00402cc1",
    "LAB_00402ccd",
    "LAB_00402cd9",
    "LAB_00402ce3",
    "LAB_00402d04",
    "LAB_00402d0e",
    "LAB_00402d3a",
    "LAB_00402d46",
    "LAB_00402d48",
    "LAB_00402d83",
    "LAB_00402d89",
    "LAB_00402d94",
    "LAB_00402dda",
    "LAB_00402de8",
    "LAB_00402e6c",
    "LAB_00402e71",
    "LAB_00402e8a",
    "LAB_00402e97",
    "LAB_00402ebe",
    "LAB_00402fbc",
    "LAB_00402fd6",
    "LAB_00402ff0",
    "LAB_00403040",
    "LAB_0040306e",
    "LAB_00403083",
    "LAB_00403095",
    "LAB_004030b7",
    "LAB_004030cd",
    "LAB_004030dd",
    "LAB_00403159",
    "LAB_004031ed",
    "LAB_004031ef",
    "LAB_0040321a",
    "LAB_0040321d",
    "LAB_0040328a",
    "LAB_004032a6",
    "LAB_004032d4",
    "LAB_004032da",
    "LAB_00403358",
    "LAB_00403375",
    "LAB_00403381",
    "LAB_004033bd",
    "LAB_004033c1",
    "LAB_0040340b",
    "LAB_00403482",
    "LAB_00403487",
    "LAB_004034a6",
    "LAB_004034a9",
    "LAB_004034b8",
    "LAB_004034c4",
    "LAB_004035a8",
    "LAB_004035e1",
    "LAB_00403602",
    "LAB_0040369e",
    "LAB_004036c1",
    "LAB_004036e3",
    "LAB_00403711",
    "LAB_0040378a",
    "LAB_00403796",
    "LAB_00403831",
    "LAB_00403853",
    "LAB_00403857",
    "LAB_0040388d",
    "LAB_004038b5",
    "LAB_004038e9",
    "LAB_0040392b",
    "LAB_00403936",
    "LAB_00403970",
    "LAB_00403972",
    "LAB_004039c3",
    "LAB_00403a07",
    "LAB_00403a17",
    "LAB_00403a2f",
    "LAB_00403a4a",
    "LAB_00403ac7",
    "LAB_00403ac9",
    "LAB_00403adc",
    "LAB_00403ade",
    "LAB_00403b01",
    "LAB_00403b09",
    "LAB_00403b10",
    "LAB_00403b3d",
    "LAB_00403b78",
    "LAB_00403b7f",
    "LAB_00403ba3",
    "LAB_00403bac",
    "LAB_00403bb6",
    "LAB_00403bf6",
    "LAB_00403c3f",
    "LAB_00403c8f",
    "LAB_00403c9f",
    "LAB_00403cac",
    "LAB_00403ccc",
    "LAB_00403d2e",
    "LAB_00403dd7",
    "LAB_00403de9",
    "LAB_00403e3e",
    "LAB_00403e40",
    "LAB_00403e51",
    "LAB_00403e5c",
    "LAB_00403e5e",
    "LAB_00403ece",
    "LAB_00403edb",
    "LAB_00403ef1",
    "LAB_00403f0f",
    "LAB_00403f1d",
    "LAB_00403f35",
    "LAB_00403f3d",
    "LAB_00403f43",
    "LAB_00403f61",
    "LAB_00403f6f",
    "LAB_00403f7a",
    "LAB_00403f96",
    "LAB_00403f98",
    "LAB_00403f9f",
    "LAB_00403fac",
    "LAB_00403fc0",
    "LAB_00403fdc",
    "LAB_00403fe5",
    "LAB_00403ff0",
    "LAB_00403ff2",
    "LAB_00403ff8",
    "LAB_00404024",
    "LAB_0040403b",
    "LAB_00404090",
    "LAB_004040cf",
    "LAB_004040e7",
    "LAB_004040f5",
    "LAB_004041ac",
    "LAB_004044f2",
    "LAB_00405678",
    "LAB_004056a0",
    "LAB_004056d3",
    "LAB_00405712",
    "LAB_00405720",
    "LAB_00405781",
    "LAB_004057dc",
    "LAB_004057e1",
    "LAB_00405809",
    "LAB_0040581a",
    "LAB_0040581d",
    "LAB_0040583a",
    "LAB_0040584e",
    "LAB_0040585e",
    "LAB_00405886",
    "LAB_004058e9",
    "LAB_00405966",
    "LAB_00405997",
    "LAB_004059a8",
    "LAB_004059b8",
    "LAB_004059bb",
    "LAB_004059c1",
    "LAB_004059e5",
    "LAB_00405a0a",
    "LAB_00405a11",
    "LAB_00405a40",
    "LAB_00405a44",
    "LAB_00405a57",
    "LAB_00405a87",
    "LAB_00405b7e",
    "LAB_00405ba8",
    "LAB_00405bbc",
    "LAB_00405c0e",
    "LAB_00405c20",
    "LAB_00405c3a",
    "LAB_00405c47",
    "LAB_00405c6c",
    "LAB_00405c70",
    "LAB_00405c9a",
    "LAB_00405c9c",
    "LAB_00405d36",
    "LAB_00405d76",
    "LAB_00405d8a",
    "LAB_00405d95",
    "LAB_00405d97",
    "LAB_00405da0",
    "LAB_00405dbb",
    "LAB_00405dca",
    "LAB_00405de0",
    "LAB_00405df8",
    "LAB_00405e0c",
    "LAB_00405e11",
    "LAB_00405e22",
    "LAB_00405e33",
    "LAB_00405fbf",
    "LAB_00405fdb",
    "LAB_00406007",
    "LAB_00406020",
    "LAB_00406037",
    "LAB_004060d7",
    "LAB_004060f2",
    "LAB_00406114",
    "LAB_00406116",
    "LAB_0040613d",
    "LAB_0040615d",
    "LAB_00406172",
    "LAB_00406178",
    "LAB_004061d2",
    "LAB_004061de",
    "LAB_00406253",
    "LAB_00406270",
    "LAB_00406278",
    "LAB_004062e8",
    "LAB_00406366",
    "LAB_004063aa",
    "LAB_0040640c",
    "LAB_00406446",
    "LAB_0040654e",
    "LAB_0040656c",
    "LAB_00406583",
    "LAB_0040659f",
    "LAB_004065d0",
    "LAB_004065de",
    "LAB_004065e8",
    "LAB_0040668e",
    "LAB_00406695",
    "LAB_004066c0",
    "LAB_004066ce",
    "LAB_004066e0",
    "LAB_004066fa",
    "LAB_0040671e",
    "LAB_0040673b",
    "LAB_0040678f",
    "LAB_0040679f",
    "LAB_004067b1",
    "LAB_004067cd",
    "LAB_004067f9",
    "LAB_0040680f",
    "LAB_0040685e",
    "LAB_004068d3",
    "LAB_004068db",
    "LAB_00406918",
    "LAB_0040692a",
    "LAB_004069a7",
    "LAB_004069ac",
    "LAB_004069c7",
    "LAB_004069e7",
    "LAB_00406a46",
    "LAB_00406a95",
    "LAB_00406a99",
    "LAB_00406a9d",
    "LAB_00406ab0",
    "LAB_00406ab4",
    "LAB_00406ab7",
    "LAB_00406acb",
    "LAB_00406ace",
    "LAB_00406afa",
    "LAB_00406b21",
    "LAB_00406b2a",
    "LAB_00406b57",
    "LAB_00406b77",
    "LAB_00406bcf",
    "LAB_00406bd1",
    "LAB_00406bf0",
    "LAB_00406ca2",
    "LAB_00406ca4",
    "LAB_00406d76",
    "LAB_00406d9f",
    "LAB_00406da4",
    "LAB_00406da6",
    "LAB_00406dac",
    "LAB_00406db9",
    "LAB_00406dc3",
    "LAB_00406df1",
    "LAB_00406dfe",
    "LAB_00406e03",
    "LAB_00406e26",
    "LAB_00406e2e",
    "LAB_00406e3c",
    "LAB_00406e40",
    "LAB_00406e62",
    "LAB_00406f22",
    "LAB_00406f5a",
    "LAB_00406f5c",
    "LAB_00406f7d",
    "LAB_00406f81",
    "LAB_00406f83",
    "LAB_00406f8c",
    "LAB_00406f8e",
    "LAB_00406f9d",
    "LAB_00406fdd",
    "LAB_0040704b",
    "LAB_00407076",
    "LAB_004070d6",
    "LAB_00407108",
    "LAB_0040710d",
    "LAB_00407154",
    "LAB_0040715b",
    "LAB_004071d8",
    "LAB_00407205",
    "LAB_00407213",
    "LAB_00407286",
    "LAB_004072c0",
    "LAB_00407305",
    "LAB_00407320",
    "LAB_0040734a",
    "LAB_00407350",
    "LAB_00407357",
    "LAB_004073d9",
    "LAB_004073e6",
    "LAB_00407460",
    "LAB_00407471",
    "LAB_00407481",
    "LAB_004074bf",
    "LAB_00407501",
    "LAB_0040750a",
    "LAB_0040750c",
    "LAB_0040752d",
    "LAB_00407534",
    "LAB_0040758c",
    "LAB_004075d6",
    "LAB_004075d9",
    "LAB_0040762c",
    "LAB_0040763f",
    "LAB_0040767b",
    "LAB_004076ad",
    "LAB_004076f4",
    "LAB_0040773d",
    "LAB_00407785",
    "LAB_004077a2",
    "LAB_004077a7",
    "LAB_004077da",
    "LAB_004077dc",
    "LAB_00407811",
    "LAB_00407826",
    "LAB_00407831",
    "LAB_0040785c",
    "LAB_004078a4",
    "LAB_004078c1",
    "LAB_004078d3",
    "LAB_004078d4",
    "LAB_004078f8",
    "LAB_00407936",
    "LAB_00407939",
    "LAB_00407946",
    "LAB_00407958",
    "LAB_0040795c",
    "LAB_0040795e",
    "LAB_004079ad",
    "LAB_004079f5",
    "LAB_004079f8",
    "LAB_00407a06",
    "LAB_00407a08",
    "LAB_00407a4a",
    "LAB_00407a73",
    "LAB_00407afd",
    "LAB_00407b06",
    "LAB_00407b72",
    "LAB_00407b74",
    "LAB_00407bc0",
    "LAB_00407bde",
    "LAB_00407be2",
    "LAB_00407be4",
    "LAB_00407bfb",
    "LAB_00407c04",
    "LAB_00407c08",
    "LAB_00407c0a",
    "LAB_00407c2a",
    "LAB_00407c30",
    "LAB_00407c5a",
    "LAB_00407cb9",
    "LAB_00407ce3",
    "LAB_00407d01",
    "LAB_00407d14",
    "LAB_00407d1b",
    "LAB_00407d3f",
    "LAB_00407d63",
    "LAB_00407d97",
    "LAB_00407da7",
    "LAB_00407e52",
    "LAB_00407ed5",
    "LAB_00407f0d",
    "LAB_00407f14",
    "LAB_00407f69",
    "LAB_00407f6c",
    "LAB_00407f76",
    "LAB_00407f7d",
    "LAB_00407f9a",
    "LAB_00407fe8",
    "LAB_00408082",
    "LAB_004080f9",
    "LAB_00408108",
    "LAB_0040810a",
    "LAB_00408156",
    "LAB_00408160",
    "LAB_00408162",
    "LAB_004081c0",
    "LAB_004081f2",
    "LAB_004081f6",
    "LAB_004081fc",
    "LAB_0040820e",
    "LAB_00408217",
    "LAB_00408232",
    "LAB_00408267",
    "LAB_00408278",
    "LAB_0040827c",
    "LAB_004082c7",
    "LAB_004082e1",
    "LAB_00408303",
    "LAB_0040833a",
    "LAB_0040834d",
    "LAB_00408395",
    "LAB_004083bb",
    "LAB_004083c2",
    "LAB_004083e8",
    "LAB_004083f3",
    "LAB_00408415",
    "LAB_00408464",
    "LAB_00408466",
    "LAB_004084e0",
    "LAB_004084e6",
    "LAB_00408513",
    "LAB_0040851c",
    "LAB_00408537",
    "LAB_00408543",
    "LAB_00408545",
    "LAB_00408556",
    "LAB_00408576",
    "LAB_0040857a",
    "LAB_00408592",
    "LAB_0040859e",
    "LAB_004085b0",
    "LAB_004085bc",
    "LAB_004085e2",
    "LAB_0040861d",
    "LAB_00408693",
    "LAB_0040869a",
    "LAB_004086b8",
    "LAB_00408721",
    "LAB_00408726",
    "LAB_0040873c",
    "LAB_00408756",
    "LAB_00408758",
    "LAB_004087b3",
    "LAB_004087b6",
    "LAB_004087d7",
    "LAB_004087e1",
    "LAB_00408835",
    "LAB_0040883c",
    "LAB_0040884e",
    "LAB_00408883",
    "LAB_004088a3",
    "LAB_0040897f",
    "LAB_0040898b",
    "LAB_004089a5",
    "LAB_004089a8",
    "LAB_00408a4c",
    "LAB_00408a56",
    "LAB_00408a5f",
    "LAB_00408ab6",
    "LAB_00408ad1",
    "LAB_00408ad5",
    "LAB_00408ad8",
    "LAB_00408b01",
    "LAB_00408b14",
    "LAB_00408b1c",
    "LAB_00408b1f",
    "LAB_00408b3b",
    "LAB_00408b84",
    "LAB_00408b87",
    "LAB_00408b8f",
    "LAB_00408b95",
    "LAB_00408c59",
    "LAB_00408c76",
    "LAB_00408c8c",
    "LAB_00408ca5",
    "LAB_00408cce",
    "LAB_00408cd1",
    "LAB_00408cd6",
    "LAB_00408d01",
    "LAB_00408d06",
    "LAB_00408d50",
    "LAB_00408d53",
    "LAB_00408d57",
    "LAB_00408d5f",
    "LAB_00408d6e",
    "LAB_00408d8a",
    "LAB_00408dee",
    "LAB_00408df5",
    "LAB_00408e0c",
    "LAB_00408e19",
    "LAB_00408e1c",
    "LAB_00408e36",
    "LAB_00408e38",
    "LAB_00408e40",
    "LAB_00408e66",
    "LAB_00408ebe",
    "LAB_00408efe",
    "LAB_00408f02",
    "LAB_00408f13",
    "LAB_00408f2e",
    "LAB_00408f39",
    "LAB_00408f64",
    "LAB_00408f71",
    "LAB_00408f73",
    "LAB_00408f98",
    "LAB_00408fb2",
    "LAB_00408fb4",
    "LAB_00408fd1",
    "LAB_00408ff0",
    "LAB_00409007",
    "LAB_0040901f",
    "LAB_00409033",
    "LAB_0040903e",
    "LAB_004090cd",
    "LAB_00409105",
    "LAB_0040910c",
    "LAB_0040912d",
    "LAB_004091b6",
    "LAB_004091c9",
    "LAB_004091d5",
    "LAB_004091f9",
    "LAB_00409251",
    "LAB_0040925d",
    "LAB_0040925f",
    "LAB_00409276",
    "LAB_0040928c",
    "LAB_004092b3",
    "LAB_004092cc",
    "LAB_004092e2",
    "LAB_00409323",
    "LAB_00409329",
    "LAB_0040932d",
    "LAB_0040934a",
    "LAB_00409351",
    "LAB_00409355",
    "LAB_00409374",
    "LAB_0040937a",
    "LAB_00409436",
    "LAB_00409488",
    "LAB_0040948f",
    "LAB_004094a3",
    "LAB_00409506",
    "LAB_00409534",
    "LAB_00409543",
    "LAB_00409545",
    "LAB_004095d1",
    "LAB_004095d6",
    "LAB_0040960c",
    "LAB_0040964a",
    "LAB_0040964e",
    "LAB_00409669",
    "LAB_00409698",
    "LAB_0040969b",
    "LAB_004096c4",
    "LAB_004096d5",
    "LAB_004096ec",
    "LAB_0040971f",
    "LAB_00409770",
    "LAB_00409781",
    "LAB_0040979e",
    "LAB_004097cd",
    "LAB_004097d9",
    "LAB_004097ee",
    "LAB_0040980c",
    "LAB_00409811",
    "LAB_00409814",
    "LAB_004098c2",
    "LAB_004098c5",
    "LAB_004098d8",
    "LAB_0040990c",
    "LAB_0040990e",
    "LAB_00409927",
    "LAB_00409936",
    "LAB_0040994b",
    "LAB_004099bb",
    "LAB_004099c3",
    "LAB_004099c8",
    "LAB_004099d9",
    "LAB_004099ff",
    "LAB_00409a2e",
    "LAB_00409a6f",
    "LAB_00409ac4",
    "LAB_00409acc",
    "LAB_00409adf",
    "LAB_00409af2",
    "LAB_00409b00",
    "LAB_00409b08",
    "LAB_00409b12",
    "LAB_00409b4a",
    "LAB_00409b4e",
    "LAB_00409b53",
    "LAB_00409b55",
    "LAB_00409b62",
    "LAB_00409b66",
    "LAB_00409b70",
    "LAB_00409b92",
    "LAB_00409b97",
    "LAB_00409b9d",
    "LAB_00409be3",
    "LAB_00409c0d",
    "LAB_00409c19",
    "LAB_00409c55",
    "LAB_00409c8a",
    "LAB_00409ca0",
    "LAB_00409ca9",
    "LAB_00409cbc",
    "LAB_00409d07",
    "LAB_00409d1b",
    "LAB_00409d46",
    "LAB_00409d4e",
    "LAB_00409d5b",
    "LAB_00409d5d",
    "LAB_00409d60",
    "LAB_00409d9b",
    "LAB_00409dc2",
    "LAB_00409ddc",
    "LAB_00409de2",
    "LAB_00409df6",
    "LAB_00409dfb",
    "LAB_00409e0b",
    "LAB_00409e0d",
    "LAB_00409e1b",
    "LAB_00409e2e",
    "LAB_00409e3f",
    "LAB_00409ea7",
    "LAB_00409eaa",
    "LAB_00409eb8",
    "LAB_00409eee",
    "LAB_00409efd",
    "LAB_00409f02",
    "LAB_00409f2f",
    "LAB_00409f3f",
    "LAB_00409f67",
    "LAB_00409f77",
    "LAB_00409f8f",
    "LAB_00409fab",
    "LAB_00409faf",
    "LAB_00409fb1",
    "LAB_00409fc4",
    "LAB_00409fd4",
    "LAB_0040a003",
    "LAB_0040a020",
    "LAB_0040a024",
    "LAB_0040a095",
    "LAB_0040a0a2",
    "LAB_0040a0aa",
    "LAB_0040a0e1",
    "LAB_0040a10c",
    "LAB_0040a137",
    "LAB_0040a14c",
    "LAB_0040a17d",
    "LAB_0040a183",
    "LAB_0040a185",
    "LAB_0040a1d9",
    "LAB_0040a22a",
    "LAB_0040a288",
    "LAB_0040a2a1",
    "LAB_0040a2a3",
    "LAB_0040a2e3",
    "LAB_0040a316",
    "LAB_0040a325",
    "LAB_0040a329",
    "LAB_0040a341",
    "LAB_0040a37d",
    "LAB_0040a381",
    "LAB_0040a397",
    "LAB_0040a39b",
    "LAB_0040a3b2",
    "LAB_0040a3b6",
    "LAB_0040a3df",
    "LAB_0040a3e1",
    "LAB_0040a451",
    "LAB_0040a464",
    "LAB_0040a477",
    "LAB_0040a48a",
    "LAB_0040a4e0",
    "LAB_0040a53d",
    "LAB_0040a56c",
    "LAB_0040a5cb",
    "LAB_0040a5cd",
    "LAB_0040a5df",
    "LAB_0040a5f9",
    "LAB_0040a604",
    "LAB_0040a661",
    "LAB_0040a672",
    "LAB_0040a674",
    "LAB_0040a67a",
    "LAB_0040a6fe",
    "LAB_0040a717",
    "LAB_0040a719",
    "LAB_0040a727",
    "LAB_0040a742",
    "LAB_0040a804",
    "LAB_0040a840",
    "LAB_0040a844",
    "LAB_0040a859",
    "LAB_0040a872",
    "LAB_0040a97b",
    "LAB_0040a9d5",
    "LAB_0040a9ff",
    "LAB_0040aa4f",
    "LAB_0040aa6e",
    "LAB_0040aa78",
    "LAB_0040aa83",
    "LAB_0040aaa7",
    "LAB_0040aaab",
    "LAB_0040aaad",
    "LAB_0040aac6",
    "LAB_0040aae6",
    "LAB_0040ab0b",
    "LAB_0040ab45",
    "LAB_0040ab47",
    "LAB_0040ab4a",
    "LAB_0040ab5a",
    "LAB_0040ab65",
    "LAB_0040ab70",
    "LAB_0040ab7b",
    "LAB_0040ab98",
    "LAB_0040ab9e",
    "LAB_0040abb3",
    "LAB_0040abd4",
    "LAB_0040abe0",
    "LAB_0040ac00",
    "LAB_0040ac29",
    "LAB_0040ac5c",
    "LAB_0040ac63",
    "LAB_0040ac64",
    "LAB_0040ac8a",
    "LAB_0040adca",
    "LAB_0040add0",
    "LAB_0040ae07",
    "LAB_0040ae22",
    "LAB_0040ae59",
    "LAB_0040ae74",
    "LAB_0040ae90",
    "LAB_0040aedb",
    "LAB_0040aedf",
    "LAB_0040aee1",
    "LAB_0040aeef",
    "LAB_0040af1f",
    "LAB_0040af5c",
    "LAB_0040af79",
    "LAB_0040af7b",
    "LAB_0040afab",
    "LAB_0040affa",
    "LAB_0040affc",
    "LAB_0040b006",
    "LAB_0040b008",
    "LAB_0040b034",
    "LAB_0040b044",
    "LAB_0040b048",
    "LAB_0040b05b",
    "LAB_0040b075",
    "LAB_0040b084",
    "LAB_0040b0fc",
    "LAB_0040b137",
    "LAB_0040b138",
    "LAB_0040b196",
    "LAB_0040b1a1",
    "LAB_0040b1ad",
    "LAB_0040b1c7",
    "LAB_0040b1da",
    "LAB_0040b249",
    "LAB_0040b24e",
    "LAB_0040b26a",
    "LAB_0040b26e",
    "LAB_0040b277",
    "LAB_0040b2a4",
    "LAB_0040b2bf",
    "LAB_0040b2c4",
    "LAB_0040b2c6",
    "LAB_0040b2cc",
    "LAB_0040b2d9",
    "LAB_0040b2e3",
    "LAB_0040b313",
    "LAB_0040b317",
    "LAB_0040b33a",
    "LAB_0040b36c",
    "LAB_0040b373",
    "LAB_0040b393",
    "LAB_0040b3f6",
    "LAB_0040b3ff",
    "LAB_0040b404",
    "LAB_0040b436",
    "LAB_0040b455",
    "LAB_0040b457",
    "LAB_0040b45b",
    "LAB_0040b49d",
    "LAB_0040b4af",
    "LAB_0040b4b4",
    "LAB_0040b4b8",
    "LAB_0040b4bc",
    "LAB_0040b4c2",
    "LAB_0040b4e3",
    "LAB_0040b4e8",
    "LAB_0040b4f9",
    "LAB_0040b502",
    "LAB_0040b5da",
    "LAB_0040b5e2",
    "LAB_0040b6c0",
    "LAB_0040b703",
    "LAB_0040b730",
    "LAB_0040b736",
    "LAB_0040b744",
    "LAB_0040b74d",
    "LAB_0040b757",
    "LAB_0040b765",
    "LAB_0040b790",
    "LAB_0040b7b9",
    "LAB_0040b7d1",
    "LAB_0040b7e1",
    "LAB_0040b7fa",
    "LAB_0040b828",
    "LAB_0040b837",
    "LAB_0040b84b",
    "LAB_0040b853",
    "LAB_0040b85d",
    "LAB_0040b864",
    "LAB_0040b882",
    "LAB_0040b886",
    "LAB_0040b89b",
    "LAB_0040b8cd",
    "LAB_0040b929",
    "LAB_0040b938",
    "LAB_0040b94b",
    "LAB_0040b977",
    "LAB_0040b98d",
    "LAB_0040b9c2",
    "LAB_0040b9f8",
    "LAB_0040b9ff",
    "LAB_0040ba18",
    "LAB_0040ba19",
    "LAB_0040ba3f",
    "LAB_0040ba46",
    "LAB_0040ba53",
    "LAB_0040ba5a",
    "LAB_0040ba64",
    "LAB_0040ba76",
    "LAB_0040ba91",
    "LAB_0040baa4",
    "LAB_0040baa5",
    "LAB_0040baa9",
    "LAB_0040bad6",
    "LAB_0040baeb",
    "LAB_0040baf0",
    "LAB_0040bafb",
    "LAB_0040bb62",
    "LAB_0040bb63",
    "LAB_0040bb72",
    "LAB_0040bbb8",
    "LAB_0040bc1d",
    "LAB_0040bc23",
    "LAB_0040bc84",
    "LAB_0040bc86",
    "LAB_0040bcbd",
    "LAB_0040bcbf",
    "LAB_0040bcd6",
    "LAB_0040bcee",
    "LAB_0040bcf2",
    "LAB_0040bcf4",
    "LAB_0040bd14",
    "LAB_0040bd16",
    "LAB_0040bd40",
    "LAB_0040bd4f",
    "LAB_0040bd61",
    "LAB_0040bd73",
    "LAB_0040bd90",
    "LAB_0040bd92",
    "LAB_0040bd99",
    "LAB_0040bdaf",
    "LAB_0040bdb1",
    "LAB_0040bdc0",
    "LAB_0040bdde",
    "LAB_0040bdf0",
    "LAB_0040be29",
    "LAB_0040be36",
    "LAB_0040be7b",
    "LAB_0040be94",
    "LAB_0040be9e",
    "LAB_0040beca",
    "LAB_0040bed0",
    "LAB_0040bed4",
    "LAB_0040beee",
    "LAB_0040beff",
    "LAB_0040bf17",
    "LAB_0040bf33",
    "LAB_0040bf3b",
    "LAB_0040bf68",
    "LAB_0040bf6c",
    "LAB_0040bf6e",
    "LAB_0040bfc3",
    "LAB_0040bfcb",
    "LAB_0040bfdc",
    "LAB_0040bfe9",
    "LAB_0040c006",
    "LAB_0040c017",
    "LAB_0040c02a",
    "LAB_0040c049",
    "LAB_0040c04d",
    "LAB_0040c06d",
    "LAB_0040c07b",
    "LAB_0040c095",
    "LAB_0040c09d",
    "LAB_0040c0a0",
    "LAB_0040c0b3",
    "LAB_0040c0c0",
    "LAB_0040c0f8",
    "LAB_0040c0fd",
    "LAB_0040c105",
    "LAB_0040c129",
    "LAB_0040c13f",
    "LAB_0040c16e",
    "LAB_0040c196",
    "LAB_0040c1a2",
    "LAB_0040c1ac",
    "LAB_0040c1bf",
    "LAB_0040c1fd",
    "LAB_0040c224",
    "LAB_0040c22f",
    "LAB_0040c277",
    "LAB_0040c294",
    "LAB_0040c2b2",
    "LAB_0040c2c7",
    "LAB_0040c2d7",
    "LAB_0040c2d9",
    "LAB_0040c2df",
    "LAB_0040c304",
    "LAB_0040c307",
    "LAB_0040c34f",
    "LAB_0040c35c",
    "LAB_0040c364",
    "LAB_0040c365",
    "LAB_0040c388",
    "LAB_0040c399",
    "LAB_0040c3a4",
    "LAB_0040c3a6",
    "LAB_0040c408",
    "LAB_0040c41c",
    "LAB_0040c41e",
    "LAB_0040c421",
    "LAB_0040c49e",
    "LAB_0040c4ac",
    "LAB_0040c4c3",
    "LAB_0040c4d6",
    "LAB_0040c51d",
    "LAB_0040c55d",
    "LAB_0040c645",
    "LAB_0040c651",
    "LAB_0040c684",
    "LAB_0040c68a",
    "LAB_0040c692",
    "LAB_0040c69a",
    "LAB_0040c6a2",
    "LAB_0040c6aa",
    "LAB_0040c6b2",
    "LAB_0040c6b6",
    "LAB_0040c6d8",
    "LAB_0040c6dc",
    "LAB_0040c6ee",
    "LAB_0040c73f",
    "LAB_0040c761",
    "LAB_0040c7bd",
    "LAB_0040c7d1",
    "LAB_0040c805",
    "LAB_0040c830",
    "LAB_0040c844",
    "LAB_0040c873",
    "LAB_0040c89c",
    "LAB_0040c8d6",
    "LAB_0040c8de",
    "LAB_0040c8f3",
    "LAB_0040c90a",
    "LAB_0040c931",
    "LAB_0040c93f",
    "LAB_0040c956",
    "LAB_0040c964",
    "LAB_0040c971",
    "LAB_0040c975",
    "LAB_0040c979",
    "LAB_0040c97b",
    "LAB_0040c9ff",
    "LAB_0040ca34",
    "LAB_0040ca4b",
    "LAB_0040ca53",
    "LAB_0040ca64",
    "LAB_0040ca74",
    "LAB_0040ca7f",
    "LAB_0040ca8e",
    "LAB_0040cae5",
    "LAB_0040caf3",
    "LAB_0040cb00",
    "LAB_0040cb14",
    "LAB_0040cb1a",
    "LAB_0040cb32",
    "LAB_0040cb41",
    "LAB_0040cb43",
    "LAB_0040cb6d",
    "LAB_0040cb7f",
    "LAB_0040cbc3",
    "LAB_0040cbf6",
    "LAB_0040cbf8",
    "LAB_0040cc38",
    "LAB_0040cc3a",
    "LAB_0040cc73",
    "LAB_0040cc8b",
    "LAB_0040cca0",
    "LAB_0040ccb8",
    "LAB_0040ccc2",
    "LAB_0040ccd8",
    "LAB_0040cce7",
    "LAB_0040cd13",
    "LAB_0040cd55",
    "LAB_0040cd59",
    "LAB_0040cd60",
    "LAB_0040cd73",
    "LAB_0040cd7e",
    "LAB_0040cd80",
    "LAB_0040cd83",
    "LAB_0040cdfe",
    "LAB_0040ce07",
    "LAB_0040ce36",
    "LAB_0040cea2",
    "LAB_0040cea4",
    "LAB_0040cec6",
    "LAB_0040cf02",
    "LAB_0040cf19",
    "LAB_0040cf58",
    "LAB_0040cf5c",
    "LAB_0040cf76",
    "LAB_0040cf90",
    "LAB_0040cf9b",
    "LAB_0040cfab",
    "LAB_0040cfb1",
    "LAB_0040d084",
    "LAB_0040d094",
    "LAB_0040d0a4",
    "LAB_0040d0af",
    "LAB_0040d110",
    "LAB_0040d111",
    "LAB_0040d12d",
    "LAB_0040d147",
    "LAB_0040d173",
    "LAB_0040d17f",
    "LAB_0040d188",
    "LAB_0040d18e",
    "LAB_0040d1b2",
    "LAB_0040d1c5",
    "LAB_0040d20e",
    "LAB_0040d22d",
    "LAB_0040d22f",
    "LAB_0040d26f",
    "LAB_0040d291",
    "LAB_0040d295",
    "LAB_0040d29a",
    "LAB_0040d2ce",
    "LAB_0040d2ef",
    "LAB_0040d2f6",
    "LAB_0040d333",
    "LAB_0040d343",
    "LAB_0040d35d",
    "LAB_0040d3f3",
    "LAB_0040d3fb",
    "LAB_0040d43f",
    "LAB_0040d447",
    "LAB_0040d46b",
    "LAB_0040d48f",
    "LAB_0040d4f7",
    "LAB_0040d50c",
    "LAB_0040d52b",
    "LAB_0040d55a",
    "LAB_0040d570",
    "LAB_0040d578",
    "LAB_0040d5bb",
    "LAB_0040d5d0",
    "LAB_0040d5ed",
    "LAB_0040d618",
    "LAB_0040d62e",
    "LAB_0040d636",
    "LAB_0040d67f",
    "LAB_0040d6a7",
    "LAB_0040d6cc",
    "LAB_0040d6d2",
    "LAB_0040d743",
    "LAB_0040d767",
    "LAB_0040d76d",
    "LAB_0040d7bf",
    "LAB_0040d883",
    "LAB_0040d890",
    "LAB_0040d892",
    "LAB_0040d895",
    "LAB_0040d897",
    "LAB_0040d928",
    "LAB_0040d945",
    "LAB_0040d94e",
    "LAB_0040d95e",
    "LAB_0040d96e",
    "LAB_0040d9a6",
    "LAB_0040d9a8",
    "LAB_0040d9e9",
    "LAB_0040d9eb",
    "LAB_0040da3b",
    "LAB_0040da3d",
    "LAB_0040da64",
    "LAB_0040dad5",
    "LAB_0040dae3",
    "LAB_0040db17",
    "LAB_0040db33",
    "LAB_0040db62",
    "LAB_0040dba3",
    "LAB_0040dbd6",
    "LAB_0040dc0c",
    "LAB_0040dc40",
    "LAB_0040dc4e",
    "LAB_0040dc52",
    "LAB_0040dc5a",
    "LAB_0040dc5d",
    "LAB_0040dc8e",
    "LAB_0040dcda",
    "LAB_0040dd12",
    "LAB_0040dd1d",
    "LAB_0040dd56",
    "LAB_0040dd8e",
    "LAB_0040ddae",
    "LAB_0040dde5",
    "LAB_0040de22",
    "LAB_0040de25",
    "LAB_0040de4d",
    "LAB_0040de55",
    "LAB_0040de61",
    "LAB_0040de73",
    "LAB_0040de76",
    "LAB_0040de8c",
    "LAB_0040dea8",
    "LAB_0040deab",
    "LAB_0040defc",
    "LAB_0040df0b",
    "LAB_0040df29",
    "LAB_0040dff3",
    "LAB_0040e009",
    "LAB_0040e019",
    "LAB_0040e01c",
    "LAB_0040e024",
    "LAB_0040e02a",
    "LAB_0040e06f",
    "LAB_0040e073",
    "LAB_0040e077",
    "LAB_0040e07b",
    "LAB_0040e07d",
    "LAB_0040e090",
    "LAB_0040e0ac",
    "LAB_0040e0b6",
    "LAB_0040e0e0",
    "LAB_0040e0ee",
    "LAB_0040e0fb",
    "LAB_0040e110",
    "LAB_0040e121",
    "LAB_0040e145",
    "LAB_0040e14d",
    "LAB_0040e150",
    "LAB_0040e159",
    "LAB_0040e15c",
    "LAB_0040e17f",
    "LAB_0040e18d",
    "LAB_0040e19a",
    "LAB_0040e1af",
    "LAB_0040e1c0",
    "LAB_0040e1e0",
    "LAB_0040e1e3",
    "LAB_0040e1fd",
    "LAB_0040e214",
    "LAB_0040e242",
    "LAB_0040e2bf",
    "LAB_0040e2e5",
    "LAB_0040e34f",
    "LAB_0040e395",
    "LAB_0040e399",
    "LAB_0040e3a5",
    "LAB_0040e46c",
    "LAB_0040e472",
    "LAB_0040e4ac",
    "LAB_0040e4e1",
    "LAB_0040e509",
    "LAB_0040e59c",
    "LAB_0040e5a4",
    "LAB_0040e615",
    "LAB_0040e62e",
    "LAB_0040e695",
    "LAB_0040e6ad",
    "LAB_0040e6be",
    "LAB_0040e6d4",
    "LAB_0040e8df",
    "LAB_0040e8e1",
    "LAB_0040e904",
    "LAB_0040e90f",
    "LAB_0040e918",
    "LAB_0040e91f",
    "LAB_0040e93c",
    "LAB_0040e956",
    "LAB_0040e962",
    "LAB_0040e97c",
    "LAB_0040e9ee",
    "LAB_0040ea2e",
    "LAB_0040eb6a",
    "LAB_0040eca1",
    "LAB_0040ee09",
    "LAB_0040ee5f",
    "LAB_0040ee72",
    "LAB_0040ee96",
    "LAB_0040eec7",
    "LAB_0040eed7",
    "LAB_0040eeea",
    "LAB_0040eefa",
    "LAB_0040ef13",
    "LAB_0040ef1c",
    "LAB_0040ef24",
    "LAB_0040ef29",
    "LAB_0040ef52",
    "LAB_0040ef5b",
    "LAB_0040ef66",
    "LAB_0040efdc",
    "LAB_0040f016",
    "LAB_0040f02b",
    "LAB_0040f04b",
    "LAB_0040f04f",
    "LAB_0040f055",
    "LAB_0040f062",
    "LAB_0040f070",
    "LAB_0040f0d2",
    "LAB_0040f0d5",
    "LAB_0040f0e7",
    "LAB_0040f0f3",
    "LAB_0040f0ff",
    "LAB_0040f102",
    "LAB_0040f15c",
    "LAB_0040f15f",
    "LAB_0040f171",
    "LAB_0040f182",
    "LAB_0040f1a2",
    "LAB_0040f1a6",
    "LAB_0040f1ac",
    "LAB_0040f1b9",
    "LAB_0040f1bc",
    "LAB_0040f1c6",
    "LAB_0040f1f8",
    "LAB_0040f25a",
    "LAB_0040f269",
    "LAB_0040f2b9",
    "LAB_0040f2c2",
    "LAB_0040f2fd",
    "LAB_0040f301",
    "LAB_0040f316",
    "LAB_0040f362",
    "LAB_0040f38e",
    "LAB_0040f3ad",
    "LAB_0040f3d1",
    "LAB_0040f3e4",
    "LAB_0040f3f4",
    "LAB_0040f3f5",
    "LAB_0040f420",
    "LAB_0040f440",
    "LAB_0040f455",
    "LAB_0040f45e",
    "LAB_0040f479",
    "LAB_0040f490",
    "LAB_0040f4f1",
    "LAB_0040f710",
    "LAB_0040f8f6",
    "LAB_0040f8fa",
    "LAB_0040faf0",
    "LAB_0040fd25",
    "LAB_0040fd38",
    "LAB_0040fd4f",
    "LAB_0040fd7f",
    "LAB_0040fe1f",
    "LAB_0040fe3c",
    "LAB_0040fe45",
    "LAB_0040fe47",
    "LAB_0040fe63",
    "LAB_0040fed2",
    "LAB_0040ff07",
    "LAB_0040ff0b",
    "LAB_0040ff0d",
    "LAB_0040ff29",
    "LAB_0040ff77",
    "LAB_0040ff7f",
    "LAB_0040ff92",
    "LAB_00410079",
    "LAB_00410084",
    "LAB_004100ac",
    "LAB_004100b1",
    "LAB_004100cd",
    "LAB_004100ec",
    "LAB_00410163",
    "LAB_00410279",
    "LAB_0041027e",
    "LAB_0041028b",
    "LAB_004102b6",
    "LAB_004102e1",
    "LAB_00410324",
    "LAB_00410327",
    "LAB_0041034e",
    "LAB_00410355",
    "LAB_00410356",
    "LAB_00410361",
    "LAB_00410380",
    "LAB_00410387",
    "LAB_0041039c",
    "LAB_004103b0",
    "LAB_004103c5",
    "LAB_004103e8",
    "LAB_004103ed",
    "LAB_004103f8",
    "LAB_00410408",
    "LAB_0041040c",
    "LAB_00410416",
    "LAB_00410420",
    "LAB_00410424",
    "LAB_00410441",
    "LAB_00410469",
    "LAB_00410471",
    "LAB_00410475",
    "LAB_00410477",
    "LAB_0041049f",
    "LAB_004104a1",
    "LAB_004104b7",
    "LAB_004104e1",
    "LAB_004104ef",
    "LAB_004104f5",
    "LAB_00410505",
    "LAB_00410540",
    "LAB_0041054f",
    "LAB_00410561",
    "LAB_00410570",
    "LAB_004105a3",
    "LAB_004105bf",
    "LAB_004105ce",
    "LAB_004105d2",
    "LAB_004105fe",
    "LAB_0041061a",
    "LAB_0041062e",
    "LAB_00410634",
    "LAB_0041066b",
    "LAB_004106bd",
    "LAB_004106c1",
    "LAB_004106dc",
    "LAB_004106df",
    "LAB_00410704",
    "LAB_00410769",
    "LAB_0041076c",
    "LAB_00410771",
    "LAB_00410793",
    "LAB_004107a0",
    "LAB_004107ae",
    "LAB_004107b6",
    "LAB_004107b8",
    "LAB_00410815",
    "LAB_0041085e",
    "LAB_004108b9",
    "LAB_004108e5",
    "LAB_004108e7",
    "LAB_00410be2",
    "LAB_00410bfd",
    "LAB_00410c08",
    "LAB_00410c14",
    "LAB_00410c42",
    "LAB_00410c7d",
    "LAB_00410ca6",
    "LAB_00410cae",
    "LAB_00410cb0",
    "LAB_00410cb9",
    "LAB_00410cea",
    "LAB_00410cec",
    "LAB_00410d73",
    "LAB_00410df3",
    "LAB_00410dfb",
    "LAB_00410e2a",
    "LAB_00410e3b",
    "LAB_00410e62",
    "LAB_00410e6a",
    "LAB_00410e78",
    "LAB_00410eb7",
    "LAB_00410ed2",
    "LAB_00410f32",
    "LAB_00410f4d",
    "LAB_00410f97",
    "LAB_00410fa7",
    "LAB_0041101c",
    "LAB_0041102f",
    "LAB_00411076",
    "LAB_00411090",
    "LAB_0041109a",
    "LAB_004110bf",
    "LAB_004110ca",
    "LAB_004110cf",
    "LAB_004110da",
    "LAB_004110ea",
    "LAB_004110f2",
    "LAB_0041110e",
    "LAB_00411153",
    "LAB_0041118a",
    "LAB_004111b5",
    "LAB_004111cc",
    "LAB_00411206",
    "LAB_00411259",
    "LAB_004112c4",
    "LAB_0041132b",
    "LAB_0041134e",
    "LAB_00411357",
    "LAB_0041136d",
    "LAB_004113c9",
    "LAB_004113cd",
    "LAB_004113cf",
    "LAB_004114f6",
    "LAB_0041155b",
    "LAB_0041156c",
    "LAB_00411570",
    "LAB_00411646",
    "LAB_00411648",
    "LAB_0041166a",
    "LAB_00411675",
    "LAB_00411699",
    "LAB_004116a1",
    "LAB_004116be",
    "LAB_0041171a",
    "LAB_00411723",
    "LAB_0041175e",
    "LAB_004117df",
    "LAB_004117e6",
    "LAB_0041180d",
    "LAB_00411817",
    "LAB_00411824",
    "LAB_0041182b",
    "LAB_00411835",
    "LAB_0041183f",
    "LAB_00411875",
    "LAB_00411891",
    "LAB_004119b5",
    "LAB_00411a13",
    "LAB_00411a1b",
    "LAB_00411a7a",
    "LAB_00411a90",
    "LAB_00411aa0",
    "LAB_00411aca",
    "LAB_00411acf",
    "LAB_00411aff",
    "LAB_00411b03",
    "LAB_00411b0f",
    "LAB_00411b11",
    "LAB_00411bb7",
    "LAB_00411be1",
    "LAB_00411c11",
    "LAB_00411c32",
    "LAB_00411c33",
    "LAB_00411c53",
    "LAB_00411c91",
    "LAB_00411cd8",
    "LAB_00411d3b",
    "LAB_00411d5a",
    "LAB_00411d80",
    "LAB_00411d88",
    "LAB_00411d8b",
    "LAB_00411d97",
    "LAB_00411d99",
    "LAB_00411dd9",
    "LAB_00411df3",
    "LAB_00411e0e",
    "LAB_00411e37",
    "LAB_00411e56",
    "LAB_00411e7d",
    "LAB_00411ea5",
    "LAB_00411ea7",
    "LAB_00411ed7",
    "LAB_00411edf",
    "LAB_00411f11",
    "LAB_00411f1a",
    "LAB_00411f3f",
    "LAB_00411f4f",
    "LAB_00411f87",
    "LAB_00411f88",
    "LAB_00411f96",
    "LAB_00411f9d",
    "LAB_00412001",
    "LAB_00412003",
    "LAB_0041201d",
    "LAB_0041226d",
    "LAB_00412275",
    "LAB_004122b2",
    "LAB_004122ce",
    "LAB_004122e6",
    "LAB_00412374",
    "LAB_004123a2",
    "LAB_004123ab",
    "LAB_004123bc",
    "LAB_004123c3",
    "LAB_004123c5",
    "LAB_0041241d",
    "LAB_00412421",
    "LAB_00412437",
    "LAB_00412439",
    "LAB_00412474",
    "LAB_004124b9",
    "LAB_004124ce",
    "LAB_004124ed",
    "LAB_0041251c",
    "LAB_00412532",
    "LAB_0041253a",
    "LAB_0041255f",
    "LAB_00412580",
    "LAB_00412582",
    "LAB_004125d6",
    "LAB_00412617",
    "LAB_0041261a",
    "LAB_00412620",
    "LAB_00412623",
    "LAB_0041265f",
    "LAB_00412664",
    "LAB_0041269b",
    "LAB_004126a0",
    "LAB_004126cb",
    "LAB_004126da",
    "LAB_004126ef",
    "LAB_0041270c",
    "LAB_00412713",
    "LAB_00412733",
    "LAB_0041273f",
    "LAB_00412741",
    "LAB_00412752",
    "LAB_00412766",
    "LAB_00412769",
    "LAB_00412799",
    "LAB_004127cf",
    "LAB_004127e2",
    "LAB_004127e4",
    "LAB_004127e7",
    "LAB_00412801",
    "LAB_00412803",
    "LAB_0041284b",
    "LAB_00412862",
    "LAB_00412873",
    "LAB_004128ba",
    "LAB_004128e6",
    "LAB_00412903",
    "LAB_00412910",
    "LAB_00412916",
    "LAB_00412936",
    "LAB_00412939",
    "LAB_00412956",
    "LAB_00412969",
    "LAB_00412993",
    "LAB_004129c9",
    "LAB_00412a00",
    "LAB_00412a0b",
    "LAB_00412a31",
    "LAB_00412a69",
    "LAB_00412a6b",
    "LAB_00412a6c",
    "LAB_00412aa7",
    "LAB_00412abf",
    "LAB_00412af1",
    "LAB_00412afe",
    "LAB_00412b05",
    "LAB_00412b23",
    "LAB_00412b30",
    "LAB_00412b4f",
    "LAB_00412b5d",
    "LAB_00412b67",
    "LAB_00412b6d",
    "LAB_00412b73",
    "LAB_00412b8f",
    "LAB_00412b99",
    "LAB_00412ba8",
    "LAB_00412bad",
    "LAB_00412baf",
    "LAB_00412c14",
    "LAB_00412c2b",
    "LAB_00412c4d",
    "LAB_00412c81",
    "LAB_00412cbf",
    "LAB_00412cd2",
    "LAB_00412ce7",
    "LAB_00412cea",
    "LAB_00412cf0",
    "LAB_00412cf3",
    "LAB_00412d16",
    "LAB_00412d18",
    "LAB_00412d20",
    "LAB_00412d27",
    "LAB_00412d2a",
    "LAB_00412d4c",
    "LAB_00412d4f",
    "LAB_00412d72",
    "LAB_00412d7e",
    "LAB_00412d82",
    "LAB_00412d85",
    "LAB_00412d89",
    "LAB_00412dae",
    "LAB_00412db0",
    "LAB_00412df6",
    "LAB_00412df9",
    "LAB_00412dfd",
    "LAB_00412e03",
    "LAB_00412e10",
    "LAB_00412e36",
    "LAB_00412e62",
    "LAB_00412ea8",
    "LAB_00412f04",
    "LAB_00412f1b",
    "LAB_00412f41",
    "LAB_00412f6d",
    "LAB_00412fa4",
    "LAB_00412faa",
    "LAB_00412fae",
    "LAB_00412fb2",
    "LAB_00412fc8",
    "LAB_00412fec",
    "LAB_00412ffa",
    "LAB_0041300d",
    "LAB_00413017",
    "LAB_00413048",
    "LAB_00413052",
    "LAB_00413063",
    "LAB_004130a0",
    "LAB_004130d2",
    "LAB_004130d5",
    "LAB_004130e0",
    "LAB_004130f5",
    "LAB_00413103",
    "LAB_0041312a",
    "LAB_00413154",
    "LAB_0041316a",
    "LAB_0041318f",
    "LAB_004131a8",
    "LAB_004131b8",
    "LAB_004131f6",
    "LAB_00413203",
    "LAB_00413212",
    "LAB_0041323f",
    "LAB_00413258",
    "LAB_00413283",
    "LAB_004132a5",
    "LAB_004132cc",
    "LAB_004132f3",
    "LAB_004132f7",
    "LAB_00413315",
    "LAB_0041333c",
    "LAB_00413354",
    "LAB_00413355",
    "LAB_0041335e",
    "LAB_00413370",
    "LAB_00413398",
    "LAB_0041339c",
    "LAB_0041339e",
    "LAB_004133cd",
    "LAB_004133e3",
    "LAB_004133f8",
    "LAB_00413405",
    "LAB_00413434",
    "LAB_00413444",
    "LAB_0041346d",
    "LAB_00413496",
    "LAB_004134a7",
    "LAB_004134ad",
    "LAB_004134bd",
    "LAB_004134c6",
    "LAB_004134da",
    "LAB_004134ec",
    "LAB_0041350c",
    "LAB_0041354c",
    "LAB_00413567",
    "LAB_0041356d",
    "LAB_00413577",
    "LAB_00413592",
    "LAB_004135cf",
    "LAB_0041362a",
    "LAB_0041364c",
    "LAB_00413683",
    "LAB_00413686",
    "LAB_00413693",
    "LAB_0041372d",
    "LAB_00413738",
    "LAB_0041374f",
    "LAB_00413763",
    "LAB_00413779",
    "LAB_004137d0",
    "LAB_004137e0",
    "LAB_0041380a",
    "LAB_00413855",
    "LAB_00413870",
    "LAB_00413875",
    "LAB_0041388a",
    "LAB_0041388d",
    "LAB_004138a3",
    "LAB_004138bb",
    "LAB_004138c8",
    "LAB_004138f0",
    "LAB_004138f2",
    "LAB_00413940",
    "LAB_00413992",
    "LAB_004139c7",
    "LAB_004139cd",
    "LAB_004139ef",
    "LAB_004139f1",
    "LAB_004139f2",
    "LAB_00413a07",
    "LAB_00413a09",
    "LAB_00413a13",
    "LAB_00413a89",
    "LAB_00413ac5",
    "LAB_00413ad0",
    "LAB_00413ae9",
    "LAB_00413aed",
    "LAB_00413b5b",
    "LAB_00413b69",
    "LAB_00413b91",
    "LAB_00413bac",
    "LAB_00413bb9",
    "LAB_00413c10",
    "LAB_00413c4f",
    "LAB_00413c5a",
    "LAB_00413c78",
    "LAB_00413c86",
    "LAB_00413cae",
    "LAB_00413d0c",
    "LAB_00413d4b",
    "LAB_00413d56",
    "LAB_00413d74",
    "LAB_00413d7a",
    "LAB_00413da2",
    "LAB_00413ddf",
    "LAB_00413e44",
    "LAB_00413eb8",
    "LAB_00413eeb",
    "LAB_00413f20",
    "LAB_00413f3a",
    "LAB_00413f3c",
    "LAB_00413f69",
    "LAB_00413f73",
    "LAB_00413f93",
    "LAB_00413fc1",
    "LAB_0041401c",
    "LAB_0041401f",
    "LAB_00414054",
    "LAB_00414080",
    "LAB_004140b1",
    "LAB_004140f1",
    "LAB_00414121",
    "LAB_0041412a",
    "LAB_0041416a",
    "LAB_0041416d",
    "LAB_0041417d",
    "LAB_00414180",
    "LAB_00414184",
    "LAB_004141a1",
    "LAB_004141bd",
    "LAB_00414201",
    "LAB_00414216",
    "LAB_00414225",
    "LAB_00414229",
    "LAB_00414261",
    "LAB_0041427e",
    "LAB_0041429e",
    "LAB_004142ad",
    "LAB_004142ba",
    "LAB_004142d2",
    "LAB_004142e7",
    "LAB_004142f6",
    "LAB_004142ff",
    "LAB_00414312",
    "LAB_00414318",
    "LAB_00414324",
    "LAB_00414335",
    "LAB_00414339",
    "LAB_004143b4",
    "LAB_004143d9",
    "LAB_00414403",
    "LAB_00414405",
    "LAB_00414440",
    "LAB_00414443",
    "LAB_00414453",
    "LAB_00414456",
    "LAB_0041445a",
    "LAB_00414482",
    "LAB_004144a4",
    "LAB_004144e8",
    "LAB_004144fa",
    "LAB_00414509",
    "LAB_0041450d",
    "LAB_00414543",
    "LAB_00414555",
    "LAB_00414575",
    "LAB_00414584",
    "LAB_00414591",
    "LAB_004145a9",
    "LAB_004145be",
    "LAB_004145cd",
    "LAB_004145d6",
    "LAB_004145e9",
    "LAB_004145ed",
    "LAB_004145f9",
    "LAB_00414610",
    "LAB_00414614",
    "LAB_00414679",
    "LAB_0041467c",
    "LAB_004146f6",
    "LAB_00414717",
    "LAB_0041471f",
    "LAB_00414734",
    "LAB_00414753",
    "LAB_00414781",
    "LAB_00414792",
    "LAB_0041479c",
    "LAB_004147eb",
    "LAB_0041480d",
    "LAB_00414826",
    "LAB_00414845",
    "LAB_00414855",
    "LAB_00414861",
    "LAB_00414863",
    "LAB_00414878",
    "LAB_0041488b",
    "LAB_004148d4",
    "LAB_00414954",
    "LAB_0041496c",
    "LAB_004149b3",
    "LAB_004149ba",
    "LAB_004149d3",
    "LAB_00414a07",
    "LAB_00414a10",
    "LAB_00414a30",
    "LAB_00414a42",
    "LAB_00414a70",
    "LAB_00414a8f",
    "LAB_00414ab3",
    "LAB_00414ae5",
    "LAB_00414b23",
    "LAB_00414b34",
    "LAB_00414b35",
    "LAB_00414b83",
    "LAB_00414beb",
    "LAB_00414c09",
    "LAB_00414c14",
    "LAB_00414c5f",
    "LAB_00414c93",
    "LAB_00414ca2",
    "LAB_00414ca3",
    "LAB_00414cbc",
    "LAB_00414cf4",
    "LAB_00414d61",
    "LAB_00414d6f",
    "LAB_00414dbe",
    "LAB_00414ddb",
    "LAB_00414df6",
    "LAB_00414e02",
    "LAB_00414e04",
    "LAB_00414e25",
    "LAB_00414e49",
    "LAB_00414e4f",
    "LAB_00414e6c",
    "LAB_00414e9a",
    "LAB_00414ea9",
    "LAB_00414eab",
    "LAB_00414ed1",
    "LAB_00414ede",
    "LAB_00414efc",
    "LAB_00414f16",
    "LAB_00414f1c",
    "LAB_00414f23",
    "LAB_00414f47",
    "LAB_00414f61",
    "LAB_00414f96",
    "LAB_00414fbc",
    "LAB_00414fc0",
    "LAB_00414fc7",
    "LAB_00414ff5",
    "LAB_00415019",
    "LAB_00415056",
    "LAB_004150a6",
    "LAB_004150b0",
    "LAB_0041510e",
    "LAB_00415184",
    "LAB_00415188",
    "LAB_0041518c",
    "LAB_004151b7",
    "LAB_004151c4",
    "LAB_004151d2",
    "LAB_004151e0",
    "LAB_004151f7",
    "LAB_004151f8",
    "LAB_00415241",
    "LAB_0041527a",
    "LAB_004152b5",
    "LAB_0041532d",
    "LAB_00415351",
    "LAB_0041536a",
    "LAB_0041537c",
    "LAB_004153a4",
    "LAB_004153c9",
    "LAB_004153cd",
    "LAB_004153e4",
    "LAB_004153f6",
    "LAB_00415403",
    "LAB_0041540e",
    "LAB_00415413",
    "LAB_00415425",
    "LAB_0041543e",
    "LAB_00415448",
    "LAB_00415462",
    "LAB_00415480",
    "LAB_00415491",
    "LAB_004154be",
    "LAB_004154ca",
    "LAB_004154f9",
    "LAB_0041550f",
    "LAB_00415511",
    "LAB_00415529",
    "LAB_0041554e",
    "LAB_0041557d",
    "LAB_00415590",
    "LAB_00415596",
    "LAB_004155d0",
    "LAB_004155df",
    "LAB_004155e2",
    "LAB_00415604",
    "LAB_0041564e",
    "LAB_0041565b",
    "LAB_0041569e",
    "LAB_004156ab",
    "LAB_004156cb",
    "LAB_004156de",
    "LAB_004156fa",
    "LAB_0041570b",
    "LAB_0041571f",
    "LAB_00415723",
    "LAB_0041576c",
    "LAB_004157a8",
    "LAB_004157b3",
    "LAB_004157cc",
    "LAB_004157d0",
    "LAB_00415851",
    "LAB_00415862",
    "LAB_0041588a",
    "LAB_004158e8",
    "LAB_00415924",
    "LAB_0041592c",
    "LAB_0041598f",
    "LAB_004159a0",
    "LAB_004159c8",
    "LAB_004159d9",
    "LAB_00415a26",
    "LAB_00415a34",
    "LAB_00415a43",
    "LAB_00415a45",
    "LAB_00415a87",
    "LAB_00415aa6",
    "LAB_00415aae",
    "LAB_00415afa",
    "LAB_00415b47",
    "LAB_00415b58",
    "LAB_00415b67",
    "LAB_00415b69",
    "LAB_00415bac",
    "LAB_00415c15",
    "LAB_00415c18",
    "LAB_00415c2e",
    "LAB_00415c79",
    "LAB_00415c8a",
    "LAB_00415c99",
    "LAB_00415c9b",
    "LAB_00415cd7",
    "LAB_00415ce9",
    "LAB_00415cf1",
    "LAB_00415cf7",
    "LAB_00415cfb",
    "LAB_00415d25",
    "LAB_00415d29",
    "LAB_00415d3b",
    "LAB_00415d9d",
    "LAB_00415ddc",
    "LAB_00415de7",
    "LAB_00415e05",
    "LAB_00415e16",
    "LAB_00415e40",
    "LAB_00415e54",
    "LAB_00415e68",
    "LAB_00415ec9",
    "LAB_00415f08",
    "LAB_00415f13",
    "LAB_00415f31",
    "LAB_00415f37",
    "LAB_00415f61",
    "LAB_00415f81",
    "LAB_00415f8e",
    "LAB_00415fdc",
    "LAB_00415fed",
    "LAB_00415ffc",
    "LAB_00415ffe",
    "LAB_0041603a",
    "LAB_00416074",
    "LAB_004160c2",
    "LAB_00416101",
    "LAB_0041610c",
    "LAB_0041612a",
    "LAB_0041613b",
    "LAB_00416165",
    "LAB_0041619c",
    "LAB_004161f2",
    "LAB_004161f8",
    "LAB_00416222",
    "LAB_0041622b",
    "LAB_00416239",
    "LAB_00416240",
    "LAB_004162bd",
    "LAB_004162ca",
    "LAB_004162cd",
    "LAB_004162e6",
    "LAB_00416301",
    "LAB_00416338",
    "LAB_00416347",
    "LAB_00416391",
    "LAB_0041639e",
    "LAB_004163ed",
    "LAB_004163fb",
    "LAB_0041640a",
    "LAB_0041640c",
    "LAB_00416453",
    "LAB_00416487",
    "LAB_0041649d",
    "LAB_004164bd",
    "LAB_00416506",
    "LAB_00416561",
    "LAB_00416572",
    "LAB_00416581",
    "LAB_00416583",
    "LAB_004165ca",
    "LAB_004165da",
    "LAB_00416649",
    "LAB_0041664c",
    "LAB_00416699",
    "LAB_004166ae",
    "LAB_004166bd",
    "LAB_004166c1",
    "LAB_00416703",
    "LAB_00416708",
    "LAB_0041670e",
    "LAB_00416744",
    "LAB_00416747",
    "LAB_00416762",
    "LAB_0041678e",
    "LAB_0041679f",
    "LAB_004167eb",
    "LAB_0041682a",
    "LAB_00416835",
    "LAB_00416856",
    "LAB_004168a1",
    "LAB_004168a9",
    "LAB_004168be",
    "LAB_004168e6",
    "LAB_0041690f",
    "LAB_00416916",
    "LAB_00416917",
    "LAB_00416920",
    "LAB_00416952",
    "LAB_00416998",
    "LAB_004169d4",
    "LAB_004169df",
    "LAB_004169f8",
    "LAB_004169fc",
    "LAB_00416a7d",
    "LAB_00416a83",
    "LAB_00416aab",
    "LAB_00416abf",
    "LAB_00416acc",
    "LAB_00416b1b",
    "LAB_00416b2c",
    "LAB_00416b3b",
    "LAB_00416b3d",
    "LAB_00416b7d",
    "LAB_00416b8a",
    "LAB_00416bc5",
    "LAB_00416be5",
    "LAB_00416c2c",
    "LAB_00416c6b",
    "LAB_00416c76",
    "LAB_00416c94",
    "LAB_00416ca5",
    "LAB_00416cc8",
    "LAB_00416cd0",
    "LAB_00416d0d",
    "LAB_00416d2c",
    "LAB_00416d30",
    "LAB_00416d6c",
    "LAB_00416d72",
    "LAB_00416db2",
    "LAB_00416dba",
    "LAB_00416dd5",
    "LAB_00416df4",
    "LAB_00416e2d",
    "LAB_00416e75",
    "LAB_00416e80",
    "LAB_00416e96",
    "LAB_00416ea2",
    "LAB_00416ed1",
    "LAB_00416eea",
    "LAB_00416eef",
    "LAB_00416f08",
    "LAB_00416f26",
    "LAB_00416f3f",
    "LAB_00416f53",
    "LAB_00416f61",
    "LAB_00416f7d",
    "LAB_00416f9d",
    "LAB_00416fc7",
    "LAB_00416fd7",
    "LAB_0041700b",
    "LAB_0041703d",
    "LAB_004170c2",
    "LAB_004170ca",
    "LAB_004170e0",
    "LAB_004170eb",
    "LAB_004170ef",
    "LAB_004170f3",
    "LAB_004170fe",
    "LAB_00417180",
    "LAB_0041718b",
    "LAB_00417197",
    "LAB_004171c2",
    "LAB_004171c8",
    "LAB_004171ce",
    "LAB_004171ee",
    "LAB_004171ff",
    "LAB_00417217",
    "LAB_0041724e",
    "LAB_00417250",
    "LAB_004172b0",
    "LAB_004172c2",
    "LAB_004172d5",
    "LAB_004172db",
    "LAB_00417317",
    "LAB_00417350",
    "LAB_00417354",
    "LAB_00417365",
    "LAB_00417374",
    "LAB_0041739c",
    "LAB_004173ea",
    "LAB_00417444",
    "LAB_00417455",
    "LAB_00417464",
    "LAB_00417466",
    "LAB_004174ab",
    "LAB_004174bb",
    "LAB_0041751d",
    "LAB_00417521",
    "LAB_0041756b",
    "LAB_0041757c",
    "LAB_0041758b",
    "LAB_0041758d",
    "LAB_004175c8",
    "LAB_004175cf",
    "LAB_004175fa",
    "LAB_004175fe",
    "LAB_0041761d",
    "LAB_00417630",
    "LAB_00417686",
    "LAB_0041769a",
    "LAB_004176f4",
    "LAB_00417705",
    "LAB_00417714",
    "LAB_00417716",
    "LAB_00417755",
    "LAB_00417762",
    "LAB_004177a6",
    "LAB_004177af",
    "LAB_004177b6",
    "LAB_004177b7",
    "LAB_004177d0",
    "LAB_004177ea",
    "LAB_00417825",
    "LAB_00417829",
    "LAB_00417835",
    "LAB_0041783c",
    "LAB_00417843",
    "LAB_00417866",
    "LAB_0041786c",
    "LAB_00417870",
    "LAB_00417874",
    "LAB_004178a0",
    "LAB_004178b1",
    "LAB_004178bd",
    "LAB_00417901",
    "LAB_00417951",
    "LAB_00417963",
    "LAB_00417976",
    "LAB_0041797c",
    "LAB_004179c0",
    "LAB_004179db",
    "LAB_004179e8",
    "LAB_00417a06",
    "LAB_00417a0a",
    "LAB_00417a69",
    "LAB_00417abc",
    "LAB_00417ad1",
    "LAB_00417adf",
    "LAB_00417ae3",
    "LAB_00417b32",
    "LAB_00417b42",
    "LAB_00417bbc",
    "LAB_00417bc0",
    "LAB_00417c12",
    "LAB_00417c27",
    "LAB_00417c36",
    "LAB_00417c3a",
    "LAB_00417c85",
    "LAB_00417c90",
    "LAB_00417cc5",
    "LAB_00417cc9",
    "LAB_00417ce4",
    "LAB_00417d46",
    "LAB_00417d82",
    "LAB_00417d8d",
    "LAB_00417da6",
    "LAB_00417daa",
    "LAB_00417e3a",
    "LAB_00417e58",
    "LAB_00417e80",
    "LAB_00417eb2",
    "LAB_00417f1c",
    "LAB_00417f5b",
    "LAB_00417f66",
    "LAB_00417f84",
    "LAB_00417f8a",
    "LAB_00417fb2",
    "LAB_00417fc6",
    "LAB_00417fd3",
    "LAB_0041802d",
    "LAB_0041803e",
    "LAB_0041804d",
    "LAB_0041804f",
    "LAB_00418096",
    "LAB_004180a3",
    "LAB_004180e7",
    "LAB_00418136",
    "LAB_00418175",
    "LAB_00418180",
    "LAB_0041819e",
    "LAB_004181b4",
    "LAB_004181dc",
    "LAB_004181e3",
    "LAB_004181e5",
    "LAB_0041823b",
    "LAB_00418270",
    "LAB_00418273",
    "LAB_00418286",
    "LAB_00418293",
    "LAB_004182be",
    "LAB_004182cc",
    "LAB_004182d4",
    "LAB_00418311",
    "LAB_00418337",
    "LAB_00418348",
    "LAB_0041836f",
    "LAB_004183ae",
    "LAB_004183b2",
    "LAB_004183e8",
    "LAB_00418420",
    "LAB_00418422",
    "LAB_0041843d",
    "LAB_00418481",
    "LAB_004184a6",
    "LAB_004184e0",
    "LAB_0041852b",
    "LAB_004185fd",
    "LAB_00418654",
    "LAB_004186f1",
    "LAB_004186f8",
    "LAB_004186ff",
    "LAB_0041871a",
    "LAB_0041871f",
    "LAB_00418749",
    "LAB_00418788",
    "LAB_004187b1",
    "LAB_004187b3",
    "LAB_004187f5",
    "LAB_004187fb",
    "LAB_00418885",
    "LAB_004188a3",
    "LAB_004188c9",
    "LAB_004188e5",
    "LAB_00418921",
    "LAB_00418925",
    "LAB_00418927",
    "LAB_004189f5",
    "LAB_004189fe",
    "LAB_00418a33",
    "LAB_00418a5e",
    "LAB_00418a9d",
    "LAB_00418ad1",
    "LAB_00418af0",
    "LAB_00418b08",
    "LAB_00418b15",
    "LAB_00418b38",
    "LAB_00418b51",
    "LAB_00418b88",
    "LAB_00418bb6",
    "LAB_00418bbf",
    "LAB_00418c1e",
    "LAB_00418c48",
    "LAB_00418c7d",
    "LAB_00418c8c",
    "LAB_00418d43",
    "LAB_00418d4e",
    "LAB_00418d53",
    "LAB_00418d82",
    "LAB_00418dbf",
    "LAB_00418dfe",
    "LAB_00418e5d",
    "LAB_00418e6f",
    "LAB_00418ec7",
    "LAB_00418ef3",
    "LAB_00418f11",
    "LAB_00418f53",
    "LAB_00418f64",
    "LAB_00418f7d",
    "LAB_00418fc4",
    "LAB_00418fc9",
    "LAB_00419005",
    "LAB_00419014",
    "LAB_00419035",
    "LAB_00419061",
    "LAB_00419063",
    "LAB_004190f1",
    "LAB_004190f3",
    "LAB_00419165",
    "LAB_004191af",
    "LAB_004191cd",
    "LAB_004191f0",
    "LAB_0041929b",
    "LAB_00419305",
    "LAB_00419306",
    "LAB_00419307",
    "LAB_0041936f",
    "LAB_00419400",
    "LAB_00419416",
    "LAB_00419418",
    "LAB_004194b5",
    "LAB_004194c0",
    "LAB_004195a5",
    "LAB_004195b8",
    "LAB_004195c8",
    "LAB_004195d5",
    "LAB_004195e2",
    "LAB_004195e4",
    "LAB_004195e7",
    "LAB_0041967d",
    "LAB_00419691",
    "LAB_004196b1",
    "LAB_00419700",
    "LAB_00419783",
    "LAB_0041978c",
    "LAB_004197a7",
    "LAB_004197c4",
    "LAB_004197d5",
    "LAB_0041981b",
    "LAB_0041981e",
    "LAB_0041985a",
    "LAB_0041985c",
    "LAB_00419887",
    "LAB_00419889",
    "LAB_00419903",
    "LAB_0041992b",
    "LAB_00419930",
    "LAB_0041993a",
    "LAB_0041993b",
    "LAB_00419985",
    "LAB_004199bc",
    "LAB_004199d9",
    "LAB_004199fe",
    "LAB_00419a0b",
    "LAB_00419a31",
    "LAB_00419a36",
    "LAB_00419a3b",
    "LAB_00419a4f",
    "LAB_00419a60",
    "LAB_00419a85",
    "LAB_00419abf",
    "LAB_00419ada",
    "LAB_00419af5",
    "LAB_00419b0e",
    "LAB_00419b18",
    "LAB_00419b2b",
    "LAB_00419b30",
    "LAB_00419b46",
    "LAB_00419b4e",
    "LAB_00419b50",
    "LAB_00419bb0",
    "LAB_00419be8",
    "LAB_00419c00",
    "LAB_00419c93",
    "LAB_00419cfb",
    "LAB_00419d53",
    "LAB_00419d56",
    "LAB_00419d71",
    "LAB_00419d7b",
    "LAB_00419d80",
    "LAB_00419d8e",
    "LAB_00419da3",
    "LAB_00419dab",
    "LAB_00419db2",
    "LAB_00419dc9",
    "LAB_00419dcc",
    "LAB_00419dcf",
    "LAB_00419dd2",
    "LAB_00419de6",
    "LAB_00419e0d",
    "LAB_00419e2e",
    "LAB_00419e50",
    "LAB_00419e70",
    "LAB_00419e76",
    "LAB_00419e7b",
    "LAB_00419e86",
    "LAB_00419e9d",
    "LAB_00419ea1",
    "LAB_00419eb1",
    "LAB_00419ec3",
    "LAB_00419ec6",
    "LAB_00419f0e",
    "LAB_00419f19",
    "LAB_00419f23",
    "LAB_00419f31",
    "LAB_00419f3b",
    "LAB_00419f70",
    "LAB_00419ff2",
    "LAB_0041a008",
    "LAB_0041a095",
    "LAB_0041a0aa",
    "LAB_0041a17b",
    "LAB_0041a17c",
    "LAB_0041a199",
    "LAB_0041a1ad",
    "LAB_0041a1bd",
    "LAB_0041a23f",
    "LAB_0041a295",
    "LAB_0041a2ad",
    "LAB_0041a312",
    "LAB_0041a313",
    "LAB_0041a38b",
    "LAB_0041a39e",
    "LAB_0041a3b3",
    "LAB_0041a3b4",
    "LAB_0041a3e1",
    "LAB_0041a3e6",
    "LAB_0041a427",
    "LAB_0041a431",
    "LAB_0041a45f",
    "LAB_0041a483",
    "LAB_0041a485",
    "LAB_0041a4f0",
    "LAB_0041a521",
    "LAB_0041a538",
    "LAB_0041a53b",
    "LAB_0041a55f",
    "LAB_0041a57a",
    "LAB_0041a598",
    "LAB_0041a5ab",
    "LAB_0041a5bf",
    "LAB_0041a5e1",
    "LAB_0041a5f7",
    "LAB_0041a618",
    "LAB_0041a647",
    "LAB_0041a649",
    "LAB_0041a697",
    "LAB_0041a7b3",
    "LAB_0041a7c5",
    "LAB_0041a7cc",
    "LAB_0041a7d3",
    "LAB_0041a7db",
    "LAB_0041a7dd",
    "LAB_0041a7f8",
    "LAB_0041a82e",
    "LAB_0041a867",
    "LAB_0041a878",
    "LAB_0041a898",
    "LAB_0041a8a8",
    "LAB_0041a928",
    "LAB_0041a940",
    "LAB_0041a955",
    "LAB_0041aa52",
    "LAB_0041aa5c",
    "LAB_0041aa70",
    "LAB_0041aab4",
    "LAB_0041aabf",
    "LAB_0041aac0",
    "LAB_0041aac3",
    "LAB_0041ab1f",
    "LAB_0041abf1",
    "LAB_0041abf2",
    "LAB_0041abff",
    "LAB_0041ad5d",
    "LAB_0041ad61",
    "LAB_0041ad95",
    "LAB_0041ad97",
    "LAB_0041ada0",
    "LAB_0041adb7",
    "LAB_0041adbf",
    "LAB_0041adc8",
    "LAB_0041adcb",
    "LAB_0041ade8",
    "LAB_0041adff",
    "LAB_0041ae0c",
    "LAB_0041ae12",
    "LAB_0041ae27",
    "LAB_0041aeca",
    "LAB_0041aecb",
    "LAB_0041af07",
    "LAB_0041af0d",
    "LAB_0041af5a",
    "LAB_0041afd0",
    "LAB_0041b006",
    "LAB_0041b00f",
    "LAB_0041b013",
    "LAB_0041b01f",
    "LAB_0041b020",
    "LAB_0041b030",
    "LAB_0041b048",
    "LAB_0041b056",
    "LAB_0041b05c",
    "LAB_0041b062",
    "LAB_0041b072",
    "LAB_0041b076",
    "LAB_0041b07e",
    "LAB_0041b089",
    "LAB_0041b0eb",
    "LAB_0041b130",
    "LAB_0041b143",
    "LAB_0041b148",
    "LAB_0041b168",
    "LAB_0041b16f",
    "LAB_0041b17c",
    "LAB_0041b247",
    "LAB_0041b263",
    "LAB_0041b26c",
    "LAB_0041b2b7",
    "LAB_0041b2bb",
    "LAB_0041b2bd",
    "LAB_0041b2c6",
    "LAB_0041b2fe",
    "LAB_0041b30a",
    "LAB_0041b30d",
    "LAB_0041b32f",
    "LAB_0041b33c",
    "LAB_0041b366",
    "LAB_0041b37e",
    "LAB_0041b387",
    "LAB_0041b393",
    "LAB_0041b3b7",
    "LAB_0041b3c7",
    "LAB_0041b3cc",
    "LAB_0041b3cf",
    "LAB_0041b3d6",
    "LAB_0041b412",
    "LAB_0041b418",
    "LAB_0041b41a",
    "LAB_0041b47f",
    "LAB_0041b487",
    "LAB_0041b4b7",
    "LAB_0041b4c9",
    "LAB_0041b4d6",
    "LAB_0041b512",
    "LAB_0041b520",
    "LAB_0041b537",
    "LAB_0041b559",
    "LAB_0041b5a8",
    "LAB_0041b5bc",
    "LAB_0041b607",
    "LAB_0041b60e",
    "LAB_0041b60f",
    "LAB_0041b61b",
    "LAB_0041b61f",
    "LAB_0041b63d",
    "LAB_0041b656",
    "LAB_0041b667",
    "LAB_0041b6d3",
    "LAB_0041b6d6",
    "LAB_0041b70b",
    "LAB_0041b71a",
    "LAB_0041b728",
    "LAB_0041b74c",
    "LAB_0041b770",
    "LAB_0041b7d1",
    "LAB_0041b7d8",
    "LAB_0041b7d9",
    "LAB_0041b7da",
    "LAB_0041b841",
    "LAB_0041b848",
    "LAB_0041b878",
    "LAB_0041b894",
    "LAB_0041b89b",
    "LAB_0041b8d9",
    "LAB_0041b920",
    "LAB_0041b92e",
    "LAB_0041b958",
    "LAB_0041b95e",
    "LAB_0041b95f",
    "LAB_0041b96b",
    "LAB_0041b980",
    "LAB_0041b9b7",
    "LAB_0041b9e0",
    "LAB_0041ba3a",
    "LAB_0041ba4f",
    "LAB_0041ba78",
    "LAB_0041ba7b",
    "LAB_0041baa1",
    "LAB_0041bb02",
    "LAB_0041bb16",
    "LAB_0041bb28",
    "LAB_0041bc04",
    "LAB_0041bc65",
    "LAB_0041bc6b",
    "LAB_0041bcb2",
    "LAB_0041bccb",
    "LAB_0041bcd5",
    "LAB_0041bcdb",
    "LAB_0041bcf1",
    "LAB_0041bcfb",
    "LAB_0041bd56",
    "LAB_0041bdc1",
    "LAB_0041be2c",
    "LAB_0041be40",
    "LAB_0041be80",
    "LAB_0041be91",
    "LAB_0041bef0",
    "LAB_0041bf0f",
    "LAB_0041bf38",
    "LAB_0041bf52",
    "LAB_0041bfa5",
    "LAB_0041bfd9",
    "LAB_0041bff0",
    "LAB_0041c020",
    "LAB_0041c072",
    "LAB_0041c0cb",
    "LAB_0041c0d8",
    "LAB_0041c10d",
    "LAB_0041c11e",
    "LAB_0041c132",
    "LAB_0041c160",
    "LAB_0041c18b",
    "LAB_0041c19d",
    "LAB_0041c1ba",
    "LAB_0041c1e1",
    "LAB_0041c1e7",
    "LAB_0041c1fc",
    "LAB_0041c203",
    "LAB_0041c205",
    "LAB_0041c25f",
    "LAB_0041c267",
    "LAB_0041c2a4",
    "LAB_0041c2a6",
    "LAB_0041c2a7",
    "LAB_0041c2c2",
    "LAB_0041c2cc",
    "LAB_0041c2d0",
    "LAB_0041c2d4",
    "LAB_0041c2d9",
    "LAB_0041c2dd",
    "LAB_0041c492",
    "LAB_0041c497",
    "LAB_0041c56a",
    "LAB_0041c5b5",
    "LAB_0041c5b7",
    "LAB_0041c5f8",
    "LAB_0041c616",
    "LAB_0041c669",
    "LAB_0041c675",
    "LAB_0041c67f",
    "LAB_0041c688",
    "LAB_0041c699",
    "LAB_0041c6ba",
    "LAB_0041c6c5",
    "LAB_0041c6ca",
    "LAB_0041c6e5",
    "LAB_0041c712",
    "LAB_0041c724",
    "LAB_0041c72a",
    "LAB_0041c738",
    "LAB_0041c793",
    "LAB_0041c7a2",
    "LAB_0041c7bb",
    "LAB_0041c7dd",
    "LAB_0041c855",
    "LAB_0041c8b5",
    "LAB_0041c8c9",
    "LAB_0041c90f",
    "LAB_0041c937",
    "LAB_0041c939",
    "LAB_0041c98f",
    "LAB_0041c9aa",
    "LAB_0041c9e6",
    "LAB_0041c9f5",
    "LAB_0041ca05",
    "LAB_0041ca12",
    "LAB_0041ca42",
    "LAB_0041ca4b",
    "LAB_0041cab2",
    "LAB_0041caf8",
    "LAB_0041cb01",
    "LAB_0041cb11",
    "LAB_0041cb6c",
    "LAB_0041cb76",
    "LAB_0041cbab",
    "LAB_0041cbe0",
    "LAB_0041cbf0",
    "LAB_0041cc11",
    "LAB_0041ccbc",
    "LAB_0041ccf4",
    "LAB_0041ccfa",
    "LAB_0041cd05",
    "LAB_0041cd40",
    "LAB_0041cd4c",
    "LAB_0041cdbc",
    "LAB_0041cdf5",
    "LAB_0041ce0d",
    "LAB_0041ce22",
    "LAB_0041ce25",
    "LAB_0041ce38",
    "LAB_0041ce4e",
    "LAB_0041ceb7",
    "LAB_0041ceb9",
    "LAB_0041cf3e",
    "LAB_0041cf56",
    "LAB_0041cf7b",
    "LAB_0041cfb4",
    "LAB_0041d009",
    "LAB_0041d024",
    "LAB_0041d050",
    "LAB_0041d05e",
    "LAB_0041d0a2",
    "LAB_0041d0b0",
    "LAB_0041d0bc",
    "LAB_0041d149",
    "LAB_0041d178",
    "LAB_0041d188",
    "LAB_0041d1d4",
    "LAB_0041d1db",
    "LAB_0041d1de",
    "LAB_0041d1f0",
    "LAB_0041d1fd",
    "LAB_0041d200",
    "LAB_0041d221",
    "LAB_0041d226",
    "LAB_0041d244",
    "LAB_0041d271",
    "LAB_0041d2a9",
    "LAB_0041d2d3",
    "LAB_0041d306",
    "LAB_0041d318",
    "LAB_0041d40d",
    "LAB_0041d47a",
    "LAB_0041d4cd",
    "LAB_0041d536",
    "LAB_0041d591",
    "LAB_0041d5e7",
    "LAB_0041d644",
    "LAB_0041d648",
    "LAB_0041d64a",
    "LAB_0041d653",
    "LAB_0041d66b",
    "LAB_0041d68a",
    "LAB_0041d68d",
    "LAB_0041d6d6",
    "LAB_0041d76a",
    "LAB_0041d782",
    "LAB_0041d783",
    "LAB_0041d786",
    "LAB_0041d7f1",
    "LAB_0041d808",
    "LAB_0041d812",
    "LAB_0041d81a",
    "LAB_0041d822",
    "LAB_0041d830",
    "LAB_0041d837",
    "LAB_0041d85b",
    "LAB_0041d864",
    "LAB_0041d86d",
    "LAB_0041d882",
    "LAB_0041d8b1",
    "LAB_0041d8d9",
    "LAB_0041d90c",
    "LAB_0041d925",
    "LAB_0041d974",
    "LAB_0041d97b",
    "LAB_0041d998",
    "LAB_0041d9c0",
    "LAB_0041d9c6",
    "LAB_0041d9cf",
    "LAB_0041d9d6",
    "LAB_0041d9e7",
    "LAB_0041d9e8",
    "LAB_0041da33",
    "LAB_0041da3c",
    "LAB_0041da4f",
    "LAB_0041dbd9",
    "LAB_0041dbda",
    "LAB_0041dc1a",
    "LAB_0041dc21",
    "LAB_0041dc36",
    "LAB_0041dc59",
    "LAB_0041dc8c",
    "LAB_0041dc9c",
    "LAB_0041dd06",
    "LAB_0041dd14",
    "LAB_0041dd23",
    "LAB_0041dd46",
    "LAB_0041dd64",
    "LAB_0041dd69",
    "LAB_0041ddcf",
    "LAB_0041dde8",
    "LAB_0041de38",
    "LAB_0041de4d",
    "LAB_0041de64",
    "LAB_0041de65",
    "LAB_0041dfcd",
    "LAB_0041dfd6",
    "LAB_0041dfe0",
    "LAB_0041dfe6",
    "LAB_0041e0fd",
    "LAB_0041e10b",
    "LAB_0041e12a",
    "LAB_0041e146",
    "LAB_0041e167",
    "LAB_0041e189",
    "LAB_0041e1b4",
    "LAB_0041e1ba",
    "LAB_0041e5e8",
    "LAB_0041e5ed",
    "LAB_0041e611",
    "LAB_0041e615",
    "LAB_0041e63f",
    "LAB_0041e654",
    "LAB_0041e65b",
    "LAB_0041e65f",
    "LAB_0041e661",
    "LAB_0041e685",
    "LAB_0041e68c",
    "LAB_0041e68e",
    "LAB_0041e6c3",
    "LAB_0041e700",
    "LAB_0041e70c",
    "LAB_0041e70e",
    "LAB_0041e755",
    "LAB_0041e765",
    "LAB_0041e76d",
    "LAB_0041e76f",
    "LAB_0041e776",
    "LAB_0041e7b3",
    "LAB_0041e7d4",
    "LAB_0041e7dd",
    "LAB_0041e7f6",
    "LAB_0041e82a",
    "LAB_0041e82f",
    "LAB_0041e852",
    "LAB_0041e8ee",
    "LAB_0041e916",
    "LAB_0041e944",
    "LAB_0041e966",
    "LAB_0041e9a2",
    "LAB_0041e9c7",
    "LAB_0041e9d9",
    "LAB_0041e9df",
    "LAB_0041e9f8",
    "LAB_0041ea37",
    "LAB_0041ea70",
    "LAB_0041ea95",
    "LAB_0041ea9a",
    "LAB_0041eabe",
    "LAB_0041eac5",
    "LAB_0041ead6",
    "LAB_0041eaf1",
    "LAB_0041eb3d",
    "LAB_0041eb4a",
    "LAB_0041eb59",
    "LAB_0041ebc1",
    "LAB_0041ebdd",
    "LAB_0041ebf9",
    "LAB_0041ec07",
    "LAB_0041ec35",
    "LAB_0041ec36",
    "LAB_0041ec3a",
    "LAB_0041ec44",
    "LAB_0041ec64",
    "LAB_0041ec72",
    "LAB_0041ec92",
    "LAB_0041ecb2",
    "LAB_0041ecee",
    "LAB_0041ed16",
    "LAB_0041ed35",
    "LAB_0041ed73",
    "LAB_0041ed88",
    "LAB_0041edce",
    "LAB_0041ee20",
    "LAB_0041ee2a",
    "LAB_0041ee4c",
    "LAB_0041ee86",
    "LAB_0041ee95",
    "LAB_0041ee9c",
    "LAB_0041ee9e",
    "LAB_0041eea1",
    "LAB_0041eebf",
    "LAB_0041eec3",
    "LAB_0041eecf",
    "LAB_0041eed3",
    "LAB_0041eee7",
    "LAB_0041eef5",
    "LAB_0041eef9",
    "LAB_0041ef0c",
    "LAB_0041ef20",
    "LAB_0041ef2d",
    "LAB_0041ef58",
    "LAB_0041ef5c",
    "LAB_0041ef83",
    "LAB_0041ef8c",
    "LAB_0041ef8f",
    "LAB_0041f012",
    "LAB_0041f01b",
    "LAB_0041f046",
    "LAB_0041f05a",
    "LAB_0041f06c",
    "LAB_0041f086",
    "LAB_0041f091",
    "LAB_0041f0d0",
    "LAB_0041f0da",
    "LAB_0041f0f9",
    "LAB_0041f140",
    "LAB_0041f15b",
    "LAB_0041f17a",
    "LAB_0041f188",
    "LAB_0041f1b3",
    "LAB_0041f1bb",
    "LAB_0041f1c6",
    "LAB_0041f1cd",
    "LAB_0041f202",
    "LAB_0041f210",
    "LAB_0041f23e",
    "LAB_0041f23f",
    "LAB_0041f243",
    "LAB_0041f271",
    "LAB_0041f27f",
    "LAB_0041f2aa",
    "LAB_0041f2b2",
    "LAB_0041f2c1",
    "LAB_0041f34b",
    "LAB_0041f374",
    "LAB_0041f383",
    "LAB_0041f41f",
    "LAB_0041f43c",
    "LAB_0041f441",
    "LAB_0041f472",
    "LAB_0041f490",
    "LAB_0041f4be",
    "LAB_0041f508",
    "LAB_0041f518",
    "LAB_0041f51f",
    "LAB_0041f5a6",
    "LAB_0041f5ca",
    "LAB_0041f713",
    "LAB_0041f724",
    "LAB_0041f72a",
    "LAB_0041f768",
    "LAB_0041f76b",
    "LAB_0041f821",
    "LAB_0041f824",
    "LAB_0041f853",
    "LAB_0041f950",
    "LAB_0041f97f",
    "LAB_0041f9d2",
    "LAB_0041fa27",
    "LAB_0041fa2f",
    "LAB_0041fab5",
    "LAB_0041fac7",
    "LAB_0041fad5",
    "LAB_0041fadb",
    "LAB_0041fb1c",
    "LAB_0041fb70",
    "LAB_0041fb80",
    "LAB_0041fb88",
    "LAB_0041fba1",
    "LAB_0041fbb1",
    "LAB_0041fbb9",
    "LAB_0041fbc5",
    "LAB_0041fc0c",
    "LAB_0041fd4f",
    "LAB_0041fd70",
    "LAB_0041fd75",
    "LAB_0041fdd4",
    "LAB_0041fe06",
    "LAB_0041fe38",
    "LAB_0041fe43",
    "LAB_0041fe4d",
    "LAB_0041fe57",
    "LAB_0041fe69",
    "LAB_0041fe6f",
    "LAB_0041fe80",
    "LAB_0041fe92",
    "LAB_0041fed8",
    "LAB_0041ff1b",
    "LAB_0041ff52",
    "LAB_0041ff61",
    "LAB_0041ff95",
    "LAB_0041ffa3",
    "LAB_0041ffb4",
    "LAB_00420035",
    "LAB_00420070",
    "LAB_004200ad",
    "LAB_004200c0",
    "LAB_004200c5",
    "LAB_004200e1",
    "LAB_004200f5",
    "LAB_004200fd",
    "LAB_0042010b",
    "LAB_0042011b",
    "LAB_00420130",
    "LAB_00420143",
    "LAB_0042018c",
    "LAB_004201c3",
    "LAB_004201e1",
    "LAB_00420237",
    "LAB_00420239",
    "LAB_0042023d",
    "LAB_00420268",
    "LAB_00420273",
    "LAB_00420278",
    "LAB_0042029e",
    "LAB_004202c5",
    "LAB_004202d8",
    "LAB_004202de",
    "LAB_00420340",
    "LAB_00420364",
    "LAB_00420377",
    "LAB_00420390",
    "LAB_004203c9",
    "LAB_004203e0",
    "LAB_004203fc",
    "LAB_0042044d",
    "LAB_00420458",
    "LAB_004204a6",
    "LAB_004204b0",
    "LAB_004204fc",
    "LAB_00420514",
    "LAB_00420527",
    "LAB_0042053e",
    "LAB_00420547",
    "LAB_0042054f",
    "LAB_00420562",
    "LAB_004205d4",
    "LAB_00420600",
    "LAB_0042060d",
    "LAB_00420685",
    "LAB_0042068d",
    "LAB_0042069c",
    "LAB_0042070c",
    "LAB_00420711",
    "LAB_00420734",
    "LAB_0042073c",
    "LAB_00420751",
    "LAB_00420755",
    "LAB_00420764",
    "LAB_00420770",
    "LAB_0042077d",
    "LAB_00420790",
    "LAB_004207ed",
    "LAB_00420800",
    "LAB_0042081b",
    "LAB_00420827",
    "LAB_00420836",
    "LAB_0042083d",
    "LAB_00420850",
    "LAB_00420860",
    "LAB_00420873",
    "LAB_0042087c",
    "LAB_00420881",
    "LAB_0042088e",
    "LAB_004208bd",
    "LAB_004208cf",
    "LAB_004208d4",
    "LAB_004208db",
    "LAB_004208df",
    "LAB_004208fe",
    "LAB_00420983",
    "LAB_00420a48",
    "LAB_00420a51",
    "LAB_00420a54",
    "LAB_00420b4b",
    "LAB_00420b4e",
    "LAB_00420b5b",
    "LAB_00420b62",
    "LAB_00420b6a",
    "LAB_00420b71",
    "LAB_00420ba7",
    "LAB_00420be5",
    "LAB_00420c11",
    "LAB_00420cb2",
    "LAB_00420cd4",
    "LAB_00420cf6",
    "LAB_00420d18",
    "LAB_00420d20",
    "LAB_00420d45",
    "LAB_00420d67",
    "LAB_00420d89",
    "LAB_00420dab",
    "LAB_00420db3",
    "LAB_00420dd8",
    "LAB_00420dfa",
    "LAB_00420e1c",
    "LAB_00420e3e",
    "LAB_00420e46",
    "LAB_00420e6b",
    "LAB_00420e8d",
    "LAB_00420eaf",
    "LAB_00420ed1",
    "LAB_00420ed9",
    "LAB_00420eff",
    "LAB_00420f21",
    "LAB_00420f43",
    "LAB_00420f65",
    "LAB_00420f6d",
    "LAB_00420f92",
    "LAB_00420fb4",
    "LAB_00420fd6",
    "LAB_00420ff8",
    "LAB_00421000",
    "LAB_00421025",
    "LAB_00421047",
    "LAB_00421069",
    "LAB_0042108b",
    "LAB_00421093",
    "LAB_004210b8",
    "LAB_004210da",
    "LAB_004210fc",
    "LAB_0042111e",
    "LAB_00421126",
    "LAB_0042112c",
    "LAB_00421164",
    "LAB_00421186",
    "LAB_004211a8",
    "LAB_004211ca",
    "LAB_004211f7",
    "LAB_00421219",
    "LAB_0042123b",
    "LAB_0042125d",
    "LAB_0042128a",
    "LAB_004212ac",
    "LAB_004212ce",
    "LAB_004212f0",
    "LAB_0042131d",
    "LAB_0042133f",
    "LAB_00421361",
    "LAB_00421383",
    "LAB_004213b1",
    "LAB_004213d3",
    "LAB_004213f5",
    "LAB_00421417",
    "LAB_00421444",
    "LAB_00421466",
    "LAB_00421488",
    "LAB_004214aa",
    "LAB_004214d3",
    "LAB_004214f1",
    "LAB_0042150f",
    "LAB_0042152d",
    "LAB_00421533",
    "LAB_0042155c",
    "LAB_0042157a",
    "LAB_00421598",
    "LAB_004215b6",
    "LAB_004215e3",
    "LAB_00421605",
    "LAB_00421627",
    "LAB_00421649",
    "LAB_00421676",
    "LAB_00421698",
    "LAB_004216ba",
    "LAB_004216dc",
    "LAB_00421709",
    "LAB_0042172b",
    "LAB_0042174d",
    "LAB_0042176f",
    "LAB_0042179c",
    "LAB_004217be",
    "LAB_004217e0",
    "LAB_00421802",
    "LAB_00421830",
    "LAB_00421852",
    "LAB_00421874",
    "LAB_00421896",
    "LAB_004218aa",
    "LAB_004218c4",
    "LAB_004218e6",
    "LAB_00421908",
    "LAB_00421910",
    "LAB_0042192a",
    "LAB_0042197a",
    "LAB_0042199c",
    "LAB_004219be",
    "LAB_004219e0",
    "LAB_00421a0d",
    "LAB_00421a2f",
    "LAB_00421a51",
    "LAB_00421a73",
    "LAB_00421aa0",
    "LAB_00421ac2",
    "LAB_00421ae4",
    "LAB_00421b06",
    "LAB_00421b33",
    "LAB_00421b55",
    "LAB_00421b77",
    "LAB_00421b99",
    "LAB_00421bc6",
    "LAB_00421be8",
    "LAB_00421c0a",
    "LAB_00421c2c",
    "LAB_00421c5a",
    "LAB_00421c7c",
    "LAB_00421c9e",
    "LAB_00421cc0",
    "LAB_00421ced",
    "LAB_00421d0f",
    "LAB_00421d31",
    "LAB_00421d53",
    "LAB_00421d94",
    "LAB_00421db6",
    "LAB_00421dd8",
    "LAB_00421dfa",
    "LAB_00421e27",
    "LAB_00421e49",
    "LAB_00421e6b",
    "LAB_00421e8d",
    "LAB_00421eba",
    "LAB_00421edc",
    "LAB_00421efe",
    "LAB_00421f20",
    "LAB_00421f4d",
    "LAB_00421f6f",
    "LAB_00421f91",
    "LAB_00421fb3",
    "LAB_00421fe1",
    "LAB_00422003",
    "LAB_00422025",
    "LAB_00422047",
    "LAB_00422074",
    "LAB_00422096",
    "LAB_004220b8",
    "LAB_004220da",
    "LAB_00422107",
    "LAB_00422129",
    "LAB_00422136",
    "LAB_00422154",
    "LAB_00422172",
    "LAB_00422190",
    "LAB_0042219c",
    "LAB_004221ae",
    "LAB_004221b5",
    "LAB_004221d3",
    "LAB_004221f1",
    "LAB_004221ff",
    "LAB_0042221d",
    "LAB_0042222e",
    "LAB_0042223f",
    "LAB_00422241",
    "LAB_004222f7",
    "LAB_0042230f",
    "LAB_00422315",
    "LAB_0042231d",
    "LAB_00422332",
    "LAB_0042235f",
    "LAB_0042236e",
    "LAB_00422373",
    "LAB_0042237f",
    "LAB_00422383",
    "LAB_00422385",
    "LAB_004223ca",
    "LAB_004223d4",
    "LAB_00422431",
    "LAB_00422454",
    "LAB_0042245e",
    "LAB_00422477",
    "LAB_0042247f",
    "LAB_00422482",
    "LAB_0042249b",
    "LAB_004224a0",
    "LAB_004224af",
    "LAB_004224b4",
    "LAB_004224eb",
    "LAB_00422502",
    "LAB_0042251a",
    "LAB_00422521",
    "LAB_00422528",
    "LAB_00422549",
    "LAB_00422576",
    "LAB_0042257e",
    "LAB_00422596",
    "LAB_004225db",
    "LAB_004225e5",
    "LAB_004225fd",
    "LAB_00422603",
    "LAB_0042260a",
    "LAB_0042260e",
    "LAB_00422622",
    "LAB_00422648",
    "LAB_0042264a",
    "LAB_00422662",
    "LAB_00422664",
    "LAB_004226a3",
    "LAB_004226c7",
    "LAB_004226d8",
    "LAB_004226f0",
    "LAB_00422705",
    "LAB_00422710",
    "LAB_0042274c",
    "LAB_0042274e",
    "LAB_00422752",
    "LAB_00422757",
    "LAB_0042277f",
    "LAB_00422786",
    "LAB_0042278d",
    "LAB_00422794",
    "LAB_004227af",
    "LAB_004227be",
    "LAB_004227ca",
    "LAB_004227d3",
    "LAB_004227d7",
    "LAB_004227e0",
    "LAB_004227ea",
    "LAB_004227f2",
    "LAB_0042280b",
    "LAB_0042280e",
    "LAB_0042281e",
    "LAB_00422825",
    "LAB_00422830",
    "LAB_00422837",
    "LAB_00422839",
    "LAB_00422852",
    "LAB_00422886",
    "LAB_00422891",
    "LAB_0042289c",
    "LAB_004228b4",
    "LAB_004228df",
    "LAB_00422967",
    "LAB_00422994",
    "LAB_00422997",
    "LAB_004229a4",
    "LAB_004229ad",
    "LAB_004229c4",
    "LAB_004229d0",
    "LAB_004229da",
    "LAB_00422a1a",
    "LAB_00422a1d",
    "LAB_00422a41",
    "LAB_00422a67",
    "LAB_00422a6a",
    "LAB_00422a7a",
    "LAB_00422a90",
    "LAB_00422aa1",
    "LAB_00422aa5",
    "LAB_00422aab",
    "LAB_00422ac9",
    "LAB_00422ae8",
    "LAB_00422b06",
    "LAB_00422b3a",
    "LAB_00422b3e",
    "LAB_00422b62",
    "LAB_00422b74",
    "LAB_00422b78",
    "LAB_00422b80",
    "LAB_00422ba1",
    "LAB_00422ba4",
    "LAB_00422bbc",
    "LAB_00422bd7",
    "LAB_00422c0e",
    "LAB_00422c1c",
    "LAB_00422c46",
    "LAB_00422c51",
    "LAB_00422c6a",
    "LAB_00422ca1",
    "LAB_00422cac",
    "LAB_00422cd7",
    "LAB_00422cec",
    "LAB_00422d00",
    "LAB_00422d02",
    "LAB_00422d12",
    "LAB_00422d33",
    "LAB_00422d39",
    "LAB_00422d75",
    "LAB_00422d8d",
    "LAB_00422dd3",
    "LAB_00422ddc",
    "LAB_00422e2c",
    "LAB_00422ea3",
    "LAB_00422f04",
    "LAB_00422f0d",
    "LAB_00422f44",
    "LAB_00422f71",
    "LAB_00422f79",
    "LAB_00422f7f",
    "LAB_00422fbc",
    "LAB_00422ffb",
    "LAB_00423044",
    "LAB_00423057",
    "LAB_0042307b",
    "LAB_0042308c",
    "LAB_004230b7",
    "LAB_004230ba",
    "LAB_004230d9",
    "LAB_004230e9",
    "LAB_0042310f",
    "LAB_00423113",
    "LAB_00423128",
    "LAB_00423139",
    "LAB_0042315f",
    "LAB_0042316a",
    "LAB_0042316f",
    "LAB_00423174",
    "LAB_00423194",
    "LAB_004231ae",
    "LAB_004231d0",
    "LAB_00423240",
    "LAB_00423287",
    "LAB_004232be",
    "LAB_004232ec",
    "LAB_00423301",
    "LAB_00423303",
    "LAB_00423306",
    "LAB_00423331",
    "LAB_0042333d",
    "LAB_00423359",
    "LAB_0042335d",
    "LAB_00423362",
    "LAB_0042336a",
    "LAB_00423374",
    "LAB_00423381",
    "LAB_0042338b",
    "LAB_0042338e",
    "LAB_00423392",
    "LAB_00423395",
    "LAB_004233e7",
    "LAB_00423413",
    "LAB_00423428",
    "LAB_00423436",
    "LAB_00423478",
    "LAB_00423494",
    "LAB_00423497",
    "LAB_0042361a",
    "LAB_00423696",
    "LAB_004236c0",
    "LAB_004236f5",
    "LAB_00423731",
    "LAB_00423746",
    "LAB_00423790",
    "LAB_004237f1",
    "LAB_004237fd",
    "LAB_00423843",
    "LAB_00423844",
    "LAB_00423882",
    "LAB_00423899",
    "LAB_004238c4",
    "LAB_004238c6",
    "LAB_004238c9",
    "LAB_004238d7",
    "LAB_004238de",
    "LAB_0042395f",
    "LAB_00423995",
    "LAB_0042399a",
    "LAB_004239d2",
    "LAB_004239fc",
    "LAB_00423a31",
    "LAB_00423a85",
    "LAB_00423b10",
    "LAB_00423b39",
    "LAB_00423b40",
    "LAB_00423b58",
    "LAB_00423b6e",
    "LAB_00423b7e",
    "LAB_00423b95",
    "LAB_00423be6",
    "LAB_00423beb",
    "LAB_00423bee",
    "LAB_00423bf5",
    "LAB_00423bfa",
    "LAB_00423c09",
    "LAB_00423c4f",
    "LAB_00423c51",
    "LAB_00423c53",
    "LAB_00423c8a",
    "LAB_00423cc4",
    "LAB_00423cca",
    "LAB_00423cff",
    "LAB_00423d05",
    "LAB_00423d3d",
    "LAB_00423d43",
    "LAB_00423d7e",
    "LAB_00423d8a",
    "LAB_00423da4",
    "LAB_00423dc2",
    "LAB_00423dfb",
    "LAB_00423e1b",
    "LAB_00423e62",
    "LAB_00423e75",
    "LAB_00423e80",
    "LAB_00423e9c",
    "LAB_00423ec0",
    "LAB_00423ef3",
    "LAB_00423efd",
    "LAB_00423f07",
    "LAB_00423f11",
    "LAB_00423f43",
    "LAB_00423f5b",
    "LAB_00423f63",
    "LAB_00423fb5",
    "LAB_00423fbc",
    "LAB_00424010",
    "LAB_00424024",
    "LAB_0042403a",
    "LAB_00424044",
    "LAB_00424047",
    "LAB_00424068",
    "LAB_0042406c",
    "LAB_0042407b",
    "LAB_0042407f",
    "LAB_00424084",
    "LAB_00424091",
    "LAB_004240bf",
    "LAB_004240d7",
    "LAB_004240df",
    "LAB_00424131",
    "LAB_00424138",
    "LAB_0042418b",
    "LAB_0042419f",
    "LAB_004241b9",
    "LAB_004241c3",
    "LAB_004241c9",
    "LAB_004241ea",
    "LAB_004241ee",
    "LAB_004241fd",
    "LAB_00424201",
    "LAB_00424206",
    "LAB_00424213",
    "LAB_0042422b",
    "LAB_0042425f",
    "LAB_00424274",
    "LAB_0042427c",
    "LAB_00424280",
    "LAB_004242a8",
    "LAB_004242b1",
    "LAB_004242b2",
    "LAB_004242e7",
    "LAB_004242e9",
    "LAB_004242f2",
    "LAB_004242f6",
    "LAB_00424328",
    "LAB_00424336",
    "LAB_00424338",
    "LAB_00424341",
    "LAB_00424345",
    "LAB_00424362",
    "LAB_00424364",
    "LAB_00424380",
    "LAB_0042438e",
    "LAB_00424399",
    "LAB_004243bf",
    "LAB_004243c9",
    "LAB_004243f7",
    "LAB_00424408",
    "LAB_00424415",
    "LAB_00424445",
    "LAB_0042444f",
    "LAB_00424475",
    "LAB_0042448c",
    "LAB_0042448d",
    "LAB_004244a7",
    "LAB_004244bc",
    "LAB_004244be",
    "LAB_00424653",
    "LAB_00424669",
    "LAB_0042466e",
    "LAB_004246b2",
    "LAB_00424711",
    "LAB_00424716",
    "LAB_0042471c",
    "LAB_00424725",
    "LAB_0042472e",
    "LAB_00424734",
    "LAB_00424736",
    "LAB_00424741",
    "LAB_0042474b",
    "LAB_0042476c",
    "LAB_0042476e",
    "LAB_004247a0",
    "LAB_004247a2",
    "LAB_004247cb",
    "LAB_004247d7",
    "LAB_004247ec",
    "LAB_00424800",
    "LAB_00424856",
    "LAB_00424858",
    "LAB_00424863",
    "LAB_004248b4",
    "LAB_004248b6",
    "LAB_004248c1",
    "LAB_004248e3",
    "LAB_004248ef",
    "LAB_00424907",
    "LAB_00424912",
    "LAB_0042498f",
    "LAB_00424997",
    "LAB_004249aa",
    "LAB_004249c0",
    "LAB_004249ff",
    "LAB_00424a0b",
    "LAB_00424a23",
    "LAB_00424a2e",
    "LAB_00424aac",
    "LAB_00424ab4",
    "LAB_00424acb",
    "LAB_00424ae1",
    "LAB_00424b2a",
    "LAB_00424b30",
    "LAB_00424b36",
    "LAB_00424b3c",
    "LAB_00424b40",
    "LAB_00424b67",
    "LAB_00424b6d",
    "LAB_00424b73",
    "LAB_00424b79",
    "LAB_00424b7d",
    "LAB_00424b9c",
    "LAB_00424bbb",
    "LAB_00424bd0",
    "LAB_00424c5d",
    "LAB_00424c5f",
    "LAB_00424c74",
    "LAB_00424c89",
    "LAB_00424c9d",
    "LAB_00424cb2",
    "LAB_00424cd6",
    "LAB_00424ced",
    "LAB_00424d00",
    "LAB_00424d48",
    "LAB_00424d54",
    "LAB_00424d60",
    "LAB_00424d6c",
    "LAB_00424d8d",
    "LAB_00424da6",
    "LAB_00424dbe",
    "LAB_00424dc7",
    "LAB_00424dd0",
    "LAB_00424ded",
    "LAB_00424df6",
    "LAB_00424dff",
    "LAB_00424e14",
    "LAB_00424e1b",
    "LAB_00424e41",
    "LAB_00424e59",
    "LAB_00424e6c",
    "LAB_00424eb5",
    "LAB_00424ec1",
    "LAB_00424ecd",
    "LAB_00424ed9",
    "LAB_00424efd",
    "LAB_00424f18",
    "LAB_00424f36",
    "LAB_00424f3f",
    "LAB_00424f48",
    "LAB_00424f67",
    "LAB_00424f70",
    "LAB_00424f79",
    "LAB_00424f90",
    "LAB_00424f97",
    "LAB_00424fe0",
    "LAB_00424fe7",
    "LAB_00424fef",
    "LAB_00424ff6",
    "LAB_00424ff7",
    "LAB_00424ffb",
    "LAB_0042500b",
    "LAB_00425015",
    "LAB_0042501e",
    "LAB_00425042",
    "LAB_0042504b",
    "LAB_0042504f",
    "LAB_00425052",
    "LAB_0042505b",
    "LAB_00425064",
    "LAB_00425070",
    "LAB_0042508e",
    "LAB_0042509b",
    "LAB_004250c2",
    "LAB_004250cc",
    "LAB_004250d8",
    "LAB_004250da",
    "LAB_004250e7",
    "LAB_004250f0",
    "LAB_004250f2",
    "LAB_00425100",
    "LAB_00425102",
    "LAB_0042510a",
    "LAB_0042511d",
    "LAB_0042511f",
    "LAB_00425131",
    "LAB_00425154",
    "LAB_00425195",
    "LAB_004251c0",
    "LAB_004251c3",
    "LAB_0042521c",
    "LAB_00425223",
    "LAB_0042522b",
    "LAB_00425232",
    "LAB_00425234",
    "LAB_00425238",
    "LAB_00425248",
    "LAB_00425252",
    "LAB_0042525b",
    "LAB_0042527f",
    "LAB_00425288",
    "LAB_0042528c",
    "LAB_0042528f",
    "LAB_00425298",
    "LAB_004252a1",
    "LAB_004252ad",
    "LAB_004252cb",
    "LAB_004252f9",
    "LAB_00425300",
    "LAB_00425308",
    "LAB_00425314",
    "LAB_00425316",
    "LAB_00425327",
    "LAB_00425334",
    "LAB_00425336",
    "LAB_00425347",
    "LAB_00425349",
    "LAB_00425354",
    "LAB_0042536d",
    "LAB_0042536f",
    "LAB_00425384",
    "LAB_004253a7",
    "LAB_004253e8",
    "LAB_00425413",
    "LAB_00425414",
    "LAB_00425416",
    "LAB_00425436",
    "LAB_0042544e",
    "LAB_00425462",
    "LAB_0042547a",
    "LAB_00425493",
    "LAB_0042551f",
    "LAB_00425524",
    "LAB_00425532",
    "LAB_00425536",
    "LAB_00425582",
    "LAB_00425587",
    "LAB_00425595",
    "LAB_00425599",
    "LAB_004255c9",
    "LAB_004255d2",
    "LAB_004255df",
    "LAB_004255e6",
    "LAB_0042560c",
    "LAB_00425618",
    "LAB_0042564b",
    "LAB_00425697",
    "LAB_004256a2",
    "LAB_004256b9",
    "LAB_004256c9",
    "LAB_004256de",
    "LAB_004256e2",
    "LAB_004256e5",
    "LAB_0042572c",
    "LAB_00425735",
    "LAB_00425745",
    "LAB_0042574c",
    "LAB_00425772",
    "LAB_0042577e",
    "LAB_004257b1",
    "LAB_004257fd",
    "LAB_00425811",
    "LAB_00425828",
    "LAB_00425838",
    "LAB_0042584d",
    "LAB_00425854",
    "LAB_00425857",
    "LAB_004258a5",
    "LAB_004258c6",
    "LAB_004258d2",
    "LAB_004258e5",
    "LAB_004258f1",
    "LAB_00425943",
    "LAB_00425963",
    "LAB_0042596f",
    "LAB_00425972",
    "LAB_0042597e",
    "LAB_004259d5",
    "LAB_004259ec",
    "LAB_00425a02",
    "LAB_00425a09",
    "LAB_00425a20",
    "LAB_00425a26",
    "LAB_00425a3d",
    "LAB_00425a41",
    "LAB_00425a44",
    "LAB_00425a5b",
    "LAB_00425a68",
    "LAB_00425a78",
    "LAB_00425a89",
    "LAB_00425a93",
    "LAB_00425aa9",
    "LAB_00425ab1",
    "LAB_00425ac9",
    "LAB_00425ad5",
    "LAB_00425ad7",
    "LAB_00425af6",
    "LAB_00425b0a",
    "LAB_00425b33",
    "LAB_00425b3a",
    "LAB_00425b43",
    "LAB_00425b48",
    "LAB_00425b4e",
    "LAB_00425b66",
    "LAB_00425ba9",
    "LAB_00425bcd",
    "LAB_00425bdc",
    "LAB_00425be7",
    "LAB_00425bf0",
    "LAB_00425c1c",
    "LAB_00425c40",
    "LAB_00425c51",
    "LAB_00425c5c",
    "LAB_00425c66",
    "LAB_00425c83",
    "LAB_00425c9f",
    "LAB_00425ca6",
    "LAB_00425ca7",
    "LAB_00425cc7",
    "LAB_00425ce8",
    "LAB_00425ceb",
    "LAB_00425cf2",
    "LAB_00425d08",
    "LAB_00425d2a",
    "LAB_00425d2d",
    "LAB_00425d34",
    "LAB_00425d4d",
    "LAB_00425d7e",
    "LAB_00425dc5",
    "LAB_00425dcb",
    "LAB_00425de3",
    "LAB_00425e1a",
    "LAB_00425e5a",
    "LAB_00425e60",
    "LAB_00425e78",
    "LAB_00425eb6",
    "LAB_00425ebe",
    "LAB_00425ecb",
    "LAB_00425ef4",
    "LAB_00425efd",
    "LAB_00425eff",
    "LAB_00425f00",
    "LAB_00425f03",
    "LAB_00425f0e",
    "LAB_00425f49",
    "LAB_00425f51",
    "LAB_00425f5d",
    "LAB_00425f8e",
    "LAB_00425f98",
    "LAB_00425f9a",
    "LAB_00425f9d",
    "LAB_00425fa8",
    "LAB_00426049",
    "LAB_0042605b",
    "LAB_00426076",
    "LAB_00426096",
    "LAB_0042609d",
    "LAB_004260b7",
    "LAB_004260d7",
    "LAB_004260eb",
    "LAB_004260ff",
    "LAB_0042611d",
    "LAB_00426129",
    "LAB_00426139",
    "LAB_00426143",
    "LAB_00426145",
    "LAB_00426179",
    "LAB_0042618d",
    "LAB_004261a6",
    "LAB_004261b9",
    "LAB_004261ea",
    "LAB_004261f3",
    "LAB_004261f7",
    "LAB_004261f9",
    "LAB_004261fd",
    "LAB_0042620c",
    "LAB_00426253",
    "LAB_00426260",
    "LAB_00426277",
    "LAB_00426283",
    "LAB_00426291",
    "LAB_004262ac",
    "LAB_004262b7",
    "LAB_004262f0",
    "LAB_00426305",
    "LAB_00426306",
    "LAB_0042634d",
    "LAB_0042636d",
    "LAB_0042638f",
    "LAB_00426395",
    "LAB_004263bb",
    "LAB_004263eb",
    "LAB_0042641d",
    "LAB_00426445",
    "LAB_00426460",
    "LAB_00426464",
    "LAB_00426495",
    "LAB_0042649b",
    "LAB_004264a1",
    "LAB_004264c6",
    "LAB_004264d2",
    "LAB_004264e0",
    "LAB_00426505",
    "LAB_00426531",
    "LAB_00426558",
    "LAB_00426573",
    "LAB_00426580",
    "LAB_004265ab",
    "LAB_004265b1",
    "LAB_004265d4",
    "LAB_004265da",
    "LAB_0042660e",
    "LAB_0042662b",
    "LAB_00426647",
    "LAB_00426664",
    "LAB_0042666c",
    "LAB_00426672",
    "LAB_00426699",
    "LAB_0042669a",
    "LAB_004266c0",
    "LAB_004266f0",
    "LAB_004266f8",
    "LAB_00426700",
    "LAB_00426720",
    "LAB_00426760",
    "LAB_00426777",
    "LAB_004267a6",
    "LAB_004267b0",
    "LAB_004267ec",
    "LAB_0042680e",
    "LAB_00426813",
    "LAB_00426826",
    "LAB_0042682e",
    "LAB_00426836",
    "LAB_0042684c",
    "LAB_00426853",
    "LAB_00426858",
    "LAB_0042685f",
    "LAB_00426865",
    "LAB_0042686f",
    "LAB_004268a5",
    "LAB_004268af",
    "LAB_004268b9",
    "LAB_004268bd",
    "LAB_004268c7",
    "LAB_004268c9",
    "LAB_004268d3",
    "LAB_004268dc",
    "LAB_0042693e",
    "LAB_00426947",
    "LAB_00426951",
    "LAB_00426970",
    "LAB_0042697f",
    "LAB_00426983",
    "LAB_0042698a",
    "LAB_00426990",
    "LAB_00426994",
    "LAB_0042699e",
    "LAB_004269bf",
    "LAB_004269c8",
    "LAB_004269d2",
    "LAB_004269ed",
    "LAB_004269ff",
    "LAB_00426a03",
    "LAB_00426a0a",
    "LAB_00426a10",
    "LAB_00426a14",
    "LAB_00426a18",
    "LAB_00426a26",
    "LAB_00426a30",
    "LAB_00426a32",
    "LAB_00426a68",
    "LAB_00426a7d",
    "LAB_00426a98",
    "LAB_00426aa7",
    "LAB_00426ab4",
    "LAB_00426ad7",
    "LAB_00426ae6",
    "LAB_00426aea",
    "LAB_00426af5",
    "LAB_00426afd",
    "LAB_00426b01",
    "LAB_00426b0d",
    "LAB_00426b2d",
    "LAB_00426b42",
    "LAB_00426b5d",
    "LAB_00426b6c",
    "LAB_00426b79",
    "LAB_00426b98",
    "LAB_00426baa",
    "LAB_00426bae",
    "LAB_00426bb9",
    "LAB_00426bc1",
    "LAB_00426bc5",
    "LAB_00426bc9",
    "LAB_00426bd7",
    "LAB_00426be3",
    "LAB_00426be5",
    "LAB_00426be7",
    "LAB_00426bfb",
    "LAB_00426bff",
    "LAB_00426c11",
    "LAB_00426c1e",
    "LAB_00426c3b",
    "LAB_00426c64",
    "LAB_00426c74",
    "LAB_00426c76",
    "LAB_00426c82",
    "LAB_00426c8a",
    "LAB_00426ca3",
    "LAB_00426ca6",
    "LAB_00426cdb",
    "LAB_00426ce0",
    "LAB_00426cee",
    "LAB_00426cf1",
    "LAB_00426cfa",
    "LAB_00426d0a",
    "LAB_00426d1a",
    "LAB_00426d2a",
    "LAB_00426d2d",
    "LAB_00426d3a",
    "LAB_00426d52",
    "LAB_00426d62",
    "LAB_00426d69",
    "LAB_00426d72",
    "LAB_00426d82",
    "LAB_00426d92",
    "LAB_00426da2",
    "LAB_00426db2",
    "LAB_00426db5",
    "LAB_00426dd2",
    "LAB_00426dd7",
    "LAB_00426ddf",
    "LAB_00426dea",
    "LAB_00426e0a",
    "LAB_00426e2f",
    "LAB_00426e3b",
    "LAB_00426e42",
    "LAB_00426e49",
    "LAB_00426e4b",
    "LAB_00426e8e",
    "LAB_00426e9e",
    "LAB_00426ea0",
    "LAB_00426eac",
    "LAB_00426eb4",
    "LAB_00426ecd",
    "LAB_00426ed0",
    "LAB_00426ef8",
    "LAB_00426efe",
    "LAB_00426f0c",
    "LAB_00426f0f",
    "LAB_00426f2b",
    "LAB_00426f47",
    "LAB_00426f78",
    "LAB_00426f9b",
    "LAB_00426fbe",
    "LAB_00426fe1",
    "LAB_00427004",
    "LAB_00427027",
    "LAB_0042704a",
    "LAB_0042706d",
    "LAB_00427090",
    "LAB_004270b3",
    "LAB_004270d6",
    "LAB_004270f9",
    "LAB_00427119",
    "LAB_00427135",
    "LAB_00427151",
    "LAB_0042716d",
    "LAB_00427181",
    "LAB_00427184",
    "LAB_00427189",
    "LAB_00427199",
    "LAB_004271a2",
    "LAB_004271b1",
    "LAB_004271b6",
    "LAB_004271b9",
    "LAB_004271ca",
    "LAB_004271e8",
    "LAB_004271f6",
    "LAB_004271fd",
    "LAB_00427206",
    "LAB_00427210",
    "LAB_0042722f",
    "LAB_00427260",
    "LAB_00427283",
    "LAB_004272a6",
    "LAB_004272c9",
    "LAB_004272ec",
    "LAB_0042730f",
    "LAB_00427332",
    "LAB_00427355",
    "LAB_00427378",
    "LAB_0042739b",
    "LAB_004273be",
    "LAB_004273e1",
    "LAB_00427401",
    "LAB_0042741d",
    "LAB_00427439",
    "LAB_00427455",
    "LAB_00427469",
    "LAB_0042746c",
    "LAB_00427471",
    "LAB_00427481",
    "LAB_0042748a",
    "LAB_00427499",
    "LAB_0042749e",
    "LAB_004274a1",
    "LAB_004274bb",
    "LAB_004274c0",
    "LAB_004274c9",
    "LAB_004274d7",
    "LAB_004274ef",
    "LAB_00427514",
    "LAB_00427520",
    "LAB_00427527",
    "LAB_0042752e",
    "LAB_00427530",
    "LAB_0042756e",
    "LAB_0042759a",
    "LAB_004275b7",
    "LAB_004275c3",
    "LAB_004275ea",
    "LAB_004275f6",
    "LAB_00427634",
    "LAB_0042763d",
    "LAB_00427660",
    "LAB_00427664",
    "LAB_00427679",
    "LAB_00427697",
    "LAB_0042769f",
    "LAB_004276a5",
    "LAB_00427703",
    "LAB_0042770a",
    "LAB_0042771a",
    "LAB_00427721",
    "LAB_00427761",
    "LAB_00427777",
    "LAB_004277c2",
    "LAB_004277dd",
    "LAB_004277fa",
    "LAB_004277fc",
    "LAB_0042784d",
    "LAB_00427854",
    "LAB_00427864",
    "LAB_0042786b",
    "LAB_004278ab",
    "LAB_004278c1",
    "LAB_0042790c",
    "LAB_00427927",
    "LAB_00427944",
    "LAB_00427946",
    "LAB_004279d7",
    "LAB_004279e5",
    "LAB_00427a07",
    "LAB_00427a15",
    "LAB_00427a3b",
    "LAB_00427a45",
    "LAB_00427a91",
    "LAB_00427a93",
    "LAB_00427b23",
    "LAB_00427b2a",
    "LAB_00427b66",
    "LAB_00427b71",
    "LAB_00427b73",
    "LAB_00427b7e",
    "LAB_00427b85",
    "LAB_00427b95",
    "LAB_00427bbc",
    "LAB_00427bc2",
    "LAB_00427bfd",
    "LAB_00427c06",
    "LAB_00427c0f",
    "LAB_00427c18",
    "LAB_00427c21",
    "LAB_00427c4a",
    "LAB_00427c53",
    "LAB_00427c5c",
    "LAB_00427c63",
    "LAB_00427c78",
    "LAB_00427c88",
    "LAB_00427c8f",
    "LAB_00427c92",
    "LAB_00427c94",
    "LAB_00427cfa",
    "LAB_00427d60",
    "LAB_00427d67",
    "LAB_00427d71",
    "LAB_00427d77",
    "LAB_00427d90",
    "LAB_00427dac",
    "LAB_00427de8",
    "LAB_00427e1c",
    "LAB_00427e3d",
    "LAB_00427e40",
    "LAB_00427ebf",
    "LAB_00427ec0",
    "LAB_00427ecf",
    "LAB_00427f99",
    "LAB_00427fc9",
    "LAB_00427fcb",
    "LAB_00428003",
    "LAB_00428034",
    "LAB_00428038",
    "LAB_00428052",
    "LAB_0042805d",
    "LAB_00428065",
    "LAB_00428078",
    "LAB_00428082",
    "LAB_0042808d",
    "LAB_004280bf",
    "LAB_004280c4",
    "LAB_004280d6",
    "LAB_004280e1",
    "LAB_00428100",
    "LAB_00428101",
    "LAB_0042810b",
    "LAB_00428117",
    "LAB_00428121",
    "LAB_00428122",
    "LAB_00428126",
    "LAB_0042812f",
    "LAB_00428139",
    "LAB_0042813c",
    "LAB_00428154",
    "LAB_00428159",
    "LAB_00428160",
    "LAB_00428162",
    "LAB_00428183",
    "LAB_00428186",
    "LAB_0042818e",
    "LAB_00428192",
    "LAB_0042819b",
    "LAB_0042819d",
    "LAB_004281b5",
    "LAB_004281c0",
    "LAB_004281da",
    "LAB_004281dc",
    "LAB_004281e2",
    "LAB_004281ea",
    "LAB_004281f1",
    "LAB_004281fe",
    "LAB_0042821c",
    "LAB_0042823b",
    "LAB_0042823f",
    "LAB_00428258",
    "LAB_00428259",
    "LAB_00428273",
    "LAB_0042828a",
    "LAB_0042829a",
    "LAB_004282ac",
    "LAB_004282b4",
    "LAB_004282d5",
    "LAB_004282da",
    "LAB_004282df",
    "LAB_004282ed",
    "LAB_00428309",
    "LAB_0042830e",
    "LAB_00428359",
    "LAB_0042835b",
    "LAB_00428362",
    "LAB_00428371",
    "LAB_00428373",
    "LAB_00428384",
    "LAB_004283a5",
    "LAB_004283b1",
    "LAB_004283bd",
    "LAB_004283d9",
    "LAB_004283ea",
    "LAB_00428419",
    "LAB_00428439",
    "LAB_00428591",
    "LAB_004285c7",
    "LAB_004285ca",
    "LAB_004285d2",
    "LAB_0042862d",
    "LAB_00428639",
    "LAB_0042864b",
    "LAB_00428676",
    "LAB_0042867a",
    "LAB_004286a7",
    "LAB_004286df",
    "LAB_004286e9",
    "LAB_0042870a",
    "LAB_00428732",
    "LAB_00428778",
    "LAB_00428783",
    "LAB_004287c3",
    "LAB_004287c5",
    "LAB_0042880f",
    "LAB_00428835",
    "LAB_00428837",
    "LAB_0042892a",
    "LAB_00428a0c",
    "LAB_00428a1a",
    "LAB_00428a56",
    "LAB_00428a58",
    "LAB_00428a66",
    "LAB_00428a6f",
    "LAB_00428a7e",
    "LAB_00428a81",
    "LAB_00428a86",
    "LAB_00428a8c",
    "LAB_00428ac0",
    "LAB_00428ad4",
    "LAB_00428adc",
    "LAB_00428b04",
    "LAB_00428b18",
    "LAB_00428b1b",
    "LAB_00428b22",
    "LAB_00428b64",
    "LAB_00428bc3",
    "LAB_00428c1a",
    "LAB_00428c1f",
    "LAB_00428c22",
    "LAB_00428c2a",
    "LAB_00428c31",
    "LAB_00428c60",
    "LAB_00428c9e",
    "LAB_00428cb1",
    "LAB_00428cc2",
    "LAB_00428cc7",
    "LAB_00428ccb",
    "LAB_00428cdd",
    "LAB_00428ce3",
    "LAB_00428cfe",
    "LAB_00428d02",
    "LAB_00428d17",
    "LAB_00428d35",
    "LAB_00428d4e",
    "LAB_00428d5f",
    "LAB_00428d85",
    "LAB_00428d8c",
    "LAB_00428d94",
    "LAB_00428d99",
    "LAB_00428d9e",
    "LAB_00428dad",
    "LAB_00428dbd",
    "LAB_00428e04",
    "LAB_00428e1b",
    "LAB_00428e2f",
    "LAB_00428e44",
    "LAB_00428e51",
    "LAB_00428e6c",
    "LAB_00428e7d",
    "LAB_00428e82",
    "LAB_00428e8d",
    "LAB_00428e8f",
    "LAB_00428e90",
    "LAB_00428e93",
    "LAB_00428ea7",
    "LAB_00428ee2",
    "LAB_00428fe9",
    "LAB_0042903f",
    "LAB_0042905b",
    "LAB_004290a7",
    "LAB_004290fe",
    "LAB_0042911e",
    "LAB_00429139",
    "LAB_00429155",
    "LAB_00429169",
    "LAB_004291a4",
    "LAB_004291b7",
    "LAB_0042923c",
    "LAB_0042923e",
    "LAB_00429244",
    "LAB_00429269",
    "LAB_00429271",
    "LAB_004292b4",
    "LAB_004292b7",
    "LAB_004292bf",
    "LAB_004292c4",
    "LAB_004292e7",
    "LAB_004292f5",
    "LAB_00429305",
    "LAB_00429349",
    "LAB_0042934d",
    "LAB_00429357",
    "LAB_00429371",
    "LAB_004293aa",
    "LAB_004293b4",
    "LAB_004293c4",
    "LAB_004293c7",
    "LAB_004293cd",
    "LAB_004293d7",
    "LAB_004293e6",
    "LAB_00429416",
    "LAB_00429434",
    "LAB_004294f6",
    "LAB_004296ed",
    "LAB_0042970e",
    "LAB_004297d1",
    "LAB_004297e3",
    "LAB_00429807",
    "LAB_0042981c",
    "LAB_00429824",
    "LAB_00429837",
    "LAB_00429850",
    "LAB_0042985c",
    "LAB_0042988e",
    "LAB_004298a3",
    "LAB_004298ab",
    "LAB_004298be",
    "LAB_004298d6",
    "LAB_004298df",
    "LAB_004298e8",
    "LAB_00429904",
    "LAB_00429907",
    "LAB_00429919",
    "LAB_00429937",
    "LAB_00429964",
    "LAB_00429991",
    "LAB_004299cb",
    "LAB_004299e8",
    "LAB_004299eb",
    "LAB_004299f5",
    "LAB_004299f9",
    "LAB_004299fb",
    "LAB_00429a1a",
    "LAB_00429a34",
    "LAB_00429a60",
    "LAB_00429aa6",
    "LAB_00429ac7",
    "LAB_00429ace",
    "LAB_00429ade",
    "LAB_00429b1f",
    "LAB_00429b28",
    "LAB_00429b2c",
    "LAB_00429b3b",
    "LAB_00429b4a",
    "LAB_00429b60",
    "LAB_00429b72",
    "LAB_00429ba1",
    "LAB_00429bc9",
    "LAB_00429bf5",
    "LAB_00429c01",
    "LAB_00429c06",
    "LAB_00429c1c",
    "LAB_00429c22",
    "LAB_00429c25",
    "LAB_00429c39",
    "LAB_00429c43",
    "LAB_00429c78",
    "LAB_00429c81",
    "LAB_00429c8f",
    "LAB_00429ca5",
    "LAB_00429cbb",
    "LAB_00429cc6",
    "LAB_00429cd9",
    "LAB_00429ce8",
    "LAB_00429cfb",
    "LAB_00429d08",
    "LAB_00429d18",
    "LAB_00429d6b",
    "LAB_00429d9a",
    "LAB_00429db6",
    "LAB_00429dd1",
    "LAB_00429dd3",
    "LAB_00429dec",
    "LAB_00429df2",
    "LAB_00429e2d",
    "LAB_00429e3d",
    "LAB_00429e56",
    "LAB_00429e70",
    "LAB_00429e8f",
    "LAB_00429ea8",
    "LAB_00429eb7",
    "LAB_00429ec6",
    "LAB_00429ec9",
    "LAB_00429ee3",
    "LAB_00429ef3",
    "LAB_00429efa",
    "LAB_00429f4d",
    "LAB_00429f78",
    "LAB_00429f8e",
    "LAB_00429fd1",
    "LAB_00429fde",
    "LAB_00429ffa",
    "LAB_00429ffc",
    "LAB_0042a037",
    "LAB_0042a03b",
    "LAB_0042a052",
    "LAB_0042a065",
    "LAB_0042a0bf",
    "LAB_0042a0d7",
    "LAB_0042a0ee",
    "LAB_0042a0f8",
    "LAB_0042a110",
    "LAB_0042a12c",
    "LAB_0042a15f",
    "LAB_0042a16e",
    "LAB_0042a17a",
    "LAB_0042a1f3",
    "LAB_0042a241",
    "LAB_0042a25d",
    "LAB_0042a285",
    "LAB_0042a299",
    "LAB_0042a2af",
    "LAB_0042a2ca",
    "LAB_0042a2ce",
    "LAB_0042a30b",
    "LAB_0042a31a",
    "LAB_0042a31c",
    "LAB_0042a32e",
    "LAB_0042a34a",
    "LAB_0042a34d",
    "LAB_0042a370",
    "LAB_0042a388",
    "LAB_0042a39f",
    "LAB_0042a3a2",
    "LAB_0042a3a3",
    "LAB_0042a3ca",
    "LAB_0042a3e4",
    "LAB_0042a3ea",
    "LAB_0042a3ef",
    "LAB_0042a43a",
    "LAB_0042a442",
    "LAB_0042a480",
    "LAB_0042a487",
    "LAB_0042a4af",
    "LAB_0042a569",
    "LAB_0042a57b",
    "LAB_0042a585",
    "LAB_0042a5a8",
    "LAB_0042a5c9",
    "LAB_0042a5cc",
    "LAB_0042a5d8",
    "LAB_0042a5db",
    "LAB_0042a5e6",
    "LAB_0042a60c",
    "LAB_0042a623",
    "LAB_0042a627",
    "LAB_0042a629",
    "LAB_0042a645",
    "LAB_0042a647",
    "LAB_0042a65e",
    "LAB_0042a669",
    "LAB_0042a687",
    "LAB_0042a6d6",
    "LAB_0042a705",
    "LAB_0042a71d",
    "LAB_0042a7a2",
    "LAB_0042a7a6",
    "LAB_0042a7be",
    "LAB_0042a7e2",
    "LAB_0042a7e8",
    "LAB_0042a822",
    "LAB_0042a850",
    "LAB_0042a85b",
    "LAB_0042a894",
    "LAB_0042a898",
    "LAB_0042a89c",
    "LAB_0042a8af",
    "LAB_0042a8de",
    "LAB_0042a8e5",
    "LAB_0042a8ed",
    "LAB_0042a8f2",
    "LAB_0042a8f7",
    "LAB_0042a90b",
    "LAB_0042a91e",
    "LAB_0042a957",
    "LAB_0042a98a",
    "LAB_0042a99c",
    "LAB_0042aa04",
    "LAB_0042aa21",
    "LAB_0042aa26",
    "LAB_0042aa28",
    "LAB_0042aaab",
    "LAB_0042aae5",
    "LAB_0042aafe",
    "LAB_0042ab03",
    "LAB_0042ab05",
    "LAB_0042ab2f",
    "LAB_0042ab41",
    "LAB_0042ab48",
    "LAB_0042ab4a",
    "LAB_0042ab53",
    "LAB_0042ab67",
    "LAB_0042ab6f",
    "LAB_0042abbf",
    "LAB_0042abe1",
    "LAB_0042abfb",
    "LAB_0042ac24",
    "LAB_0042ac2e",
    "LAB_0042ac67",
    "LAB_0042ac7d",
    "LAB_0042acc8",
    "LAB_0042accc",
    "LAB_0042acd4",
    "LAB_0042acee",
    "LAB_0042acf0",
    "LAB_0042ad0f",
    "LAB_0042ad17",
    "LAB_0042ad1d",
    "LAB_0042ad2d",
    "LAB_0042ad2f",
    "LAB_0042ad55",
    "LAB_0042ad8a",
    "LAB_0042ad8c",
    "LAB_0042ad99",
    "LAB_0042ada8",
    "LAB_0042adaa",
    "LAB_0042adac",
    "LAB_0042adee",
    "LAB_0042adf4",
    "LAB_0042ae44",
    "LAB_0042ae4a",
    "LAB_0042ae9a",
    "LAB_0042aea0",
    "LAB_0042aef3",
    "LAB_0042aef9",
    "LAB_0042af4f",
    "LAB_0042af5b",
    "LAB_0042afc3",
    "LAB_0042afe3",
    "LAB_0042b036",
    "LAB_0042b03f",
    "LAB_0042b09b",
    "LAB_0042b0e2",
    "LAB_0042b0ee",
    "LAB_0042b0ef",
    "LAB_0042b111",
    "LAB_0042b123",
    "LAB_0042b126",
    "LAB_0042b132",
    "LAB_0042b14f",
    "LAB_0042b15a",
    "LAB_0042b16e",
    "LAB_0042b183",
    "LAB_0042b190",
    "LAB_0042b1b2",
    "LAB_0042b1de",
    "LAB_0042b1f8",
    "LAB_0042b226",
    "LAB_0042b235",
    "LAB_0042b24e",
    "LAB_0042b276",
    "LAB_0042b27e",
    "LAB_0042b2a2",
    "LAB_0042b2bb",
    "LAB_0042b2d4",
    "LAB_0042b2dc",
    "LAB_0042b31b",
    "LAB_0042b322",
    "LAB_0042b32a",
    "LAB_0042b336",
    "LAB_0042b33b",
    "LAB_0042b354",
    "LAB_0042b373",
    "LAB_0042b39c",
    "LAB_0042b3cc",
    "LAB_0042b3d1",
    "LAB_0042b407",
    "LAB_0042b420",
    "LAB_0042b424",
    "LAB_0042b442",
    "LAB_0042b457",
    "LAB_0042b45a",
    "LAB_0042b4ac",
    "LAB_0042b4ae",
    "LAB_0042b4ba",
    "LAB_0042b4bc",
    "LAB_0042b4cd",
    "LAB_0042b4db",
    "LAB_0042b4fc",
    "LAB_0042b517",
    "LAB_0042b56c",
    "LAB_0042b577",
    "LAB_0042b5a8",
    "LAB_0042b5b6",
    "LAB_0042b5ca",
    "LAB_0042b5ce",
    "LAB_0042b5ee",
    "LAB_0042b5f3",
    "LAB_0042b5fe",
    "LAB_0042b625",
    "LAB_0042b635",
    "LAB_0042b640",
    "LAB_0042b765",
    "LAB_0042b79f",
    "LAB_0042b7a6",
    "LAB_0042b7ad",
    "LAB_0042b7b4",
    "LAB_0042b7ee",
    "LAB_0042b805",
    "LAB_0042b81a",
    "LAB_0042b82a",
    "LAB_0042b86d",
    "LAB_0042b883",
    "LAB_0042b8cf",
    "LAB_0042b8f0",
    "LAB_0042b8f9",
    "LAB_0042b906",
    "LAB_0042b90a",
    "LAB_0042b90f",
    "LAB_0042b97c",
    "LAB_0042b996",
    "LAB_0042b9a6",
    "LAB_0042b9af",
    "LAB_0042b9b6",
    "LAB_0042b9bd",
    "LAB_0042b9d0",
    "LAB_0042b9ec",
    "LAB_0042b9ff",
    "LAB_0042ba03",
    "LAB_0042ba05",
    "LAB_0042ba16",
    "LAB_0042ba57",
    "LAB_0042ba9c",
    "LAB_0042ba9e",
    "LAB_0042baaa",
    "LAB_0042baae",
    "LAB_0042bab9",
    "LAB_0042badb",
    "LAB_0042bb4b",
    "LAB_0042bb7c",
    "LAB_0042bb85",
    "LAB_0042bbba",
    "LAB_0042bbce",
    "LAB_0042bbe8",
    "LAB_0042bc24",
    "LAB_0042bc2e",
    "LAB_0042bcb1",
    "LAB_0042bcc0",
    "LAB_0042bcc6",
    "LAB_0042bcd2",
    "LAB_0042bcda",
    "LAB_0042bcf9",
    "LAB_0042bcfc",
    "LAB_0042bd09",
    "LAB_0042bd1c",
    "LAB_0042bd24",
    "LAB_0042bd46",
    "LAB_0042bd4d",
    "LAB_0042bd5c",
    "LAB_0042bd73",
    "LAB_0042bd77",
    "LAB_0042bd7f",
    "LAB_0042bd82",
    "LAB_0042bdb6",
    "LAB_0042bdc7",
    "LAB_0042bdcd",
    "LAB_0042bdd0",
    "LAB_0042bdd1",
    "LAB_0042bdf2",
    "LAB_0042be0c",
    "LAB_0042be28",
    "LAB_0042be43",
    "LAB_0042be4f",
    "LAB_0042be5b",
    "LAB_0042be5e",
    "LAB_0042be5f",
    "LAB_0042be9b",
    "LAB_0042be9d",
    "LAB_0042bea1",
    "LAB_0042bea4",
    "LAB_0042beb5",
    "LAB_0042bf0a",
    "LAB_0042bf0f",
    "LAB_0042bf2a",
    "LAB_0042bf92",
    "LAB_0042bf94",
    "LAB_0042bf9d",
    "LAB_0042bf9f",
    "LAB_0042bfaa",
    "LAB_0042bfbe",
    "LAB_0042bfe6",
    "LAB_0042bffa",
    "LAB_0042bffc",
    "LAB_0042c024",
    "LAB_0042c028",
    "LAB_0042c077",
    "LAB_0042c07b",
    "LAB_0042c08f",
    "LAB_0042c097",
    "LAB_0042c0a0",
    "LAB_0042c0a7",
    "LAB_0042c0c0",
    "LAB_0042c0ca",
    "LAB_0042c0cc",
    "LAB_0042c0ce",
    "LAB_0042c0fa",
    "LAB_0042c10d",
    "LAB_0042c119",
    "LAB_0042c1d2",
    "LAB_0042c1d9",
    "LAB_0042c1e0",
    "LAB_0042c1e7",
    "LAB_0042c206",
    "LAB_0042c212",
    "LAB_0042c214",
    "LAB_0042c2ac",
    "LAB_0042c2c0",
    "LAB_0042c2cb",
    "LAB_0042c2d9",
    "LAB_0042c2e1",
    "LAB_0042c2f6",
    "LAB_0042c308",
    "LAB_0042c310",
    "LAB_0042c326",
    "LAB_0042c34d",
    "LAB_0042c34f",
    "LAB_0042c37a",
    "LAB_0042c381",
    "LAB_0042c38f",
    "LAB_0042c3b2",
    "LAB_0042c3c8",
    "LAB_0042c3d8",
    "LAB_0042c3f4",
    "LAB_0042c43f",
    "LAB_0042c440",
    "LAB_0042c44d",
    "LAB_0042c45c",
    "LAB_0042c471",
    "LAB_0042c473",
    "LAB_0042c49c",
    "LAB_0042c4ac",
    "LAB_0042c4e4",
    "LAB_0042c50e",
    "LAB_0042c51c",
    "LAB_0042c525",
    "LAB_0042c550",
    "LAB_0042c558",
    "LAB_0042c56f",
    "LAB_0042c596",
    "LAB_0042c5a4",
    "LAB_0042c5b1",
    "LAB_0042c65e",
    "LAB_0042c663",
    "LAB_0042c666",
    "LAB_0042c66c",
    "LAB_0042c67c",
    "LAB_0042c692",
    "LAB_0042c6b9",
    "LAB_0042c6e4",
    "LAB_0042c6fc",
    "LAB_0042c724",
    "LAB_0042c736",
    "LAB_0042c748",
    "LAB_0042c75a",
    "LAB_0042c76c",
    "LAB_0042c77e",
    "LAB_0042c790",
    "LAB_0042c7a2",
    "LAB_0042c7b4",
    "LAB_0042c7c6",
    "LAB_0042c7d8",
    "LAB_0042c7ea",
    "LAB_0042c7fc",
    "LAB_0042c81d",
    "LAB_0042c82f",
    "LAB_0042c841",
    "LAB_0042c853",
    "LAB_0042c865",
    "LAB_0042c88f",
    "LAB_0042c89f",
    "LAB_0042c985",
    "LAB_0042c9ba",
    "LAB_0042ca20",
    "LAB_0042ca39",
    "LAB_0042ca3e",
    "LAB_0042ca40",
    "LAB_0042ca78",
    "LAB_0042ca7f",
    "LAB_0042ca8f",
    "LAB_0042cabb",
    "LAB_0042cac8",
    "LAB_0042cad5",
    "LAB_0042cae2",
    "LAB_0042cae9",
    "LAB_0042cafb",
    "LAB_0042cb0b",
    "LAB_0042cb6d",
    "LAB_0042cb8f",
    "LAB_0042cba4",
    "LAB_0042cbf3",
    "LAB_0042cc0e",
    "LAB_0042cc31",
    "LAB_0042cc34",
    "LAB_0042cc4d",
    "LAB_0042cc50",
    "LAB_0042cc8e",
    "LAB_0042ccc2",
    "LAB_0042cce7",
    "LAB_0042cd08",
    "LAB_0042cd15",
    "LAB_0042cd22",
    "LAB_0042cd2f",
    "LAB_0042cd36",
    "LAB_0042cd48",
    "LAB_0042cd58",
    "LAB_0042cd6d",
    "LAB_0042cd9b",
    "LAB_0042cdde",
    "LAB_0042ce01",
    "LAB_0042ce05",
    "LAB_0042ce30",
    "LAB_0042ce32",
    "LAB_0042ce4a",
    "LAB_0042ce59",
    "LAB_0042ce63",
    "LAB_0042ce6d",
    "LAB_0042ce77",
    "LAB_0042ce86",
    "LAB_0042cea4",
    "LAB_0042ceab",
    "LAB_0042ceb0",
    "LAB_0042ced5",
    "LAB_0042ceda",
    "LAB_0042cedf",
    "LAB_0042cf14",
    "LAB_0042cf1b",
    "LAB_0042cf22",
    "LAB_0042cf29",
    "LAB_0042cf30",
    "LAB_0042cf36",
    "LAB_0042cf55",
    "LAB_0042cf5c",
    "LAB_0042cf63",
    "LAB_0042cf6a",
    "LAB_0042cf71",
    "LAB_0042cf77",
    "LAB_0042cf7e",
    "LAB_0042cf91",
    "LAB_0042cf99",
    "LAB_0042cfa1",
    "LAB_0042cfa9",
    "LAB_0042cfb1",
    "LAB_0042cfbb",
    "LAB_0042cfd8",
    "LAB_0042cfdf",
    "LAB_0042cfe6",
    "LAB_0042cfed",
    "LAB_0042cff4",
    "LAB_0042cffe",
    "LAB_0042d030",
    "LAB_0042d034",
    "LAB_0042d03a",
    "LAB_0042d04e",
    "LAB_0042d054",
    "LAB_0042d064",
    "LAB_0042d09b",
    "LAB_0042d0a2",
    "LAB_0042d0a9",
    "LAB_0042d0b0",
    "LAB_0042d0b7",
    "LAB_0042d0c1",
    "LAB_0042d0e6",
    "LAB_0042d0ee",
    "LAB_0042d0f4",
    "LAB_0042d10c",
    "LAB_0042d112",
    "LAB_0042d122",
    "LAB_0042d145",
    "LAB_0042d14f",
    "LAB_0042d159",
    "LAB_0042d163",
    "LAB_0042d16a",
    "LAB_0042d177",
    "LAB_0042d19e",
    "LAB_0042d1a6",
    "LAB_0042d1ac",
    "LAB_0042d1cb",
    "LAB_0042d1d3",
    "LAB_0042d1d9",
    "LAB_0042d20d",
    "LAB_0042d217",
    "LAB_0042d221",
    "LAB_0042d22b",
    "LAB_0042d235",
    "LAB_0042d242",
    "LAB_0042d269",
    "LAB_0042d271",
    "LAB_0042d277",
    "LAB_0042d293",
    "LAB_0042d29b",
    "LAB_0042d2a1",
    "LAB_0042d2b4",
    "LAB_0042d2b8",
    "LAB_0042d2ba",
    "LAB_0042d2d1",
    "LAB_0042d2d9",
    "LAB_0042d2e1",
    "LAB_0042d2e9",
    "LAB_0042d2f1",
    "LAB_0042d2fc",
    "LAB_0042d325",
    "LAB_0042d32c",
    "LAB_0042d331",
    "LAB_0042d347",
    "LAB_0042d349",
    "LAB_0042d358",
    "LAB_0042d367",
    "LAB_0042d36e",
    "LAB_0042d37d",
    "LAB_0042d391",
    "LAB_0042d393",
    "LAB_0042d3a2",
    "LAB_0042d3ba",
    "LAB_0042d3c3",
    "LAB_0042d3c5",
    "LAB_0042d3d0",
    "LAB_0042d3de",
    "LAB_0042d3e1",
    "LAB_0042d3e9",
    "LAB_0042d3f3",
    "LAB_0042d3f8",
    "LAB_0042d40f",
    "LAB_0042d413",
    "LAB_0042d431",
    "LAB_0042d43c",
    "LAB_0042d45c",
    "LAB_0042d470",
    "LAB_0042d4bc",
    "LAB_0042d509",
    "LAB_0042d530",
    "LAB_0042d565",
    "LAB_0042d5af",
    "LAB_0042d5d1",
    "LAB_0042d5e4",
    "LAB_0042d5f5",
    "LAB_0042d5f6",
    "LAB_0042d5fa",
    "LAB_0042d605",
    "LAB_0042d626",
    "LAB_0042d62b",
    "LAB_0042d665",
    "LAB_0042d692",
    "LAB_0042d69c",
    "LAB_0042d69e",
    "LAB_0042d702",
    "LAB_0042d731",
    "LAB_0042d75b",
    "LAB_0042d766",
    "LAB_0042d787",
    "LAB_0042d7a9",
    "LAB_0042d7ac",
    "LAB_0042d7af",
    "LAB_0042d7bb",
    "LAB_0042d7d5",
    "LAB_0042d7ff",
    "LAB_0042d81b",
    "LAB_0042d828",
    "LAB_0042d840",
    "LAB_0042d861",
    "LAB_0042d868",
    "LAB_0042d86f",
    "LAB_0042d8a6",
    "LAB_0042d8a8",
    "LAB_0042d8c0",
    "LAB_0042d8ce",
    "LAB_0042d8d4",
    "LAB_0042d8e3",
    "LAB_0042d938",
    "LAB_0042d973",
    "LAB_0042d98e",
    "LAB_0042d9f5",
    "LAB_0042d9fe",
    "LAB_0042da54",
    "LAB_0042da5c",
    "LAB_0042daa2",
    "LAB_0042db0e",
    "LAB_0042db10",
    "LAB_0042db40",
    "LAB_0042db42",
    "LAB_0042db61",
    "LAB_0042db8b",
    "LAB_0042db97",
    "LAB_0042db99",
    "LAB_0042dbab",
    "LAB_0042dbad",
    "LAB_0042dbfc",
    "LAB_0042dc08",
    "LAB_0042dc18",
    "LAB_0042dc31",
    "LAB_0042dc39",
    "LAB_0042dc64",
    "LAB_0042dc84",
    "LAB_0042dca0",
    "LAB_0042dcf5",
    "LAB_0042dcf7",
    "LAB_0042dd27",
    "LAB_0042dd29",
    "LAB_0042dd48",
    "LAB_0042dd72",
    "LAB_0042dd7e",
    "LAB_0042dd80",
    "LAB_0042dd8c",
    "LAB_0042dd8e",
    "LAB_0042dddd",
    "LAB_0042ddec",
    "LAB_0042ddfc",
    "LAB_0042de15",
    "LAB_0042de1d",
    "LAB_0042de48",
    "LAB_0042de6b",
    "LAB_0042de9b",
    "LAB_0042dec8",
    "LAB_0042deca",
    "LAB_0042dee8",
    "LAB_0042def6",
    "LAB_0042defd",
    "LAB_0042df09",
    "LAB_0042df0b",
    "LAB_0042df3b",
    "LAB_0042df90",
    "LAB_0042dfa8",
    "LAB_0042dfaa",
    "LAB_0042dfce",
    "LAB_0042dfd0",
    "LAB_0042dfe9",
    "LAB_0042dfff",
    "LAB_0042e00d",
    "LAB_0042e014",
    "LAB_0042e020",
    "LAB_0042e022",
    "LAB_0042e051",
    "LAB_0042e057",
    "LAB_0042e06b",
    "LAB_0042e073",
    "LAB_0042e09e",
    "LAB_0042e0d0",
    "LAB_0042e0fc",
    "LAB_0042e12d",
    "LAB_0042e135",
    "LAB_0042e1c3",
    "LAB_0042e1e9",
    "LAB_0042e20e",
    "LAB_0042e220",
    "LAB_0042e274",
    "LAB_0042e29a",
    "LAB_0042e2ba",
    "LAB_0042e2eb",
    "LAB_0042e30e",
    "LAB_0042e31e",
    "LAB_0042e334",
    "LAB_0042e354",
    "LAB_0042e385",
    "LAB_0042e38d",
    "LAB_0042e3a5",
    "LAB_0042e3c5",
    "LAB_0042e401",
    "LAB_0042e423",
    "LAB_0042e439",
    "LAB_0042e44e",
    "LAB_0042e457",
    "LAB_0042e462",
    "LAB_0042e469",
    "LAB_0042e47a",
    "LAB_0042e47c",
    "LAB_0042e49e",
    "LAB_0042e4b1",
    "LAB_0042e4c2",
    "LAB_0042e4d7",
    "LAB_0042e4ec",
    "LAB_0042e4fc",
    "LAB_0042e50e",
    "LAB_0042e52f",
    "LAB_0042e578",
    "LAB_0042e592",
    "LAB_0042e59a",
    "LAB_0042e619",
    "LAB_0042e633",
    "LAB_0042e659",
    "LAB_0042e679",
    "LAB_0042e6a2",
    "LAB_0042e702",
    "LAB_0042e727",
    "LAB_0042e74a",
    "LAB_0042e75a",
    "LAB_0042e770",
    "LAB_0042e790",
    "LAB_0042e7c1",
    "LAB_0042e7c9",
    "LAB_0042e7e1",
    "LAB_0042e801",
    "LAB_0042e83d",
    "LAB_0042e85f",
    "LAB_0042e875",
    "LAB_0042e88a",
    "LAB_0042e893",
    "LAB_0042e8a5",
    "LAB_0042e8b6",
    "LAB_0042e8b8",
    "LAB_0042e8de",
    "LAB_0042e916",
    "LAB_0042e954",
    "LAB_0042e981",
    "LAB_0042e993",
    "LAB_0042e9a2",
    "LAB_0042e9af",
    "LAB_0042e9b9",
    "LAB_0042e9d5",
    "LAB_0042ea20",
    "LAB_0042ea46",
    "LAB_0042ea48",
    "LAB_0042ea8e",
    "LAB_0042ead1",
    "LAB_0042eaf9",
    "LAB_0042eb06",
    "LAB_0042eb13",
    "LAB_0042eb19",
    "LAB_0042eb36",
    "LAB_0042eb40",
    "LAB_0042eb54",
    "LAB_0042eb68",
    "LAB_0042ebad",
    "LAB_0042ebd3",
    "LAB_0042ebf3",
    "LAB_0042ec05",
    "LAB_0042ec13",
    "LAB_0042ec27",
    "LAB_0042ec2c",
    "LAB_0042ec33",
    "LAB_0042ec3a",
    "LAB_0042ec41",
    "LAB_0042ec46",
    "LAB_0042ec56",
    "LAB_0042ec6f",
    "LAB_0042ec7d",
    "LAB_0042eca9",
    "LAB_0042ece0",
    "LAB_0042ed09",
    "LAB_0042ed0c",
    "LAB_0042ed3e",
    "LAB_0042ed42",
    "LAB_0042ed7b",
    "LAB_0042ed8a",
    "LAB_0042ed8c",
    "LAB_0042ed8d",
    "LAB_0042eda6",
    "LAB_0042edb1",
    "LAB_0042edb6",
    "LAB_0042edd2",
    "LAB_0042edd4",
    "LAB_0042ee14",
    "LAB_0042ee52",
    "LAB_0042ee6e",
    "LAB_0042ee7a",
    "LAB_0042ee8f",
    "LAB_0042eea6",
    "LAB_0042eef2",
    "LAB_0042ef10",
    "LAB_0042ef38",
    "LAB_0042ef48",
    "LAB_0042ef5a",
    "LAB_0042ef66",
    "LAB_0042ef80",
    "LAB_0042efa6",
    "LAB_0042efbc",
    "LAB_0042efbe",
    "LAB_0042efd1",
    "LAB_0042efe4",
    "LAB_0042f003",
    "LAB_0042f009",
    "LAB_0042f016",
    "LAB_0042f01d",
    "LAB_0042f04c",
    "LAB_0042f06a",
    "LAB_0042f06e",
    "LAB_0042f072",
    "LAB_0042f081",
    "LAB_0042f08b",
    "LAB_0042f092",
    "LAB_0042f09c",
    "LAB_0042f0a1",
    "LAB_0042f0ae",
    "LAB_0042f0bf",
    "LAB_0042f0d3",
    "LAB_0042f0dd",
    "LAB_0042f0f5",
    "LAB_0042f124",
    "LAB_0042f133",
    "LAB_0042f138",
    "LAB_0042f14a",
    "LAB_0042f189",
    "LAB_0042f1a3",
    "LAB_0042f1a8",
    "LAB_0042f1ac",
    "LAB_0042f1c3",
    "LAB_0042f1d3",
    "LAB_0042f1dc",
    "LAB_0042f1ed",
    "LAB_0042f1ef",
    "LAB_0042f1f0",
    "LAB_0042f22f",
    "LAB_0042f29f",
    "LAB_0042f2a8",
    "LAB_0042f2b2",
    "LAB_0042f311",
    "LAB_0042f326",
    "LAB_0042f335",
    "LAB_0042f343",
    "LAB_0042f34e",
    "LAB_0042f3c2",
    "LAB_0042f3c5",
    "LAB_0042f3e7",
    "LAB_0042f3ec",
    "LAB_0042f415",
    "LAB_0042f490",
    "LAB_0042f49b",
    "LAB_0042f4d1",
    "LAB_0042f4df",
    "LAB_0042f4e5",
    "LAB_0042f502",
    "LAB_0042f50b",
    "LAB_0042f520",
    "LAB_0042f52f",
    "LAB_0042f536",
    "LAB_0042f551",
    "LAB_0042f5a4",
    "LAB_0042f5b0",
    "LAB_0042f603",
    "LAB_0042f62d",
    "LAB_0042f632",
    "LAB_0042f66a",
    "LAB_0042f671",
    "LAB_0042f6f0",
    "LAB_0042f727",
    "LAB_0042f75e",
    "LAB_0042f761",
    "LAB_0042f776",
    "LAB_0042f7f9",
    "LAB_0042f804",
    "LAB_0042f825",
    "LAB_0042f82d",
    "LAB_0042f865",
    "LAB_0042f892",
    "LAB_0042f89c",
    "LAB_0042f8a4",
    "LAB_0042f8c6",
    "LAB_0042f8ff",
    "LAB_0042f903",
    "LAB_0042f91d",
    "LAB_0042f91e",
    "LAB_0042f97c",
    "LAB_0042f982",
    "LAB_0042f994",
    "LAB_0042f9a4",
    "LAB_0042f9e1",
    "LAB_0042f9e7",
    "LAB_0042f9ef",
    "LAB_0042fa5a",
    "LAB_0042fa60",
    "LAB_0042fa7c",
    "LAB_0042fa8f",
    "LAB_0042facf",
    "LAB_0042fad5",
    "LAB_0042fadd",
    "LAB_0042fb50",
    "LAB_0042fb5c",
    "LAB_0042fb74",
    "LAB_0042fb81",
    "LAB_0042fbb6",
    "LAB_0042fc02",
    "LAB_0042fc0a",
    "LAB_0042fc49",
    "LAB_0042fcb5",
    "LAB_0042fcc9",
    "LAB_0042fce7",
    "LAB_0042fcff",
    "LAB_0042fd02",
    "LAB_0042fd36",
    "LAB_0042fd59",
    "LAB_0042fd85",
    "LAB_0042fdaa",
    "LAB_0042fdad",
    "LAB_0042fdc3",
    "LAB_0042fded",
    "LAB_0042fdf4",
    "LAB_0042fe02",
    "LAB_0042fe07",
    "LAB_0042fe41",
    "LAB_0042fe51",
    "LAB_0042fe61",
    "LAB_0042fe8d",
    "LAB_0042fe90",
    "LAB_0042febf",
    "LAB_0042fec8",
    "LAB_0042fecb",
    "LAB_0042fee8",
    "LAB_0042fefb",
    "LAB_0042ff00",
    "LAB_0042ff03",
    "LAB_0042ff04",
    "LAB_0042ff39",
    "LAB_0042ff3f",
    "LAB_0042ff66",
    "LAB_0042ff8c",
    "LAB_0042ffcf",
    "LAB_00430003",
    "LAB_00430016",
    "LAB_00430020",
    "LAB_00430050",
    "LAB_00430055",
    "LAB_00430068",
    "LAB_00430090",
    "LAB_00430105",
    "LAB_00430113",
    "LAB_0043017f",
    "LAB_004301ba",
    "LAB_004301ca",
    "LAB_004301cd",
    "LAB_004301fc",
    "LAB_00430218",
    "LAB_00430222",
    "LAB_0043022b",
    "LAB_00430231",
    "LAB_0043023a",
    "LAB_0043028d",
    "LAB_0043029b",
    "LAB_0043030f",
    "LAB_0043034a",
    "LAB_00430362",
    "LAB_00430365",
    "LAB_00430380",
    "LAB_00430384",
    "LAB_00430397",
    "LAB_004303a2",
    "LAB_004303b8",
    "LAB_004303d2",
    "LAB_00430400",
    "LAB_00430402",
    "LAB_0043041f",
    "LAB_0043042c",
    "LAB_00430437",
    "LAB_00430442",
    "LAB_0043044d",
    "LAB_00430464",
    "LAB_00430474",
    "LAB_0043047e",
    "LAB_0043047f",
    "LAB_0043049d",
    "LAB_004304a5",
    "LAB_004304ad",
    "LAB_004304b5",
    "LAB_004304bd",
    "LAB_004304d4",
    "LAB_004304e4",
    "LAB_004304f2",
    "LAB_0043050e",
    "LAB_00430516",
    "LAB_0043051e",
    "LAB_00430526",
    "LAB_0043052e",
    "LAB_00430545",
    "LAB_00430555",
    "LAB_00430563",
    "LAB_00430583",
    "LAB_00430590",
    "LAB_0043059b",
    "LAB_004305a6",
    "LAB_004305b1",
    "LAB_004305c8",
    "LAB_004305d4",
    "LAB_004305e2",
    "LAB_004305e3",
    "LAB_00430605",
    "LAB_00430615",
    "LAB_00430625",
    "LAB_00430636",
    "LAB_00430644",
    "LAB_00430666",
    "LAB_00430676",
    "LAB_00430686",
    "LAB_00430697",
    "LAB_004306a5",
    "LAB_004306c9",
    "LAB_0043070e",
    "LAB_00430723",
    "LAB_0043072d",
    "LAB_00430737",
    "LAB_00430741",
    "LAB_0043074b",
    "LAB_0043075d",
    "LAB_00430768",
    "LAB_00430773",
    "LAB_0043077e",
    "LAB_00430789",
    "LAB_0043080d",
    "LAB_0043088d",
    "LAB_004308d3",
    "LAB_00430a26",
    "LAB_00430a84",
    "LAB_00430a8b",
    "LAB_00430aa6",
    "LAB_00430abc",
    "LAB_00430acd",
    "LAB_00430ada",
    "LAB_00430b07",
    "LAB_00430f79",
    "LAB_00430fd9",
    "LAB_00430fde",
    "LAB_00430fe9",
    "LAB_00431010",
    "LAB_00431013",
    "LAB_004310f0",
    "LAB_00431121",
    "LAB_00431150",
    "LAB_00431155",
    "LAB_00431197",
    "LAB_004311dd",
    "LAB_004311ec",
    "LAB_004311f5",
    "LAB_00431204",
    "LAB_00431217",
    "LAB_00431231",
    "LAB_00431264",
    "LAB_0043126d",
    "LAB_00431276",
    "LAB_00431278",
    "LAB_00431282",
    "LAB_004312ab",
    "LAB_004312b2",
    "LAB_004312be",
    "LAB_004312ca",
    "LAB_004312d6",
    "LAB_004312e2",
    "LAB_004312e9",
    "LAB_004312f0",
    "LAB_00431326",
    "LAB_0043132b",
    "LAB_0043133b",
    "LAB_0043138b",
    "LAB_004313a7",
    "LAB_004313be",
    "LAB_004313d0",
    "LAB_004313e6",
    "LAB_004313ee",
    "LAB_0043140e",
    "LAB_00431413",
    "LAB_0043141a",
    "LAB_00431435",
    "LAB_00431496",
    "LAB_0043149b",
    "LAB_0043149d",
    "LAB_0043149f",
    "LAB_004314cd",
    "LAB_004314dc",
    "LAB_004314f7",
    "LAB_00431518",
    "LAB_00431537",
    "LAB_0043156c",
    "LAB_004315a9",
    "LAB_004315c1",
    "LAB_004315c5",
    "LAB_004315c8",
    "LAB_004315ca",
    "LAB_0043162a",
    "LAB_0043162e",
    "LAB_00431632",
    "LAB_00431636",
    "LAB_00431638",
    "LAB_00431663",
    "LAB_00431675",
    "LAB_00431692",
    "LAB_00431698",
    "LAB_004316be",
    "LAB_004316c6",
    "LAB_004316ff",
    "LAB_00431708",
    "LAB_00431710",
    "LAB_00431716",
    "LAB_00431719",
    "LAB_00431789",
    "LAB_004317c6",
    "LAB_004317de",
    "LAB_0043181e",
    "LAB_00431837",
    "LAB_00431886",
    "LAB_0043189c",
    "LAB_004318b2",
    "LAB_004318c0",
    "LAB_004318c8",
    "LAB_004318ce",
    "LAB_004318d0",
    "LAB_004318d2",
    "LAB_004318da",
    "LAB_004318f6",
    "LAB_0043193b",
    "LAB_00431947",
    "LAB_00431965",
    "LAB_00431970",
    "LAB_00431983",
    "LAB_0043198b",
    "LAB_00431994",
    "LAB_0043199b",
    "LAB_0043199e",
    "LAB_004319ab",
    "LAB_004319ae",
    "LAB_004319c4",
    "LAB_00431a2a",
    "LAB_00431a3b",
    "LAB_00431a4c",
    "LAB_00431a5d",
    "LAB_00431a6e",
    "LAB_00431ae1",
    "LAB_00431aed",
    "LAB_00431af9",
    "LAB_00431b05",
    "LAB_00431b10",
    "LAB_00431b35",
    "LAB_00431b40",
    "LAB_00431b44",
    "LAB_00431b50",
    "LAB_00431b56",
    "LAB_00431b74",
    "LAB_00431b81",
    "LAB_00431b8c",
    "LAB_00431b8e",
    "LAB_00431bd9",
    "LAB_00431c13",
    "LAB_00431c33",
    "LAB_00431c3c",
    "LAB_00431c45",
    "LAB_00431c4e",
    "LAB_00431c57",
    "LAB_00431c7d",
    "LAB_00431c89",
    "LAB_00431c8d",
    "LAB_00431c9b",
    "LAB_00431c9d",
    "LAB_00431cb8",
    "LAB_00431cc3",
    "LAB_00431ccc",
    "LAB_00431cce",
    "LAB_00431cdc",
    "LAB_00431ce1",
    "LAB_00431d07",
    "LAB_00431d12",
    "LAB_00431d23",
    "LAB_00431d34",
    "LAB_00431d3b",
    "LAB_00431d91",
    "LAB_00431d97",
    "LAB_00431db2",
    "LAB_00431dd3",
    "LAB_00431df4",
    "LAB_00431e07",
    "LAB_00431e09",
    "LAB_00431e0f",
    "LAB_00431e1e",
    "LAB_00431e2e",
    "LAB_00431e4a",
    "LAB_00431e5e",
    "LAB_00431e81",
    "LAB_00431e82",
    "LAB_00431ed1",
    "LAB_00431ee0",
    "LAB_00431ee3",
    "LAB_00431ef8",
    "LAB_00431f0f",
    "LAB_00431f13",
    "LAB_00431f56",
    "LAB_00431f93",
    "LAB_00431f97",
    "LAB_00431f99",
    "LAB_00431f9c",
    "LAB_00431fa3",
    "LAB_00431fc0",
    "LAB_00431fcf",
    "LAB_00431fe9",
    "LAB_00432064",
    "LAB_00432074",
    "LAB_0043207c",
    "LAB_0043207e",
    "LAB_0043212f",
    "LAB_0043217d",
    "LAB_004321f1",
    "LAB_004321ff",
    "LAB_0043222d",
    "LAB_00432236",
    "LAB_00432238",
    "LAB_00432284",
    "LAB_004322a0",
    "LAB_004322cc",
    "LAB_004322da",
    "LAB_00432308",
    "LAB_00432311",
    "LAB_00432313",
    "LAB_00432325",
    "LAB_00432339",
    "LAB_004323c1",
    "LAB_00432404",
    "LAB_0043240c",
    "LAB_0043241f",
    "LAB_0043246d",
    "LAB_0043249d",
    "LAB_004324bd",
    "LAB_004324cf",
    "LAB_004324e4",
    "LAB_004324e8",
    "LAB_004324fb",
    "LAB_004324fe",
    "LAB_00432523",
    "LAB_00432537",
    "LAB_0043253e",
    "LAB_00432561",
    "LAB_00432563",
    "LAB_00432586",
    "LAB_004325a2",
    "LAB_004325b7",
    "LAB_004325c5",
    "LAB_004325d3",
    "LAB_004325da",
    "LAB_00432635",
    "LAB_00432641",
    "LAB_0043265a",
    "LAB_00432673",
    "LAB_0043268c",
    "LAB_004326a5",
    "LAB_004326be",
    "LAB_004326da",
    "LAB_00432739",
    "LAB_0043277a",
    "LAB_0043279e",
    "LAB_004327b7",
    "LAB_004327e9",
    "LAB_00432815",
    "LAB_00432831",
    "LAB_00432858",
    "LAB_0043287c",
    "LAB_00432895",
    "LAB_004328b1",
    "LAB_004328d2",
    "LAB_004328f0",
    "LAB_00432919",
    "LAB_00432946",
    "LAB_004329a1",
    "LAB_004329bd",
    "LAB_004329d6",
    "LAB_00432a3d",
    "LAB_00432a56",
    "LAB_00432a92",
    "LAB_00432aab",
    "LAB_00432ac4",
    "LAB_00432ae8",
    "LAB_00432b04",
    "LAB_00432b20",
    "LAB_00432b3c",
    "LAB_00432b48",
    "LastErrorValue",
    "LastStatusValue",
    "LockCount",
    "MergedPrefLanguages",
    "MuiGeneration",
    "MuiImpersonation",
    "NlsCache",
    "PTR_AdjustTokenPrivileges_00463010",
    "PTR_AllocConsole_004330b0",
    "PTR_AllocateAndInitializeSid_0046301c",
    "PTR_AttachConsole_004330b8",
    "PTR_CLSIDFromString_0046317c",
    "PTR_CharUpperW_00463124",
    "PTR_CheckTokenMembership_00463004",
    "PTR_CloseHandle_00433018",
    "PTR_CoCreateInstance_00463188",
    "PTR_CoSetProxyBlanket_00463184",
    "PTR_CommDlgExtendedError_00463040",
    "PTR_CompareStringW_004330ac",
    "PTR_CopyImage_004630e4",
    "PTR_CopyRect_00463104",
    "PTR_CreateCompatibleBitmap_00463068",
    "PTR_CreateCompatibleDC_00463064",
    "PTR_CreateDIBSection_00463058",
    "PTR_CreateDirectoryW_0043301c",
    "PTR_CreateEventW_004330ec",
    "PTR_CreateFileMappingW_00433154",
    "PTR_CreateFileW_00433024",
    "PTR_CreateHardLinkW_0043302c",
    "PTR_CreateSemaphoreW_004330f0",
    "PTR_CreateStreamOnHGlobal_00463180",
    "PTR_CreateThread_004330c4",
    "PTR_CreateWindowExW_00463118",
    "PTR_DAT_004356f0",
    "PTR_DAT_00436a80",
    "PTR_DAT_00439548",
    "PTR_DAT_0043aff4",
    "PTR_DAT_0043e024",
    "PTR_DAT_0043e028",
    "PTR_DAT_0043e8a8",
    "PTR_DAT_0043e964",
    "PTR_DAT_0043e96c",
    "PTR_DAT_0043ee90",
    "PTR_DAT_0043eea0",
    "PTR_DAT_0043eea4",
    "PTR_DAT_0043eea8",
    "PTR_DAT_0043eeac",
    "PTR_DAT_0043eeb0",
    "PTR_DAT_0043eeb4",
    "PTR_DAT_0043eeb8",
    "PTR_DAT_0043eebc",
    "PTR_DAT_0043eec0",
    "PTR_DAT_0043eec4",
    "PTR_DAT_0043eed0",
    "PTR_DAT_0043eed4",
    "PTR_DAT_0043eed8",
    "PTR_DAT_0043eedc",
    "PTR_DAT_0043eee0",
    "PTR_DAT_0043eee4",
    "PTR_DAT_0043eee8",
    "PTR_DAT_0043eeec",
    "PTR_DecodePointer_00433180",
    "PTR_DefWindowProcW_00463120",
    "PTR_DeleteCriticalSection_004330d8",
    "PTR_DeleteDC_00463060",
    "PTR_DeleteFileW_00433028",
    "PTR_DeleteObject_00463054",
    "PTR_DestroyIcon_004630d0",
    "PTR_DestroyWindow_00463110",
    "PTR_DeviceIoControl_00433010",
    "PTR_DialogBoxParamW_004630ac",
    "PTR_DispatchMessageW_004630b8",
    "PTR_EnableWindow_0046315c",
    "PTR_EncodePointer_004331f0",
    "PTR_EndDialog_004630b0",
    "PTR_EnterCriticalSection_004330d0",
    "PTR_ExitProcess_00433098",
    "PTR_ExpandEnvironmentStringsW_00433164",
    "PTR_FUN_004335f8",
    "PTR_FUN_0043386c",
    "PTR_FUN_00434440",
    "PTR_FUN_00434464",
    "PTR_FUN_004344a0",
    "PTR_FUN_004344dc",
    "PTR_FUN_004344f8",
    "PTR_FUN_00434540",
    "PTR_FUN_00434740",
    "PTR_FUN_004364f8",
    "PTR_FileTimeToLocalFileTime_00433104",
    "PTR_FileTimeToSystemTime_0043310c",
    "PTR_FindClose_00433060",
    "PTR_FindFirstFileExA_00433230",
    "PTR_FindFirstFileW_00433064",
    "PTR_FindNextFileA_00433234",
    "PTR_FindNextFileW_00433068",
    "PTR_FindResourceW_00433088",
    "PTR_FindWindowExW_004630ec",
    "PTR_FlushFileBuffers_0043304c",
    "PTR_FoldStringW_0043307c",
    "PTR_FormatMessageW_00433008",
    "PTR_FreeConsole_004330b4",
    "PTR_FreeEnvironmentStringsW_0043319c",
    "PTR_FreeLibrary_0043308c",
    "PTR_FreeSid_0046302c",
    "PTR_GdipAlloc_00433250",
    "PTR_GdipCloneImage_00433258",
    "PTR_GdipCreateBitmapFromStreamICM_00433260",
    "PTR_GdipCreateBitmapFromStream_0043325c",
    "PTR_GdipCreateHBITMAPFromBitmap_00433264",
    "PTR_GdipDisposeImage_00433254",
    "PTR_GdipFree_00433270",
    "PTR_GdiplusShutdown_0043326c",
    "PTR_GdiplusStartup_00433268",
    "PTR_GetACP_00433218",
    "PTR_GetCPInfo_00433110",
    "PTR_GetClassNameW_004630e8",
    "PTR_GetClientRect_00463144",
    "PTR_GetCommandLineA_004331a4",
    "PTR_GetCommandLineW_0043315c",
    "PTR_GetConsoleCP_0043318c",
    "PTR_GetConsoleMode_00433188",
    "PTR_GetCurrentDirectoryW_00433074",
    "PTR_GetCurrentProcessId_00433094",
    "PTR_GetCurrentProcess_0043300c",
    "PTR_GetCurrentThreadId_004331d8",
    "PTR_GetDC_004630f8",
    "PTR_GetDateFormatW_00433178",
    "PTR_GetDlgItemTextW_004630b4",
    "PTR_GetDlgItem_00463160",
    "PTR_GetEnvironmentStringsW_004331a0",
    "PTR_GetExitCodeProcess_00433140",
    "PTR_GetFileAttributesW_0043305c",
    "PTR_GetFileType_0043303c",
    "PTR_GetFullPathNameW_00433078",
    "PTR_GetLastError_00433000",
    "PTR_GetLocalTime_00433144",
    "PTR_GetLocaleInfoW_00433170",
    "PTR_GetLongPathNameW_00433034",
    "PTR_GetMessageW_004630dc",
    "PTR_GetModuleFileNameA_00433214",
    "PTR_GetModuleFileNameW_00433080",
    "PTR_GetModuleHandleExW_00433210",
    "PTR_GetModuleHandleW_00433084",
    "PTR_GetNumberFormatW_0043317c",
    "PTR_GetOEMCP_004331a8",
    "PTR_GetObjectW_0046305c",
    "PTR_GetOpenFileNameW_00463044",
    "PTR_GetParent_00463154",
    "PTR_GetProcAddress_00433090",
    "PTR_GetProcessAffinityMask_004330c0",
    "PTR_GetProcessHeap_00433198",
    "PTR_GetShortPathNameW_00433030",
    "PTR_GetStartupInfoW_004331d0",
    "PTR_GetStdHandle_00433040",
    "PTR_GetStringTypeW_00433228",
    "PTR_GetSysColor_004630c4",
    "PTR_GetSystemDirectoryW_004330a8",
    "PTR_GetSystemInfo_004331b0",
    "PTR_GetSystemMetrics_00463148",
    "PTR_GetSystemTimeAsFileTime_004331dc",
    "PTR_GetSystemTime_004330f4",
    "PTR_GetTempPathW_00433168",
    "PTR_GetTickCount_00433148",
    "PTR_GetTimeFormatW_00433174",
    "PTR_GetVersionExW_00433070",
    "PTR_GetWindowLongW_0046313c",
    "PTR_GetWindowRect_00463140",
    "PTR_GetWindow_00463130",
    "PTR_GlobalAlloc_00433120",
    "PTR_GlobalFree_00433130",
    "PTR_GlobalLock_00433128",
    "PTR_GlobalUnlock_0043312c",
    "PTR_HeapAlloc_00433220",
    "PTR_HeapFree_0043321c",
    "PTR_HeapReAlloc_00433224",
    "PTR_HeapSize_00433190",
    "PTR_InitializeCriticalSectionAndSpinCount_004331f4",
    "PTR_InitializeCriticalSection_004330cc",
    "PTR_InitializeSListHead_004331e0",
    "PTR_InterlockedDecrement_0043306c",
    "PTR_IsDBCSLeadByte_00433114",
    "PTR_IsDebuggerPresent_004331c4",
    "PTR_IsDialogMessageW_004630d4",
    "PTR_IsProcessorFeaturePresent_004331c0",
    "PTR_IsValidCodePage_00433238",
    "PTR_IsWindowVisible_004630a8",
    "PTR_IsWindow_00463114",
    "PTR_LCMapStringW_0043322c",
    "PTR_LeaveCriticalSection_004330d4",
    "PTR_LoadBitmapW_004630c8",
    "PTR_LoadCursorW_00463100",
    "PTR_LoadIconW_004630cc",
    "PTR_LoadLibraryExA_004331bc",
    "PTR_LoadLibraryExW_00433208",
    "PTR_LoadLibraryW_004330a4",
    "PTR_LoadResource_00433134",
    "PTR_LoadStringW_0046312c",
    "PTR_LocalFileTimeToFileTime_00433108",
    "PTR_LocalFree_004331e8",
    "PTR_LockResource_00433124",
    "PTR_LookupPrivilegeValueW_00463018",
    "PTR_MapViewOfFile_0043314c",
    "PTR_MapWindowPoints_00463108",
    "PTR_MessageBoxW_004630f0",
    "PTR_MoveFileExW_0043316c",
    "PTR_MoveFileW_00433038",
    "PTR_MultiByteToWideChar_00433118",
    "PTR_OemToCharBuffA_00463128",
    "PTR_OleUninitialize_00463178",
    "PTR_OpenFileMappingW_00433158",
    "PTR_OpenProcessToken_0046300c",
    "PTR_Ordinal_2_00433240",
    "PTR_Ordinal_6_00433244",
    "PTR_Ordinal_9_00433248",
    "PTR_PTR_0043e960",
    "PTR_PeekMessageW_00463164",
    "PTR_QueryPerformanceCounter_004331d4",
    "PTR_QueryPerformanceFrequency_0043320c",
    "PTR_RaiseException_004331ac",
    "PTR_ReadFile_00433048",
    "PTR_RegCloseKey_00463008",
    "PTR_RegCreateKeyExW_00463014",
    "PTR_RegOpenKeyExW_00463028",
    "PTR_RegQueryValueExW_00463024",
    "PTR_RegSetValueExW_00463020",
    "PTR_RegisterClassExW_0046311c",
    "PTR_ReleaseDC_004630f4",
    "PTR_ReleaseSemaphore_004330e4",
    "PTR_RemoveDirectoryW_00433020",
    "PTR_ResetEvent_004330e0",
    "PTR_RtlUnwind_004331ec",
    "PTR_SHBrowseForFolderW_00463080",
    "PTR_SHChangeNotify_0046308c",
    "PTR_SHFileOperationW_0046307c",
    "PTR_SHGetFolderLocation_00463088",
    "PTR_SHGetMalloc_00463090",
    "PTR_SHGetPathFromIDListW_00463084",
    "PTR_SelectObject_00463050",
    "PTR_SendDlgItemMessageW_00463168",
    "PTR_SendMessageW_004630fc",
    "PTR_SetCurrentDirectoryW_0043313c",
    "PTR_SetDlgItemTextW_0046314c",
    "PTR_SetEndOfFile_00433050",
    "PTR_SetEnvironmentVariableW_00433160",
    "PTR_SetEvent_004330dc",
    "PTR_SetFileAttributesW_00433058",
    "PTR_SetFilePointerEx_00433184",
    "PTR_SetFilePointer_00433054",
    "PTR_SetFileTime_00433014",
    "PTR_SetFocus_004630bc",
    "PTR_SetForegroundWindow_004630c0",
    "PTR_SetLastError_00433004",
    "PTR_SetProcessDefaultLayout_00463134",
    "PTR_SetStdHandle_00433194",
    "PTR_SetThreadExecutionState_0043309c",
    "PTR_SetThreadPriority_004330c8",
    "PTR_SetUnhandledExceptionFilter_004331cc",
    "PTR_SetWindowLongW_00463138",
    "PTR_SetWindowPos_00463150",
    "PTR_SetWindowTextW_00463158",
    "PTR_ShellExecuteExW_00463078",
    "PTR_ShowWindow_0046316c",
    "PTR_SizeofResource_00433138",
    "PTR_Sleep_004330a0",
    "PTR_StretchBlt_0046306c",
    "PTR_SystemTimeToFileTime_00433100",
    "PTR_SystemTimeToTzSpecificLocalTime_004330f8",
    "PTR_TerminateProcess_004331e4",
    "PTR_TlsAlloc_004331f8",
    "PTR_TlsFree_00433204",
    "PTR_TlsGetValue_004331fc",
    "PTR_TlsSetValue_00433200",
    "PTR_TranslateMessage_004630d8",
    "PTR_TzSpecificLocalTimeToSystemTime_004330fc",
    "PTR_UnhandledExceptionFilter_004331c8",
    "PTR_UnmapViewOfFile_00433150",
    "PTR_UpdateWindow_0046310c",
    "PTR_VirtualProtect_004331b4",
    "PTR_VirtualQuery_004331b8",
    "PTR_WaitForInputIdle_004630a4",
    "PTR_WaitForSingleObject_004330e8",
    "PTR_WideCharToMultiByte_0043311c",
    "PTR_WriteConsoleW_004330bc",
    "PTR_WriteFile_00433044",
    "PTR____DestructExceptionObject_004358dc",
    "PTR__com_raise_error_0043e7b0",
    "PTR_`scalar_deleting_destructor'_004356f8",
    "PTR_caseD_5_0041d42f",
    "PTR_guard_check_icall_00433278",
    "PTR_s_s:IDS_BROWSETITLE_0043e278",
    "PTR_s_s:IDS_CMDEXTRACTING_0043e284",
    "PTR_s_xlistpos_0043e1a4",
    "PTR_u_<pi-ms-win-core-fibers-l1-1-1_004362b4",
    "PTR_u_Overwrite_0043e758",
    "PTR_u_RarSFX_0043e724",
    "PTR_u_Setup_0043e75c",
    "PTR_u_api-ms-win-appmodel-runtime-l1-1_004373f0",
    "PTR_u_id-id_004398d0",
    "PTR_u_ja-JP_004379f8",
    "PTR_u_ko-KR_00437a00",
    "PTR_u_zh-CN_004379fc",
    "PTR_u_zh-TW_00437a04",
    "PTR_wvsprintfW_004630e0",
    "PreferredLanguages",
    "ProcessEnvironmentBlock",
    "RealClientId",
    "RemoveAll",
    "ReservedForNtRpc",
    "ReservedForOle",
    "ReservedForPerf",
    "ResourceRetValue",
    "Rsrc_Dialog_ASKNEXTVOL_804",
    "Rsrc_Dialog_GETPASSWORD1_804",
    "Rsrc_Dialog_LICENSEDLG_804",
    "Rsrc_Dialog_RENAMEDLG_804",
    "Rsrc_Dialog_REPLACEFILEDLG_804",
    "Rsrc_Dialog_STARTDLG_804",
    "Rsrc_GroupIcon_64_400",
    "Rsrc_Icon_1_400",
    "Rsrc_Manifest_1_804",
    "Rsrc_PNG_65_804",
    "Rsrc_PNG_66_804",
    "Rsrc_StringTable_10_804",
    "Rsrc_StringTable_7_804",
    "Rsrc_StringTable_8_804",
    "Rsrc_StringTable_9_804",
    "Rsrc_StringTable_a_804",
    "Rsrc_StringTable_b_804",
    "Rsrc_StringTable_c_804",
    "Rsrc_StringTable_d_804",
    "Rsrc_StringTable_e_804",
    "Rsrc_StringTable_f_804",
    "SameTebFlags",
    "SavedPriorityState",
    "Self",
    "SoftPatchPtr1",
    "SpareBytes",
    "StackBase",
    "StackLimit",
    "StaticUnicodeBuffer",
    "SubProcessTag",
    "SubSystemTib",
    "SystemReserved1",
    "ThreadLocalStoragePointer",
    "ThreadPoolData",
    "TlsExpansionSlots",
    "TlsLinks.Blink",
    "TlsLinks.Flink",
    "TlsSlots",
    "TryBlockMapEntry_0043bf0c",
    "TryBlockMapEntry_0043bf7c",
    "TryBlockMapEntry_0043c210",
    "TxFsContext",
    "TxnScopeContext",
    "TxnScopeEnterCallback",
    "TxnScopeExitCallback",
    "Unwind@00420310",
    "Unwind@004325e0",
    "Unwind@004325e8",
    "Unwind@004325f6",
    "Unwind@00432604",
    "Unwind@00432612",
    "Unwind@00432620",
    "Unwind@0043264d",
    "Unwind@00432666",
    "Unwind@0043267f",
    "Unwind@00432698",
    "Unwind@004326b1",
    "Unwind@004326ca",
    "Unwind@004326e6",
    "Unwind@004326ee",
    "Unwind@004326fc",
    "Unwind@0043270a",
    "Unwind@00432718",
    "Unwind@00432726",
    "Unwind@00432745",
    "Unwind@0043275a",
    "Unwind@00432786",
    "Unwind@0043278e",
    "Unwind@004327aa",
    "Unwind@004327c3",
    "Unwind@004327ce",
    "Unwind@004327d9",
    "Unwind@004327f5",
    "Unwind@00432800",
    "Unwind@00432821",
    "Unwind@0043283d",
    "Unwind@00432848",
    "Unwind@00432864",
    "Unwind@0043286f",
    "Unwind@00432888",
    "Unwind@004328a1",
    "Unwind@004328bd",
    "Unwind@004328de",
    "Unwind@004328fc",
    "Unwind@00432904",
    "Unwind@0043290c",
    "Unwind@00432925",
    "Unwind@00432933",
    "Unwind@00432952",
    "Unwind@00432960",
    "Unwind@0043296e",
    "Unwind@0043297c",
    "Unwind@0043298c",
    "Unwind@004329ad",
    "Unwind@004329c9",
    "Unwind@004329e2",
    "Unwind@004329ed",
    "Unwind@004329f8",
    "Unwind@00432a03",
    "Unwind@00432a0e",
    "Unwind@00432a1c",
    "Unwind@00432a2a",
    "Unwind@00432a49",
    "Unwind@00432a62",
    "Unwind@00432a9e",
    "Unwind@00432ab7",
    "Unwind@00432ad0",
    "Unwind@00432adb",
    "Unwind@00432af4",
    "Unwind@00432b10",
    "Unwind@00432b2c",
    "UnwindMapEntry_0043b8cc",
    "UnwindMapEntry_0043b92c",
    "UnwindMapEntry_0043b958",
    "UnwindMapEntry_0043b984",
    "UnwindMapEntry_0043bb18",
    "UnwindMapEntry_0043bbe0",
    "UnwindMapEntry_0043bc0c",
    "UnwindMapEntry_0043bc38",
    "UnwindMapEntry_0043bc64",
    "UnwindMapEntry_0043bd4c",
    "UnwindMapEntry_0043bdac",
    "UnwindMapEntry_0043bdd8",
    "UnwindMapEntry_0043be04",
    "UnwindMapEntry_0043be30",
    "UnwindMapEntry_0043bffc",
    "UnwindMapEntry_0043c028",
    "UnwindMapEntry_ARRAY_0043b83c",
    "UnwindMapEntry_ARRAY_0043b89c",
    "UnwindMapEntry_ARRAY_0043b8f8",
    "UnwindMapEntry_ARRAY_0043b9d4",
    "UnwindMapEntry_ARRAY_0043ba04",
    "UnwindMapEntry_ARRAY_0043ba6c",
    "UnwindMapEntry_ARRAY_0043baa8",
    "UnwindMapEntry_ARRAY_0043bae4",
    "UnwindMapEntry_ARRAY_0043bb44",
    "UnwindMapEntry_ARRAY_0043bb78",
    "UnwindMapEntry_ARRAY_0043bbac",
    "UnwindMapEntry_ARRAY_0043bc90",
    "UnwindMapEntry_ARRAY_0043bccc",
    "UnwindMapEntry_ARRAY_0043bd24",
    "UnwindMapEntry_ARRAY_0043bd78",
    "UnwindMapEntry_ARRAY_0043be80",
    "UnwindMapEntry_ARRAY_0043bf20",
    "UnwindMapEntry_ARRAY_0043bfd4",
    "UnwindMapEntry_ARRAY_0043c200",
    "User32Reserved",
    "UserPrefLanguages",
    "UserReserved",
    "Vdm",
    "WOW32Reserved",
    "WaitingOnLoaderLock",
    "Win32ClientInfo",
    "Win32ThreadInfo",
    "WinSockData",
    "_CallMemberFunction0",
    "_CallMemberFunction1",
    "_CallMemberFunction2",
    "_EH4_CallFilterFunc",
    "_EH4_GlobalUnwind2",
    "_EH4_LocalUnwind",
    "_EH4_TransferToHandler",
    "_FilterSetCurrentException",
    "_JumpToContinuation",
    "_UnwindNestedFrames",
    "_ValidateLocalCookies",
    "__87except",
    "__ArrayUnwind",
    "__CallSettingFrame@12",
    "__CatchGuardHandler",
    "__CreateFrameInfo",
    "__CxxThrowException@8",
    "__EH_prolog3_catch",
    "__FindAndUnlinkFrame",
    "__FindPESection",
    "__InternalCxxFrameHandler<class___FrameHandler3>",
    "__IsExceptionObjectToBeDestroyed",
    "__IsNonwritableInCurrentImage",
    "__NLG_Notify",
    "__SEH_epilog4",
    "__SEH_prolog4",
    "__SEH_prolog4_GS",
    "__TranslatorGuardHandler",
    "___AdjustPointer",
    "___CxxFrameHandler",
    "___CxxFrameHandler2",
    "___CxxFrameHandler3",
    "___DestructExceptionObject",
    "___FrameUnwindFilter",
    "___TypeMatch",
    "___acrt_DownlevelLocaleNameToLCID",
    "___acrt_FlsAlloc@4",
    "___acrt_FlsFree@4",
    "___acrt_FlsGetValue@4",
    "___acrt_FlsSetValue@8",
    "___acrt_GetStringTypeA",
    "___acrt_InitializeCriticalSectionEx@12",
    "___acrt_LCMapStringA",
    "___acrt_LCMapStringEx@36",
    "___acrt_LocaleNameToLCID@8",
    "___acrt_add_locale_ref",
    "___acrt_allocate_buffer_for_argv",
    "___acrt_call_reportfault",
    "___acrt_errno_from_os_error",
    "___acrt_errno_map_os_error",
    "___acrt_execute_initializers",
    "___acrt_execute_uninitializers",
    "___acrt_fltout",
    "___acrt_fp_format",
    "___acrt_fp_strflt_to_string",
    "___acrt_free_locale",
    "___acrt_get_sigabrt_handler",
    "___acrt_getptd",
    "___acrt_getptd_noexit",
    "___acrt_has_user_matherr",
    "___acrt_initialize",
    "___acrt_initialize_clock",
    "___acrt_initialize_locks",
    "___acrt_initialize_lowio",
    "___acrt_initialize_multibyte",
    "___acrt_initialize_ptd",
    "___acrt_initialize_signal_handlers",
    "___acrt_initialize_stdio",
    "___acrt_initialize_winapi_thunks",
    "___acrt_invoke_user_matherr",
    "___acrt_is_packaged_app",
    "___acrt_locale_add_lc_time_reference",
    "___acrt_locale_free_lc_time_if_unreferenced",
    "___acrt_locale_free_monetary",
    "___acrt_locale_free_numeric",
    "___acrt_locale_free_time",
    "___acrt_locale_release_lc_time_reference",
    "___acrt_lock",
    "___acrt_lowio_create_handle_array",
    "___acrt_lowio_destroy_handle_array",
    "___acrt_lowio_ensure_fh_exists",
    "___acrt_lowio_lock_fh",
    "___acrt_lowio_unlock_fh",
    "___acrt_release_locale_ref",
    "___acrt_set_locale_changed",
    "___acrt_stdio_flush_nolock",
    "___acrt_stdio_free_buffer_nolock",
    "___acrt_uninitialize",
    "___acrt_uninitialize_locale",
    "___acrt_uninitialize_locks",
    "___acrt_uninitialize_lowio",
    "___acrt_uninitialize_ptd",
    "___acrt_uninitialize_stdio",
    "___acrt_uninitialize_winapi_thunks",
    "___acrt_unlock",
    "___acrt_update_locale_info",
    "___acrt_update_multibyte_info",
    "___acrt_update_thread_locale_data",
    "___acrt_update_thread_multibyte_data",
    "___ascii_strnicmp",
    "___dcrt_get_narrow_environment_from_os",
    "___dcrt_lowio_initialize_console_output",
    "___dcrt_uninitialize_environments_nolock",
    "___delayLoadHelper2@8",
    "___doserrno",
    "___except_validate_context_record",
    "___get_abstract_control_sse2",
    "___get_abstract_control_x87",
    "___get_entropy",
    "___get_machine_control",
    "___get_machine_control_sse2",
    "___get_machine_status_sse2",
    "___get_machine_status_x87",
    "___hw_cw_sse2",
    "___libm_error_support",
    "___pctype_func",
    "___scrt_acquire_startup_lock",
    "___scrt_get_show_window_mode",
    "___scrt_initialize_crt",
    "___scrt_initialize_onexit_tables",
    "___scrt_is_nonwritable_in_current_image",
    "___scrt_is_ucrt_dll_in_use",
    "___scrt_release_startup_lock",
    "___scrt_unhandled_exception_filter@4",
    "___scrt_uninitialize_crt",
    "___security_init_cookie",
    "___set_fpsr_sse2",
    "___setusermatherr",
    "___std_exception_copy",
    "___std_exception_destroy",
    "___std_type_info_compare",
    "___stdio_common_vsprintf",
    "___stdio_common_vswprintf",
    "___strncnt",
    "___vcrt_FlsAlloc",
    "___vcrt_FlsFree",
    "___vcrt_FlsGetValue",
    "___vcrt_FlsSetValue",
    "___vcrt_InitializeCriticalSectionEx",
    "___vcrt_getptd",
    "___vcrt_getptd_noexit",
    "___vcrt_initialize",
    "___vcrt_initialize_locks",
    "___vcrt_initialize_ptd",
    "___vcrt_uninitialize",
    "___vcrt_uninitialize_locks",
    "___vcrt_uninitialize_ptd",
    "__acrt_LCMapStringA_stat",
    "__acrt_fp_classify",
    "__acrt_fp_is_negative",
    "__acrt_lock_and_call<class_<lambda_275893d493268fdec8709772e3fcec0e>_>",
    "__acrt_lock_and_call<class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>_>",
    "__acrt_lock_and_call<class_<lambda_6250bd4b2a391816dd638c3bf72b0bcb>_>",
    "__acrt_lock_and_call<class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>_>",
    "__acrt_lock_and_call<class_<lambda_b2ea41f6bbb362cd97d94c6828d90b61>_>",
    "__acrt_lock_and_call<class_<lambda_be2b3da3f62db62e9dad5dc70221a656>_>",
    "__acrt_lock_and_call<class_<lambda_e69574bed617af4e071282c136b37893>_>",
    "__acrt_lock_and_call<class_<lambda_ec61778202f4f5fc7e7711acc23c3bca>_>",
    "__acrt_lowio_lock_fh_and_call<class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>_>",
    "__acrt_lowio_lock_fh_and_call<class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>_>",
    "__acrt_stdio_free_stream",
    "__alldiv",
    "__alldvrm",
    "__allmul",
    "__alloca_probe",
    "__alloca_probe_16",
    "__alloca_probe_8",
    "__allrem",
    "__allshl",
    "__aulldiv",
    "__aulldvrm",
    "__aullrem",
    "__aullshr",
    "__byteswap_ulong",
    "__callnewh",
    "__calloc_base",
    "__cexit",
    "__chkstk",
    "__chvalidchk_l",
    "__clearfp",
    "__close",
    "__close_nolock",
    "__clrfp",
    "__commit",
    "__configthreadlocale",
    "__control87",
    "__controlfp_s",
    "__crt_fast_encode_pointer<>",
    "__ctrlfp",
    "__errcode",
    "__errno",
    "__except1",
    "__except_handler4",
    "__execute_onexit_table",
    "__exit",
    "__fclose_nolock",
    "__fcloseall",
    "__fflush_nolock",
    "__fileno",
    "__filter_x86_sse2_floating_point_exception_default",
    "__flushall",
    "__fpclass",
    "__free_base",
    "__free_osfhnd",
    "__freea_crt",
    "__get_errno_from_oserr",
    "__get_narrow_winmain_command_line",
    "__get_osfhandle",
    "__get_printf_count_output",
    "__getfpcontrolword",
    "__getfpstatusword",
    "__handle_exc",
    "__hw_cw",
    "__initialize_default_precision",
    "__initialize_onexit_table",
    "__initterm",
    "__initterm_e",
    "__invalid_parameter",
    "__invoke_watson",
    "__isatty",
    "__ischartype_l",
    "__isctype_l",
    "__isdigit_l",
    "__isleadbyte_l",
    "__ismbblead",
    "__lock_file",
    "__lseeki64_nolock",
    "__malloc_base",
    "__math_exit",
    "__mbsdec",
    "__mbsdec_l",
    "__mbtowc_l",
    "__onexit",
    "__putwch_nolock",
    "__query_new_handler",
    "__raise_exc",
    "__raise_exc_ex",
    "__realloc_base",
    "__register_onexit_function",
    "__register_thread_local_exe_atexit_callback",
    "__scrt_common_main_seh",
    "__seh_filter_exe",
    "__set_errno_from_matherr",
    "__set_exp",
    "__set_fmode",
    "__set_new_mode",
    "__setfpcontrolword",
    "__setfpstatusword",
    "__setmbcp_nolock",
    "__sptype",
    "__startOneArgErrorHandling",
    "__statfp",
    "__strdup",
    "__tolower_l",
    "__toupper_l",
    "__umatherr",
    "__updatetlocinfoEx_nolock",
    "__vsnprintf_c_l",
    "__vsnprintf_l",
    "__vsnwprintf_l",
    "__vsprintf_p_l",
    "__vsprintf_s_l",
    "__vswprintf_c_l",
    "__vswprintf_p_l",
    "__vswprintf_s_l",
    "__wcsdup",
    "__wctomb_s_l",
    "__write",
    "__write_nolock",
    "_abort",
    "_atexit",
    "_atoi",
    "_atol",
    "_bsearch",
    "_com_issue_error",
    "_com_raise_error",
    "_common_flush_all",
    "_exit",
    "_fclose",
    "_fegetenv",
    "_feholdexcept",
    "_fesetenv",
    "_free",
    "_guard_check_icall",
    "_isdigit",
    "_iswctype",
    "_mbtowc",
    "_memcpy_s",
    "_memset",
    "_qsort",
    "_raise",
    "_strcmp",
    "_strcpy_s",
    "_strlen",
    "_strncmp",
    "_strncpy",
    "_strpbrk",
    "_strtol",
    "_terminate",
    "_tolower",
    "_toupper",
    "_unexpected",
    "_wcscat",
    "_wcscmp",
    "_wcscpy",
    "_wcscpy_s",
    "_wcslen",
    "_wcsncmp",
    "_wcsncpy",
    "_wcspbrk",
    "_wcstol",
    "_wctomb_s",
    "`eh_vector_constructor_iterator'",
    "`eh_vector_destructor_iterator'",
    "append",
    "atexit_exception_filter",
    "common_configure_argv<char>",
    "common_exit",
    "common_expand_argv_wildcards<char>",
    "common_flush_all",
    "common_initialize_environment_nolock<char>",
    "common_lseek_nolock<__int64>",
    "common_tcsncpy_s<char>",
    "common_tox_l<&bool___cdecl_internal_islower_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_upper(int,struct___crt_locale_pointers*_const)>",
    "common_tox_l<&bool___cdecl_internal_isupper_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_lower(int,struct___crt_locale_pointers*_const)>",
    "common_vsprintf<class___crt_stdio_output::standard_base,char>",
    "common_vsprintf<class___crt_stdio_output::standard_base,wchar_t>",
    "construct_ptd",
    "copy_and_add_argument_to_buffer<char>",
    "create_environment<char>",
    "destroy_fls",
    "destroy_ptd",
    "entry",
    "exit_or_terminate_process",
    "expand_argument_wildcards<char>",
    "expand_if_necessary",
    "fegetenv",
    "feholdexcept",
    "fesetenv",
    "find_end_of_double_null_terminated_sequence",
    "find_next_state",
    "find_pe_section",
    "fp_format_a",
    "fp_format_e",
    "fp_format_e_internal",
    "fp_format_f",
    "fp_format_f_internal",
    "fp_format_g",
    "fp_format_nan_or_infinity",
    "free_crt_array_internal",
    "free_environment<char>",
    "getSystemCP",
    "get_global_action_nolock",
    "glContext",
    "glCurrentRC",
    "glDispatchTable",
    "glReserved1",
    "glReserved2",
    "glSection",
    "glSectionInfo",
    "glTable",
    "guard_check_icall",
    "initialize_inherited_file_handles_nolock",
    "initialize_stdio_handles_nolock",
    "internal_islower_l",
    "internal_isupper_l",
    "is_managed_app",
    "make_c_string_character_source<>",
    "operator()<>",
    "output_adapter_data<>",
    "output_processor<>",
    "pShimData",
    "parse_command_line<char>",
    "parse_int_from_format_string",
    "pu_HAN#%s_%s_%s_0046ae42",
    "pu_HAN#%s_%s_0046ad70",
    "pu_HAN#%s_0046a748",
    "pu_HAN#%s_0046a7c0",
    "pu_HAN#%s_0046a7d2",
    "pu_HAN#%s_0046a7ec",
    "pu_HAN#%s_0046a7fc",
    "pu_HAN#%s_0046a812",
    "pu_HAN#%s_0046a850",
    "pu_HAN#%s_0046a862",
    "pu_HAN#%s_0046a88e",
    "pu_HAN#%s_0046a8b6",
    "pu_HAN#%s_0046ac96",
    "pu_HAN#%s_0046ad1c",
    "pu_HAN#%s_0046ad4c",
    "pu_HAN#%s_0046ad9e",
    "pu_HAN#%s_0046adb6",
    "pu_HAN#,_Windows_0046a9e2",
    "pu_HAN#<li>_<b>_</b>_0046ab98",
    "pu_HAN#<style>body{font-family:\"Arial,_\"_0046aa7e",
    "pu_HAN#_0046a700",
    "pu_HAN#_0046a730",
    "pu_HAN#_0046a75e",
    "pu_HAN#_0046a76c",
    "pu_HAN#_0046a79a",
    "pu_HAN#_0046a8d0",
    "pu_HAN#_0046a8de",
    "pu_HAN#_0046a8f8",
    "pu_HAN#_0046a936",
    "pu_HAN#_0046a964",
    "pu_HAN#_0046a9a0",
    "pu_HAN#_0046a9a6",
    "pu_HAN#_0046a9b0",
    "pu_HAN#_0046aa68",
    "pu_HAN#_0046ac7e",
    "pu_HAN#_0046acb2",
    "pu_HAN#_0046acd0",
    "pu_HAN#_0046acd6",
    "pu_HAN#_0046ad38",
    "pu_HAN#_0046adcc",
    "pu_HAN#_0046ade6",
    "pu_HAN#_0046ae1a",
    "replace_current_thread_locale_nolock",
    "s_(null)_00436414",
    "s_*messages***_0043399c",
    "s_1#IND_00438420",
    "s_1#INF_00438408",
    "s_1#QNAN_00438410",
    "s_1#SNAN_00438418",
    "s_ADVAPI32.dll_00435440",
    "s_AcquireSRWLockExclusive_00435598",
    "s_April_004367cc",
    "s_August_004367e4",
    "s_COMCTL32.dll_004355e0",
    "s_COMDLG32.dll_00435430",
    "s_CorExitProcess_004364e4",
    "s_CryptProtectMemory_00433a90",
    "s_CryptUnprotectMemory_00433aa4",
    "s_December_0043680c",
    "s_February_004367b8",
    "s_FlsAlloc_00436350",
    "s_FlsAlloc_00437940",
    "s_FlsFree_00436364",
    "s_FlsFree_00437954",
    "s_FlsGetValue_00436374",
    "s_FlsGetValue_00437964",
    "s_FlsSetValue_00436388",
    "s_FlsSetValue_00437978",
    "s_Friday_0043676c",
    "s_GDI32.dll_00435420",
    "s_GetCurrentPackageId_0043798c",
    "s_HH:mm:ss_00436840",
    "s_InitializeCriticalSectionEx_0043639c",
    "s_InitializeCriticalSectionEx_004379a8",
    "s_January_004367b0",
    "s_LCMapStringEx_004379cc",
    "s_LocaleNameToLCID_004379e4",
    "s_MM/dd/yy_00436820",
    "s_March_004367c4",
    "s_Monday_00436744",
    "s_NAN(IND)_00436700",
    "s_NAN(SNAN)_004366e8",
    "s_November_00436800",
    "s_October_004367f8",
    "s_ReleaseSRWLockExclusive_004355b0",
    "s_SELECT_*_FROM_Win32_OperatingSys_004338ac",
    "s_SHELL32.dll_00435450",
    "s_SHLWAPI.dll_004355d0",
    "s_Saturday_00436774",
    "s_September_004367ec",
    "s_SetDefaultDllDirectories_00433c60",
    "s_SetDllDirectoryW_00433c4c",
    "s_Sunday_0043673c",
    "s_Thursday_00436760",
    "s_Tuesday_0043674c",
    "s_USER32.dll_00435410",
    "s_Unknown_exception_004343fc",
    "s_Wednesday_00436754",
    "s_bad_allocation_00434410",
    "s_bad_array_new_length_004356d8",
    "s_bad_exception_004358ec",
    "s_dddd,_MMMM_dd,_yyyy_0043682c",
    "s_e+000_00436718",
    "s_log10_0043a4b0",
    "s_log10_0043a6f8",
    "s_nan(ind)_0043670c",
    "s_nan(snan)_004366f4",
    "s_ole32.dll_00435470",
    "s_s:IDS_BROWSETITLE_00434788",
    "s_s:IDS_CMDEXTRACTING_0043479c",
    "s_sfxrar.exe_0043d098",
    "s_xlistpos_00433c2c",
    "setSBCS",
    "setSBUpLow",
    "setmbcp_internal",
    "shift_bytes",
    "shortsort",
    "siglookup",
    "state_case_flag",
    "state_case_normal",
    "state_case_normal_common",
    "state_case_normal_tchar",
    "state_case_precision",
    "state_case_size",
    "state_case_width",
    "swap",
    "terminate",
    "thunk_FUN_004015fb",
    "thunk_FUN_00401645",
    "thunk_FUN_00406e47",
    "thunk_FUN_0040a89d",
    "thunk_FUN_0040f279",
    "thunk_FUN_00411f24",
    "thunk_FUN_00411fbb",
    "thunk_FUN_00414872",
    "thunk_FUN_0041b568",
    "thunk_FUN_0041dca1",
    "thunk_FUN_0041dec2",
    "thunk_FUN_0041f990",
    "thunk_FUN_004323b0",
    "try_cor_exit_process",
    "try_get_first_available_module",
    "try_get_function",
    "try_get_module",
    "type_case_Z",
    "type_case_a",
    "type_case_c_tchar",
    "type_case_integer",
    "type_case_integer_parse_into_buffer<>",
    "type_case_n",
    "type_case_o",
    "type_case_p",
    "type_case_s",
    "type_case_s_compute_narrow_string_length",
    "u_\"%s\"_%s_004351f8",
    "u_$%s:%s_00433a40",
    "u_$%s:_00433a50",
    "u_%4d-%02d-%02d-%02d-%02d-%02d-%03_004350d8",
    "u_%c:\\_00433944",
    "u_%s%s%u_004353a4",
    "u_%s.%d.tmp_004352f8",
    "u_%s:_%s_004343e4",
    "u_%s_%s_%s_00435030",
    "u_%s_%s_00435044",
    "u_&nbsp;_00434730",
    "u_(null)_0043641c",
    "u_*messages***_004339ac",
    "u_-el_-s2_\"-d%s\"_\"-sp%s\"_004351bc",
    "u_.exe_0043390c",
    "u_.inf_004353c0",
    "u_.lnk_004353b4",
    "u_.rar_00433900",
    "u_.sfx_00433918",
    "u_</html>_00434670",
    "u_</p>_00434680",
    "u_</style>_004346a8",
    "u_<br>_0043468c",
    "u_<head><meta_http-equiv=\"content-_004345c8",
    "u_<html>_004345b8",
    "u_<pi-ms-win-core-datetime-l1-1-1_00437488",
    "u_<pi-ms-win-core-fibers-l1-1-1_004362c0",
    "u_<pi-ms-win-core-fibers-l1-1-1_004374c8",
    "u_<pi-ms-win-core-file-l2-1-1_00437504",
    "u_<pi-ms-win-core-localization-l1-_00437540",
    "u_<pi-ms-win-core-localization-obs_00437588",
    "u_<pi-ms-win-core-processthreads-l_004375e8",
    "u_<pi-ms-win-core-string-l1-1-0_00437634",
    "u_<pi-ms-win-core-synch-l1-2-0_004362fc",
    "u_<pi-ms-win-core-synch-l1-2-0_00437670",
    "u_<pi-ms-win-core-sysinfo-l1-2-1_004376ac",
    "u_<pi-ms-win-core-winrt-l1-1-0_004376ec",
    "u_<pi-ms-win-core-xstate-l2-1-0_00437728",
    "u_<style>_00434698",
    "u_<style>body{font-family:\"Arial\";_004346c0",
    "u_?*<>|\"_0043392c",
    "u_ASKNEXTVOL_00435078",
    "u_April_00436990",
    "u_August_004369b4",
    "u_CAPTION_00433a5c",
    "u_COM#_00433984",
    "u_CONOUT$_0043b0f8",
    "u_CreateThread_failed_00434300",
    "u_Crypt32.dll_00433a78",
    "u_CryptProtectMemory_failed_00433abc",
    "u_CryptUnprotectMemory_failed_00433af0",
    "u_DIALOG_004339e4",
    "u_DIRECTION_00433a00",
    "u_DXGIDebug.dll_00433c94",
    "u_December_004369fc",
    "u_Delete_00435210",
    "u_EDIT_00434748",
    "u_February_00436970",
    "u_Friday_004368dc",
    "u_GETPASSWORD1_00435050",
    "u_HH:mm:ss_00436a5c",
    "u_HIDE_00435388",
    "u_Install_004353cc",
    "u_January_00436960",
    "u_July_004369a8",
    "u_June_0043699c",
    "u_KERNEL32.DLL_0043557c",
    "u_LICENSEDLG_00435164",
    "u_LPT#_00433990",
    "u_License_00435288",
    "u_MENU_004339f4",
    "u_MM/dd/yy_00436a20",
    "u_March_00436984",
    "u_Maximum_allowed_array_size_(%u)_i_00433618",
    "u_Monday_00436894",
    "u_Name_004338d4",
    "u_November_004369e8",
    "u_October_004369d8",
    "u_Overwrite_00435254",
    "u_Path_00435238",
    "u_Please_remove_%s_from_%s_folder._00434268",
    "u_Presetup_00435298",
    "u_ProgramFilesDir_00435364",
    "u_RENAMEDLG_0043501c",
    "u_REPLACEFILEDLG_00434ffc",
    "u_ROOT\\CIMV2_00433894",
    "u_RarHtmlClassName_0043455c",
    "u_RarSFX_00434fdc",
    "u_RpcRtRemote.dll_004341e8",
    "u_SIZE_00433a6c",
    "u_SSPICLI.DLL_00433cc8",
    "u_STARTDLG_00435130",
    "u_STATIC_00434fec",
    "u_STRINGS_004339d4",
    "u_Saturday_004368ec",
    "u_SavePath_004352c0",
    "u_SeCreateSymbolicLinkPrivilege_004337f8",
    "u_SeRestorePrivilege_004337d0",
    "u_SeSecurityPrivilege_004337a8",
    "u_September_004369c4",
    "u_SetupCode_004352e4",
    "u_Setup_00435268",
    "u_Shell.Explorer_00434580",
    "u_Shortcut_004352ac",
    "u_Silent_00435244",
    "u_Software\\Microsoft\\Windows\\Curre_00435310",
    "u_Software\\WinRAR_SFX_004353dc",
    "u_Sunday_00436884",
    "u_TempMode_00435274",
    "u_Text_00435220",
    "u_Thread_pool_initialization_faile_00434390",
    "u_Thursday_004368c8",
    "u_Title_0043522c",
    "u_Tuesday_004368a4",
    "u_UNC\\_00433840",
    "u_UXTheme.dll_00433cf8",
    "u_Update_004352d4",
    "u_WINNSI.DLL_00434048",
    "u_WaitForMultipleObjects_error_%d,_00434328",
    "u_Wednesday_004368b4",
    "u_WindowsCodecs.dll_00433f94",
    "u_Windows_10_004338e0",
    "u_XmlLite.dll_0043419c",
    "u_\\??\\_00433834",
    "u_\\\\?\\_00433950",
    "u___tmp_rar_sfx_access_check_%u_00435180",
    "u_about:blank_004345a0",
    "u_aclui.dll_00434208",
    "u_advapi32_00437900",
    "u_api-ms-_00436338",
    "u_api-ms-win-appmodel-runtime-l1-1_00437440",
    "u_api-ms-win-rtcore-ntuser-window-_00437768",
    "u_api-ms-win-security-systemfuncti_004377b8",
    "u_apphelp.dll_00433e38",
    "u_atl.dll_00433e0c",
    "u_browcli.dll_00434130",
    "u_cabinet.dll_00433f30",
    "u_clbcatq.dll_00433d68",
    "u_comres.dll_00433d80",
    "u_crypt32.dll_00433e9c",
    "u_cryptbase.dll_00433d28",
    "u_cryptsp.dll_004341d0",
    "u_cryptui.dll_00433ecc",
    "u_cscapi.dll_00433fd0",
    "u_dddd,_MMMM_dd,_yyyy_00436a34",
    "u_devrtl.dll_0043408c",
    "u_dfscli.dll_00434118",
    "u_dhcpcsvc.dll_00434180",
    "u_dhcpcsvc6.dll_00434164",
    "u_dnsapi.DLL_00434014",
    "u_dsrole.dll_0043421c",
    "u_dwmapi.dll_00433d10",
    "u_en-US_00436a70",
    "u_ext-ms-win-kernel32-package-curr_00437810",
    "u_ext-ms-win-ntuser-dialogbox-l1-1_00437868",
    "u_ext-ms-win-ntuser-windowstation-_004378b0",
    "u_hc%u_00433688",
    "u_id-id_0043a08c",
    "u_ieframe.dll_00433ddc",
    "u_imageres.dll_00433ff8",
    "u_iphlpapi.DLL_0043402c",
    "u_ja-JP_00437a08",
    "u_kernel32_00433c38",
    "u_kernel32_00437914",
    "u_ko-KR_00437a20",
    "u_linkinfo.dll_004341b4",
    "u_lpk.dll_00433d44",
    "u_mlang.dll_004340bc",
    "u_mpr.dll_0043407c",
    "u_msasn1.dll_00433eb4",
    "u_mscoree.dll_004364cc",
    "u_netapi32.dll_00433e68",
    "u_netutils.dll_00434060",
    "u_ntmarta.dll_00433f64",
    "u_ntshrui.dll_00433df4",
    "u_oleaccrc.dll_00433f48",
    "u_peerdist.dll_00434234",
    "u_profapi.dll_00433f7c",
    "u_propsys.dll_004340a4",
    "u_psapi.dll_00433dc8",
    "u_rasadhlp.dll_00434148",
    "u_riched20.dll_0043476c",
    "u_rsaenh.dll_00433ce0",
    "u_rtmp%d_0043385c",
    "u_runas_004351ec",
    "u_samcli.dll_004340d0",
    "u_samlib.dll_004340e8",
    "u_secur32.dll_00433f18",
    "u_setupapi.dll_00433e1c",
    "u_sfc_os.dll_00433cb0",
    "u_sfxcmd_00435144",
    "u_sfxname_004350c4",
    "u_sfxpar_00435154",
    "u_sfxstime_0043511c",
    "u_shdocvw.dll_00433e84",
    "u_shell32.dll_00433f00",
    "u_slc.dll_00433fe8",
    "u_srvcli.dll_00433fb8",
    "u_user32_00437928",
    "u_userenv.dll_00433e50",
    "u_usp10.dll_00433d54",
    "u_utf-8\"></head>_00434650",
    "u_uxtheme.dll_00434250",
    "u_version.dll_00433c7c",
    "u_winrarsfxmappingfile.tmp_00435090",
    "u_wintrust.dll_00433ee4",
    "u_wkscli.dll_00434100",
    "u_ws2_32.dll_00433d98",
    "u_ws2help.dll_00433db0",
    "u_xc%u_0043369c",
    "u_zh-CN_00437a14",
    "u_zh-TW_00437a2c",
    "unexpected",
    "uninitialize<>",
    "uninitialize_environment_internal<>",
    "write_double_translated_ansi_nolock",
    "write_double_translated_unicode_nolock",
    "write_requires_double_translation_nolock",
    "write_stored_string_tchar",
    "write_text_ansi_nolock",
    "write_text_utf16le_nolock",
    "write_text_utf8_nolock",
    "x_ismbbtype_l"
  ],
  "entry_points": [],
  "decompiled": [
    {
      "name": "FUN_00401000",
      "entry": "00401000",
      "c": "\nvoid FUN_00401000(void)\n\n{\n  FUN_00405dff(0x43f020);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401010",
      "entry": "00401010",
      "c": "\nvoid FUN_00401010(void)\n\n{\n  FUN_00406b84(&DAT_00441098);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401020",
      "entry": "00401020",
      "c": "\nvoid FUN_00401020(void)\n\n{\n  FUN_0040d368((undefined4 *)&DAT_00441030);\n  _atexit(FUN_00432b70);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401040",
      "entry": "00401040",
      "c": "\nvoid FUN_00401040(void)\n\n{\n  _atexit(FUN_00432b80);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401050",
      "entry": "00401050",
      "c": "\nvoid FUN_00401050(void)\n\n{\n  DAT_004481d8 = FUN_00410723();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401060",
      "entry": "00401060",
      "c": "\nvoid FUN_00401060(void)\n\n{\n  FUN_00411bbd(0x4481e8);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401070",
      "entry": "00401070",
      "c": "\nvoid FUN_00401070(void)\n\n{\n  FUN_0040f1d0(&DAT_00457a78);\n  _atexit(FUN_00432b90);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401090",
      "entry": "00401090",
      "c": "\nvoid FUN_00401090(void)\n\n{\n  FUN_0040f1d0(&DAT_0045eb82);\n  _atexit(FUN_00432ba0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004010b0",
      "entry": "004010b0",
      "c": "\nvoid FUN_004010b0(void)\n\n{\n  FUN_0040f1d0(&DAT_0044c472);\n  _atexit(FUN_00432bb0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004010d0",
      "entry": "004010d0",
      "c": "\nvoid FUN_004010d0(void)\n\n{\n  FUN_00405abd();\n  _atexit(FUN_00432bc0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004010f0",
      "entry": "004010f0",
      "c": "\nvoid FUN_004010f0(void)\n\n{\n  _atexit(FUN_00432bd0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401100",
      "entry": "00401100",
      "c": "\nbool FUN_00401100(HWND param_1,LPCWSTR param_2,LPWSTR param_3,int param_4,char param_5)\n\n{\n  size_t sVar1;\n  int iVar2;\n  int iVar3;\n  size_t sVar4;\n  DWORD DVar5;\n  wchar_t *pwVar6;\n  wchar_t *_Str;\n  bool bVar7;\n  wchar_t local_45c;\n  wchar_t local_45a [511];\n  tagOFNW local_5c;\n  \n  pwVar6 = &local_45c;\n  if (param_4 != 0) {\n    FUN_00410602(pwVar6,param_4,0x200);\n    sVar1 = _wcslen(pwVar6);\n    pwVar6 = local_45a + sVar1;\n    FUN_00410602(pwVar6,param_4,0x200 - ((int)pwVar6 - (int)&local_45c >> 1));\n    sVar1 = _wcslen(pwVar6);\n    pwVar6 = pwVar6 + sVar1 + 1;\n  }\n  iVar2 = 0x200 - ((int)pwVar6 - (int)&local_45c >> 1);\n  iVar3 = FUN_0040e617(0xa3);\n  FUN_00410602(pwVar6,iVar3,iVar2);\n  sVar1 = _wcslen(pwVar6);\n  _Str = pwVar6 + sVar1 + 1;\n  FUN_00410602(_Str,0x4335f0,0x200 - ((int)_Str - (int)&local_45c >> 1));\n  sVar4 = _wcslen(_Str);\n  pwVar6[sVar1 + sVar4 + 2] = L'\\0';\n  _memset(&local_5c,0,0x58);\n  local_5c.hwndOwner = param_1;\n  local_5c.hInstance = DAT_00441028;\n  local_5c.lpstrFilter = &local_45c;\n  local_5c.lpstrTitle = param_2;\n  local_5c.lStructSize = 0x58;\n  local_5c.lpstrFile = param_3;\n  local_5c.nMaxFile = 0x800;\n  local_5c.Flags = 0x1080c;\n  if (param_5 == '\\0') {\n    iVar2 = GetOpenFileNameW(&local_5c);\n  }\n  else {\n    iVar2 = GetSaveFileNameW(&local_5c);\n  }\n  bVar7 = iVar2 == 0;\n  if (bVar7) {\n    DVar5 = CommDlgExtendedError();\n    iVar2 = 0;\n    if (DVar5 == 0x3002) {\n      *param_3 = L'\\0';\n      if (param_5 == '\\0') {\n        iVar2 = GetOpenFileNameW(&local_5c);\n      }\n      else {\n        iVar2 = GetSaveFileNameW(&local_5c);\n      }\n    }\n    bVar7 = iVar2 == 0;\n  }\n  return !bVar7;\n}\n\n"
    },
    {
      "name": "FUN_0040124f",
      "entry": "0040124f",
      "c": "\nbool FUN_0040124f(HWND param_1,LPCWSTR param_2,LPWSTR param_3)\n\n{\n  _func_5075 *p_Var1;\n  HRESULT HVar2;\n  LPITEMIDLIST pidl;\n  BOOL BVar3;\n  WCHAR local_230 [260];\n  _browseinfoW local_28;\n  IMalloc *local_8;\n  \n  HVar2 = SHGetMalloc(&local_8);\n  if (HVar2 == 0) {\n    local_28.hwndOwner = param_1;\n    local_28.pszDisplayName = local_230;\n    local_28.lpszTitle = param_2;\n    local_28.pidlRoot = (LPCITEMIDLIST)0x0;\n    local_28.ulFlags = 0x41;\n    local_28.lpfn = (BFFCALLBACK)0x0;\n    local_28.lParam = 0;\n    pidl = SHBrowseForFolderW(&local_28);\n    if (pidl != (LPITEMIDLIST)0x0) {\n      BVar3 = SHGetPathFromIDListW(pidl,param_3);\n      p_Var1 = local_8->lpVtbl->Free;\n      (*(code *)PTR_guard_check_icall_00433278)();\n      (*p_Var1)(local_8,pidl);\n      return BVar3 != 0;\n    }\n  }\n  return false;\n}\n\n"
    },
    {
      "name": "guard_check_icall",
      "entry": "004012d0",
      "c": "\n/* guard_check_icall */\n\nvoid __cdecl guard_check_icall(void)\n\n{\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004012d3",
      "entry": "004012d3",
      "c": "\nvoid FUN_004012d3(HWND param_1,int param_2,byte param_3)\n\n{\n  uint bEnable;\n  HWND hWnd;\n  \n  bEnable = (uint)param_3;\n  hWnd = GetDlgItem(param_1,param_2);\n  EnableWindow(hWnd,bEnable);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004012f1",
      "entry": "004012f1",
      "c": "\nvoid FUN_004012f1(HWND param_1,int param_2,char param_3)\n\n{\n  uint nCmdShow;\n  HWND hWnd;\n  \n  nCmdShow = -(uint)(param_3 != '\\0') & 9;\n  hWnd = GetDlgItem(param_1,param_2);\n  ShowWindow(hWnd,nCmdShow);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401316",
      "entry": "00401316",
      "c": "\nuint FUN_00401316(HWND param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,\n                 undefined4 param_6,byte param_7)\n\n{\n  HWND in_EAX;\n  \n  if (param_2 == 0x30) {\n    in_EAX = (HWND)FUN_0040e2c1(&DAT_00441030,param_1);\n  }\n  else if (param_2 == 0x110) {\n    in_EAX = (HWND)FUN_0040e2e8(&DAT_00441030,param_1,param_5,param_7 & 1);\n    if ((param_7 & 1) != 0) {\n      in_EAX = GetParent(param_1);\n      if (in_EAX != (HWND)0x0) {\n        in_EAX = GetDlgItem(in_EAX,0x3021);\n        if ((in_EAX != (HWND)0x0) && ((param_7 & 8) != 0)) {\n          in_EAX = (HWND)SetWindowTextW(in_EAX,L\"\");\n        }\n      }\n    }\n  }\n  return (uint)in_EAX & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0040138b",
      "entry": "0040138b",
      "c": "\nvoid FUN_0040138b(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 local_50 [16];\n  uint local_10;\n  \n  FUN_004015c6(local_50,param_1);\n  if (local_10 < 8) {\n    local_50[local_10] = param_2;\n    local_10 = local_10 + 1;\n  }\n  FUN_004115fe(local_50);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004013ba",
      "entry": "004013ba",
      "c": "\nundefined4 * __thiscall FUN_004013ba(void *this,int param_1)\n\n{\n  *(undefined4 *)this = 0;\n  *(undefined4 *)((int)this + 4) = 0;\n  *(undefined4 *)((int)this + 8) = 0;\n  *(undefined4 *)((int)this + 0xc) = 0;\n  *(undefined1 *)((int)this + 0x10) = 0;\n  FUN_00401732(this,param_1);\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_004013dc",
      "entry": "004013dc",
      "c": "\nundefined4 * FUN_004013dc(void)\n\n{\n  undefined1 uVar1;\n  int iVar2;\n  void *pvVar3;\n  undefined4 *extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  *(undefined4 **)(unaff_EBP + -0x10) = extraout_ECX;\n  FUN_00409556(extraout_ECX);\n  *extraout_ECX = &PTR_FUN_004335f8;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  FUN_00405e37();\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  FUN_0040ce40();\n  extraout_ECX[0x87a] = 0;\n  extraout_ECX[0x87b] = 0;\n  FUN_0040157a((int)(extraout_ECX + 0x8a6));\n  FUN_0040157a((int)(extraout_ECX + 0x117a));\n  pvVar3 = *(void **)(unaff_EBP + 8);\n  *(undefined1 *)(unaff_EBP + -4) = 4;\n  extraout_ECX[0x875] = 0;\n  *(bool *)(extraout_ECX + 0x874) = pvVar3 == (void *)0x0;\n  if (pvVar3 == (void *)0x0) {\n    iVar2 = FUN_0041eb38(0x92f0);\n    *(int *)(unaff_EBP + -0x14) = iVar2;\n    *(undefined1 *)(unaff_EBP + -4) = 5;\n    if (iVar2 == 0) {\n      pvVar3 = (void *)0x0;\n    }\n    else {\n      pvVar3 = FUN_0040b505();\n    }\n  }\n  extraout_ECX[0x875] = pvVar3;\n  uVar1 = *(undefined1 *)((int)pvVar3 + 0x71a1);\n  extraout_ECX[0x876] = 0xffffffff;\n  extraout_ECX[0x877] = 0xffffffff;\n  extraout_ECX[0x878] = 0xffffffff;\n  *(undefined1 *)(extraout_ECX + 0xc) = uVar1;\n  extraout_ECX[0x1b32] = 2;\n  extraout_ECX[0x1b33] = 0;\n  extraout_ECX[0x1b34] = 0;\n  extraout_ECX[0x1b36] = 0;\n  extraout_ECX[0x87a] = 0;\n  extraout_ECX[0x87b] = 0;\n  *(undefined1 *)(extraout_ECX + 0x1b35) = 0;\n  *(undefined2 *)(extraout_ECX + 0x1b37) = 0;\n  extraout_ECX[0x87c] = 0;\n  extraout_ECX[0x1b2e] = 0;\n  extraout_ECX[0x1b2f] = 0;\n  extraout_ECX[0x1b30] = 0;\n  extraout_ECX[0x1b31] = 0;\n  _memset(extraout_ECX + 0x888,0,0x40);\n  _memset(extraout_ECX + 0x898,0,0x34);\n  _memset(extraout_ECX + 0x116a,0,0x20);\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  extraout_ECX[0x1b3c] = 0;\n  extraout_ECX[0x1b3e] = 0;\n  extraout_ECX[0x1b3f] = 0;\n  extraout_ECX[0x1b40] = 0;\n  extraout_ECX[0x1b41] = 0;\n  extraout_ECX[0x1b42] = 0;\n  extraout_ECX[0x1b43] = 0;\n  *(undefined2 *)((int)extraout_ECX + 0x6d12) = 0;\n  *(undefined1 *)((int)extraout_ECX + 0x6cee) = 0;\n  *(undefined1 *)(extraout_ECX + 0x1b44) = 0;\n  *(undefined1 *)(extraout_ECX + 0x87e) = 0;\n  return extraout_ECX;\n}\n\n"
    },
    {
      "name": "FUN_0040157a",
      "entry": "0040157a",
      "c": "\nint __fastcall FUN_0040157a(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x1028) = 0;\n  *(undefined4 *)(param_1 + 0x102c) = 0;\n  *(undefined4 *)(param_1 + 0x1030) = 0;\n  *(undefined4 *)(param_1 + 0x1034) = 0;\n  *(undefined1 *)(param_1 + 0x1038) = 0;\n  *(undefined4 *)(param_1 + 0x1040) = 0;\n  *(undefined4 *)(param_1 + 0x1044) = 0;\n  *(undefined4 *)(param_1 + 0x1048) = 0;\n  *(undefined4 *)(param_1 + 0x104c) = 0;\n  *(undefined4 *)(param_1 + 0x1050) = 0;\n  *(undefined4 *)(param_1 + 0x1054) = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_004015c6",
      "entry": "004015c6",
      "c": "\nundefined4 * __thiscall FUN_004015c6(void *this,undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  \n  puVar2 = (undefined4 *)this;\n  for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n    *puVar2 = &DAT_004335f4;\n    puVar2 = puVar2 + 1;\n  }\n  _memset((void *)((int)this + 0x20),0,0x20);\n  *(undefined4 *)((int)this + 0x40) = 0;\n  *(undefined4 *)((int)this + 0x44) = 0;\n  *(undefined4 *)((int)this + 0x48) = param_1;\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_004015fb",
      "entry": "004015fb",
      "c": "\nvoid __fastcall FUN_004015fb(int *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &local_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &local_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2]);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401645",
      "entry": "00401645",
      "c": "\nvoid __fastcall FUN_00401645(int *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &local_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &local_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2] * 2);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401692",
      "entry": "00401692",
      "c": "\nvoid __fastcall FUN_00401692(int *param_1)\n\n{\n  void *pvVar1;\n  \n  *param_1 = (int)&PTR_FUN_004335f8;\n  if (((char)param_1[0x874] != '\\0') && (pvVar1 = (void *)param_1[0x875], pvVar1 != (void *)0x0)) {\n    FUN_0040b5f4(pvVar1);\n    FUN_0041eb68(pvVar1);\n  }\n  FUN_004015fb(param_1 + 0x1584);\n  FUN_004015fb(param_1 + 0xcb0);\n  FUN_0040cee1((int)(param_1 + 0x83e));\n  FUN_00405f02((undefined1 *)(param_1 + 0x40e));\n  FUN_0040959a(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004016f8",
      "entry": "004016f8",
      "c": "\nvoid __fastcall FUN_004016f8(int param_1)\n\n{\n  FUN_004015fb((int *)(param_1 + 0x1028));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401710",
      "entry": "00401710",
      "c": "\nint * __thiscall FUN_00401710(void *this,byte param_1)\n\n{\n  FUN_00401692((int *)this);\n  if ((param_1 & 1) != 0) {\n    FUN_0041eb68(this);\n  }\n  return (int *)this;\n}\n\n"
    },
    {
      "name": "FUN_00401732",
      "entry": "00401732",
      "c": "\nvoid __thiscall FUN_00401732(void *this,int param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  \n  uVar3 = param_1 + *(int *)((int)this + 4);\n  *(uint *)((int)this + 4) = uVar3;\n  if (*(uint *)((int)this + 8) < uVar3) {\n    if ((*(uint *)((int)this + 0xc) != 0) && (*(uint *)((int)this + 0xc) < uVar3)) {\n      FUN_00406c36(&DAT_00441098,L\"Maximum allowed array size (%u) is exceeded\");\n      FUN_00406ca7(&DAT_00441098);\n    }\n    uVar1 = (*(uint *)((int)this + 8) >> 2) + 0x20 + *(int *)((int)this + 8);\n    uVar3 = *(uint *)((int)this + 4);\n    if (*(uint *)((int)this + 4) <= uVar1) {\n      uVar3 = uVar1;\n    }\n    if (*(char *)((int)this + 0x10) == '\\0') {\n                    /* WARNING: Load size is inaccurate */\n      puVar2 = (uint *)FUN_00423e3e(*this,uVar3);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n    }\n    else {\n      puVar2 = (uint *)FUN_00423e33(uVar3);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n                    /* WARNING: Load size is inaccurate */\n      if (*this != 0) {\n                    /* WARNING: Load size is inaccurate */\n        FUN_00420320(puVar2,*this,*(uint *)((int)this + 8));\n                    /* WARNING: Load size is inaccurate */\n        FUN_0040f445(*this,*(int *)((int)this + 8));\n                    /* WARNING: Load size is inaccurate */\n        FID_conflict__free(*this);\n      }\n    }\n    *(uint **)this = puVar2;\n    *(uint *)((int)this + 8) = uVar3;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004017e9",
      "entry": "004017e9",
      "c": "\nvoid __thiscall FUN_004017e9(void *this,int param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  \n  uVar3 = param_1 + *(int *)((int)this + 4);\n  *(uint *)((int)this + 4) = uVar3;\n  if (*(uint *)((int)this + 8) < uVar3) {\n    if ((*(uint *)((int)this + 0xc) != 0) && (*(uint *)((int)this + 0xc) < uVar3)) {\n      FUN_00406c36(&DAT_00441098,L\"Maximum allowed array size (%u) is exceeded\");\n      FUN_00406ca7(&DAT_00441098);\n    }\n    uVar1 = (*(uint *)((int)this + 8) >> 2) + 0x20 + *(int *)((int)this + 8);\n    uVar3 = *(uint *)((int)this + 4);\n    if (*(uint *)((int)this + 4) <= uVar1) {\n      uVar3 = uVar1;\n    }\n    if (*(char *)((int)this + 0x10) == '\\0') {\n                    /* WARNING: Load size is inaccurate */\n      puVar2 = (uint *)FUN_00423e3e(*this,uVar3 * 2);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n    }\n    else {\n      puVar2 = (uint *)FUN_00423e33(uVar3 * 2);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n                    /* WARNING: Load size is inaccurate */\n      if (*this != 0) {\n                    /* WARNING: Load size is inaccurate */\n        FUN_00420320(puVar2,*this,*(int *)((int)this + 8) * 2);\n                    /* WARNING: Load size is inaccurate */\n        FUN_0040f445(*this,*(int *)((int)this + 8) * 2);\n                    /* WARNING: Load size is inaccurate */\n        FID_conflict__free(*this);\n      }\n    }\n    *(uint **)this = puVar2;\n    *(uint *)((int)this + 8) = uVar3;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004018a9",
      "entry": "004018a9",
      "c": "\nvoid __thiscall FUN_004018a9(void *this,uint param_1)\n\n{\n  if (*(uint *)((int)this + 8) < param_1) {\n    FUN_004017e9(this,param_1 - *(int *)((int)this + 4));\n  }\n  else {\n    *(uint *)((int)this + 4) = param_1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004018c3",
      "entry": "004018c3",
      "c": "\nvoid __fastcall FUN_004018c3(int param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = FUN_00401a04();\n  if ((char)uVar1 == '\\0') {\n    if (*(char *)(param_1 + 0x6cdd) == '\\0') {\n      FUN_0040138b(0x39,param_1 + 0x32);\n    }\n    thunk_FUN_00406e47(&DAT_00441098,(void *)0x2);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004018f6",
      "entry": "004018f6",
      "c": "\nbool __fastcall FUN_004018f6(int *param_1)\n\n{\n  bool bVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int unaff_ESI;\n  ulonglong uVar4;\n  \n  bVar1 = false;\n  iVar2 = *param_1;\n  if ((char)param_1[0x88f] == '\\0') {\n    uVar4 = FUN_004021cf(param_1);\n    (*(code *)PTR_guard_check_icall_00433278)(uVar4);\n    (**(code **)(iVar2 + 0x10))();\n    iVar2 = FUN_00403fa3(param_1,L\"CMT\");\n    if ((iVar2 != 0) && (uVar3 = FUN_00401e50(), (char)uVar3 != '\\0')) {\n      bVar1 = true;\n    }\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1[0x1b36] + 0x14,0,0);\n    (**(code **)(iVar2 + 0x10))();\n    iVar2 = FUN_00403b2d(param_1);\n    if ((iVar2 == 0) || (param_1[0x87d] != 0x75)) {\n      bVar1 = false;\n    }\n    else {\n      bVar1 = *(int *)(unaff_ESI + 4) != 0;\n    }\n  }\n  return bVar1;\n}\n\n"
    },
    {
      "name": "FUN_00401983",
      "entry": "00401983",
      "c": "\nint __thiscall FUN_00401983(void *this,int param_1)\n\n{\n  int iVar1;\n  \n  if (*(char *)((int)this + 0x6cd4) != '\\0') {\n    iVar1 = param_1 + (-param_1 & 0xfU);\n    if (*(int *)((int)this + 0x6cc8) == 3) {\n      param_1 = iVar1 + 0x10;\n    }\n    else {\n      param_1 = iVar1 + 8;\n    }\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_004019af",
      "entry": "004019af",
      "c": "\nbool __fastcall FUN_004019af(int *param_1)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  undefined8 uVar3;\n  \n  if (*(char *)((int)param_1 + 0x6cce) == '\\0') {\n    bVar2 = false;\n  }\n  else {\n    pcVar1 = *(code **)(*param_1 + 0x14);\n    (*(code *)PTR_guard_check_icall_00433278)();\n    uVar3 = (*pcVar1)();\n    bVar2 = FUN_004018f6(param_1);\n    pcVar1 = *(code **)(*param_1 + 0x10);\n    (*(code *)PTR_guard_check_icall_00433278)(uVar3,0);\n    (*pcVar1)();\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_00401a04",
      "entry": "00401a04",
      "c": "\nuint FUN_00401a04(void)\n\n{\n  char cVar1;\n  code *pcVar2;\n  int iVar3;\n  undefined1 uVar4;\n  uint uVar5;\n  int iVar6;\n  undefined4 uVar7;\n  int *extraout_ECX;\n  char *pcVar8;\n  int unaff_EBP;\n  int iVar9;\n  undefined8 uVar10;\n  \n  FUN_0041eb78();\n  *(undefined1 *)(extraout_ECX + 0x1b35) = 0;\n  pcVar2 = *(code **)(*extraout_ECX + 0xc);\n  *(undefined1 *)(extraout_ECX + 0x1b37) = 0;\n  (*(code *)PTR_guard_check_icall_00433278)(extraout_ECX + 0x884,7);\n  uVar5 = (*pcVar2)();\n  if (uVar5 == 7) {\n    extraout_ECX[0x1b36] = 0;\n    iVar6 = FUN_00401df8((char *)(extraout_ECX + 0x884),7);\n    if (iVar6 == 0) {\n      FUN_004013ba((void *)(unaff_EBP + -0x38),0x200000);\n      iVar6 = *extraout_ECX;\n      *(undefined4 *)(unaff_EBP + -4) = 0;\n      pcVar2 = *(code **)(iVar6 + 0x14);\n      (*(code *)PTR_guard_check_icall_00433278)();\n      uVar7 = (*pcVar2)();\n      iVar6 = *extraout_ECX;\n      *(undefined4 *)(unaff_EBP + -0x18) = uVar7;\n      (*(code *)PTR_guard_check_icall_00433278)\n                (*(undefined4 *)(unaff_EBP + -0x38),*(int *)(unaff_EBP + -0x34) + -0x10);\n      iVar6 = (**(code **)(iVar6 + 0xc))();\n      iVar9 = 0;\n      *(int *)(unaff_EBP + -0x14) = iVar6;\n      if (0 < iVar6) {\n        do {\n          pcVar8 = (char *)(*(int *)(unaff_EBP + -0x38) + iVar9);\n          if (*pcVar8 == 'R') {\n            iVar6 = FUN_00401df8(pcVar8,iVar6 - iVar9);\n            if (iVar6 != 0) {\n              iVar3 = *(int *)(unaff_EBP + -0x18);\n              extraout_ECX[0x1b32] = iVar6;\n              if (((((iVar6 != 1) || (iVar9 < 1)) || (0x1b < iVar3)) ||\n                  (*(int *)(unaff_EBP + -0x14) < 0x20)) ||\n                 (((iVar6 = *(int *)(unaff_EBP + -0x38) - iVar3, *(char *)(iVar6 + 0x1c) == 'R' &&\n                   (*(char *)(iVar6 + 0x1d) == 'S')) &&\n                  ((*(char *)(iVar6 + 0x1e) == 'F' && (*(char *)(iVar6 + 0x1f) == 'X')))))) {\n                extraout_ECX[0x1b36] = iVar3 + iVar9;\n                pcVar2 = *(code **)(*extraout_ECX + 0x10);\n                (*(code *)PTR_guard_check_icall_00433278)(iVar3 + iVar9,0,0);\n                (*pcVar2)();\n                if ((extraout_ECX[0x1b32] == 2) || (extraout_ECX[0x1b32] == 3)) {\n                  pcVar2 = *(code **)(*extraout_ECX + 0xc);\n                  (*(code *)PTR_guard_check_icall_00433278)(extraout_ECX + 0x884,7);\n                  (*pcVar2)();\n                }\n                break;\n              }\n            }\n            iVar6 = *(int *)(unaff_EBP + -0x14);\n          }\n          iVar9 = iVar9 + 1;\n        } while (iVar9 < iVar6);\n      }\n      if (extraout_ECX[0x1b36] == 0) {\n        uVar5 = FUN_004015fb((int *)(unaff_EBP + -0x38));\n        goto LAB_00401ba0;\n      }\n      *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n      FUN_004015fb((int *)(unaff_EBP + -0x38));\n    }\n    else {\n      extraout_ECX[0x1b32] = iVar6;\n      if (iVar6 == 1) {\n        iVar6 = *extraout_ECX;\n        pcVar2 = *(code **)(iVar6 + 0x14);\n        (*(code *)PTR_guard_check_icall_00433278)(0);\n        uVar10 = (*pcVar2)();\n        (*(code *)PTR_guard_check_icall_00433278)\n                  ((uint)uVar10 - 7,(int)((ulonglong)uVar10 >> 0x20) - (uint)((uint)uVar10 < 7));\n        (**(code **)(iVar6 + 0x10))();\n      }\n    }\n    iVar6 = 7;\n    if (extraout_ECX[0x1b32] == 4) {\n      uVar5 = FUN_0040138b(0x3c,(int)extraout_ECX + 0x32);\n    }\n    else {\n      if (extraout_ECX[0x1b32] == 3) {\n        pcVar2 = *(code **)(*extraout_ECX + 0xc);\n        (*(code *)PTR_guard_check_icall_00433278)((char *)((int)extraout_ECX + 0x2217),1);\n        uVar5 = (*pcVar2)();\n        if ((uVar5 != 1) || (*(char *)((int)extraout_ECX + 0x2217) != '\\0')) goto LAB_00401ba0;\n        iVar6 = 8;\n      }\n      extraout_ECX[0x886] = iVar6;\n      *(undefined1 *)(unaff_EBP + -0xd) = 0;\n      iVar6 = FUN_00403b2d(extraout_ECX);\n      *(bool *)(unaff_EBP + -0xe) = iVar6 != 0;\n      if (iVar6 != 0) {\n        *(undefined1 *)(unaff_EBP + -0xd) = 0;\n        do {\n          FUN_00401f47(extraout_ECX);\n          iVar6 = extraout_ECX[0x87d];\n          if ((iVar6 == 1) || (((char)extraout_ECX[0x87e] != '\\0' && (iVar6 == 4)))) {\n            uVar5 = CONCAT31((int3)((uint)iVar6 >> 8),1);\n            goto LAB_00401c5d;\n          }\n          iVar6 = FUN_00403b2d(extraout_ECX);\n          *(bool *)(unaff_EBP + -0xe) = iVar6 != 0;\n        } while (iVar6 != 0);\n      }\n      uVar5 = CONCAT31((int3)((uint)iVar6 >> 8),*(undefined1 *)(unaff_EBP + -0xd));\nLAB_00401c5d:\n      if ((*(char *)((int)extraout_ECX + 0x6cdd) == '\\0') || (*(char *)(unaff_EBP + 8) != '\\0')) {\n        if (((char)extraout_ECX[0x1b37] != '\\0') || ((char)uVar5 == '\\0')) {\n          if (*(char *)((int)extraout_ECX + 0x6cdd) == '\\0') {\n            uVar5 = FUN_0040138b(0x1b,(int)extraout_ECX + 0x32);\n          }\n          if (*(char *)(unaff_EBP + 8) == '\\0') goto LAB_00401ba0;\n        }\n        cVar1 = *(char *)(unaff_EBP + -0xe);\n        uVar7 = CONCAT31((int3)(uVar5 >> 8),(char)extraout_ECX[0x88f]);\n        *(char *)((int)extraout_ECX + 0x6cce) = (char)extraout_ECX[0x88f];\n        if ((cVar1 != '\\0') &&\n           ((((char)extraout_ECX[0x87e] == '\\0' || ((char)extraout_ECX[0x1b35] == '\\0')) &&\n            (extraout_ECX[4] != 1)))) {\n          pcVar2 = *(code **)(*extraout_ECX + 0x14);\n          (*(code *)PTR_guard_check_icall_00433278)();\n          uVar10 = (*pcVar2)();\n          *(int *)(unaff_EBP + -0x18) = extraout_ECX[0x1b2e];\n          *(int *)(unaff_EBP + -0x14) = extraout_ECX[0x1b2f];\n          *(int *)(unaff_EBP + -0x1c) = extraout_ECX[0x1b30];\n          *(int *)(unaff_EBP + -0x20) = extraout_ECX[0x1b31];\n          *(int *)(unaff_EBP + -0x24) = extraout_ECX[0x87d];\n          while (iVar6 = FUN_00403b2d(extraout_ECX), iVar6 != 0) {\n            iVar6 = extraout_ECX[0x87d];\n            if (iVar6 == 3) {\n              if ((*(char *)((int)extraout_ECX + 0x6ccd) == '\\0') ||\n                 ((char)extraout_ECX[0x15a0] != '\\0')) {\n                uVar4 = 0;\n              }\n              else {\n                uVar4 = 1;\n              }\n              *(undefined1 *)((int)extraout_ECX + 0x6cd1) = uVar4;\n            }\n            else {\n              if (iVar6 == 2) {\n                if ((*(char *)((int)extraout_ECX + 0x6ccd) == '\\0') ||\n                   ((char)extraout_ECX[0xccc] != '\\0')) {\n                  uVar4 = 0;\n                }\n                else {\n                  uVar4 = 1;\n                }\n                *(undefined1 *)((int)extraout_ECX + 0x6cd1) = uVar4;\n                break;\n              }\n              if (iVar6 == 5) break;\n            }\n            FUN_00401f47(extraout_ECX);\n          }\n          extraout_ECX[0x1b2e] = *(int *)(unaff_EBP + -0x18);\n          extraout_ECX[0x1b2f] = *(int *)(unaff_EBP + -0x14);\n          extraout_ECX[0x1b30] = *(int *)(unaff_EBP + -0x1c);\n          extraout_ECX[0x1b31] = *(int *)(unaff_EBP + -0x20);\n          extraout_ECX[0x87d] = *(int *)(unaff_EBP + -0x24);\n          pcVar2 = *(code **)(*extraout_ECX + 0x10);\n          (*(code *)PTR_guard_check_icall_00433278)(uVar10,0);\n          uVar7 = (*pcVar2)();\n        }\n        if ((*(char *)((int)extraout_ECX + 0x6ccd) == '\\0') ||\n           (*(char *)((int)extraout_ECX + 0x6cd1) != '\\0')) {\n          uVar7 = FUN_00410602((short *)((int)extraout_ECX + 0x6d12),(int)extraout_ECX + 0x32,0x800)\n          ;\n        }\n        uVar5 = CONCAT31((int3)((uint)uVar7 >> 8),1);\n        goto LAB_00401ba2;\n      }\n    }\n  }\nLAB_00401ba0:\n  uVar5 = uVar5 & 0xffffff00;\nLAB_00401ba2:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar5;\n}\n\n"
    },
    {
      "name": "FUN_00401df0",
      "entry": "00401df0",
      "c": "\nbool __fastcall FUN_00401df0(int param_1)\n\n{\n  return *(int *)(param_1 + 8) != -1;\n}\n\n"
    },
    {
      "name": "FUN_00401df8",
      "entry": "00401df8",
      "c": "\nundefined4 FUN_00401df8(char *param_1,uint param_2)\n\n{\n  char cVar1;\n  undefined4 uStack_4;\n  \n  uStack_4 = 0;\n  if (((((param_2 != 0) && (*param_1 == 'R')) && (6 < param_2)) &&\n      ((param_1[1] == 'a' && (param_1[2] == 'r')))) &&\n     ((param_1[3] == '!' && ((param_1[4] == '\\x1a' && (param_1[5] == '\\a')))))) {\n    cVar1 = param_1[6];\n    if (cVar1 == '\\0') {\n      uStack_4 = 2;\n    }\n    else if (cVar1 == '\\x01') {\n      uStack_4 = 3;\n    }\n    else if ((byte)(cVar1 - 2U) < 3) {\n      uStack_4 = 4;\n    }\n  }\n  return uStack_4;\n}\n\n"
    },
    {
      "name": "FUN_00401e50",
      "entry": "00401e50",
      "c": "\nundefined4 FUN_00401e50(void)\n\n{\n  int *this;\n  char cVar1;\n  size_t sVar2;\n  undefined1 *extraout_EAX;\n  undefined1 *_Memory;\n  undefined4 extraout_ECX;\n  undefined1 uVar3;\n  int unaff_EBP;\n  uint uVar4;\n  \n  FUN_0041eb78();\n  uVar3 = 0;\n  *(undefined4 *)(unaff_EBP + -0x10) = extraout_ECX;\n  *(undefined4 *)(unaff_EBP + -0x24) = 0;\n  *(undefined4 *)(unaff_EBP + -0x20) = 0;\n  *(undefined4 *)(unaff_EBP + -0x1c) = 0;\n  *(undefined4 *)(unaff_EBP + -0x18) = 0;\n  *(undefined1 *)(unaff_EBP + -0x14) = 0;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  cVar1 = FUN_00403bba();\n  if (cVar1 != '\\0') {\n    uVar4 = *(uint *)(unaff_EBP + -0x20);\n    FUN_00401732((void *)(unaff_EBP + -0x24),1);\n    this = *(int **)(unaff_EBP + 8);\n    *(undefined1 *)(*(int *)(unaff_EBP + -0x20) + -1 + *(int *)(unaff_EBP + -0x24)) = 0;\n    FUN_004018a9(this,uVar4 + 1);\n    if (*(int *)(*(int *)(unaff_EBP + -0x10) + 0x6cc8) == 3) {\n      FUN_00411c3b(*(byte **)(unaff_EBP + -0x24),(ushort *)*this,this[1]);\n    }\n    else if ((*(byte *)(*(int *)(unaff_EBP + -0x10) + 0x460c) & 1) == 0) {\n      FUN_00411b84(*(LPCSTR *)(unaff_EBP + -0x24),(LPWSTR)*this,this[1]);\n    }\n    else {\n      uVar4 = uVar4 >> 1;\n      FUN_00411bfd(*(byte **)(unaff_EBP + -0x24),*this,uVar4);\n      *(undefined2 *)(*this + uVar4 * 2) = 0;\n    }\n    sVar2 = _wcslen((wchar_t *)*this);\n    FUN_004018a9(this,sVar2);\n    uVar3 = 1;\n  }\n  _Memory = *(undefined1 **)(unaff_EBP + -0x24);\n  *(undefined4 *)(unaff_EBP + -4) = 2;\n  if (_Memory != (undefined1 *)0x0) {\n    if (*(char *)(unaff_EBP + -0x14) != '\\0') {\n      FUN_0040f445(_Memory,*(int *)(unaff_EBP + -0x1c));\n      _Memory = *(undefined1 **)(unaff_EBP + -0x24);\n    }\n    FID_conflict__free(_Memory);\n    _Memory = extraout_EAX;\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return CONCAT31((int3)((uint)_Memory >> 8),uVar3);\n}\n\n"
    },
    {
      "name": "FUN_00401f47",
      "entry": "00401f47",
      "c": "\nvoid __fastcall FUN_00401f47(int *param_1)\n\n{\n  code *pcVar1;\n  \n  pcVar1 = *(code **)(*param_1 + 0x10);\n  (*(code *)PTR_guard_check_icall_00433278)(param_1[0x1b30],param_1[0x1b31],0);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401f6d",
      "entry": "00401f6d",
      "c": "\nvoid FUN_00401f6d(void)\n\n{\n  int *extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  if (*(char *)(extraout_ECX[0x875] + 0x715a) == '\\0') {\n    *(undefined4 *)(unaff_EBP + -0x20) = 0;\n    *(undefined4 *)(unaff_EBP + -0x1c) = 0;\n    *(undefined4 *)(unaff_EBP + -0x18) = 0;\n    *(undefined4 *)(unaff_EBP + -0x14) = 0;\n    *(undefined1 *)(unaff_EBP + -0x10) = 0;\n    *(undefined4 *)(unaff_EBP + -4) = 0;\n    FUN_004019af(extraout_ECX);\n    *(undefined4 *)(unaff_EBP + -4) = 1;\n    if (*(int *)(unaff_EBP + -0x20) != 0) {\n      if (*(char *)(unaff_EBP + -0x10) != '\\0') {\n        FUN_0040f445(*(undefined1 **)(unaff_EBP + -0x20),*(int *)(unaff_EBP + -0x18) * 2);\n      }\n      FID_conflict__free(*(void **)(unaff_EBP + -0x20));\n    }\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00401fdc",
      "entry": "00401fdc",
      "c": "\nbool __thiscall FUN_00401fdc(void *this,undefined4 param_1)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  undefined4 uVar3;\n  \n  bVar2 = FUN_00409f42(this,param_1);\n  if (bVar2) {\n    uVar3 = FUN_00401a04();\n    if ((char)uVar3 == '\\0') {\n      FUN_0040138b(0x39,(int)this + 0x32);\n                    /* WARNING: Load size is inaccurate */\n      pcVar1 = *(code **)(*this + 8);\n      (*(code *)PTR_guard_check_icall_00433278)();\n      (*pcVar1)();\n      bVar2 = false;\n    }\n    else {\n      bVar2 = true;\n    }\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_00402021",
      "entry": "00402021",
      "c": "\nvoid FUN_00402021(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  uint uVar1;\n  undefined4 local_50 [16];\n  uint local_10;\n  \n  FUN_004015c6(local_50,param_1);\n  uVar1 = local_10;\n  if (local_10 < 8) {\n    local_50[local_10] = param_2;\n    uVar1 = local_10 + 1;\n    if (uVar1 < 8) {\n      local_50[uVar1] = param_3;\n      uVar1 = local_10 + 2;\n    }\n  }\n  local_10 = uVar1;\n  FUN_004115fe(local_50);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00402063",
      "entry": "00402063",
      "c": "\nvoid FUN_00402063(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  uint uVar1;\n  undefined4 local_50 [16];\n  uint local_10;\n  \n  FUN_004015c6(local_50,param_1);\n  uVar1 = local_10;\n  if (local_10 < 8) {\n    local_50[local_10] = param_2;\n    uVar1 = local_10 + 1;\n    if (uVar1 < 8) {\n      local_50[uVar1] = param_3;\n      uVar1 = local_10 + 2;\n      if (uVar1 < 8) {\n        local_50[uVar1] = param_4;\n        uVar1 = local_10 + 3;\n      }\n    }\n  }\n  local_10 = uVar1;\n  FUN_004115fe(local_50);\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_004015fb",
      "entry": "004020b8",
      "c": "\nvoid __fastcall thunk_FUN_004015fb(int *param_1)\n\n{\n  void *pvStack_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  pvStack_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &pvStack_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &pvStack_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2]);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = pvStack_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004020bd",
      "entry": "004020bd",
      "c": "\nvoid __thiscall FUN_004020bd(void *this,uint param_1)\n\n{\n  if (*(uint *)((int)this + 8) < param_1) {\n    FUN_00401732(this,param_1 - *(int *)((int)this + 4));\n  }\n  else {\n    *(uint *)((int)this + 4) = param_1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004020d7",
      "entry": "004020d7",
      "c": "\nvoid __fastcall FUN_004020d7(int param_1)\n\n{\n  FUN_0040138b(0x1a,param_1 + 0x32);\n  *(undefined1 *)(param_1 + 0x6cdc) = 1;\n  FUN_00406d83(&DAT_00441098,3);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004020fa",
      "entry": "004020fa",
      "c": "\nundefined4 __thiscall FUN_004020fa(void *this,wchar_t *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = _wcscmp((wchar_t *)((int)this + 0x28),param_1);\n  return CONCAT31((int3)((uint)-iVar1 >> 8),'\\x01' - (iVar1 != 0));\n}\n\n"
    },
    {
      "name": "FUN_00402112",
      "entry": "00402112",
      "c": "\nvoid __fastcall FUN_00402112(int param_1)\n\n{\n  if (*(int *)(param_1 + 0x3394) != 0) {\n    *(uint *)(param_1 + 0x22bc) = ((*(char *)(param_1 + 0x3389) == '\\0') - 1 & 0xfffffff0) + 0x20;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00402134",
      "entry": "00402134",
      "c": "\nvoid __thiscall FUN_00402134(void *this,int param_1)\n\n{\n  short sVar1;\n  short *psVar2;\n  \n  if (*(int *)(param_1 + 0x10fc) == 2) {\n    *(uint *)(param_1 + 0x24) = ((*(char *)(param_1 + 0x10f1) == '\\0') - 1 & 0xfffffff0) + 0x20;\n  }\n  else if (*(int *)(param_1 + 0x10fc) == 1) {\n    FUN_0040b8db((LPCWSTR)(param_1 + 0x28),0x800);\n  }\n  psVar2 = (short *)(param_1 + 0x28);\n  sVar1 = *psVar2;\n  do {\n    if (sVar1 == 0) {\n      return;\n    }\n    if (sVar1 == 0x5c) {\n      if (*(int *)((int)this + 0x6cc8) == 3) {\nLAB_0040219c:\n        *psVar2 = 0x5f;\n      }\n      else {\nLAB_004021b0:\n        if (*(int *)((int)this + 0x6cc8) != 3) {\nLAB_004021b9:\n          *psVar2 = 0x5c;\n        }\n      }\n    }\n    else {\n      if (sVar1 == 0x3a) goto LAB_0040219c;\n      if (sVar1 == 0x2f) goto LAB_004021b9;\n      if (sVar1 == 0x5c) goto LAB_004021b0;\n    }\n    psVar2 = psVar2 + 1;\n    sVar1 = *psVar2;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_004021cf",
      "entry": "004021cf",
      "c": "\nulonglong __fastcall FUN_004021cf(void *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = *(int *)((int)param_1 + 0x6cd8) + *(int *)((int)param_1 + 0x2218);\n  uVar2 = *(uint *)((int)param_1 + 0x222c);\n  if (*(int *)((int)param_1 + 0x6cc8) != 2) {\n    iVar1 = FUN_00401983(param_1,uVar2);\n    uVar2 = *(int *)((int)param_1 + 0x226c) + iVar1;\n  }\n  return (ulonglong)CONCAT14(CARRY4(uVar2,uVar3),uVar2 + uVar3);\n}\n\n"
    },
    {
      "name": "FUN_00402209",
      "entry": "00402209",
      "c": "\nundefined1 __fastcall FUN_00402209(int param_1)\n\n{\n  return *(undefined1 *)(param_1 + 0x3389);\n}\n\n"
    },
    {
      "name": "FUN_00402210",
      "entry": "00402210",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid __thiscall FUN_00402210(void *this,int *param_1,uint param_2,int param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  longlong lVar6;\n  ulonglong uVar7;\n  longlong lVar8;\n  undefined8 uVar9;\n  uint *puVar10;\n  uint local_2094;\n  wchar_t local_2090 [20];\n  uint local_2068 [26];\n  uint local_2000 [2047];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x40221a;\n  if (((uint)param_1[7] <= param_1[6] - param_2) && (param_1[7] = param_1[6] - param_2, 1 < param_2)\n     ) {\n    while( true ) {\n      lVar6 = FUN_0040ccfb(param_1);\n      iVar4 = (int)((ulonglong)lVar6 >> 0x20);\n      uVar5 = (uint)lVar6;\n      if ((lVar6 < 0) || ((iVar4 == 0 || lVar6 < 0 && (uVar5 == 0)))) break;\n      iVar1 = param_1[7];\n      if (param_1[6] == iVar1) {\n        return;\n      }\n      if (iVar4 != 0 && -1 < lVar6) {\n        return;\n      }\n      if ((-1 < lVar6) && ((uint)(param_1[6] - iVar1) < uVar5)) {\n        return;\n      }\n      iVar1 = iVar1 + uVar5;\n      lVar6 = FUN_0040ccfb(param_1);\n      uVar3 = (uint)lVar6;\n      uVar5 = iVar1 - param_1[7];\n      if ((*(int *)(param_3 + 4) == 1) && (lVar6 == 1)) {\n        *(undefined1 *)(param_3 + 0x1e) = 1;\n        uVar7 = FUN_0040ccfb(param_1);\n        if ((uVar7 & 1) != 0) {\n          lVar8 = FUN_0040ccfb(param_1);\n          if (lVar8 != 0) {\n            uVar2 = *(uint *)((int)this + 0x6cb8);\n            iVar4 = *(int *)((int)this + 0x6cbc);\n            *(uint *)(param_3 + 0x20) = (uint)lVar8 + *(uint *)((int)this + 0x6cb8);\n            *(uint *)(param_3 + 0x24) =\n                 iVar4 + (int)((ulonglong)lVar8 >> 0x20) + (uint)CARRY4((uint)lVar8,uVar2);\n          }\n        }\n        if ((uVar7 & 2) != 0) {\n          lVar8 = FUN_0040ccfb(param_1);\n          if (lVar8 != 0) {\n            uVar2 = *(uint *)((int)this + 0x6cb8);\n            iVar4 = *(int *)((int)this + 0x6cbc);\n            *(uint *)(param_3 + 0x30) = (uint)lVar8 + *(uint *)((int)this + 0x6cb8);\n            *(uint *)(param_3 + 0x34) =\n                 iVar4 + (int)((ulonglong)lVar8 >> 0x20) + (uint)CARRY4((uint)lVar8,uVar2);\n          }\n        }\n      }\n      if ((((*(int *)(param_3 + 4) == 2) || (*(int *)(param_3 + 4) == 3)) &&\n          ((int)((ulonglong)lVar6 >> 0x20) == 0)) && (uVar3 < 8)) {\n        if (uVar3 == 1) {\n          lVar6 = FUN_0040ccfb(param_1);\n          if ((int)lVar6 == 0) {\n            lVar6 = FUN_0040ccfb(param_1);\n            *(byte *)(param_3 + 0x10c1) = (byte)lVar6 & 1;\n            *(byte *)(param_3 + 0x10ca) = (byte)((uint)lVar6 >> 1) & 1;\n            uVar5 = FUN_0040cbaf(param_1);\n            *(uint *)(param_3 + 0x10ec) = uVar5 & 0xff;\n            if (0x18 < (uVar5 & 0xff)) {\n              FUN_00404092(local_2090,0x14,L\"xc%u\");\n              FUN_0040403d(this,param_3 + 0x28,local_2090);\n            }\n            FUN_0040cc5d(param_1,(uint *)(param_3 + 0x10a1),0x10);\n            FUN_0040cc5d(param_1,(uint *)(param_3 + 0x10b1),0x10);\n            if (*(char *)(param_3 + 0x10c1) != '\\0') {\n              puVar10 = (uint *)(param_3 + 0x10c2);\n              FUN_0040cc5d(param_1,puVar10,8);\n              FUN_0040cc5d(param_1,&local_2094,4);\n              FUN_00410016(local_2068);\n              FUN_0041005c(local_2068,puVar10,8);\n              FUN_0040ff33(local_2068,(ulong *)local_2090);\n              iVar4 = FUN_00420c4a(&local_2094,(uint *)local_2090,4);\n              *(char *)(param_3 + 0x10c1) = '\\x01' - (iVar4 != 0);\n              if ((*(int *)(param_3 + 4) == 3) &&\n                 (iVar4 = FUN_00420c4a(puVar10,(uint *)&DAT_004336a8,8), iVar4 == 0)) {\n                *(undefined1 *)(param_3 + 0x10c1) = 0;\n              }\n            }\n            *(undefined1 *)(param_3 + 0x10a0) = 1;\n            *(undefined4 *)(param_3 + 0x109c) = 5;\n            *(undefined1 *)(param_3 + 0x109b) = 1;\n          }\n          else {\n            FUN_00404092(local_2090,0x14,L\"x%u\");\n            FUN_0040403d(this,param_3 + 0x28,local_2090);\n          }\n        }\n        else if (uVar3 == 2) {\n          lVar6 = FUN_0040ccfb(param_1);\n          if ((int)lVar6 == 0) {\n            puVar10 = (uint *)(param_3 + 0x1074);\n            *(undefined4 *)(param_3 + 0x1070) = 3;\n            uVar5 = 0x20;\nLAB_004023ad:\n            FUN_0040cc5d(param_1,puVar10,uVar5);\n          }\n        }\n        else if (uVar3 == 3) {\n          if (4 < uVar5) {\n            uVar7 = FUN_0040ccfb(param_1);\n            if ((uVar7 & 2) != 0) {\n              if ((uVar7 & 1) == 0) {\n                uVar9 = FUN_0040cc3d(param_1);\n                FUN_004115bb((void *)(param_3 + 0x1040),(uint)uVar9,(int)((ulonglong)uVar9 >> 0x20))\n                ;\n              }\n              else {\n                uVar5 = FUN_0040cbfb(param_1);\n                FUN_0041158f((void *)(param_3 + 0x1040),uVar5,0);\n              }\n            }\n            if ((uVar7 & 4) != 0) {\n              if ((uVar7 & 1) == 0) {\n                uVar9 = FUN_0040cc3d(param_1);\n                FUN_004115bb((void *)(param_3 + 0x1048),(uint)uVar9,(int)((ulonglong)uVar9 >> 0x20))\n                ;\n              }\n              else {\n                uVar5 = FUN_0040cbfb(param_1);\n                FUN_0041158f((void *)(param_3 + 0x1048),uVar5,0);\n              }\n            }\n            if ((uVar7 & 8) == 0) {\n              if ((uVar7 & 1) != 0) goto LAB_00402639;\n            }\n            else if ((uVar7 & 1) == 0) {\n              uVar9 = FUN_0040cc3d(param_1);\n              FUN_004115bb((void *)(param_3 + 0x1050),(uint)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n            }\n            else {\n              uVar5 = FUN_0040cbfb(param_1);\n              FUN_0041158f((void *)(param_3 + 0x1050),uVar5,0);\nLAB_00402639:\n              if ((uVar7 & 0x10) != 0) {\n                if (((uVar7 & 2) != 0) &&\n                   (uVar5 = FUN_0040cbfb(param_1), (uVar5 & 0x3fffffff) < 1000000000)) {\n                  FUN_00411208((void *)(param_3 + 0x1040),uVar5 & 0x3fffffff,0);\n                }\n                if (((uVar7 & 4) != 0) &&\n                   (uVar5 = FUN_0040cbfb(param_1), (uVar5 & 0x3fffffff) < 1000000000)) {\n                  FUN_00411208((void *)(param_3 + 0x1048),uVar5 & 0x3fffffff,0);\n                }\n                if (((uVar7 & 8) != 0) &&\n                   (uVar5 = FUN_0040cbfb(param_1), (uVar5 & 0x3fffffff) < 1000000000)) {\n                  FUN_00411208((void *)(param_3 + 0x1050),uVar5 & 0x3fffffff,0);\n                }\n              }\n            }\n          }\n        }\n        else if (uVar3 == 4) {\n          if (uVar5 != 0) {\n            FUN_0040ccfb(param_1);\n            lVar6 = FUN_0040ccfb(param_1);\n            if ((int)lVar6 != 0) {\n              *(undefined1 *)(param_3 + 0x10f3) = 1;\n              FUN_00404092(local_2090,0x14,L\";%u\");\n              FUN_004105da((wchar_t *)(param_3 + 0x28),(int)local_2090,0x800);\n            }\n          }\n        }\n        else if (uVar3 == 5) {\n          lVar6 = FUN_0040ccfb(param_1);\n          *(int *)(param_3 + 0x1100) = (int)lVar6;\n          lVar6 = FUN_0040ccfb(param_1);\n          *(byte *)(param_3 + 0x2104) = (byte)lVar6 & 1;\n          lVar6 = FUN_0040ccfb(param_1);\n          uVar5 = (uint)lVar6;\n          local_2000[0]._0_1_ = 0;\n          if (uVar5 < 0x1fff) {\n            FUN_0040cc5d(param_1,local_2000,uVar5);\n            *(undefined1 *)((int)local_2000 + uVar5) = 0;\n          }\n          FUN_0040c335((int)local_2000,(char *)local_2000,0x2000);\n          FUN_00411c3b((byte *)local_2000,(ushort *)(param_3 + 0x1104),0x800);\n        }\n        else if (uVar3 == 6) {\n          uVar7 = FUN_0040ccfb(param_1);\n          *(byte *)(param_3 + 0x2106) = (byte)((uint)uVar7 >> 2) & 1;\n          *(byte *)(param_3 + 0x2107) = (byte)((uint)uVar7 >> 3) & 1;\n          *(undefined1 *)(param_3 + 0x2208) = 0;\n          *(undefined1 *)(param_3 + 0x2108) = 0;\n          if ((uVar7 & 1) != 0) {\n            lVar6 = FUN_0040ccfb(param_1);\n            uVar5 = (uint)lVar6;\n            if (0xfe < uVar5) {\n              uVar5 = 0xff;\n            }\n            FUN_0040cc5d(param_1,(uint *)(param_3 + 0x2108),uVar5);\n            *(undefined1 *)(uVar5 + 0x2108 + param_3) = 0;\n          }\n          if ((uVar7 & 2) != 0) {\n            lVar6 = FUN_0040ccfb(param_1);\n            uVar5 = (uint)lVar6;\n            if (0xfe < uVar5) {\n              uVar5 = 0xff;\n            }\n            FUN_0040cc5d(param_1,(uint *)(param_3 + 0x2208),uVar5);\n            *(undefined1 *)(uVar5 + 0x2208 + param_3) = 0;\n          }\n          if (*(char *)(param_3 + 0x2106) != '\\0') {\n            lVar6 = FUN_0040ccfb(param_1);\n            *(int *)(param_3 + 0x2308) = (int)lVar6;\n          }\n          if (*(char *)(param_3 + 0x2107) != '\\0') {\n            lVar6 = FUN_0040ccfb(param_1);\n            *(int *)(param_3 + 0x230c) = (int)lVar6;\n          }\n          *(undefined1 *)(param_3 + 0x2105) = 1;\n        }\n        else if (uVar3 == 7) {\n          if ((*(int *)(param_3 + 4) == 3) && (param_1[6] - iVar1 == 1)) {\n            uVar5 = uVar5 + 1;\n          }\n          FUN_004020bd((undefined4 *)(param_3 + 0x1028),uVar5);\n          puVar10 = *(uint **)(param_3 + 0x1028);\n          goto LAB_004023ad;\n        }\n      }\n      param_1[7] = iVar1;\n      if ((uint)(param_1[6] - iVar1) < 2) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040286b",
      "entry": "0040286b",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nint FUN_0040286b(void)\n\n{\n  char cVar1;\n  byte bVar2;\n  byte bVar3;\n  byte bVar4;\n  code *pcVar5;\n  void *this;\n  undefined1 uVar6;\n  byte bVar7;\n  ushort uVar8;\n  short sVar9;\n  int iVar10;\n  uint uVar11;\n  int iVar12;\n  size_t sVar13;\n  int *this_00;\n  uint uVar14;\n  LPWSTR pWVar15;\n  undefined4 extraout_ECX;\n  undefined4 extraout_ECX_00;\n  int *piVar16;\n  int *unaff_EBP;\n  uint uVar17;\n  uint *puVar18;\n  int *piVar19;\n  int *piVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  undefined8 uVar23;\n  uint uVar24;\n  \n  FUN_0041eb78();\n  unaff_EBP[5] = (int)this_00;\n  FUN_0040cb83(unaff_EBP + 7,this_00);\n  unaff_EBP[4] = 0;\n  unaff_EBP[-1] = 0;\n  if ((char)this_00[0x1b35] == '\\0') {\nLAB_00402923:\n    *(undefined1 *)((int)unaff_EBP + 0x5a) = 0;\nLAB_00402926:\n    FUN_0040cd8a(unaff_EBP + 7,7);\n    if (unaff_EBP[0xd] != 0) {\n      uVar8 = FUN_0040cbc6(unaff_EBP + 7);\n      this_00[0x87f] = (uint)uVar8;\n      *(undefined1 *)(this_00 + 0x883) = 0;\n      uVar11 = FUN_0040cbaf(unaff_EBP + 7);\n      uVar11 = uVar11 & 0xff;\n      uVar8 = FUN_0040cbc6(unaff_EBP + 7);\n      this_00[0x881] = (uint)uVar8;\n      *(byte *)(this_00 + 0x883) = (byte)(uVar8 >> 0xe) & 1;\n      uVar8 = FUN_0040cbc6(unaff_EBP + 7);\n      uVar14 = (uint)uVar8;\n      this_00[0x882] = uVar14;\n      this_00[0x880] = uVar11;\n      if (uVar14 < 7) {\n        FUN_004020d7((int)this_00);\n        goto LAB_004032da;\n      }\n      uVar24 = 2;\n      if (uVar11 == 0x73) {\n        this_00[0x880] = 1;\n        uVar24 = 1;\n      }\n      else if (uVar11 == 0x74) {\n        this_00[0x880] = 2;\n      }\n      else {\n        if (uVar11 == 0x7a) {\n          uVar24 = 3;\n        }\n        else {\n          uVar24 = uVar11;\n          if (uVar11 != 0x7b) goto LAB_004029dc;\n          uVar24 = 5;\n        }\n        this_00[0x880] = uVar24;\n      }\nLAB_004029dc:\n      this_00[0x87d] = uVar24;\n      if ((uVar24 == 0x75) || ((uVar24 == 1 && ((*(byte *)(this_00 + 0x881) & 2) != 0)))) {\n        uVar14 = 6;\n      }\n      else {\n        uVar14 = uVar14 - 7;\n      }\n      FUN_0040cd8a(unaff_EBP + 7,uVar14);\n      uVar14 = FUN_00401983(this_00,this_00[0x882]);\n      this_00[0x1b30] = uVar14 + this_00[0x1b2e];\n      this_00[0x1b31] = this_00[0x1b2f] + (uint)CARRY4(uVar14,this_00[0x1b2e]);\n      iVar10 = this_00[0x880];\n      unaff_EBP[6] = iVar10;\n      piVar16 = this_00;\n      if (iVar10 == 1) {\n        FUN_0040ad5e((int)(this_00 + 0x888));\n        piVar20 = this_00 + 0x87f;\n        piVar19 = this_00 + 0x888;\n        for (iVar10 = 5; iVar10 != 0; iVar10 = iVar10 + -1) {\n          *piVar19 = *piVar20;\n          piVar20 = piVar20 + 1;\n          piVar19 = piVar19 + 1;\n        }\n        sVar9 = FUN_0040cbc6(unaff_EBP + 7);\n        *(short *)(this_00 + 0x88d) = sVar9;\n        iVar10 = FUN_0040cbfb(unaff_EBP + 7);\n        this_00[0x88e] = iVar10;\n        *(byte *)((int)this_00 + 0x6ccd) = *(byte *)(this_00 + 0x88a) & 1;\n        *(byte *)(this_00 + 0x1b33) = (byte)((uint)this_00[0x88a] >> 3) & 1;\n        uVar14 = this_00[0x88a];\n        *(byte *)((int)this_00 + 0x6ccf) = (byte)(uVar14 >> 2) & 1;\n        *(byte *)((int)this_00 + 0x6cd3) = (byte)(uVar14 >> 6) & 1;\n        *(byte *)(this_00 + 0x1b35) = (byte)(uVar14 >> 7) & 1;\n        if ((iVar10 != 0) || (uVar6 = 0, (short)this_00[0x88d] != 0)) {\n          uVar6 = 1;\n        }\n        *(undefined1 *)(this_00 + 0x1b34) = uVar6;\n        *(byte *)(this_00 + 0x88f) = (byte)(uVar14 >> 1) & 1;\n        *(byte *)((int)this_00 + 0x6cd1) = (byte)(uVar14 >> 8) & 1;\n        *(byte *)((int)this_00 + 0x6cd2) = (byte)(uVar14 >> 4) & 1;\n      }\n      else if ((iVar10 == 2) || (iVar10 == 3)) {\n        piVar20 = (int *)(((iVar10 == 2) - 1 & 0x2350) + 0x2298 + (int)this_00);\n        unaff_EBP[0x13] = (int)piVar20;\n        FUN_0040acc4(piVar20,0);\n        piVar16 = this_00 + 0x87f;\n        for (iVar10 = 5; iVar10 != 0; iVar10 = iVar10 + -1) {\n          *piVar20 = *piVar16;\n          piVar16 = piVar16 + 1;\n          piVar20 = piVar20 + 1;\n        }\n        puVar18 = (uint *)unaff_EBP[0x13];\n        iVar10 = unaff_EBP[6];\n        uVar14 = puVar18[2];\n        *(byte *)(puVar18 + 0x426) = (byte)puVar18[2] & 1;\n        *(byte *)((int)puVar18 + 0x1099) = (byte)(uVar14 >> 1) & 1;\n        *(byte *)((int)puVar18 + 0x109b) = (byte)(uVar14 >> 2) & 1;\n        *(byte *)(puVar18 + 0x428) = (byte)(uVar14 >> 10) & 1;\n        if ((iVar10 == 2) && ((uVar14 & 0x10) != 0)) {\n          *(undefined1 *)((int)unaff_EBP + 0x5b) = 1;\n        }\n        else {\n          *(undefined1 *)((int)unaff_EBP + 0x5b) = 0;\n        }\n        *(undefined1 *)(puVar18 + 0x43c) = *(undefined1 *)((int)unaff_EBP + 0x5b);\n        piVar16 = (int *)unaff_EBP[5];\n        if ((iVar10 == 2) || (uVar6 = 1, (uVar14 & 0x10) == 0)) {\n          uVar6 = 0;\n        }\n        *(undefined1 *)((int)puVar18 + 0x10fa) = uVar6;\n        *(bool *)((int)puVar18 + 0x10f1) = (uVar14 & 0xe0) == 0xe0;\n        if ((uVar14 & 0xe0) == 0xe0) {\n          uVar11 = 0;\n          uVar14 = puVar18[2];\n        }\n        else {\n          uVar14 = puVar18[2];\n          uVar11 = 0x10000 << ((byte)(uVar14 >> 5) & 7);\n        }\n        puVar18[0x43d] = uVar11;\n        *(byte *)((int)puVar18 + 0x10f3) = (byte)(uVar14 >> 0xb) & 1;\n        *(byte *)((int)puVar18 + 0x10f2) = (byte)(uVar14 >> 3) & 1;\n        uVar14 = FUN_0040cbfb(unaff_EBP + 7);\n        puVar18[5] = uVar14;\n        iVar12 = FUN_0040cbfb(unaff_EBP + 7);\n        unaff_EBP[0x15] = iVar12;\n        uVar14 = FUN_0040cbaf(unaff_EBP + 7);\n        *(char *)(puVar18 + 6) = (char)uVar14;\n        puVar18[0x41c] = 2;\n        uVar14 = FUN_0040cbfb(unaff_EBP + 7);\n        puVar18[0x41d] = uVar14;\n        iVar12 = FUN_0040cbfb(unaff_EBP + 7);\n        unaff_EBP[0x11] = iVar12;\n        uVar14 = FUN_0040cbaf(unaff_EBP + 7);\n        puVar18[7] = uVar14 & 0xff;\n        uVar14 = FUN_0040cbaf(unaff_EBP + 7);\n        *(char *)(puVar18 + 8) = (char)uVar14 + -0x30;\n        uVar8 = FUN_0040cbc6(unaff_EBP + 7);\n        unaff_EBP[0x14] = (uint)uVar8;\n        uVar11 = FUN_0040cbfb(unaff_EBP + 7);\n        uVar14 = puVar18[7];\n        unaff_EBP[0x12] = uVar11;\n        puVar18[9] = uVar11;\n        if ((uVar14 < 0x14) && ((uVar11 & 0x10) != 0)) {\n          *(undefined1 *)((int)puVar18 + 0x10f1) = 1;\n        }\n        puVar18[0x427] = 0;\n        if (*(char *)((int)puVar18 + 0x109b) != '\\0') {\n          if (uVar14 == 0xd) {\n            puVar18[0x427] = 1;\n          }\n          else if (uVar14 == 0xf) {\n            puVar18[0x427] = 2;\n          }\n          else if ((uVar14 == 0x14) || (uVar14 == 0x1a)) {\n            puVar18[0x427] = 3;\n          }\n          else {\n            puVar18[0x427] = 4;\n          }\n        }\n        bVar7 = (byte)puVar18[6];\n        puVar18[0x43f] = 2;\n        if ((bVar7 == 3) || (bVar7 == 5)) {\n          puVar18[0x43f] = 1;\n        }\n        else if (bVar7 < 6) {\n          puVar18[0x43f] = 0;\n        }\n        puVar18[0x440] = 0;\n        if ((bVar7 == 3) && ((unaff_EBP[0x12] & 0xf000U) == 0xa000)) {\n          puVar18[0x440] = 1;\n          *(undefined2 *)(puVar18 + 0x441) = 0;\n        }\n        if ((iVar10 == 2) || (uVar6 = 1, -1 < (int)puVar18[9])) {\n          uVar6 = 0;\n        }\n        *(undefined1 *)(puVar18 + 0x43e) = uVar6;\n        *(byte *)((int)puVar18 + 0x10f9) = (byte)(puVar18[2] >> 8) & 1;\n        if ((puVar18[2] & 0x100) == 0) {\n          bVar21 = unaff_EBP[0x15] == -1;\n          uVar11 = 0;\n          uVar14 = 0;\n        }\n        else {\n          uVar14 = FUN_0040cbfb(unaff_EBP + 7);\n          uVar11 = FUN_0040cbfb(unaff_EBP + 7);\n          if ((unaff_EBP[0x15] == -1) && (uVar11 == 0xffffffff)) {\n            bVar21 = true;\n          }\n          else {\n            bVar21 = false;\n          }\n        }\n        *(bool *)((int)puVar18 + 0x109a) = bVar21;\n        *(bool *)((int)unaff_EBP + 0x5b) = bVar21;\n        puVar18[0x416] = puVar18[5];\n        uVar24 = unaff_EBP[0x15];\n        puVar18[0x417] = uVar14;\n        puVar18[0x418] = uVar24;\n        cVar1 = *(char *)((int)unaff_EBP + 0x5b);\n        puVar18[0x419] = uVar11;\n        if (cVar1 != '\\0') {\n          puVar18[0x418] = 0x7fffffff;\n          puVar18[0x419] = 0x7fffffff;\n        }\n        uVar14 = 0x1fff;\n        if ((uint)unaff_EBP[0x14] < 0x1fff) {\n          uVar14 = unaff_EBP[0x14];\n        }\n        FUN_0040cc5d(unaff_EBP + 7,(uint *)(unaff_EBP + -0x80c),uVar14);\n        iVar10 = unaff_EBP[6];\n        *(undefined1 *)((int)unaff_EBP + (uVar14 - 0x2030)) = 0;\n        pWVar15 = (LPWSTR)(((iVar10 == 2) - 1 & 0x2350) + 0x22c0 + (int)piVar16);\n        unaff_EBP[0x15] = (int)pWVar15;\n        if (unaff_EBP[6] == 2) {\n          *pWVar15 = L'\\0';\n          if ((puVar18[2] & 0x200) != 0) {\n            FUN_00406976((undefined1 *)unaff_EBP);\n            sVar13 = _strlen((char *)(unaff_EBP + -0x80c));\n            uVar11 = sVar13 + 1;\n            if (uVar11 < uVar14) {\n              FUN_00406986(unaff_EBP,(int)(unaff_EBP + -0x80c),uVar14,\n                           (byte *)(uVar11 + (int)(unaff_EBP + -0x80c)),uVar14 - uVar11,\n                           unaff_EBP[0x15],0x800);\n            }\n            pWVar15 = (LPWSTR)unaff_EBP[0x15];\n          }\n          if (*pWVar15 == L'\\0') {\n            FUN_004102ba();\n          }\n          FUN_00402134(piVar16,(int)puVar18);\n        }\n        else {\n          FUN_00411b84((LPCSTR)(unaff_EBP + -0x80c),pWVar15,0x800);\n          uVar14 = (puVar18[3] - unaff_EBP[0x14]) - 0x20;\n          if ((puVar18[2] & 0x400) != 0) {\n            uVar14 = (puVar18[3] - unaff_EBP[0x14]) - 0x28;\n          }\n          if (0 < (int)uVar14) {\n            FUN_004020bd(puVar18 + 0x40a,uVar14);\n            FUN_0040cc5d(unaff_EBP + 7,(uint *)puVar18[0x40a],uVar14);\n            iVar10 = _wcscmp((wchar_t *)unaff_EBP[0x15],L\"RR\");\n            if ((iVar10 == 0) && (0x13 < puVar18[0x40b])) {\n              uVar14 = puVar18[0x40a];\n              bVar7 = *(byte *)(uVar14 + 0xb);\n              bVar2 = *(byte *)(uVar14 + 10);\n              bVar3 = *(byte *)(uVar14 + 9);\n              uVar11 = (uint)*(ushort *)(uVar14 + 10) * 0x100;\n              uVar24 = uVar11 + bVar3;\n              bVar4 = *(byte *)(uVar14 + 8);\n              uVar14 = uVar24 * 0x100;\n              uVar17 = uVar14 + bVar4;\n              piVar16[0x876] = uVar17 * 0x200;\n              pcVar5 = *(code **)(*piVar16 + 0x14);\n              piVar16[0x877] =\n                   ((((uint)CARRY4((uint)bVar7 << 8,(uint)bVar2) * 0x100 +\n                     (uint)CARRY4(uVar11,(uint)bVar3)) * 0x100 | uVar24 >> 0x18) +\n                   (uint)CARRY4(uVar14,(uint)bVar4)) * 0x200 | uVar17 >> 0x17;\n              (*(code *)PTR_guard_check_icall_00433278)();\n              uVar23 = (*pcVar5)();\n              uVar14 = (uint)((ulonglong)uVar23 >> 0x20);\n              uVar22 = FUN_00410264(extraout_ECX,uVar14,piVar16[0x876],piVar16[0x877],(uint)uVar23,\n                                    uVar14);\n              piVar16[0x878] = (int)uVar22;\n              unaff_EBP[0x12] = (int)uVar22;\n              uVar22 = __alldiv((uint)uVar23,uVar14,200,0);\n              iVar10 = (int)((ulonglong)uVar22 >> 0x20) + piVar16[0x877] +\n                       (uint)CARRY4((uint)uVar22,piVar16[0x876]);\n              uVar23 = FUN_00410264(extraout_ECX_00,iVar10,(uint)uVar22 + piVar16[0x876],iVar10,\n                                    (uint)uVar23,(uint)((ulonglong)uVar23 >> 0x20));\n              puVar18 = (uint *)unaff_EBP[0x13];\n              if (unaff_EBP[0x12] < (int)uVar23) {\n                piVar16[0x878] = unaff_EBP[0x12] + 1;\n              }\n            }\n          }\n          iVar10 = _wcscmp((wchar_t *)unaff_EBP[0x15],L\"CMT\");\n          if (iVar10 == 0) {\n            *(undefined1 *)((int)piVar16 + 0x6cce) = 1;\n          }\n        }\n        if ((puVar18[2] & 0x400) != 0) {\n          FUN_0040cc5d(unaff_EBP + 7,(uint *)((int)puVar18 + 0x10a1),8);\n        }\n        FUN_0041140e(puVar18 + 0x410,unaff_EBP[0x11]);\n        if ((puVar18[2] & 0x1000) != 0) {\n          uVar8 = FUN_0040cbc6(unaff_EBP + 7);\n          uVar14 = (uint)uVar8;\n          *unaff_EBP = (int)(piVar16 + 0xcb6);\n          unaff_EBP[1] = (int)(piVar16 + 0xcb8);\n          unaff_EBP[2] = (int)(piVar16 + 0xcba);\n          iVar10 = 0;\n          unaff_EBP[3] = 0;\n          unaff_EBP[0x14] = 0;\n          unaff_EBP[0x11] = uVar14;\n          do {\n            uVar11 = uVar14 >> (('\\x03' - (char)iVar10) * '\\x04' & 0x1fU);\n            if (((uVar11 & 8) != 0) && (unaff_EBP[iVar10] != 0)) {\n              if (iVar10 != 0) {\n                uVar14 = FUN_0040cbfb(unaff_EBP + 7);\n                FUN_0041140e((void *)unaff_EBP[iVar10],uVar14);\n              }\n              FUN_00411218((void *)unaff_EBP[iVar10],(uint *)(unaff_EBP + -0xc));\n              if ((uVar11 & 4) != 0) {\n                unaff_EBP[-7] = unaff_EBP[-7] + 1;\n              }\n              uVar14 = 0;\n              unaff_EBP[-6] = 0;\n              uVar11 = uVar11 & 3;\n              if (uVar11 != 0) {\n                iVar10 = (3 - uVar11) * 8;\n                do {\n                  uVar14 = FUN_0040cbaf(unaff_EBP + 7);\n                  bVar7 = (byte)iVar10;\n                  iVar10 = iVar10 + 8;\n                  uVar14 = unaff_EBP[-6] | (uVar14 & 0xff) << (bVar7 & 0x1f);\n                  unaff_EBP[-6] = uVar14;\n                  uVar11 = uVar11 - 1;\n                } while (uVar11 != 0);\n                iVar10 = unaff_EBP[0x14];\n              }\n              this = (void *)unaff_EBP[iVar10];\n              unaff_EBP[-6] = uVar14 * 100;\n              FUN_0041146a(this,(WORD *)(unaff_EBP + -0xc));\n              uVar14 = unaff_EBP[0x11];\n            }\n            iVar10 = iVar10 + 1;\n            unaff_EBP[0x14] = iVar10;\n          } while (iVar10 < 4);\n          piVar16 = (int *)unaff_EBP[5];\n        }\n        uVar23 = FUN_00403efb(piVar16[0x1b30],piVar16[0x1b31],puVar18[0x416],puVar18[0x417],0,0);\n        *(undefined8 *)(piVar16 + 0x1b30) = uVar23;\n        *(undefined1 *)(unaff_EBP + 0x11) = *(undefined1 *)((int)puVar18 + 0x10f2);\n        uVar14 = FUN_0040ccac(unaff_EBP + 7,(char)unaff_EBP[0x11]);\n        if (*puVar18 != (uVar14 & 0xffff)) {\n          *(undefined1 *)(piVar16 + 0x1b37) = 1;\n          FUN_00406d83(&DAT_00441098,1);\n          if (*(char *)((int)unaff_EBP + 0x5a) == '\\0') {\n            FUN_00402021(0x1c,(int)piVar16 + 0x32,unaff_EBP[0x15]);\n          }\n        }\n      }\n      else if (iVar10 == 5) {\n        piVar20 = this_00 + 0x87f;\n        piVar19 = this_00 + 0x116a;\n        for (iVar10 = 5; iVar10 != 0; iVar10 = iVar10 + -1) {\n          *piVar19 = *piVar20;\n          piVar20 = piVar20 + 1;\n          piVar19 = piVar19 + 1;\n        }\n        uVar14 = this_00[0x116c];\n        *(byte *)(this_00 + 0x1171) = *(byte *)(this_00 + 0x116c) & 1;\n        *(byte *)((int)this_00 + 0x45c5) = (byte)(uVar14 >> 1) & 1;\n        *(byte *)((int)this_00 + 0x45c6) = (byte)(uVar14 >> 2) & 1;\n        *(byte *)((int)this_00 + 0x45c7) = (byte)(uVar14 >> 3) & 1;\n        if ((uVar14 >> 1 & 1) != 0) {\n          iVar10 = FUN_0040cbfb(unaff_EBP + 7);\n          this_00[0x116f] = iVar10;\n        }\n        if (*(char *)((int)this_00 + 0x45c7) != '\\0') {\n          uVar8 = FUN_0040cbc6(unaff_EBP + 7);\n          this_00[0x1170] = (uint)uVar8;\n          this_00[0x1b3c] = (uint)uVar8;\n        }\n      }\n      else if ((this_00[0x881] & 0x8000U) != 0) {\n        uVar11 = FUN_0040cbfb(unaff_EBP + 7);\n        puVar18 = (uint *)(this_00 + 0x1b30);\n        uVar14 = *puVar18;\n        *puVar18 = *puVar18 + uVar11;\n        this_00[0x1b31] = this_00[0x1b31] + (uint)CARRY4(uVar14,uVar11);\n      }\n      iVar10 = 7;\n      uVar14 = FUN_0040ccac(unaff_EBP + 7,'\\0');\n      if (((piVar16[0x87f] != (uVar14 & 0xffff)) && (iVar12 = piVar16[0x880], iVar12 != 0x79)) &&\n         (iVar12 != 0x76)) {\n        if ((iVar12 == 5) && (*(char *)((int)piVar16 + 0x45c6) != '\\0')) {\n          pcVar5 = *(code **)(*piVar16 + 0x14);\n          (*(code *)PTR_guard_check_icall_00433278)();\n          uVar23 = (*pcVar5)();\n          iVar12 = *piVar16;\n          (*(code *)PTR_guard_check_icall_00433278)\n                    ((uint)uVar23 - 7,(int)((ulonglong)uVar23 >> 0x20) - (uint)((uint)uVar23 < 7),0)\n          ;\n          (**(code **)(iVar12 + 0x10))();\n          *(undefined1 *)((int)unaff_EBP + 0x5b) = 1;\n          do {\n            uVar14 = FUN_00409892(piVar16);\n            bVar7 = ~-((char)uVar14 != '\\0') & *(byte *)((int)unaff_EBP + 0x5b);\n            *(byte *)((int)unaff_EBP + 0x5b) = bVar7;\n            iVar10 = iVar10 + -1;\n          } while (iVar10 != 0);\n          if (bVar7 != 0) goto LAB_004032d4;\n        }\n        *(undefined1 *)(piVar16 + 0x1b37) = 1;\n        FUN_00406d83(&DAT_00441098,3);\n        if (*(char *)((int)unaff_EBP + 0x5a) != '\\0') {\n          FUN_00402021(4,(int)piVar16 + 0x32,(int)piVar16 + 0x32);\n          *(undefined1 *)((int)piVar16 + 0x6cdd) = 1;\n          goto LAB_004032da;\n        }\n      }\nLAB_004032d4:\n      unaff_EBP[4] = unaff_EBP[0xd];\n      goto LAB_004032da;\n    }\n  }\n  else {\n    uVar14 = (uint)(0xfffffff8 < (uint)this_00[0x1b36]);\n    if ((this_00[0x1b2f] < (int)uVar14) ||\n       ((this_00[0x1b2f] <= (int)uVar14 && ((uint)this_00[0x1b2e] <= this_00[0x1b36] + 7U))))\n    goto LAB_00402923;\n    *(undefined1 *)((int)unaff_EBP + 0x5a) = 1;\n    FUN_00403e6d(this_00);\n    pcVar5 = *(code **)(*this_00 + 0xc);\n    (*(code *)PTR_guard_check_icall_00433278)(unaff_EBP + 0x10,8);\n    iVar10 = (*pcVar5)();\n    if (iVar10 == 8) {\n      FUN_0040603a(this_00 + 0x40e,'\\0',4,(undefined4 *)(this_00[0x875] + 0x6024),\n                   (uint *)(unaff_EBP + 0x10),0,0,(uint *)0x0,(void *)0x0);\n      unaff_EBP[0xf] = (int)(this_00 + 0x40e);\n      goto LAB_00402926;\n    }\n  }\n  FUN_00403ffc(this_00);\nLAB_004032da:\n  FUN_004015fb(unaff_EBP + 7);\n  ExceptionList = (void *)unaff_EBP[-3];\n  return unaff_EBP[4];\n}\n\n"
    },
    {
      "name": "FUN_004032f7",
      "entry": "004032f7",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined4 FUN_004032f7(void)\n\n{\n  code *pcVar1;\n  int iVar2;\n  uint uVar3;\n  char cVar4;\n  undefined1 uVar5;\n  byte bVar6;\n  int iVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  int *this;\n  int iVar10;\n  wchar_t *unaff_EBP;\n  int *piVar11;\n  uint *puVar12;\n  uint uVar13;\n  int *piVar14;\n  uint *puVar15;\n  bool bVar16;\n  longlong lVar17;\n  undefined8 uVar18;\n  ulonglong uVar19;\n  wchar_t *pwVar20;\n  \n  FUN_0041eb78();\n  FUN_0040cb83(unaff_EBP + 0x18,this);\n  unaff_EBP[0x32] = L'\\0';\n  unaff_EBP[0x33] = L'\\0';\n  unaff_EBP[-0xffffffff00000002] = L'\\0';\n  unaff_EBP[-0xffffffff00000001] = L'\\0';\n  if ((char)this[0x1b35] == '\\0') {\nLAB_004034a6:\n    *(undefined1 *)(unaff_EBP + 0x35) = 0;\nLAB_004034a9:\n    uVar8 = FUN_0040cd8a(unaff_EBP + 0x18,7);\n    if (6 < uVar8) {\n      *(undefined1 *)(this + 0x883) = 0;\n      iVar7 = FUN_0040cbfb((int *)(unaff_EBP + 0x18));\n      this[0x87f] = iVar7;\n      iVar7 = FUN_0040cd66(unaff_EBP + 0x18,4);\n      lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n      if ((lVar17 != 0) && (iVar7 != 0)) {\n        uVar13 = iVar7 + 4 + (int)lVar17;\n        uVar8 = iVar7 + -3 + (int)lVar17;\n        if ((-1 < (int)uVar8) && (6 < uVar13)) {\n          FUN_0040cd8a(unaff_EBP + 0x18,uVar8);\n          if (*(uint *)(unaff_EBP + 0x24) < uVar13) goto LAB_004034b8;\n          uVar8 = FUN_0040ccdb((int *)(unaff_EBP + 0x18));\n          lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n          this[0x880] = (int)lVar17;\n          lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n          this[0x881] = (uint)lVar17;\n          this[0x882] = uVar13;\n          *(byte *)(this + 0x883) = (byte)((uint)lVar17 >> 2) & 1;\n          bVar16 = this[0x87f] != uVar8;\n          this[0x87d] = this[0x880];\n          *(bool *)((int)unaff_EBP + 0x6b) = bVar16;\n          if (bVar16) {\n            FUN_004020d7((int)this);\n            *(undefined1 *)(this + 0x1b37) = 1;\n            FUN_00406d83(&DAT_00441098,3);\n            if ((char)unaff_EBP[0x35] != '\\0') {\n              FUN_00402021(4,(int)this + 0x32,(int)this + 0x32);\n              goto LAB_00403375;\n            }\n          }\n          bVar6 = *(byte *)(this + 0x881);\n          unaff_EBP[0x2c] = L'\\0';\n          unaff_EBP[0x2d] = L'\\0';\n          unaff_EBP[0x2a] = L'\\0';\n          unaff_EBP[0x2b] = L'\\0';\n          if ((bVar6 & 1) != 0) {\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            iVar7 = (int)((ulonglong)lVar17 >> 0x20);\n            *(int *)(unaff_EBP + 0x2a) = iVar7;\n            *(uint *)(unaff_EBP + 0x2c) = (uint)lVar17;\n            if ((iVar7 != 0) || ((uint)this[0x882] <= (uint)lVar17)) goto LAB_00403b09;\n          }\n          bVar6 = *(byte *)(this + 0x881);\n          uVar8 = 0;\n          unaff_EBP[0x30] = L'\\0';\n          unaff_EBP[0x31] = L'\\0';\n          unaff_EBP[0x2e] = L'\\0';\n          unaff_EBP[0x2f] = L'\\0';\n          if ((bVar6 & 2) != 0) {\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            uVar8 = (uint)lVar17;\n            *(uint *)(unaff_EBP + 0x30) = uVar8;\n            *(int *)(unaff_EBP + 0x2e) = (int)((ulonglong)lVar17 >> 0x20);\n          }\n          uVar13 = FUN_00401983(this,this[0x882]);\n          uVar18 = FUN_00403efb(uVar13 + this[0x1b2e],\n                                this[0x1b2f] + (uint)CARRY4(uVar13,this[0x1b2e]),uVar8,\n                                *(int *)(unaff_EBP + 0x2e),0,0);\n          *(undefined8 *)(this + 0x1b30) = uVar18;\n          iVar7 = this[0x880];\n          if (iVar7 == 1) {\n            FUN_0040ad5e((int)(this + 0x888));\n            puVar12 = (uint *)(this + 0x87f);\n            puVar15 = (uint *)(this + 0x888);\n            for (iVar7 = 5; iVar7 != 0; iVar7 = iVar7 + -1) {\n              *puVar15 = *puVar12;\n              puVar12 = puVar12 + 1;\n              puVar15 = puVar15 + 1;\n            }\n            uVar19 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            uVar8 = (uint)uVar19;\n            *(byte *)((int)this + 0x6ccd) = (byte)uVar19 & 1;\n            *(byte *)(this + 0x1b33) = (byte)(uVar8 >> 2) & 1;\n            *(undefined1 *)((int)this + 0x6cd2) = 1;\n            *(byte *)((int)this + 0x6ccf) = (byte)(uVar8 >> 4) & 1;\n            *(byte *)((int)this + 0x6cd3) = (byte)(uVar8 >> 3) & 1;\n            *(undefined1 *)(this + 0x1b34) = 0;\n            if ((uVar19 & 2) == 0) {\n              iVar7 = 0;\n            }\n            else {\n              lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n              iVar7 = (int)lVar17;\n            }\n            uVar5 = 1;\n            this[0x1b3c] = iVar7;\n            if ((*(char *)((int)this + 0x6ccd) == '\\0') || (iVar7 != 0)) {\n              uVar5 = 0;\n            }\n            *(undefined1 *)((int)this + 0x6cd1) = uVar5;\n            if (*(uint *)(unaff_EBP + 0x2c) != 0 || *(int *)(unaff_EBP + 0x2a) != 0) {\n              FUN_00402210(this,(int *)(unaff_EBP + 0x18),*(uint *)(unaff_EBP + 0x2c),\n                           (int)(this + 0x888));\n            }\n          }\n          else if ((iVar7 == 2) || (iVar7 == 3)) {\n            piVar14 = (int *)(((iVar7 == 2) - 1 & 0x2350) + 0x2298 + (int)this);\n            *(int **)(unaff_EBP + 0x16) = piVar14;\n            FUN_0040acc4(piVar14,0);\n            piVar11 = this + 0x87f;\n            for (iVar7 = 5; iVar7 != 0; iVar7 = iVar7 + -1) {\n              *piVar14 = *piVar11;\n              piVar11 = piVar11 + 1;\n              piVar14 = piVar14 + 1;\n            }\n            iVar7 = *(int *)(unaff_EBP + 0x16);\n            *(int *)(unaff_EBP + 0x32) = this[0x880];\n            *(undefined4 *)(iVar7 + 0x1058) = *(undefined4 *)(unaff_EBP + 0x30);\n            uVar9 = *(undefined4 *)(unaff_EBP + 0x2e);\n            *(undefined1 *)(iVar7 + 0x10f9) = 1;\n            *(undefined4 *)(iVar7 + 0x105c) = uVar9;\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            *(int *)(iVar7 + 0x1094) = (int)lVar17;\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            uVar8 = *(uint *)(iVar7 + 0x1094) >> 3;\n            *(longlong *)(iVar7 + 0x1060) = lVar17;\n            *(byte *)(iVar7 + 0x109a) = (byte)uVar8 & 1;\n            if ((uVar8 & 1) != 0) {\n              *(undefined4 *)(iVar7 + 0x1060) = 0x7fffffff;\n              *(undefined4 *)(iVar7 + 0x1064) = 0x7fffffff;\n            }\n            iVar10 = *(int *)(iVar7 + 0x105c);\n            iVar2 = *(int *)(iVar7 + 0x1064);\n            uVar8 = *(uint *)(iVar7 + 0x1058);\n            if ((iVar10 < iVar2) || ((iVar10 <= iVar2 && (uVar8 <= *(uint *)(iVar7 + 0x1060))))) {\n              uVar8 = *(uint *)(iVar7 + 0x1060);\n              iVar10 = iVar2;\n            }\n            *(int *)(iVar7 + 0x106c) = iVar10;\n            *(uint *)(iVar7 + 0x1068) = uVar8;\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            *(int *)(iVar7 + 0x24) = (int)lVar17;\n            if ((*(byte *)(iVar7 + 0x1094) & 2) != 0) {\n              uVar8 = FUN_0040cbfb((int *)(unaff_EBP + 0x18));\n              FUN_0041158f((void *)(iVar7 + 0x1040),uVar8,0);\n            }\n            *(undefined4 *)(iVar7 + 0x1070) = 0;\n            if ((*(byte *)(iVar7 + 0x1094) & 4) != 0) {\n              *(undefined4 *)(iVar7 + 0x1070) = 2;\n              uVar9 = FUN_0040cbfb((int *)(unaff_EBP + 0x18));\n              *(undefined4 *)(iVar7 + 0x1074) = uVar9;\n            }\n            *(undefined4 *)(iVar7 + 0x1100) = 0;\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            uVar8 = (uint)lVar17;\n            *(uint *)(unaff_EBP + 0x30) = uVar8;\n            *(byte *)(iVar7 + 0x20) = (byte)(uVar8 >> 7) & 7;\n            iVar10 = (uVar8 & 0x3f) + 0x32;\n            *(int *)(iVar7 + 0x1c) = iVar10;\n            if (iVar10 != 0x32) {\n              *(undefined4 *)(iVar7 + 0x1c) = 9999;\n            }\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            *(char *)(iVar7 + 0x18) = (char)lVar17;\n            lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n            uVar13 = (uint)lVar17;\n            uVar8 = this[0x881];\n            *(undefined4 *)(iVar7 + 0x10fc) = 2;\n            *(byte *)(iVar7 + 0x10f8) = (byte)(uVar8 >> 6) & 1;\n            if (*(char *)(iVar7 + 0x18) == '\\x01') {\n              *(undefined4 *)(iVar7 + 0x10fc) = 1;\n            }\n            else if (*(char *)(iVar7 + 0x18) == '\\0') {\n              *(undefined4 *)(iVar7 + 0x10fc) = 0;\n            }\n            uVar8 = *(uint *)(iVar7 + 8);\n            *(byte *)(iVar7 + 0x1098) = (byte)(uVar8 >> 3) & 1;\n            *(byte *)(iVar7 + 0x10fa) = (byte)(uVar8 >> 5) & 1;\n            iVar10 = *(int *)(unaff_EBP + 0x32);\n            uVar3 = *(uint *)(unaff_EBP + 0x30);\n            *(byte *)(iVar7 + 0x1099) = (byte)(uVar8 >> 4) & 1;\n            if ((iVar10 == 2) && ((uVar3 & 0x40) != 0)) {\n              uVar5 = 1;\n            }\n            else {\n              uVar5 = 0;\n            }\n            *(undefined1 *)(iVar7 + 0x10f0) = uVar5;\n            bVar6 = *(byte *)(iVar7 + 0x1094) & 1;\n            *(byte *)(iVar7 + 0x10f1) = bVar6;\n            *(uint *)(iVar7 + 0x10f4) =\n                 ~-(uint)(bVar6 != 0) & 0x20000 << ((byte)(uVar3 >> 10) & 0xf);\n            *(uint *)(iVar7 + 0x109c) = -(uint)(*(char *)(iVar7 + 0x109b) != '\\0') & 5;\n            if (0x1ffe < uVar13) {\n              uVar13 = 0x1fff;\n            }\n            FUN_0040cc5d(unaff_EBP + 0x18,(uint *)(unaff_EBP + -0x103a),uVar13);\n            *(undefined1 *)((int)unaff_EBP + (uVar13 - 0x2074)) = 0;\n            pwVar20 = (wchar_t *)(iVar7 + 0x28);\n            FUN_00411c3b((byte *)(unaff_EBP + -0x103a),(ushort *)pwVar20,0x800);\n            if (*(uint *)(unaff_EBP + 0x2c) != 0 || *(int *)(unaff_EBP + 0x2a) != 0) {\n              FUN_00402210(this,(int *)(unaff_EBP + 0x18),*(uint *)(unaff_EBP + 0x2c),iVar7);\n            }\n            if (*(int *)(unaff_EBP + 0x32) == 2) {\n              FUN_00402134(this,iVar7);\n            }\n            else {\n              iVar7 = _wcscmp(pwVar20,L\"CMT\");\n              if (iVar7 == 0) {\n                *(undefined1 *)((int)this + 0x6cce) = 1;\n              }\n            }\n            if (*(char *)((int)unaff_EBP + 0x6b) != '\\0') {\n              FUN_00402021(0x1c,(int)this + 0x32,pwVar20);\n            }\n          }\n          else {\n            if (iVar7 == 4) {\n              piVar11 = this + 0x87f;\n              piVar14 = this + 0x898;\n              for (iVar7 = 5; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *piVar14 = *piVar11;\n                piVar11 = piVar11 + 1;\n                piVar14 = piVar14 + 1;\n              }\n              lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n              if ((int)lVar17 == 0) {\n                lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n                *(byte *)(this + 0x89d) = (byte)lVar17 & 1;\n                uVar8 = FUN_0040cbaf((int *)(unaff_EBP + 0x18));\n                this[0x89e] = uVar8 & 0xff;\n                if ((uVar8 & 0xff) < 0x19) {\n                  FUN_0040cc5d(unaff_EBP + 0x18,(uint *)(this + 0x89f),0x10);\n                  if ((char)this[0x89d] != '\\0') {\n                    FUN_0040cc5d(unaff_EBP + 0x18,(uint *)(this + 0x8a3),8);\n                    FUN_0040cc5d(unaff_EBP + 0x18,(uint *)(unaff_EBP + 0x32),4);\n                    FUN_00410016((undefined4 *)(unaff_EBP + -0x3a));\n                    FUN_0041005c((uint *)(unaff_EBP + -0x3a),(uint *)(this + 0x8a3),8);\n                    FUN_0040ff33((uint *)(unaff_EBP + -0x3a),(ulong *)(unaff_EBP + 4));\n                    iVar7 = FUN_00420c4a((uint *)(unaff_EBP + 0x32),(uint *)(unaff_EBP + 4),4);\n                    *(char *)(this + 0x89d) = '\\x01' - (iVar7 != 0);\n                  }\n                  *(undefined1 *)(this + 0x1b35) = 1;\n                  goto LAB_00403b01;\n                }\n                pwVar20 = L\"hc%u\";\n              }\n              else {\n                pwVar20 = L\"h%u\";\n              }\n              FUN_00404092(unaff_EBP,0x14,pwVar20);\n              FUN_0040403d(this,(int)this + 0x32,unaff_EBP);\n              goto LAB_00403b10;\n            }\n            if (iVar7 == 5) {\n              piVar11 = this + 0x87f;\n              piVar14 = this + 0x116a;\n              for (iVar7 = 5; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *piVar14 = *piVar11;\n                piVar11 = piVar11 + 1;\n                piVar14 = piVar14 + 1;\n              }\n              lVar17 = FUN_0040ccfb((int *)(unaff_EBP + 0x18));\n              *(byte *)(this + 0x1171) = (byte)lVar17 & 1;\n              *(undefined2 *)((int)this + 0x45c6) = 0;\n              *(undefined1 *)((int)this + 0x45c5) = 0;\n            }\n          }\nLAB_00403b01:\n          *(undefined4 *)(unaff_EBP + 0x32) = *(undefined4 *)(unaff_EBP + 0x24);\n          goto LAB_00403b10;\n        }\n      }\nLAB_00403b09:\n      FUN_004020d7((int)this);\n      goto LAB_00403b10;\n    }\n  }\n  else {\n    uVar8 = (uint)(0xfffffff7 < (uint)this[0x1b36]);\n    if ((this[0x1b2f] < (int)uVar8) ||\n       ((this[0x1b2f] <= (int)uVar8 && ((uint)this[0x1b2e] <= this[0x1b36] + 8U))))\n    goto LAB_004034a6;\n    iVar7 = this[0x875];\n    *(undefined1 *)(unaff_EBP + 0x35) = 1;\n    if (*(char *)(iVar7 + 0x6127) != '\\0') {\n      FUN_0040138b(0x7f,(int)this + 0x32);\nLAB_00403375:\n      *(undefined1 *)((int)this + 0x6cdd) = 1;\n      goto LAB_00403b10;\n    }\n    pcVar1 = *(code **)(*this + 0xc);\n    (*(code *)PTR_guard_check_icall_00433278)(unaff_EBP + 0xc,0x10);\n    iVar7 = (*pcVar1)();\n    if (iVar7 == 0x10) {\n      if (*(char *)(this[0x875] + 0x6124) == '\\0') {\n        cVar4 = FUN_00411b63();\n        *(undefined1 *)((int)unaff_EBP + 0x6b) = 0;\n        if (cVar4 != '\\0') goto LAB_004033bd;\n      }\n      else {\nLAB_004033bd:\n        *(undefined1 *)((int)unaff_EBP + 0x6b) = 1;\n      }\n      FUN_00403e6d(this);\n      piVar11 = this + 0x40e;\n      FUN_0040603a(piVar11,'\\0',5,(undefined4 *)(this[0x875] + 0x6024),(uint *)(this + 0x89f),\n                   (int)(unaff_EBP + 0xc),this[0x89e],(uint *)0x0,unaff_EBP + 0x14);\n      cVar4 = (char)this[0x89d];\n      while ((cVar4 != '\\0' &&\n             (iVar7 = FUN_00420c4a((uint *)(unaff_EBP + 0x14),(uint *)(this + 0x8a3),8), iVar7 != 0)\n             )) {\n        iVar7 = (int)this + 0x32;\n        if (*(char *)((int)unaff_EBP + 0x6b) != '\\0') {\n          FUN_00402021(6,iVar7,iVar7);\n          *(undefined1 *)((int)this + 0x6cdd) = 1;\n          FUN_00406d83(&DAT_00441098,0xb);\n          goto LAB_00403b10;\n        }\n        FUN_00402021(0x83,iVar7,iVar7);\n        FUN_0040f279((undefined1 *)(this[0x875] + 0x6024));\n        FUN_00403e6d(this);\n        FUN_0040603a(piVar11,'\\0',5,(undefined4 *)(this[0x875] + 0x6024),(uint *)(this + 0x89f),\n                     (int)(unaff_EBP + 0xc),this[0x89e],(uint *)0x0,unaff_EBP + 0x14);\n        cVar4 = (char)this[0x89d];\n      }\n      *(int **)(unaff_EBP + 0x28) = piVar11;\n      goto LAB_004034a9;\n    }\n  }\nLAB_004034b8:\n  FUN_00403ffc(this);\nLAB_00403b10:\n  FUN_004015fb((int *)(unaff_EBP + 0x18));\n  ExceptionList = *(void **)(unaff_EBP + -6);\n  return *(undefined4 *)(unaff_EBP + 0x32);\n}\n\n"
    },
    {
      "name": "FUN_00403b2d",
      "entry": "00403b2d",
      "c": "\nint __fastcall FUN_00403b2d(int *param_1)\n\n{\n  code *pcVar1;\n  int iVar2;\n  undefined8 uVar3;\n  \n  if (*(char *)((int)param_1 + 0x6cdd) != '\\0') {\n    return 0;\n  }\n  pcVar1 = *(code **)(*param_1 + 0x14);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  uVar3 = (*pcVar1)();\n  iVar2 = 0;\n  *(undefined8 *)(param_1 + 0x1b2e) = uVar3;\n  if (param_1[0x1b32] == 2) {\n    iVar2 = FUN_0040286b();\n  }\n  else {\n    if (param_1[0x1b32] != 3) goto LAB_00403bac;\n    iVar2 = FUN_004032f7();\n  }\n  if (iVar2 != 0) {\n    if (param_1[0x1b2f] < param_1[0x1b31]) {\n      return iVar2;\n    }\n    if ((param_1[0x1b2f] <= param_1[0x1b31]) && ((uint)param_1[0x1b2e] < (uint)param_1[0x1b30])) {\n      return iVar2;\n    }\n    FUN_004020d7((int)param_1);\n    iVar2 = 0;\n  }\nLAB_00403bac:\n  param_1[0x87d] = 0xff;\n  return iVar2;\n}\n\n"
    },
    {
      "name": "FUN_00403bba",
      "entry": "00403bba",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined1 FUN_00403bba(void)\n\n{\n  uint uVar1;\n  int *this;\n  int iVar2;\n  undefined4 uVar3;\n  char cVar4;\n  undefined1 uVar5;\n  int extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  if (*(char *)(extraout_ECX + 0x6cdc) == '\\0') {\n    if ((*(byte *)(extraout_ECX + 0x4608) < 6) &&\n       (*(uint *)(extraout_ECX + 0x4604) <=\n        ((*(int *)(extraout_ECX + 0x6cc8) != 3) - 1 & 0x15) + 0x1d)) {\n      if ((*(int *)(extraout_ECX + 0x5640) == 0 && *(int *)(extraout_ECX + 0x5644) == 0) &&\n         (*(char *)(extraout_ECX + 0x5681) == '\\0')) {\n        uVar5 = 1;\n        goto LAB_00403e5e;\n      }\n      FUN_0040cfd4((undefined1 *)(extraout_ECX + 0x20f8));\n      FUN_00412089();\n      uVar5 = 0;\n      uVar1 = *(uint *)(extraout_ECX + 0x56dc);\n      *(undefined4 *)(unaff_EBP + -4) = 0;\n      FUN_00413377((void *)(unaff_EBP + -0xe6ec),uVar1,'\\0');\n      this = *(int **)(unaff_EBP + 8);\n      if (*(int *)(unaff_EBP + 0xc) == 0) {\n        if ((*(int *)(extraout_ECX + 0x564c) < 0) ||\n           ((*(int *)(extraout_ECX + 0x564c) < 1 && (*(uint *)(extraout_ECX + 0x5648) < 0x1000001)))\n           ) {\n          if (this == (int *)0x0) {\n            *(undefined1 *)(extraout_ECX + 0x2129) = 1;\n          }\n          else {\n            FUN_004020bd(this,*(uint *)(extraout_ECX + 0x5648));\n            FUN_0040d0b6((void *)(extraout_ECX + 0x20f8),*this,\n                         *(undefined4 *)(extraout_ECX + 0x5648));\n          }\n          goto LAB_00403ccc;\n        }\n        FUN_0040138b(0x1e,extraout_ECX + 0x32);\n      }\n      else {\nLAB_00403ccc:\n        if (*(char *)(extraout_ECX + 0x5683) != '\\0') {\n          if (*(char *)(*(int *)(extraout_ECX + 0x21d4) + 0x6124) == '\\0') goto LAB_00403e40;\n          FUN_0040d051((void *)(extraout_ECX + 0x20f8),'\\0',*(int *)(extraout_ECX + 0x5684),\n                       (undefined4 *)(*(int *)(extraout_ECX + 0x21d4) + 0x6024),\n                       (uint *)(-(uint)(*(char *)(extraout_ECX + 0x5688) != '\\0') &\n                               extraout_ECX + 0x5689U),extraout_ECX + 0x5699,\n                       *(uint *)(extraout_ECX + 0x56d4),(uint *)(extraout_ECX + 0x56b3),\n                       (void *)(extraout_ECX + 0x56aa));\n        }\n        FUN_0040ab1a((void *)(extraout_ECX + 0x21b8),*(int *)(extraout_ECX + 0x5658),1);\n        iVar2 = *(int *)(unaff_EBP + 0xc);\n        *(undefined4 *)(extraout_ECX + 0x2124) = *(undefined4 *)(extraout_ECX + 0x5644);\n        *(undefined4 *)(extraout_ECX + 0x211c) = *(undefined4 *)(extraout_ECX + 0x5644);\n        *(undefined4 *)(extraout_ECX + 0x2120) = *(undefined4 *)(extraout_ECX + 0x5640);\n        *(undefined4 *)(extraout_ECX + 0x2118) = *(undefined4 *)(extraout_ECX + 0x5640);\n        *(undefined1 *)(extraout_ECX + 0x2128) = 0;\n        FUN_0040d099((void *)(extraout_ECX + 0x20f8),extraout_ECX,iVar2);\n        *(undefined1 *)(extraout_ECX + 0x2129) = *(undefined1 *)(unaff_EBP + 0x10);\n        *(undefined1 *)(extraout_ECX + 0x214f) = *(undefined1 *)(extraout_ECX + 0x5681);\n        *(int *)(extraout_ECX + 0x2138) = extraout_ECX + 0x45e8;\n        *(undefined4 *)(extraout_ECX + 0x213c) = 0;\n        uVar3 = *(undefined4 *)(extraout_ECX + 0x564c);\n        *(undefined4 *)(unaff_EBP + -0x9aa4) = *(undefined4 *)(extraout_ECX + 0x5648);\n        *(undefined4 *)(unaff_EBP + -0x9aa0) = uVar3;\n        *(undefined1 *)(unaff_EBP + -0x9a8c) = 0;\n        if (*(char *)(extraout_ECX + 0x4608) == '\\0') {\n          FUN_00409215();\n        }\n        else {\n          FUN_00413020((void *)(unaff_EBP + -0xe6ec),*(int *)(extraout_ECX + 0x4604),'\\0');\n        }\n        cVar4 = FUN_0040aaea((void *)(extraout_ECX + 0x21b8),(int *)(extraout_ECX + 0x5658),\n                             (ulong *)(-(uint)(*(char *)(extraout_ECX + 0x56b2) != '\\0') &\n                                      extraout_ECX + 0x56b3U));\n        if (cVar4 == '\\0') {\n          FUN_00402021(0x1f,extraout_ECX + 0x32,extraout_ECX + 0x4610);\n          FUN_00406d83(&DAT_00441098,3);\n          if (this != (int *)0x0) {\n            RemoveAll(this);\n          }\n        }\n        else {\n          uVar5 = 1;\n        }\n      }\nLAB_00403e40:\n      FUN_00412297((void *)(unaff_EBP + -0xe6ec));\n      goto LAB_00403e5e;\n    }\n    FUN_0040138b(0x1e,extraout_ECX + 0x32);\n  }\n  else {\n    FUN_0040138b(0x1d,extraout_ECX + 0x32);\n    FUN_00406d83(&DAT_00441098,3);\n  }\n  uVar5 = 0;\nLAB_00403e5e:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar5;\n}\n\n"
    },
    {
      "name": "FUN_00403e6d",
      "entry": "00403e6d",
      "c": "\nvoid __fastcall FUN_00403e6d(int *param_1)\n\n{\n  code *pcVar1;\n  char cVar2;\n  undefined4 local_50 [19];\n  \n  if (*(char *)(param_1[0x875] + 0x6124) == '\\0') {\n    cVar2 = FUN_00411b42(2,(wchar_t *)((int)param_1 + 0x32),(undefined4 *)(param_1[0x875] + 0x6024))\n    ;\n    if (cVar2 == '\\0') {\n      pcVar1 = *(code **)(*param_1 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)();\n      (*pcVar1)();\n      FUN_004015c6(local_50,2);\n      FUN_004115fe(local_50);\n      thunk_FUN_00406e47(&DAT_00441098,(void *)0xff);\n    }\n    *(undefined1 *)(param_1[0x875] + 0x6128) = 1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "RemoveAll",
      "entry": "00403ede",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    public: void __thiscall ATL::CSimpleArray<unsigned short,class\n   ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll(void)\n    public: void __thiscall ATL::CSimpleArray<unsigned long,class\n   ATL::CSimpleArrayEqualHelper<unsigned long> >::RemoveAll(void)\n    public: void __thiscall ATL::CSimpleArray<struct HINSTANCE__ *,class\n   ATL::CSimpleArrayEqualHelper<struct HINSTANCE__ *> >::RemoveAll(void)\n    public: void __thiscall ATL::CSimpleArray<class CDHtmlControlSink *,class\n   ATL::CSimpleArrayEqualHelper<class CDHtmlControlSink *> >::RemoveAll(void)\n     6 names - too many to list\n   \n   Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,\n   Visual Studio 2019 Release */\n\nvoid __fastcall RemoveAll(int *param_1)\n\n{\n  if (*param_1 != 0) {\n    FID_conflict__free((void *)*param_1);\n    *param_1 = 0;\n  }\n  param_1[1] = 0;\n  param_1[2] = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00403efb",
      "entry": "00403efb",
      "c": "\nundefined8 FUN_00403efb(uint param_1,int param_2,uint param_3,int param_4,int param_5,int param_6)\n\n{\n  if ((-1 < param_2) && (-1 < param_4)) {\n    if ((param_2 <= 0x7fffffff - param_4) &&\n       ((param_2 < 0x7fffffff - param_4 || (param_1 <= -param_3 - 1)))) {\n      param_5 = param_1 + param_3;\n      param_6 = param_2 + param_4 + (uint)CARRY4(param_1,param_3);\n    }\n  }\n  return CONCAT44(param_6,param_5);\n}\n\n"
    },
    {
      "name": "FUN_00403f4a",
      "entry": "00403f4a",
      "c": "\nint __thiscall FUN_00403f4a(void *this,int param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  iVar1 = FUN_00403b2d((int *)this);\n  while( true ) {\n    if ((iVar1 == 0) || ((param_1 != 5 && (*(int *)((int)this + 0x21f4) == 5)))) {\n      return 0;\n    }\n    uVar2 = uVar2 + 1;\n    if ((uVar2 & 0x7f) == 0) {\n      FUN_00410e08();\n    }\n    if (*(int *)((int)this + 0x21f4) == param_1) break;\n    FUN_00401f47((int *)this);\n    iVar1 = FUN_00403b2d((int *)this);\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "FUN_00403fa3",
      "entry": "00403fa3",
      "c": "\nint __thiscall FUN_00403fa3(void *this,wchar_t *param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  \n  uVar3 = 0;\n  while( true ) {\n    iVar2 = FUN_00403b2d((int *)this);\n    if ((iVar2 == 0) || (*(int *)((int)this + 0x21f4) == 5)) {\n      return 0;\n    }\n    uVar3 = uVar3 + 1;\n    if ((uVar3 & 0x7f) == 0) {\n      FUN_00410e08();\n    }\n    if ((*(int *)((int)this + 0x21f4) == 3) &&\n       (uVar1 = FUN_004020fa((void *)((int)this + 0x45e8),param_1), (char)uVar1 != '\\0')) break;\n    FUN_00401f47((int *)this);\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "FUN_00403ffc",
      "entry": "00403ffc",
      "c": "\nvoid __fastcall FUN_00403ffc(int *param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  uVar2 = FUN_0040981a(param_1);\n  iVar1 = (int)((ulonglong)uVar2 >> 0x20);\n  if ((((param_1[0x1b2e] != (int)uVar2) || (param_1[0x1b2f] != iVar1)) ||\n      (param_1[0x1b30] != (int)uVar2)) || (param_1[0x1b31] != iVar1)) {\n    FUN_0040138b(0x38,(int)param_1 + 0x32);\n    FUN_00406d83(&DAT_00441098,1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040403d",
      "entry": "0040403d",
      "c": "\nvoid __thiscall FUN_0040403d(void *this,undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_00402063(0x22,(int)this + 0x32,param_1,param_2);\n  FUN_00406d83(&DAT_00441098,1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040405f",
      "entry": "0040405f",
      "c": "\nundefined * FUN_0040405f(void)\n\n{\n  return &DAT_0043eff0;\n}\n\n"
    },
    {
      "name": "FID_conflict:__vsnprintf_c_l",
      "entry": "00404065",
      "c": "\n/* Library Function - Multiple Matches With Different Base Names\n    __vsnprintf_c_l\n    __vsprintf_p_l\n    __vsprintf_s_l\n    __vswprintf_c_l\n     6 names - too many to list\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nint __cdecl\nFID_conflict___vsnprintf_c_l\n          (wchar_t *_DstBuf,size_t _MaxCount,wchar_t *_Format,_locale_t _Locale,va_list _ArgList)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)FUN_0040405f();\n  iVar2 = ___stdio_common_vswprintf\n                    (*puVar1,puVar1[1],_DstBuf,_MaxCount,_Format,(__crt_locale_pointers *)_Locale,\n                     _ArgList);\n  if (iVar2 < 0) {\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "FUN_00404092",
      "entry": "00404092",
      "c": "\nvoid __cdecl FUN_00404092(wchar_t *param_1,size_t param_2,wchar_t *param_3)\n\n{\n  FID_conflict___vsnprintf_c_l(param_1,param_2,param_3,(_locale_t)0x0,&stack0x00000010);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004040b0",
      "entry": "004040b0",
      "c": "\nvoid FUN_004040b0(int *param_1)\n\n{\n  FUN_004040bc(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004040bc",
      "entry": "004040bc",
      "c": "\nvoid __fastcall FUN_004040bc(int *param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  \n  puVar2 = (uint *)param_1[1];\n  for (uVar1 = param_1[2]; 0x1ff < uVar1; uVar1 = uVar1 - 0x200) {\n    FUN_00405769(*param_1,puVar2,0x40);\n    puVar2 = puVar2 + 0x80;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004040fe",
      "entry": "004040fe",
      "c": "\nvoid FUN_004040fe(int param_1,int *param_2)\n\n{\n  byte *pbVar1;\n  uint *puVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint *puVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  uint uVar14;\n  int *piVar15;\n  uint *puVar16;\n  uint uVar17;\n  uint uVar18;\n  uint local_c8;\n  uint local_c4;\n  uint local_c0;\n  uint local_bc;\n  uint local_b8;\n  uint local_b4;\n  uint local_b0;\n  uint local_ac;\n  uint local_a8;\n  uint local_a4;\n  uint local_80 [8];\n  uint local_60 [8];\n  int local_40 [16];\n  \n  uVar7 = **(uint **)(param_1 + 0xf8) ^ 0x510e527f;\n  puVar2 = *(uint **)(param_1 + 0xfc);\n  uVar8 = (*(uint **)(param_1 + 0xf8))[1] ^ 0x9b05688c;\n  piVar15 = local_40;\n  for (iVar4 = 0x10; iVar4 != 0; iVar4 = iVar4 + -1) {\n    *piVar15 = *param_2;\n    param_2 = param_2 + 1;\n    piVar15 = piVar15 + 1;\n  }\n  puVar10 = *(uint **)(param_1 + 0xf4);\n  puVar16 = local_80;\n  for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n    *puVar16 = *puVar10;\n    puVar10 = puVar10 + 1;\n    puVar16 = puVar16 + 1;\n  }\n  local_bc = *puVar2 ^ 0x1f83d9ab;\n  local_b4 = puVar2[1] ^ 0x5be0cd19;\n  local_c0 = local_80[7];\n  local_a4 = local_80[6];\n  local_c4 = 0x6a09e667;\n  local_b8 = 0xbb67ae85;\n  local_b0 = 0x3c6ef372;\n  local_a8 = 0xa54ff53a;\n  local_c8 = 0;\n  local_ac = local_80[5];\n  do {\n    uVar17 = local_40[(byte)(&DAT_004336c0)[local_c8]] + local_80[4] + local_80[0];\n    uVar7 = uVar17 ^ uVar7;\n    uVar7 = uVar7 << 0x10 | uVar7 >> 0x10;\n    local_c4 = local_c4 + uVar7;\n    uVar11 = local_c4 ^ local_80[4];\n    uVar11 = uVar11 >> 0xc | uVar11 << 0x14;\n    uVar17 = local_40[(byte)(&DAT_004336c1)[local_c8]] + uVar11 + uVar17;\n    uVar7 = uVar17 ^ uVar7;\n    uVar7 = uVar7 >> 8 | uVar7 << 0x18;\n    local_c4 = uVar7 + local_c4;\n    uVar11 = local_c4 ^ uVar11;\n    uVar3 = uVar11 >> 7 | uVar11 << 0x19;\n    uVar11 = local_40[(byte)(&DAT_004336c2)[local_c8]] + local_ac + local_80[1];\n    uVar8 = uVar11 ^ uVar8;\n    uVar8 = uVar8 << 0x10 | uVar8 >> 0x10;\n    local_b8 = local_b8 + uVar8;\n    local_ac = local_b8 ^ local_ac;\n    uVar12 = local_ac >> 0xc | local_ac << 0x14;\n    uVar11 = local_40[(byte)(&DAT_004336c3)[local_c8]] + uVar12 + uVar11;\n    uVar8 = uVar11 ^ uVar8;\n    uVar8 = uVar8 >> 8 | uVar8 << 0x18;\n    local_b8 = uVar8 + local_b8;\n    uVar12 = local_b8 ^ uVar12;\n    uVar12 = uVar12 >> 7 | uVar12 << 0x19;\n    uVar13 = local_40[(byte)(&DAT_004336c4)[local_c8]] + local_a4 + local_80[2];\n    local_bc = uVar13 ^ local_bc;\n    uVar5 = local_bc << 0x10 | local_bc >> 0x10;\n    local_b0 = local_b0 + uVar5;\n    local_a4 = local_a4 ^ local_b0;\n    uVar9 = local_a4 >> 0xc | local_a4 << 0x14;\n    uVar13 = local_40[(byte)(&DAT_004336c5)[local_c8]] + uVar9 + uVar13;\n    uVar5 = uVar13 ^ uVar5;\n    uVar5 = uVar5 >> 8 | uVar5 << 0x18;\n    local_b0 = uVar5 + local_b0;\n    uVar9 = local_b0 ^ uVar9;\n    uVar9 = uVar9 >> 7 | uVar9 << 0x19;\n    uVar18 = local_40[(byte)(&DAT_004336c6)[local_c8]] + local_c0 + local_80[3];\n    local_b4 = uVar18 ^ local_b4;\n    uVar6 = local_b4 << 0x10 | local_b4 >> 0x10;\n    local_a8 = local_a8 + uVar6;\n    local_c0 = local_a8 ^ local_c0;\n    uVar14 = local_c0 >> 0xc | local_c0 << 0x14;\n    uVar18 = local_40[(byte)(&DAT_004336c7)[local_c8]] + uVar14 + uVar18;\n    uVar6 = uVar18 ^ uVar6;\n    uVar6 = uVar6 >> 8 | uVar6 << 0x18;\n    local_a8 = uVar6 + local_a8;\n    uVar14 = local_a8 ^ uVar14;\n    uVar14 = uVar14 >> 7 | uVar14 << 0x19;\n    uVar17 = local_40[(byte)(&DAT_004336c8)[local_c8]] + uVar12 + uVar17;\n    uVar6 = uVar17 ^ uVar6;\n    uVar6 = uVar6 << 0x10 | uVar6 >> 0x10;\n    local_b0 = uVar6 + local_b0;\n    uVar12 = local_b0 ^ uVar12;\n    uVar12 = uVar12 >> 0xc | uVar12 << 0x14;\n    local_80[0] = local_40[(byte)(&DAT_004336c9)[local_c8]] + uVar12 + uVar17;\n    uVar6 = local_80[0] ^ uVar6;\n    local_b4 = uVar6 >> 8 | uVar6 << 0x18;\n    local_60[7] = local_b4;\n    local_b0 = local_b4 + local_b0;\n    uVar12 = uVar12 ^ local_b0;\n    local_60[2] = local_b0;\n    local_ac = uVar12 >> 7 | uVar12 << 0x19;\n    local_80[5] = local_ac;\n    uVar11 = local_40[(byte)(&DAT_004336ca)[local_c8]] + uVar9 + uVar11;\n    uVar7 = uVar11 ^ uVar7;\n    uVar7 = uVar7 << 0x10 | uVar7 >> 0x10;\n    local_a8 = uVar7 + local_a8;\n    uVar9 = local_a8 ^ uVar9;\n    uVar17 = uVar9 >> 0xc | uVar9 << 0x14;\n    local_80[1] = local_40[(byte)(&DAT_004336cb)[local_c8]] + uVar17 + uVar11;\n    uVar7 = uVar7 ^ local_80[1];\n    uVar7 = uVar7 >> 8 | uVar7 << 0x18;\n    local_a8 = local_a8 + uVar7;\n    uVar17 = uVar17 ^ local_a8;\n    local_60[3] = local_a8;\n    local_a4 = uVar17 >> 7 | uVar17 << 0x19;\n    local_80[6] = local_a4;\n    uVar13 = local_40[(byte)(&DAT_004336cc)[local_c8]] + uVar14 + uVar13;\n    uVar8 = uVar13 ^ uVar8;\n    uVar8 = uVar8 << 0x10 | uVar8 >> 0x10;\n    local_c4 = local_c4 + uVar8;\n    uVar14 = local_c4 ^ uVar14;\n    uVar17 = uVar14 >> 0xc | uVar14 << 0x14;\n    local_80[2] = local_40[(byte)(&DAT_004336cd)[local_c8]] + uVar17 + uVar13;\n    uVar8 = uVar8 ^ local_80[2];\n    uVar8 = uVar8 >> 8 | uVar8 << 0x18;\n    local_c4 = local_c4 + uVar8;\n    uVar17 = uVar17 ^ local_c4;\n    local_60[0] = local_c4;\n    local_c0 = uVar17 >> 7 | uVar17 << 0x19;\n    local_80[7] = local_c0;\n    uVar11 = local_40[(byte)(&DAT_004336ce)[local_c8]] + uVar18 + uVar3;\n    uVar5 = uVar11 ^ uVar5;\n    uVar12 = uVar5 << 0x10 | uVar5 >> 0x10;\n    local_b8 = local_b8 + uVar12;\n    uVar3 = local_b8 ^ uVar3;\n    uVar17 = uVar3 >> 0xc | uVar3 << 0x14;\n    pbVar1 = &DAT_004336cf + local_c8;\n    local_c8 = local_c8 + 0x10;\n    local_80[3] = local_40[*pbVar1] + uVar17 + uVar11;\n    uVar12 = uVar12 ^ local_80[3];\n    local_bc = uVar12 >> 8 | uVar12 << 0x18;\n    local_60[6] = local_bc;\n    local_b8 = local_b8 + local_bc;\n    uVar17 = uVar17 ^ local_b8;\n    local_80[4] = uVar17 >> 7 | uVar17 << 0x19;\n    local_60[1] = local_b8;\n  } while (local_c8 < 0x91);\n  uVar17 = 0;\n  local_60[4] = uVar7;\n  local_60[5] = uVar8;\n  do {\n    puVar2 = (uint *)(uVar17 + *(int *)(param_1 + 0xf4));\n    *puVar2 = *puVar2 ^ *(uint *)((int)local_60 + uVar17) ^ *(uint *)((int)local_80 + uVar17);\n    uVar17 = uVar17 + 4;\n  } while (uVar17 < 0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00404518",
      "entry": "00404518",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_00404518(int param_1,int *param_2)\n\n{\n  uint *puVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  int iVar14;\n  uint uVar15;\n  uint uVar56;\n  undefined1 auVar16 [16];\n  undefined1 auVar17 [16];\n  undefined1 auVar18 [16];\n  undefined1 auVar19 [16];\n  undefined1 auVar20 [16];\n  undefined1 auVar21 [16];\n  undefined1 auVar22 [16];\n  undefined1 auVar23 [16];\n  undefined1 auVar24 [16];\n  undefined1 auVar25 [16];\n  undefined1 auVar26 [16];\n  undefined1 auVar27 [16];\n  undefined1 auVar28 [16];\n  undefined1 auVar29 [16];\n  undefined1 auVar30 [16];\n  undefined1 auVar31 [16];\n  undefined1 auVar32 [16];\n  undefined1 auVar33 [16];\n  undefined1 auVar34 [16];\n  undefined1 auVar35 [16];\n  undefined1 auVar36 [16];\n  undefined1 auVar37 [16];\n  undefined1 auVar38 [16];\n  undefined1 auVar39 [16];\n  undefined1 auVar40 [16];\n  undefined1 auVar41 [16];\n  undefined1 auVar42 [16];\n  undefined1 auVar43 [16];\n  undefined1 auVar44 [16];\n  undefined1 auVar45 [16];\n  undefined1 auVar46 [16];\n  undefined1 auVar47 [16];\n  undefined1 auVar48 [16];\n  undefined1 auVar49 [16];\n  undefined1 auVar50 [16];\n  undefined1 auVar51 [16];\n  undefined1 auVar52 [16];\n  undefined1 auVar53 [16];\n  undefined1 auVar54 [16];\n  uint uVar57;\n  undefined1 auVar55 [16];\n  undefined1 auVar58 [16];\n  undefined1 auVar59 [16];\n  undefined1 auVar60 [16];\n  undefined1 auVar61 [16];\n  undefined1 auVar62 [16];\n  undefined1 auVar63 [16];\n  undefined1 auVar64 [16];\n  undefined1 auVar65 [16];\n  undefined1 auVar66 [16];\n  undefined1 auVar67 [16];\n  undefined1 auVar68 [16];\n  undefined1 auVar69 [16];\n  uint uVar80;\n  undefined1 auVar70 [16];\n  undefined1 auVar71 [16];\n  undefined1 auVar72 [16];\n  undefined1 auVar73 [16];\n  undefined1 auVar74 [16];\n  undefined1 auVar75 [16];\n  undefined1 auVar76 [16];\n  undefined1 auVar77 [16];\n  undefined1 auVar78 [16];\n  undefined1 auVar79 [16];\n  uint uVar81;\n  uint uVar91;\n  uint uVar92;\n  undefined1 auVar82 [16];\n  undefined1 auVar83 [16];\n  undefined1 auVar84 [16];\n  undefined1 auVar85 [16];\n  undefined1 auVar86 [16];\n  undefined1 auVar87 [16];\n  undefined1 auVar88 [16];\n  undefined1 auVar89 [16];\n  undefined1 auVar90 [16];\n  uint uVar93;\n  uint uVar94;\n  int iVar95;\n  uint uVar96;\n  int iVar97;\n  uint uVar99;\n  int iVar100;\n  uint uVar101;\n  int iVar102;\n  uint uVar103;\n  int iVar104;\n  int iVar105;\n  uint uVar106;\n  int iVar107;\n  undefined1 auVar98 [16];\n  uint uVar108;\n  int iVar109;\n  uint uVar110;\n  uint uVar119;\n  uint uVar120;\n  uint uVar121;\n  uint uVar122;\n  undefined1 auVar111 [16];\n  undefined1 auVar112 [16];\n  undefined1 auVar113 [16];\n  undefined1 auVar114 [16];\n  undefined1 auVar115 [16];\n  undefined1 auVar116 [16];\n  undefined1 auVar117 [16];\n  undefined1 auVar118 [16];\n  \n  iVar97 = param_2[4];\n  puVar1 = *(uint **)(param_1 + 0xf4);\n  iVar102 = param_2[2];\n  iVar2 = *param_2;\n  uVar15 = *(uint *)*(undefined1 (*) [16])(puVar1 + 4);\n  iVar105 = param_2[6];\n  puVar3 = *(uint **)(param_1 + 0xf8);\n  uVar110 = iVar2 + *puVar1 + uVar15;\n  uVar119 = iVar102 + puVar1[1] + puVar1[5];\n  uVar120 = iVar97 + puVar1[2] + puVar1[6];\n  uVar121 = iVar105 + puVar1[3] + puVar1[7];\n  iVar109 = param_2[1];\n  uVar93 = *puVar3 ^ _DAT_0043f010 ^ uVar110;\n  uVar56 = puVar3[1] ^ uRam0043f014 ^ uVar119;\n  uVar81 = puVar3[2] ^ uRam0043f018 ^ uVar120;\n  uVar91 = puVar3[3] ^ uRam0043f01c ^ uVar121;\n  iVar4 = param_2[5];\n  iVar5 = param_2[3];\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar57 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar80 = uVar81 >> 0x10 ^ uVar81 << 0x10;\n  uVar92 = uVar91 >> 0x10 ^ uVar91 << 0x10;\n  uVar94 = uVar93 + _DAT_0043f000;\n  uVar99 = uVar57 + iRam0043f004;\n  uVar103 = uVar80 + iRam0043f008;\n  uVar106 = uVar92 + iRam0043f00c;\n  iVar6 = param_2[7];\n  uVar15 = uVar94 ^ uVar15;\n  uVar56 = uVar99 ^ puVar1[5];\n  uVar81 = uVar103 ^ puVar1[6];\n  uVar91 = uVar106 ^ puVar1[7];\n  uVar96 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar101 = uVar56 << 0x14 ^ uVar56 >> 0xc;\n  uVar81 = uVar81 << 0x14 ^ uVar81 >> 0xc;\n  uVar91 = uVar91 << 0x14 ^ uVar91 >> 0xc;\n  iVar7 = param_2[0xc];\n  uVar110 = iVar109 + uVar110 + uVar96;\n  uVar119 = iVar5 + uVar119 + uVar101;\n  uVar120 = iVar4 + uVar120 + uVar81;\n  uVar121 = iVar6 + uVar121 + uVar91;\n  uVar93 = uVar110 ^ uVar93;\n  uVar57 = uVar119 ^ uVar57;\n  uVar80 = uVar120 ^ uVar80;\n  uVar92 = uVar121 ^ uVar92;\n  iVar8 = param_2[0xe];\n  uVar93 = uVar93 << 0x18 ^ uVar93 >> 8;\n  uVar56 = uVar57 << 0x18 ^ uVar57 >> 8;\n  uVar57 = uVar80 << 0x18 ^ uVar80 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar94 = uVar93 + uVar94;\n  uVar99 = uVar56 + uVar99;\n  uVar103 = uVar57 + uVar103;\n  uVar106 = uVar15 + uVar106;\n  uVar96 = uVar94 ^ uVar96;\n  uVar101 = uVar99 ^ uVar101;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  auVar58._0_4_ = uVar96 >> 7;\n  auVar58._4_4_ = uVar101 >> 7;\n  auVar58._8_4_ = uVar81 >> 7;\n  auVar58._12_4_ = uVar91 >> 7;\n  auVar16._0_4_ = uVar96 << 0x19;\n  auVar16._4_4_ = uVar101 << 0x19;\n  auVar16._8_4_ = uVar81 << 0x19;\n  auVar16._12_4_ = uVar91 << 0x19;\n  auVar16 = auVar16 ^ auVar58;\n  auVar70._0_12_ = auVar16._4_12_;\n  auVar70._12_4_ = auVar16._0_4_;\n  iVar9 = param_2[10];\n  iVar10 = param_2[8];\n  iVar11 = param_2[0xf];\n  iVar12 = param_2[0xd];\n  uVar81 = iVar10 + uVar110 + auVar16._4_4_;\n  uVar91 = iVar9 + uVar119 + auVar16._8_4_;\n  uVar92 = iVar7 + uVar120 + auVar16._12_4_;\n  uVar119 = iVar8 + uVar121 + auVar16._0_4_;\n  uVar15 = uVar15 ^ uVar81;\n  uVar93 = uVar93 ^ uVar91;\n  uVar56 = uVar56 ^ uVar92;\n  uVar57 = uVar57 ^ uVar119;\n  iVar13 = param_2[0xb];\n  iVar14 = param_2[9];\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar103 + uVar15;\n  iVar100 = uVar106 + uVar93;\n  auVar17._4_4_ = iVar100;\n  auVar17._0_4_ = iVar95;\n  iVar104 = uVar94 + uVar56;\n  iVar107 = uVar99 + uVar57;\n  auVar17._8_4_ = iVar104;\n  auVar17._12_4_ = iVar107;\n  auVar17 = auVar17 ^ auVar70;\n  uVar80 = auVar17._0_4_ << 0x14 ^ auVar17._0_4_ >> 0xc;\n  uVar96 = auVar17._4_4_ << 0x14 ^ auVar17._4_4_ >> 0xc;\n  uVar101 = auVar17._8_4_ << 0x14 ^ auVar17._8_4_ >> 0xc;\n  uVar110 = auVar17._12_4_ << 0x14 ^ auVar17._12_4_ >> 0xc;\n  uVar120 = iVar14 + uVar81 + uVar80;\n  uVar121 = iVar13 + uVar91 + uVar96;\n  uVar94 = iVar12 + uVar92 + uVar101;\n  uVar119 = iVar11 + uVar119 + uVar110;\n  uVar15 = uVar120 ^ uVar15;\n  uVar93 = uVar121 ^ uVar93;\n  uVar56 = uVar94 ^ uVar56;\n  uVar57 = uVar119 ^ uVar57;\n  auVar18._0_4_ = uVar15 >> 8;\n  auVar18._4_4_ = uVar93 >> 8;\n  auVar18._8_4_ = uVar56 >> 8;\n  auVar18._12_4_ = uVar57 >> 8;\n  auVar82._0_4_ = uVar15 << 0x18;\n  auVar82._4_4_ = uVar93 << 0x18;\n  auVar82._8_4_ = uVar56 << 0x18;\n  auVar82._12_4_ = uVar57 << 0x18;\n  auVar82 = auVar82 ^ auVar18;\n  uVar91 = auVar82._0_4_ + iVar95;\n  uVar92 = auVar82._4_4_ + iVar100;\n  uVar93 = auVar82._8_4_ + iVar104;\n  uVar81 = auVar82._12_4_ + iVar107;\n  uVar80 = uVar91 ^ uVar80;\n  uVar96 = uVar92 ^ uVar96;\n  uVar101 = uVar93 ^ uVar101;\n  uVar110 = uVar81 ^ uVar110;\n  uVar15 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar57 = uVar96 << 0x19 ^ uVar96 >> 7;\n  uVar80 = uVar101 << 0x19 ^ uVar101 >> 7;\n  uVar56 = uVar110 << 0x19 ^ uVar110 >> 7;\n  auVar19._0_12_ = auVar82._4_12_;\n  auVar19._12_4_ = auVar82._0_4_;\n  auVar98._0_4_ = iVar8 + uVar120 + uVar56;\n  auVar98._4_4_ = iVar97 + uVar121 + uVar15;\n  auVar98._8_4_ = iVar14 + uVar94 + uVar57;\n  auVar98._12_4_ = iVar12 + uVar119 + uVar80;\n  auVar19 = auVar19 ^ auVar98;\n  uVar103 = auVar19._0_4_ >> 0x10 ^ auVar19._0_4_ << 0x10;\n  uVar106 = auVar19._4_4_ >> 0x10 ^ auVar19._4_4_ << 0x10;\n  uVar108 = auVar19._8_4_ >> 0x10 ^ auVar19._8_4_ << 0x10;\n  uVar122 = auVar19._12_4_ >> 0x10 ^ auVar19._12_4_ << 0x10;\n  uVar93 = uVar93 + uVar103;\n  uVar81 = uVar81 + uVar106;\n  uVar91 = uVar91 + uVar108;\n  uVar92 = uVar92 + uVar122;\n  uVar56 = uVar93 ^ uVar56;\n  uVar15 = uVar81 ^ uVar15;\n  uVar57 = uVar91 ^ uVar57;\n  uVar80 = uVar92 ^ uVar80;\n  uVar96 = uVar56 << 0x14 ^ uVar56 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar119 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar120 = iVar9 + auVar98._0_4_ + uVar96;\n  uVar121 = iVar10 + auVar98._4_4_ + uVar101;\n  uVar94 = iVar11 + auVar98._8_4_ + uVar110;\n  uVar99 = iVar105 + auVar98._12_4_ + uVar119;\n  uVar103 = uVar103 ^ uVar120;\n  uVar106 = uVar106 ^ uVar121;\n  uVar108 = uVar108 ^ uVar94;\n  uVar122 = uVar122 ^ uVar99;\n  uVar56 = uVar103 << 0x18 ^ uVar103 >> 8;\n  uVar57 = uVar106 << 0x18 ^ uVar106 >> 8;\n  uVar80 = uVar108 << 0x18 ^ uVar108 >> 8;\n  uVar15 = uVar122 << 0x18 ^ uVar122 >> 8;\n  uVar93 = uVar93 + uVar56;\n  uVar81 = uVar81 + uVar57;\n  uVar91 = uVar91 + uVar80;\n  uVar92 = uVar92 + uVar15;\n  uVar96 = uVar93 ^ uVar96;\n  uVar101 = uVar81 ^ uVar101;\n  uVar110 = uVar91 ^ uVar110;\n  uVar119 = uVar92 ^ uVar119;\n  auVar59._0_4_ = uVar96 >> 7;\n  auVar59._4_4_ = uVar101 >> 7;\n  auVar59._8_4_ = uVar110 >> 7;\n  auVar59._12_4_ = uVar119 >> 7;\n  auVar20._0_4_ = uVar96 << 0x19;\n  auVar20._4_4_ = uVar101 << 0x19;\n  auVar20._8_4_ = uVar110 << 0x19;\n  auVar20._12_4_ = uVar119 << 0x19;\n  auVar20 = auVar20 ^ auVar59;\n  auVar71._0_12_ = auVar20._4_12_;\n  auVar71._12_4_ = auVar20._0_4_;\n  uVar96 = iVar109 + uVar120 + auVar20._4_4_;\n  uVar101 = iVar2 + uVar121 + auVar20._8_4_;\n  uVar110 = iVar13 + uVar94 + auVar20._12_4_;\n  uVar119 = iVar4 + uVar99 + auVar20._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar56 = uVar56 ^ uVar101;\n  uVar57 = uVar57 ^ uVar110;\n  uVar80 = uVar80 ^ uVar119;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  uVar80 = uVar80 >> 0x10 ^ uVar80 << 0x10;\n  iVar95 = uVar91 + uVar15;\n  iVar100 = uVar92 + uVar56;\n  auVar21._4_4_ = iVar100;\n  auVar21._0_4_ = iVar95;\n  iVar104 = uVar93 + uVar57;\n  iVar107 = uVar81 + uVar80;\n  auVar21._8_4_ = iVar104;\n  auVar21._12_4_ = iVar107;\n  auVar21 = auVar21 ^ auVar71;\n  uVar93 = auVar21._0_4_ << 0x14 ^ auVar21._0_4_ >> 0xc;\n  uVar81 = auVar21._4_4_ << 0x14 ^ auVar21._4_4_ >> 0xc;\n  uVar91 = auVar21._8_4_ << 0x14 ^ auVar21._8_4_ >> 0xc;\n  uVar92 = auVar21._12_4_ << 0x14 ^ auVar21._12_4_ >> 0xc;\n  uVar96 = iVar7 + uVar96 + uVar93;\n  uVar101 = iVar102 + uVar101 + uVar81;\n  uVar110 = iVar6 + uVar110 + uVar91;\n  uVar99 = iVar5 + uVar119 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar56 = uVar101 ^ uVar56;\n  uVar57 = uVar110 ^ uVar57;\n  uVar80 = uVar99 ^ uVar80;\n  auVar22._0_4_ = uVar15 >> 8;\n  auVar22._4_4_ = uVar56 >> 8;\n  auVar22._8_4_ = uVar57 >> 8;\n  auVar22._12_4_ = uVar80 >> 8;\n  auVar83._0_4_ = uVar15 << 0x18;\n  auVar83._4_4_ = uVar56 << 0x18;\n  auVar83._8_4_ = uVar57 << 0x18;\n  auVar83._12_4_ = uVar80 << 0x18;\n  auVar83 = auVar83 ^ auVar22;\n  uVar121 = auVar83._0_4_ + iVar95;\n  uVar94 = auVar83._4_4_ + iVar100;\n  uVar119 = auVar83._8_4_ + iVar104;\n  uVar120 = auVar83._12_4_ + iVar107;\n  uVar93 = uVar121 ^ uVar93;\n  uVar81 = uVar94 ^ uVar81;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar93 << 0x19 ^ uVar93 >> 7;\n  uVar57 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar111._0_4_ = iVar13 + uVar96 + uVar93;\n  auVar111._4_4_ = iVar7 + uVar101 + uVar15;\n  auVar111._8_4_ = iVar4 + uVar110 + uVar57;\n  auVar111._12_4_ = iVar11 + uVar99 + uVar80;\n  auVar23._0_12_ = auVar83._4_12_;\n  auVar23._12_4_ = auVar83._0_4_;\n  auVar23 = auVar23 ^ auVar111;\n  uVar56 = auVar23._0_4_ >> 0x10 ^ auVar23._0_4_ << 0x10;\n  uVar81 = auVar23._4_4_ >> 0x10 ^ auVar23._4_4_ << 0x10;\n  uVar91 = auVar23._8_4_ >> 0x10 ^ auVar23._8_4_ << 0x10;\n  uVar92 = auVar23._12_4_ >> 0x10 ^ auVar23._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar10 + auVar111._0_4_ + uVar96;\n  uVar103 = iVar2 + auVar111._4_4_ + uVar101;\n  uVar106 = iVar102 + auVar111._8_4_ + uVar110;\n  uVar108 = iVar12 + auVar111._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar60._0_4_ = uVar96 >> 7;\n  auVar60._4_4_ = uVar101 >> 7;\n  auVar60._8_4_ = uVar110 >> 7;\n  auVar60._12_4_ = uVar80 >> 7;\n  auVar24._0_4_ = uVar96 << 0x19;\n  auVar24._4_4_ = uVar101 << 0x19;\n  auVar24._8_4_ = uVar110 << 0x19;\n  auVar24._12_4_ = uVar80 << 0x19;\n  auVar24 = auVar24 ^ auVar60;\n  auVar72._0_12_ = auVar24._4_12_;\n  auVar72._12_4_ = auVar24._0_4_;\n  uVar96 = iVar9 + uVar99 + auVar24._4_4_;\n  uVar101 = iVar5 + uVar103 + auVar24._8_4_;\n  uVar110 = iVar6 + uVar106 + auVar24._12_4_;\n  uVar99 = iVar14 + uVar108 + auVar24._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar121 + uVar15;\n  iVar100 = uVar94 + uVar93;\n  auVar25._4_4_ = iVar100;\n  auVar25._0_4_ = iVar95;\n  iVar104 = uVar119 + uVar56;\n  iVar107 = uVar120 + uVar57;\n  auVar25._8_4_ = iVar104;\n  auVar25._12_4_ = iVar107;\n  auVar25 = auVar25 ^ auVar72;\n  uVar81 = auVar25._0_4_ << 0x14 ^ auVar25._0_4_ >> 0xc;\n  uVar80 = auVar25._4_4_ << 0x14 ^ auVar25._4_4_ >> 0xc;\n  uVar91 = auVar25._8_4_ << 0x14 ^ auVar25._8_4_ >> 0xc;\n  uVar92 = auVar25._12_4_ << 0x14 ^ auVar25._12_4_ >> 0xc;\n  uVar96 = iVar8 + uVar96 + uVar81;\n  uVar101 = iVar105 + uVar101 + uVar80;\n  uVar110 = iVar109 + uVar110 + uVar91;\n  uVar99 = iVar97 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar99 ^ uVar57;\n  auVar26._0_4_ = uVar15 >> 8;\n  auVar26._4_4_ = uVar93 >> 8;\n  auVar26._8_4_ = uVar56 >> 8;\n  auVar26._12_4_ = uVar57 >> 8;\n  auVar84._0_4_ = uVar15 << 0x18;\n  auVar84._4_4_ = uVar93 << 0x18;\n  auVar84._8_4_ = uVar56 << 0x18;\n  auVar84._12_4_ = uVar57 << 0x18;\n  auVar84 = auVar84 ^ auVar26;\n  uVar121 = auVar84._0_4_ + iVar95;\n  uVar94 = auVar84._4_4_ + iVar100;\n  uVar119 = auVar84._8_4_ + iVar104;\n  uVar120 = auVar84._12_4_ + iVar107;\n  uVar81 = uVar121 ^ uVar81;\n  uVar80 = uVar94 ^ uVar80;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar57 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar112._0_4_ = iVar6 + uVar96 + uVar93;\n  auVar112._4_4_ = iVar5 + uVar101 + uVar15;\n  auVar112._8_4_ = iVar12 + uVar110 + uVar57;\n  auVar112._12_4_ = iVar13 + uVar99 + uVar80;\n  auVar27._0_12_ = auVar84._4_12_;\n  auVar27._12_4_ = auVar84._0_4_;\n  auVar27 = auVar27 ^ auVar112;\n  uVar56 = auVar27._0_4_ >> 0x10 ^ auVar27._0_4_ << 0x10;\n  uVar81 = auVar27._4_4_ >> 0x10 ^ auVar27._4_4_ << 0x10;\n  uVar91 = auVar27._8_4_ >> 0x10 ^ auVar27._8_4_ << 0x10;\n  uVar92 = auVar27._12_4_ >> 0x10 ^ auVar27._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar14 + auVar112._0_4_ + uVar96;\n  uVar103 = iVar109 + auVar112._4_4_ + uVar101;\n  uVar106 = iVar7 + auVar112._8_4_ + uVar110;\n  uVar108 = iVar8 + auVar112._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar61._0_4_ = uVar96 >> 7;\n  auVar61._4_4_ = uVar101 >> 7;\n  auVar61._8_4_ = uVar110 >> 7;\n  auVar61._12_4_ = uVar80 >> 7;\n  auVar28._0_4_ = uVar96 << 0x19;\n  auVar28._4_4_ = uVar101 << 0x19;\n  auVar28._8_4_ = uVar110 << 0x19;\n  auVar28._12_4_ = uVar80 << 0x19;\n  auVar28 = auVar28 ^ auVar61;\n  auVar73._0_12_ = auVar28._4_12_;\n  auVar73._12_4_ = auVar28._0_4_;\n  uVar96 = iVar102 + uVar99 + auVar28._4_4_;\n  uVar101 = iVar4 + uVar103 + auVar28._8_4_;\n  uVar110 = iVar97 + uVar106 + auVar28._12_4_;\n  uVar99 = iVar11 + uVar108 + auVar28._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar121 + uVar15;\n  iVar100 = uVar94 + uVar93;\n  auVar29._4_4_ = iVar100;\n  auVar29._0_4_ = iVar95;\n  iVar104 = uVar119 + uVar56;\n  iVar107 = uVar120 + uVar57;\n  auVar29._8_4_ = iVar104;\n  auVar29._12_4_ = iVar107;\n  auVar29 = auVar29 ^ auVar73;\n  uVar81 = auVar29._0_4_ << 0x14 ^ auVar29._0_4_ >> 0xc;\n  uVar80 = auVar29._4_4_ << 0x14 ^ auVar29._4_4_ >> 0xc;\n  uVar91 = auVar29._8_4_ << 0x14 ^ auVar29._8_4_ >> 0xc;\n  uVar92 = auVar29._12_4_ << 0x14 ^ auVar29._12_4_ >> 0xc;\n  uVar96 = iVar105 + uVar96 + uVar81;\n  uVar101 = iVar9 + uVar101 + uVar80;\n  uVar110 = iVar2 + uVar110 + uVar91;\n  uVar99 = iVar10 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar99 ^ uVar57;\n  auVar30._0_4_ = uVar15 >> 8;\n  auVar30._4_4_ = uVar93 >> 8;\n  auVar30._8_4_ = uVar56 >> 8;\n  auVar30._12_4_ = uVar57 >> 8;\n  auVar85._0_4_ = uVar15 << 0x18;\n  auVar85._4_4_ = uVar93 << 0x18;\n  auVar85._8_4_ = uVar56 << 0x18;\n  auVar85._12_4_ = uVar57 << 0x18;\n  auVar85 = auVar85 ^ auVar30;\n  uVar121 = auVar85._0_4_ + iVar95;\n  uVar94 = auVar85._4_4_ + iVar100;\n  uVar119 = auVar85._8_4_ + iVar104;\n  uVar120 = auVar85._12_4_ + iVar107;\n  uVar81 = uVar121 ^ uVar81;\n  uVar80 = uVar94 ^ uVar80;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar57 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar113._0_4_ = iVar14 + uVar96 + uVar93;\n  auVar113._4_4_ = iVar4 + uVar101 + uVar15;\n  auVar113._8_4_ = iVar102 + uVar110 + uVar57;\n  auVar113._12_4_ = iVar9 + uVar99 + uVar80;\n  auVar31._0_12_ = auVar85._4_12_;\n  auVar31._12_4_ = auVar85._0_4_;\n  auVar31 = auVar31 ^ auVar113;\n  uVar56 = auVar31._0_4_ >> 0x10 ^ auVar31._0_4_ << 0x10;\n  uVar81 = auVar31._4_4_ >> 0x10 ^ auVar31._4_4_ << 0x10;\n  uVar91 = auVar31._8_4_ >> 0x10 ^ auVar31._8_4_ << 0x10;\n  uVar92 = auVar31._12_4_ >> 0x10 ^ auVar31._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar2 + auVar113._0_4_ + uVar96;\n  uVar103 = iVar6 + auVar113._4_4_ + uVar101;\n  uVar106 = iVar97 + auVar113._8_4_ + uVar110;\n  uVar108 = iVar11 + auVar113._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar62._0_4_ = uVar96 >> 7;\n  auVar62._4_4_ = uVar101 >> 7;\n  auVar62._8_4_ = uVar110 >> 7;\n  auVar62._12_4_ = uVar80 >> 7;\n  auVar32._0_4_ = uVar96 << 0x19;\n  auVar32._4_4_ = uVar101 << 0x19;\n  auVar32._8_4_ = uVar110 << 0x19;\n  auVar32._12_4_ = uVar80 << 0x19;\n  auVar32 = auVar32 ^ auVar62;\n  auVar74._0_12_ = auVar32._4_12_;\n  auVar74._12_4_ = auVar32._0_4_;\n  uVar96 = iVar8 + uVar99 + auVar32._4_4_;\n  uVar101 = iVar13 + uVar103 + auVar32._8_4_;\n  uVar110 = iVar105 + uVar106 + auVar32._12_4_;\n  uVar99 = iVar5 + uVar108 + auVar32._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar121 + uVar15;\n  iVar100 = uVar94 + uVar93;\n  auVar33._4_4_ = iVar100;\n  auVar33._0_4_ = iVar95;\n  iVar104 = uVar119 + uVar56;\n  iVar107 = uVar120 + uVar57;\n  auVar33._8_4_ = iVar104;\n  auVar33._12_4_ = iVar107;\n  auVar33 = auVar33 ^ auVar74;\n  uVar81 = auVar33._0_4_ << 0x14 ^ auVar33._0_4_ >> 0xc;\n  uVar80 = auVar33._4_4_ << 0x14 ^ auVar33._4_4_ >> 0xc;\n  uVar91 = auVar33._8_4_ << 0x14 ^ auVar33._8_4_ >> 0xc;\n  uVar92 = auVar33._12_4_ << 0x14 ^ auVar33._12_4_ >> 0xc;\n  uVar96 = iVar109 + uVar96 + uVar81;\n  uVar101 = iVar7 + uVar101 + uVar80;\n  uVar110 = iVar10 + uVar110 + uVar91;\n  uVar99 = iVar12 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar99 ^ uVar57;\n  auVar34._0_4_ = uVar15 >> 8;\n  auVar34._4_4_ = uVar93 >> 8;\n  auVar34._8_4_ = uVar56 >> 8;\n  auVar34._12_4_ = uVar57 >> 8;\n  auVar86._0_4_ = uVar15 << 0x18;\n  auVar86._4_4_ = uVar93 << 0x18;\n  auVar86._8_4_ = uVar56 << 0x18;\n  auVar86._12_4_ = uVar57 << 0x18;\n  auVar86 = auVar86 ^ auVar34;\n  uVar121 = auVar86._0_4_ + iVar95;\n  uVar94 = auVar86._4_4_ + iVar100;\n  uVar119 = auVar86._8_4_ + iVar104;\n  uVar120 = auVar86._12_4_ + iVar107;\n  uVar81 = uVar121 ^ uVar81;\n  uVar80 = uVar94 ^ uVar80;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar57 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar114._0_4_ = iVar102 + uVar96 + uVar93;\n  auVar114._4_4_ = iVar105 + uVar101 + uVar15;\n  auVar114._8_4_ = iVar2 + uVar110 + uVar57;\n  auVar114._12_4_ = iVar10 + uVar99 + uVar80;\n  auVar35._0_12_ = auVar86._4_12_;\n  auVar35._12_4_ = auVar86._0_4_;\n  auVar35 = auVar35 ^ auVar114;\n  uVar56 = auVar35._0_4_ >> 0x10 ^ auVar35._0_4_ << 0x10;\n  uVar81 = auVar35._4_4_ >> 0x10 ^ auVar35._4_4_ << 0x10;\n  uVar91 = auVar35._8_4_ >> 0x10 ^ auVar35._8_4_ << 0x10;\n  uVar92 = auVar35._12_4_ >> 0x10 ^ auVar35._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar7 + auVar114._0_4_ + uVar96;\n  uVar103 = iVar9 + auVar114._4_4_ + uVar101;\n  uVar106 = iVar13 + auVar114._8_4_ + uVar110;\n  uVar108 = iVar5 + auVar114._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar63._0_4_ = uVar96 >> 7;\n  auVar63._4_4_ = uVar101 >> 7;\n  auVar63._8_4_ = uVar110 >> 7;\n  auVar63._12_4_ = uVar80 >> 7;\n  auVar36._0_4_ = uVar96 << 0x19;\n  auVar36._4_4_ = uVar101 << 0x19;\n  auVar36._8_4_ = uVar110 << 0x19;\n  auVar36._12_4_ = uVar80 << 0x19;\n  auVar36 = auVar36 ^ auVar63;\n  auVar75._0_12_ = auVar36._4_12_;\n  auVar75._12_4_ = auVar36._0_4_;\n  uVar96 = iVar97 + uVar99 + auVar36._4_4_;\n  uVar101 = iVar6 + uVar103 + auVar36._8_4_;\n  uVar110 = iVar11 + uVar106 + auVar36._12_4_;\n  uVar99 = iVar109 + uVar108 + auVar36._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar121 + uVar15;\n  iVar100 = uVar94 + uVar93;\n  auVar37._4_4_ = iVar100;\n  auVar37._0_4_ = iVar95;\n  iVar104 = uVar119 + uVar56;\n  iVar107 = uVar120 + uVar57;\n  auVar37._8_4_ = iVar104;\n  auVar37._12_4_ = iVar107;\n  auVar37 = auVar37 ^ auVar75;\n  uVar81 = auVar37._0_4_ << 0x14 ^ auVar37._0_4_ >> 0xc;\n  uVar80 = auVar37._4_4_ << 0x14 ^ auVar37._4_4_ >> 0xc;\n  uVar91 = auVar37._8_4_ << 0x14 ^ auVar37._8_4_ >> 0xc;\n  uVar92 = auVar37._12_4_ << 0x14 ^ auVar37._12_4_ >> 0xc;\n  uVar96 = iVar12 + uVar96 + uVar81;\n  uVar101 = iVar4 + uVar101 + uVar80;\n  uVar110 = iVar8 + uVar110 + uVar91;\n  uVar99 = iVar14 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar99 ^ uVar57;\n  auVar38._0_4_ = uVar15 >> 8;\n  auVar38._4_4_ = uVar93 >> 8;\n  auVar38._8_4_ = uVar56 >> 8;\n  auVar38._12_4_ = uVar57 >> 8;\n  auVar87._0_4_ = uVar15 << 0x18;\n  auVar87._4_4_ = uVar93 << 0x18;\n  auVar87._8_4_ = uVar56 << 0x18;\n  auVar87._12_4_ = uVar57 << 0x18;\n  auVar87 = auVar87 ^ auVar38;\n  uVar121 = auVar87._0_4_ + iVar95;\n  uVar94 = auVar87._4_4_ + iVar100;\n  uVar119 = auVar87._8_4_ + iVar104;\n  uVar120 = auVar87._12_4_ + iVar107;\n  uVar81 = uVar121 ^ uVar81;\n  uVar80 = uVar94 ^ uVar80;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar57 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar115._0_4_ = iVar7 + uVar96 + uVar93;\n  auVar115._4_4_ = iVar109 + uVar101 + uVar15;\n  auVar115._8_4_ = iVar8 + uVar110 + uVar57;\n  auVar115._12_4_ = iVar97 + uVar99 + uVar80;\n  auVar39._0_12_ = auVar87._4_12_;\n  auVar39._12_4_ = auVar87._0_4_;\n  auVar39 = auVar39 ^ auVar115;\n  uVar56 = auVar39._0_4_ >> 0x10 ^ auVar39._0_4_ << 0x10;\n  uVar81 = auVar39._4_4_ >> 0x10 ^ auVar39._4_4_ << 0x10;\n  uVar91 = auVar39._8_4_ >> 0x10 ^ auVar39._8_4_ << 0x10;\n  uVar92 = auVar39._12_4_ >> 0x10 ^ auVar39._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar4 + auVar115._0_4_ + uVar96;\n  uVar103 = iVar11 + auVar115._4_4_ + uVar101;\n  uVar106 = iVar12 + auVar115._8_4_ + uVar110;\n  uVar108 = iVar9 + auVar115._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar64._0_4_ = uVar96 >> 7;\n  auVar64._4_4_ = uVar101 >> 7;\n  auVar64._8_4_ = uVar110 >> 7;\n  auVar64._12_4_ = uVar80 >> 7;\n  auVar40._0_4_ = uVar96 << 0x19;\n  auVar40._4_4_ = uVar101 << 0x19;\n  auVar40._8_4_ = uVar110 << 0x19;\n  auVar40._12_4_ = uVar80 << 0x19;\n  auVar40 = auVar40 ^ auVar64;\n  auVar76._0_12_ = auVar40._4_12_;\n  auVar76._12_4_ = auVar40._0_4_;\n  uVar96 = iVar2 + uVar99 + auVar40._4_4_;\n  uVar101 = iVar105 + uVar103 + auVar40._8_4_;\n  uVar110 = iVar14 + uVar106 + auVar40._12_4_;\n  uVar99 = iVar10 + uVar108 + auVar40._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar121 + uVar15;\n  iVar100 = uVar94 + uVar93;\n  auVar41._4_4_ = iVar100;\n  auVar41._0_4_ = iVar95;\n  iVar104 = uVar119 + uVar56;\n  iVar107 = uVar120 + uVar57;\n  auVar41._8_4_ = iVar104;\n  auVar41._12_4_ = iVar107;\n  auVar41 = auVar41 ^ auVar76;\n  uVar81 = auVar41._0_4_ << 0x14 ^ auVar41._0_4_ >> 0xc;\n  uVar80 = auVar41._4_4_ << 0x14 ^ auVar41._4_4_ >> 0xc;\n  uVar91 = auVar41._8_4_ << 0x14 ^ auVar41._8_4_ >> 0xc;\n  uVar92 = auVar41._12_4_ << 0x14 ^ auVar41._12_4_ >> 0xc;\n  uVar96 = iVar6 + uVar96 + uVar81;\n  uVar101 = iVar5 + uVar101 + uVar80;\n  uVar110 = iVar102 + uVar110 + uVar91;\n  uVar99 = iVar13 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar99 ^ uVar57;\n  auVar42._0_4_ = uVar15 >> 8;\n  auVar42._4_4_ = uVar93 >> 8;\n  auVar42._8_4_ = uVar56 >> 8;\n  auVar42._12_4_ = uVar57 >> 8;\n  auVar88._0_4_ = uVar15 << 0x18;\n  auVar88._4_4_ = uVar93 << 0x18;\n  auVar88._8_4_ = uVar56 << 0x18;\n  auVar88._12_4_ = uVar57 << 0x18;\n  auVar88 = auVar88 ^ auVar42;\n  uVar121 = auVar88._0_4_ + iVar95;\n  uVar94 = auVar88._4_4_ + iVar100;\n  uVar119 = auVar88._8_4_ + iVar104;\n  uVar120 = auVar88._12_4_ + iVar107;\n  uVar81 = uVar121 ^ uVar81;\n  uVar80 = uVar94 ^ uVar80;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar57 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar43._0_12_ = auVar88._4_12_;\n  auVar43._12_4_ = auVar88._0_4_;\n  auVar116._0_4_ = iVar12 + uVar96 + uVar93;\n  auVar116._4_4_ = iVar6 + uVar101 + uVar15;\n  auVar116._8_4_ = iVar7 + uVar110 + uVar57;\n  auVar116._12_4_ = iVar5 + uVar99 + uVar80;\n  auVar43 = auVar43 ^ auVar116;\n  uVar56 = auVar43._0_4_ >> 0x10 ^ auVar43._0_4_ << 0x10;\n  uVar81 = auVar43._4_4_ >> 0x10 ^ auVar43._4_4_ << 0x10;\n  uVar91 = auVar43._8_4_ >> 0x10 ^ auVar43._8_4_ << 0x10;\n  uVar92 = auVar43._12_4_ >> 0x10 ^ auVar43._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar13 + auVar116._0_4_ + uVar96;\n  uVar103 = iVar8 + auVar116._4_4_ + uVar101;\n  uVar106 = iVar109 + auVar116._8_4_ + uVar110;\n  uVar108 = iVar14 + auVar116._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar65._0_4_ = uVar96 >> 7;\n  auVar65._4_4_ = uVar101 >> 7;\n  auVar65._8_4_ = uVar110 >> 7;\n  auVar65._12_4_ = uVar80 >> 7;\n  auVar44._0_4_ = uVar96 << 0x19;\n  auVar44._4_4_ = uVar101 << 0x19;\n  auVar44._8_4_ = uVar110 << 0x19;\n  auVar44._12_4_ = uVar80 << 0x19;\n  auVar44 = auVar44 ^ auVar65;\n  auVar77._0_12_ = auVar44._4_12_;\n  auVar77._12_4_ = auVar44._0_4_;\n  uVar96 = iVar4 + uVar99 + auVar44._4_4_;\n  uVar101 = iVar11 + uVar103 + auVar44._8_4_;\n  uVar110 = iVar10 + uVar106 + auVar44._12_4_;\n  uVar99 = iVar102 + uVar108 + auVar44._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar121 + uVar15;\n  iVar100 = uVar94 + uVar93;\n  auVar45._4_4_ = iVar100;\n  auVar45._0_4_ = iVar95;\n  iVar104 = uVar119 + uVar56;\n  iVar107 = uVar120 + uVar57;\n  auVar45._8_4_ = iVar104;\n  auVar45._12_4_ = iVar107;\n  auVar45 = auVar45 ^ auVar77;\n  uVar81 = auVar45._0_4_ << 0x14 ^ auVar45._0_4_ >> 0xc;\n  uVar80 = auVar45._4_4_ << 0x14 ^ auVar45._4_4_ >> 0xc;\n  uVar91 = auVar45._8_4_ << 0x14 ^ auVar45._8_4_ >> 0xc;\n  uVar92 = auVar45._12_4_ << 0x14 ^ auVar45._12_4_ >> 0xc;\n  uVar96 = iVar2 + uVar96 + uVar81;\n  uVar101 = iVar97 + uVar101 + uVar80;\n  uVar110 = iVar105 + uVar110 + uVar91;\n  uVar99 = iVar9 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar99 ^ uVar57;\n  auVar46._0_4_ = uVar15 >> 8;\n  auVar46._4_4_ = uVar93 >> 8;\n  auVar46._8_4_ = uVar56 >> 8;\n  auVar46._12_4_ = uVar57 >> 8;\n  auVar89._0_4_ = uVar15 << 0x18;\n  auVar89._4_4_ = uVar93 << 0x18;\n  auVar89._8_4_ = uVar56 << 0x18;\n  auVar89._12_4_ = uVar57 << 0x18;\n  auVar89 = auVar89 ^ auVar46;\n  uVar121 = auVar89._0_4_ + iVar95;\n  uVar94 = auVar89._4_4_ + iVar100;\n  uVar119 = auVar89._8_4_ + iVar104;\n  uVar120 = auVar89._12_4_ + iVar107;\n  uVar81 = uVar121 ^ uVar81;\n  uVar80 = uVar94 ^ uVar80;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar57 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar117._0_4_ = iVar105 + uVar96 + uVar93;\n  auVar117._4_4_ = iVar8 + uVar101 + uVar15;\n  auVar117._8_4_ = iVar13 + uVar110 + uVar57;\n  auVar117._12_4_ = iVar2 + uVar99 + uVar80;\n  auVar47._0_12_ = auVar89._4_12_;\n  auVar47._12_4_ = auVar89._0_4_;\n  auVar47 = auVar47 ^ auVar117;\n  uVar56 = auVar47._0_4_ >> 0x10 ^ auVar47._0_4_ << 0x10;\n  uVar81 = auVar47._4_4_ >> 0x10 ^ auVar47._4_4_ << 0x10;\n  uVar91 = auVar47._8_4_ >> 0x10 ^ auVar47._8_4_ << 0x10;\n  uVar92 = auVar47._12_4_ >> 0x10 ^ auVar47._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar11 + auVar117._0_4_ + uVar96;\n  uVar103 = iVar14 + auVar117._4_4_ + uVar101;\n  uVar106 = iVar5 + auVar117._8_4_ + uVar110;\n  uVar108 = iVar10 + auVar117._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar66._0_4_ = uVar96 >> 7;\n  auVar66._4_4_ = uVar101 >> 7;\n  auVar66._8_4_ = uVar110 >> 7;\n  auVar66._12_4_ = uVar80 >> 7;\n  auVar48._0_4_ = uVar96 << 0x19;\n  auVar48._4_4_ = uVar101 << 0x19;\n  auVar48._8_4_ = uVar110 << 0x19;\n  auVar48._12_4_ = uVar80 << 0x19;\n  auVar48 = auVar48 ^ auVar66;\n  auVar78._0_12_ = auVar48._4_12_;\n  auVar78._12_4_ = auVar48._0_4_;\n  uVar96 = iVar7 + uVar99 + auVar48._4_4_;\n  uVar101 = iVar12 + uVar103 + auVar48._8_4_;\n  uVar110 = iVar109 + uVar106 + auVar48._12_4_;\n  uVar99 = iVar9 + uVar108 + auVar48._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar95 = uVar121 + uVar15;\n  iVar100 = uVar94 + uVar93;\n  auVar49._4_4_ = iVar100;\n  auVar49._0_4_ = iVar95;\n  iVar104 = uVar119 + uVar56;\n  iVar107 = uVar120 + uVar57;\n  auVar49._8_4_ = iVar104;\n  auVar49._12_4_ = iVar107;\n  auVar49 = auVar49 ^ auVar78;\n  uVar81 = auVar49._0_4_ << 0x14 ^ auVar49._0_4_ >> 0xc;\n  uVar80 = auVar49._4_4_ << 0x14 ^ auVar49._4_4_ >> 0xc;\n  uVar91 = auVar49._8_4_ << 0x14 ^ auVar49._8_4_ >> 0xc;\n  uVar92 = auVar49._12_4_ << 0x14 ^ auVar49._12_4_ >> 0xc;\n  uVar96 = iVar102 + uVar96 + uVar81;\n  uVar101 = iVar6 + uVar101 + uVar80;\n  uVar110 = iVar97 + uVar110 + uVar91;\n  uVar99 = iVar4 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar99 ^ uVar57;\n  auVar50._0_4_ = uVar15 >> 8;\n  auVar50._4_4_ = uVar93 >> 8;\n  auVar50._8_4_ = uVar56 >> 8;\n  auVar50._12_4_ = uVar57 >> 8;\n  auVar90._0_4_ = uVar15 << 0x18;\n  auVar90._4_4_ = uVar93 << 0x18;\n  auVar90._8_4_ = uVar56 << 0x18;\n  auVar90._12_4_ = uVar57 << 0x18;\n  auVar90 = auVar90 ^ auVar50;\n  uVar121 = auVar90._0_4_ + iVar95;\n  uVar94 = auVar90._4_4_ + iVar100;\n  uVar119 = auVar90._8_4_ + iVar104;\n  uVar120 = auVar90._12_4_ + iVar107;\n  uVar81 = uVar121 ^ uVar81;\n  uVar80 = uVar94 ^ uVar80;\n  uVar91 = uVar119 ^ uVar91;\n  uVar92 = uVar120 ^ uVar92;\n  uVar15 = uVar81 << 0x19 ^ uVar81 >> 7;\n  uVar57 = uVar80 << 0x19 ^ uVar80 >> 7;\n  uVar80 = uVar91 << 0x19 ^ uVar91 >> 7;\n  uVar93 = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar118._0_4_ = iVar9 + uVar96 + uVar93;\n  auVar118._4_4_ = iVar10 + uVar101 + uVar15;\n  auVar118._8_4_ = iVar6 + uVar110 + uVar57;\n  auVar118._12_4_ = iVar109 + uVar99 + uVar80;\n  auVar51._0_12_ = auVar90._4_12_;\n  auVar51._12_4_ = auVar90._0_4_;\n  auVar51 = auVar51 ^ auVar118;\n  uVar56 = auVar51._0_4_ >> 0x10 ^ auVar51._0_4_ << 0x10;\n  uVar81 = auVar51._4_4_ >> 0x10 ^ auVar51._4_4_ << 0x10;\n  uVar91 = auVar51._8_4_ >> 0x10 ^ auVar51._8_4_ << 0x10;\n  uVar92 = auVar51._12_4_ >> 0x10 ^ auVar51._12_4_ << 0x10;\n  uVar119 = uVar119 + uVar56;\n  uVar120 = uVar120 + uVar81;\n  uVar121 = uVar121 + uVar91;\n  uVar94 = uVar94 + uVar92;\n  uVar93 = uVar119 ^ uVar93;\n  uVar15 = uVar120 ^ uVar15;\n  uVar57 = uVar121 ^ uVar57;\n  uVar80 = uVar94 ^ uVar80;\n  uVar96 = uVar93 << 0x14 ^ uVar93 >> 0xc;\n  uVar101 = uVar15 << 0x14 ^ uVar15 >> 0xc;\n  uVar110 = uVar57 << 0x14 ^ uVar57 >> 0xc;\n  uVar80 = uVar80 << 0x14 ^ uVar80 >> 0xc;\n  uVar99 = iVar102 + auVar118._0_4_ + uVar96;\n  uVar103 = iVar97 + auVar118._4_4_ + uVar101;\n  uVar106 = iVar105 + auVar118._8_4_ + uVar110;\n  uVar108 = iVar4 + auVar118._12_4_ + uVar80;\n  uVar56 = uVar99 ^ uVar56;\n  uVar81 = uVar103 ^ uVar81;\n  uVar91 = uVar106 ^ uVar91;\n  uVar92 = uVar108 ^ uVar92;\n  uVar93 = uVar56 << 0x18 ^ uVar56 >> 8;\n  uVar56 = uVar81 << 0x18 ^ uVar81 >> 8;\n  uVar57 = uVar91 << 0x18 ^ uVar91 >> 8;\n  uVar15 = uVar92 << 0x18 ^ uVar92 >> 8;\n  uVar119 = uVar93 + uVar119;\n  uVar120 = uVar56 + uVar120;\n  uVar121 = uVar57 + uVar121;\n  uVar94 = uVar15 + uVar94;\n  uVar96 = uVar119 ^ uVar96;\n  uVar101 = uVar120 ^ uVar101;\n  uVar110 = uVar121 ^ uVar110;\n  uVar80 = uVar94 ^ uVar80;\n  auVar67._0_4_ = uVar96 >> 7;\n  auVar67._4_4_ = uVar101 >> 7;\n  auVar67._8_4_ = uVar110 >> 7;\n  auVar67._12_4_ = uVar80 >> 7;\n  auVar52._0_4_ = uVar96 << 0x19;\n  auVar52._4_4_ = uVar101 << 0x19;\n  auVar52._8_4_ = uVar110 << 0x19;\n  auVar52._12_4_ = uVar80 << 0x19;\n  auVar52 = auVar52 ^ auVar67;\n  auVar79._0_12_ = auVar52._4_12_;\n  auVar79._12_4_ = auVar52._0_4_;\n  uVar96 = iVar11 + uVar99 + auVar52._4_4_;\n  uVar101 = iVar14 + uVar103 + auVar52._8_4_;\n  uVar110 = iVar5 + uVar106 + auVar52._12_4_;\n  uVar99 = iVar12 + uVar108 + auVar52._0_4_;\n  uVar15 = uVar15 ^ uVar96;\n  uVar93 = uVar93 ^ uVar101;\n  uVar56 = uVar56 ^ uVar110;\n  uVar57 = uVar57 ^ uVar99;\n  uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n  uVar93 = uVar93 >> 0x10 ^ uVar93 << 0x10;\n  uVar56 = uVar56 >> 0x10 ^ uVar56 << 0x10;\n  uVar57 = uVar57 >> 0x10 ^ uVar57 << 0x10;\n  iVar97 = uVar121 + uVar15;\n  iVar102 = uVar94 + uVar93;\n  auVar53._4_4_ = iVar102;\n  auVar53._0_4_ = iVar97;\n  iVar105 = uVar119 + uVar56;\n  iVar109 = uVar120 + uVar57;\n  auVar53._8_4_ = iVar105;\n  auVar53._12_4_ = iVar109;\n  auVar53 = auVar53 ^ auVar79;\n  uVar81 = auVar53._0_4_ << 0x14 ^ auVar53._0_4_ >> 0xc;\n  uVar80 = auVar53._4_4_ << 0x14 ^ auVar53._4_4_ >> 0xc;\n  uVar91 = auVar53._8_4_ << 0x14 ^ auVar53._8_4_ >> 0xc;\n  uVar92 = auVar53._12_4_ << 0x14 ^ auVar53._12_4_ >> 0xc;\n  uVar96 = iVar13 + uVar96 + uVar81;\n  uVar101 = iVar8 + uVar101 + uVar80;\n  uVar110 = iVar7 + uVar110 + uVar91;\n  uVar119 = iVar2 + uVar99 + uVar92;\n  uVar15 = uVar96 ^ uVar15;\n  uVar93 = uVar101 ^ uVar93;\n  uVar56 = uVar110 ^ uVar56;\n  uVar57 = uVar119 ^ uVar57;\n  auVar54._0_4_ = uVar15 >> 8;\n  auVar54._4_4_ = uVar93 >> 8;\n  auVar54._8_4_ = uVar56 >> 8;\n  auVar54._12_4_ = uVar57 >> 8;\n  auVar69._0_4_ = uVar15 << 0x18;\n  auVar69._4_4_ = uVar93 << 0x18;\n  auVar69._8_4_ = uVar56 << 0x18;\n  auVar69._12_4_ = uVar57 << 0x18;\n  auVar69 = auVar69 ^ auVar54;\n  uVar15 = auVar69._0_4_ + iVar97;\n  uVar93 = auVar69._4_4_ + iVar102;\n  uVar56 = auVar69._8_4_ + iVar105;\n  uVar57 = auVar69._12_4_ + iVar109;\n  uVar81 = uVar15 ^ uVar81;\n  uVar80 = uVar93 ^ uVar80;\n  uVar91 = uVar56 ^ uVar91;\n  uVar92 = uVar57 ^ uVar92;\n  *puVar1 = uVar56 ^ uVar96 ^ *puVar1;\n  puVar1[1] = uVar57 ^ uVar101 ^ puVar1[1];\n  puVar1[2] = uVar15 ^ uVar110 ^ puVar1[2];\n  puVar1[3] = uVar93 ^ uVar119 ^ puVar1[3];\n  auVar68._4_4_ = uVar81 << 0x19 ^ uVar81 >> 7;\n  auVar68._0_4_ = uVar92 << 0x19 ^ uVar92 >> 7;\n  auVar68._8_4_ = uVar80 << 0x19 ^ uVar80 >> 7;\n  auVar68._12_4_ = uVar91 << 0x19 ^ uVar91 >> 7;\n  auVar55._0_12_ = auVar69._4_12_;\n  auVar55._12_4_ = auVar69._0_4_;\n  *(undefined1 (*) [16])(*(int *)(param_1 + 0xf4) + 0x10) =\n       auVar68 ^ auVar55 ^ *(undefined1 (*) [16])(puVar1 + 4);\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00405627",
      "entry": "00405627",
      "c": "\nvoid FUN_00405627(int param_1,int param_2)\n\n{\n  uint *puVar1;\n  int *piVar2;\n  int *piVar3;\n  uint uVar4;\n  int iVar5;\n  \n  piVar2 = (int *)(param_1 + 0xf8);\n  piVar3 = (int *)(param_1 + 0xf0);\n  if (0x40 < *(uint *)(param_1 + 0x100)) {\n    *(int *)*piVar2 = *(int *)*piVar2 + 0x40;\n    puVar1 = (uint *)*piVar2 + 1;\n    *puVar1 = *puVar1 + (uint)(*(uint *)*piVar2 < 0x40);\n    FUN_004040fe(param_1,(int *)*piVar3);\n    *(int *)(param_1 + 0x100) = *(int *)(param_1 + 0x100) + -0x40;\n    FUN_00420320((uint *)*piVar3,(uint *)*piVar3 + 0x10,*(uint *)(param_1 + 0x100));\n  }\n  uVar4 = *(uint *)(param_1 + 0x100);\n  *(int *)*piVar2 = *(int *)*piVar2 + uVar4;\n  puVar1 = (uint *)*piVar2 + 1;\n  *puVar1 = *puVar1 + (uint)(*(uint *)*piVar2 < uVar4);\n  if (*(char *)(param_1 + 0x104) != '\\0') {\n    *(undefined4 *)(*(int *)(param_1 + 0xfc) + 4) = 0xffffffff;\n  }\n  iVar5 = 0;\n  **(undefined4 **)(param_1 + 0xfc) = 0xffffffff;\n  _memset((void *)(*piVar3 + *(int *)(param_1 + 0x100)),0,0x80 - *(int *)(param_1 + 0x100));\n  FUN_004040fe(param_1,(int *)*piVar3);\n  do {\n    *(undefined4 *)(iVar5 + param_2) = *(undefined4 *)(iVar5 + *(int *)(param_1 + 0xf4));\n    iVar5 = iVar5 + 4;\n  } while (iVar5 < 0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004056ed",
      "entry": "004056ed",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004056ed(void *param_1,uint param_2,uint param_3)\n\n{\n  uint *puVar1;\n  int iVar2;\n  \n  if (1 < DAT_004481d8) {\n    _DAT_0043f000 = _DAT_00433790;\n    uRam0043f004 = _UNK_00433794;\n    uRam0043f008 = _UNK_00433798;\n    uRam0043f00c = _UNK_0043379c;\n    _DAT_0043f010 = _DAT_00433780;\n    uRam0043f014 = _UNK_00433784;\n    uRam0043f018 = _UNK_00433788;\n    uRam0043f01c = _UNK_0043378c;\n  }\n  FUN_00405a9a(param_1);\n  iVar2 = 0;\n  do {\n    *(undefined4 *)(iVar2 + *(int *)((int)param_1 + 0xf4)) =\n         *(undefined4 *)((int)&DAT_00433760 + iVar2);\n    iVar2 = iVar2 + 4;\n  } while (iVar2 < 0x20);\n  **(uint **)((int)param_1 + 0xf4) = **(uint **)((int)param_1 + 0xf4) ^ 0x2080020;\n  puVar1 = (uint *)(*(int *)((int)param_1 + 0xf4) + 8);\n  *puVar1 = *puVar1 ^ param_2;\n  puVar1 = (uint *)(*(int *)((int)param_1 + 0xf4) + 0xc);\n  *puVar1 = *puVar1 ^ (param_3 | 0x2000) << 0x10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405769",
      "entry": "00405769",
      "c": "\nvoid FUN_00405769(int param_1,uint *param_2,uint param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  \n  if (param_3 != 0) {\n    do {\n      uVar2 = 0x80 - *(int *)(param_1 + 0x100);\n      puVar1 = (uint *)(*(int *)(param_1 + 0xf0) + *(int *)(param_1 + 0x100));\n      if (param_3 <= uVar2) {\n        FUN_00420320(puVar1,param_2,param_3);\n        *(int *)(param_1 + 0x100) = *(int *)(param_1 + 0x100) + param_3;\n        return;\n      }\n      FUN_00420320(puVar1,param_2,uVar2);\n      *(int *)(param_1 + 0x100) = *(int *)(param_1 + 0x100) + uVar2;\n      **(int **)(param_1 + 0xf8) = **(int **)(param_1 + 0xf8) + 0x40;\n      puVar1 = *(uint **)(param_1 + 0xf8) + 1;\n      *puVar1 = *puVar1 + (uint)(**(uint **)(param_1 + 0xf8) < 0x40);\n      if (DAT_004481d8 < 2) {\n        FUN_004040fe(param_1,*(int **)(param_1 + 0xf0));\n      }\n      else {\n        FUN_00404518(param_1,*(int **)(param_1 + 0xf0));\n      }\n      FUN_00420320(*(uint **)(param_1 + 0xf0),*(uint **)(param_1 + 0xf0) + 0x10,0x40);\n      *(int *)(param_1 + 0x100) = *(int *)(param_1 + 0x100) + -0x40;\n      param_2 = (uint *)((int)param_2 + uVar2);\n      param_3 = param_3 - uVar2;\n    } while (param_3 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405821",
      "entry": "00405821",
      "c": "\nvoid FUN_00405821(int param_1,int param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint local_100 [64];\n  \n  puVar3 = local_100;\n  uVar4 = 0;\n  iVar2 = param_1;\n  do {\n    if (uVar4 < *(uint *)(param_1 + 0xb48)) {\n      uVar1 = *(uint *)(param_1 + 0xb48) - uVar4;\n      if (0x40 < uVar1) {\n        uVar1 = 0x40;\n      }\n      FUN_00405769(iVar2,(uint *)(param_1 + 0x948 + uVar4),uVar1);\n    }\n    FUN_00405627(iVar2,(int)puVar3);\n    uVar4 = uVar4 + 0x40;\n    puVar3 = puVar3 + 8;\n    iVar2 = iVar2 + 0x108;\n  } while (uVar4 < 0x200);\n  puVar3 = local_100;\n  iVar2 = 8;\n  do {\n    FUN_00405769(param_1 + 0x840,puVar3,0x20);\n    puVar3 = puVar3 + 8;\n    iVar2 = iVar2 + -1;\n  } while (iVar2 != 0);\n  FUN_00405627(param_1 + 0x840,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004058b1",
      "entry": "004058b1",
      "c": "\nvoid FUN_004058b1(void *param_1)\n\n{\n  void *pvVar1;\n  uint uVar2;\n  \n  _memset((void *)((int)param_1 + 0x948),0,0x200);\n  *(undefined4 *)((int)param_1 + 0xb48) = 0;\n  FUN_004056ed((void *)((int)param_1 + 0x840),0,1);\n  uVar2 = 0;\n  pvVar1 = param_1;\n  do {\n    FUN_004056ed(pvVar1,uVar2,0);\n    uVar2 = uVar2 + 1;\n    pvVar1 = (void *)((int)pvVar1 + 0x108);\n  } while (uVar2 < 8);\n  *(undefined1 *)((int)param_1 + 0x944) = 1;\n  *(undefined1 *)((int)param_1 + 0x83c) = 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405912",
      "entry": "00405912",
      "c": "\nvoid FUN_00405912(int param_1,uint *param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  int *piVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  uint local_78;\n  uint local_70;\n  int local_6c;\n  int local_60 [24];\n  \n  local_6c = *(int *)(param_1 + 0xb48);\n  uVar5 = 0x200 - local_6c;\n  if ((local_6c != 0) && (uVar5 <= param_3)) {\n    FUN_00420320((uint *)(local_6c + 0x948 + param_1),param_2,uVar5);\n    puVar2 = (uint *)(param_1 + 0x948);\n    iVar6 = 8;\n    iVar4 = param_1;\n    do {\n      FUN_00405769(iVar4,puVar2,0x40);\n      puVar2 = puVar2 + 0x10;\n      iVar4 = iVar4 + 0x108;\n      iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    param_2 = (uint *)((int)param_2 + uVar5);\n    param_3 = param_3 - uVar5;\n    local_6c = 0;\n  }\n  if (param_3 < 0x1000) {\n    uVar5 = 1;\n  }\n  else {\n    uVar5 = *(uint *)(param_1 + 0xb50);\n    if ((uVar5 == 6) || (uVar5 == 7)) {\n      uVar5 = 4;\n    }\n  }\n  uVar1 = 0;\n  local_70 = 0;\n  do {\n    local_78 = 0;\n    if (uVar5 != 0) {\n      iVar6 = uVar1 * 0x108 + param_1;\n      puVar2 = param_2 + uVar1 * 0x10;\n      piVar3 = local_60;\n      do {\n        if (7 < uVar1) break;\n        piVar3[2] = param_3;\n        piVar3[1] = (int)puVar2;\n        *piVar3 = iVar6;\n        if (uVar5 < 2) {\n          FUN_004040bc(piVar3);\n        }\n        else {\n          FUN_00410f86(*(void **)(param_1 + 0xb4c),0x4040b0,(uint)piVar3);\n        }\n        piVar3 = piVar3 + 3;\n        uVar1 = local_70 + 1;\n        puVar2 = puVar2 + 0x10;\n        iVar6 = iVar6 + 0x108;\n        local_78 = local_78 + 1;\n        local_70 = uVar1;\n      } while (local_78 < uVar5);\n    }\n    if (*(int *)(param_1 + 0xb4c) != 0) {\n      FUN_004111cf(*(int *)(param_1 + 0xb4c));\n      uVar1 = local_70;\n    }\n    if (7 < uVar1) {\n      uVar5 = param_3 & 0x1ff;\n      if (uVar5 != 0) {\n        FUN_00420320((uint *)(local_6c + 0x948 + param_1),(uint *)((int)param_2 + (param_3 - uVar5))\n                     ,uVar5);\n      }\n      *(uint *)(param_1 + 0xb48) = local_6c + uVar5;\n      return;\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00405a9a",
      "entry": "00405a9a",
      "c": "\nvoid __fastcall FUN_00405a9a(void *param_1)\n\n{\n  _memset(param_1,0,0xf0);\n  *(undefined4 *)((int)param_1 + 0x100) = 0;\n  *(undefined1 *)((int)param_1 + 0x104) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405abd",
      "entry": "00405abd",
      "c": "\nvoid * FUN_00405abd(void)\n\n{\n  void *extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  *(void **)(unaff_EBP + -0x10) = extraout_ECX;\n  FUN_0040b505();\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  FUN_00410637((int *)((int)extraout_ECX + 0xb31c));\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  FUN_00410637((int *)((int)extraout_ECX + 0xb37c));\n  *(undefined1 *)(unaff_EBP + -4) = 2;\n  FUN_00410637((int *)((int)extraout_ECX + 0xb3dc));\n  *(undefined1 *)(unaff_EBP + -4) = 3;\n  FUN_00410637((int *)((int)extraout_ECX + 0xb43c));\n  *(undefined1 *)(unaff_EBP + -4) = 4;\n  FUN_00410637((int *)((int)extraout_ECX + 0xb49c));\n  *(undefined1 *)(unaff_EBP + -4) = 5;\n  FUN_00405cac(extraout_ECX);\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return extraout_ECX;\n}\n\n"
    },
    {
      "name": "thunk_FUN_00401645",
      "entry": "00405b38",
      "c": "\nvoid __fastcall thunk_FUN_00401645(int *param_1)\n\n{\n  void *pvStack_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  pvStack_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &pvStack_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &pvStack_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2] * 2);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = pvStack_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405b3d",
      "entry": "00405b3d",
      "c": "\nvoid __thiscall FUN_00405b3d(void *this,wchar_t *param_1)\n\n{\n  FUN_00410659((void *)((int)this + 0xb43c),param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405b48",
      "entry": "00405b48",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined4 FUN_00405b48(void *param_1,char param_2,ushort *param_3,undefined4 param_4,uint param_5)\n\n{\n  char cVar1;\n  bool bVar2;\n  wchar_t *pwVar3;\n  wchar_t *pwVar4;\n  wchar_t *pwVar5;\n  undefined3 extraout_var;\n  undefined4 uVar6;\n  wchar_t local_2004 [2048];\n  wchar_t local_1004;\n  undefined2 local_1002;\n  short local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x405b52;\n  pwVar3 = (wchar_t *)FUN_0040b76c(param_3,(short *)0x0,0);\n  FUN_0041071e((int)param_1);\n  do {\n    uVar6 = FUN_004106e3(param_1,local_2004,0x800);\n    if ((char)uVar6 == '\\0') {\n      return uVar6;\n    }\n    pwVar4 = FUN_0040c27e(local_2004);\n    cVar1 = FUN_0040bd9d((uint)(ushort)*pwVar4);\n    if (param_2 == '\\0') {\n      if (cVar1 != '\\0') {\n        FUN_004105da(local_2004,0x4335f0,0x800);\n      }\n    }\n    else if (cVar1 != '\\0') {\n      *pwVar4 = L'\\0';\n    }\n    pwVar5 = (wchar_t *)FUN_0040b76c((ushort *)local_2004,(short *)0x0,0);\n    pwVar4 = pwVar3;\n    if ((*pwVar5 == L'*') && (cVar1 = FUN_0040bd9d((uint)(ushort)pwVar5[1]), cVar1 != '\\0')) {\n      local_1004 = L'.';\n      local_1002 = 0x5c;\n      FUN_00410602(local_1000,(int)pwVar3,0x800);\n      pwVar4 = &local_1004;\n    }\n    bVar2 = FUN_0040b1dc(pwVar5,pwVar4,param_5);\n  } while (!bVar2);\n  return CONCAT31(extraout_var,1);\n}\n\n"
    },
    {
      "name": "FUN_00405c4b",
      "entry": "00405c4b",
      "c": "\nuint __thiscall\nFUN_00405c4b(void *this,ushort *param_1,char param_2,undefined4 param_3,char param_4)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_00405b48((void *)((int)this + 0xb37c),param_2,param_1,param_3,6);\n  if ((char)uVar1 == '\\0') {\n    if ((param_4 != '\\0') && (*(int *)((int)this + 0xb3f4) != 0)) {\n      uVar1 = FUN_00405b48((void *)((int)this + 0xb3dc),param_2,param_1,param_3,6);\n      if ((char)uVar1 == '\\0') goto LAB_00405c6c;\n    }\n    uVar1 = uVar1 & 0xffffff00;\n  }\n  else {\nLAB_00405c6c:\n    uVar1 = CONCAT31((int3)(uVar1 >> 8),1);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00405ca1",
      "entry": "00405ca1",
      "c": "\nvoid __thiscall FUN_00405ca1(void *this,short *param_1,int param_2)\n\n{\n  FUN_004106e3((void *)((int)this + 0xb43c),param_1,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405cac",
      "entry": "00405cac",
      "c": "\nvoid __fastcall FUN_00405cac(void *param_1)\n\n{\n  FUN_0040b61e(param_1);\n  *(undefined2 *)((int)param_1 + 0x92fa) = 0;\n  *(undefined2 *)((int)param_1 + 0xa31a) = 0;\n  *(undefined2 *)((int)param_1 + 0x92f0) = 0;\n  *(undefined4 *)((int)param_1 + 0x92f4) = 0;\n  *(undefined1 *)((int)param_1 + 0x92f8) = 0;\n  FUN_00410708((int *)((int)param_1 + 0xb31c));\n  FUN_00410708((int *)((int)param_1 + 0xb37c));\n  FUN_00410708((int *)((int)param_1 + 0xb3dc));\n  FUN_00410708((int *)((int)param_1 + 0xb49c));\n  FUN_00410708((int *)((int)param_1 + 0xb43c));\n  RemoveAll((int *)((int)param_1 + 0x7170));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405d1a",
      "entry": "00405d1a",
      "c": "\nint __thiscall\nFUN_00405d1a(void *this,int param_1,char *param_2,uint param_3,undefined4 param_4,short *param_5,\n            int param_6)\n\n{\n  wchar_t *pwVar1;\n  bool bVar2;\n  undefined4 uVar3;\n  wchar_t *pwVar4;\n  int iVar5;\n  int iVar6;\n  \n  if ((param_5 != (short *)0x0) && (param_6 != 0)) {\n    *param_5 = 0;\n  }\n  iVar6 = 1;\n  pwVar1 = (wchar_t *)(param_1 + 0x28);\n  uVar3 = FUN_00405c4b(this,(ushort *)pwVar1,*(char *)(param_1 + 0x10f1),0,'\\x01');\n  if ((char)uVar3 == '\\0') {\n    FUN_0041071e((int)this + 0xb31c);\n    while (pwVar4 = (wchar_t *)FUN_00410695((void *)((int)this + 0xb31c)), pwVar4 != (wchar_t *)0x0)\n    {\n      bVar2 = FUN_0040b1dc(pwVar4,pwVar1,param_3);\n      if (bVar2) {\n        if (param_2 != (char *)0x0) {\n          iVar5 = thunk_FUN_00411fbb(pwVar4,pwVar1);\n          *param_2 = '\\x01' - (iVar5 != 0);\n        }\n        if (param_5 == (short *)0x0) {\n          return iVar6;\n        }\n        FUN_00410602(param_5,(int)pwVar4,param_6);\n        return iVar6;\n      }\n      iVar6 = iVar6 + 1;\n    }\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00405dce",
      "entry": "00405dce",
      "c": "\nuint FUN_00405dce(uint param_1,byte *param_2,int param_3)\n\n{\n  if (param_3 != 0) {\n    do {\n      param_1 = param_1 >> 8 ^ *(uint *)(&DAT_0043f020 + ((uint)*param_2 ^ param_1 & 0xff) * 4);\n      param_2 = param_2 + 1;\n      param_3 = param_3 + -1;\n    } while (param_3 != 0);\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00405dff",
      "entry": "00405dff",
      "c": "\nvoid FUN_00405dff(int param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  \n  uVar1 = 0;\n  if (*(int *)(param_1 + 4) == 0) {\n    do {\n      iVar4 = 8;\n      uVar2 = uVar1;\n      do {\n        uVar3 = uVar2 >> 1;\n        if ((uVar2 & 1) != 0) {\n          uVar3 = uVar3 ^ 0xedb88320;\n        }\n        iVar4 = iVar4 + -1;\n        uVar2 = uVar3;\n      } while (iVar4 != 0);\n      *(uint *)(param_1 + uVar1 * 4) = uVar3;\n      uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x100);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405e37",
      "entry": "00405e37",
      "c": "\nvoid * FUN_00405e37(void)\n\n{\n  void *_Dst;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  *(void **)(unaff_EBP + -0x10) = _Dst;\n  _eh_vector_constructor_iterator_(_Dst,300,4,FUN_00405ef0,FUN_00405f80);\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  _eh_vector_constructor_iterator_((void *)((int)_Dst + 0x4b4),0x178,4,FUN_00405ef0,FUN_00405f80);\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  FUN_0040e69c((int)_Dst + 0xa9c);\n  *(undefined4 *)((int)_Dst + 0xa98) = 0;\n  _memset(_Dst,0,0x4b0);\n  _memset((void *)((int)_Dst + 0x4b4),0,0x5e0);\n  *(undefined4 *)((int)_Dst + 0x4b0) = 0;\n  *(undefined4 *)((int)_Dst + 0xa94) = 0;\n  _memset((void *)((int)_Dst + 0xba4),0,0x400);\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return _Dst;\n}\n\n"
    },
    {
      "name": "FUN_00405ef0",
      "entry": "00405ef0",
      "c": "\nvoid * __fastcall FUN_00405ef0(void *param_1)\n\n{\n  FUN_0040f1d0(param_1);\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00405f02",
      "entry": "00405f02",
      "c": "\nvoid __fastcall FUN_00405f02(undefined1 *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  ExceptionList = &local_10;\n  FUN_0040f445(param_1,0x4b0);\n  FUN_0040f445(param_1 + 0x4b4,0x5e0);\n  _eh_vector_destructor_iterator_(param_1 + 0x4b4,0x178,4,FUN_00405f80);\n  _eh_vector_destructor_iterator_(param_1,300,4,FUN_00405f80);\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405f80",
      "entry": "00405f80",
      "c": "\nvoid __fastcall FUN_00405f80(undefined1 *param_1)\n\n{\n  param_1[0x100] = 0;\n  FUN_0040f445(param_1,0x100);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00405f85",
      "entry": "00405f85",
      "c": "\nvoid FUN_00405f85(int *param_1,ulong *param_2)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  uint uVar3;\n  uint local_24;\n  ulong local_20 [8];\n  \n  puVar1 = (uint *)(param_1 + 1);\n  if (*param_1 == 2) {\n    local_24 = *puVar1;\n    FUN_00406639(param_2,0x20,&local_24,4,local_20,(uint *)0x0,(char *)0x0,(uint *)0x0,(char *)0x0);\n    uVar2 = 0;\n    uVar3 = 0;\n    do {\n      uVar3 = (uint)*(byte *)((int)local_20 + uVar2) << (sbyte)((uVar2 & 3) << 3) ^ uVar3;\n      uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x20);\n    *puVar1 = uVar3;\n  }\n  if (*param_1 == 3) {\n    FUN_00406639(param_2,0x20,puVar1,0x20,local_20,(uint *)0x0,(char *)0x0,(uint *)0x0,(char *)0x0);\n    FUN_00420320(puVar1,local_20,0x20);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406010",
      "entry": "00406010",
      "c": "\nvoid __thiscall FUN_00406010(void *this,undefined1 (*param_1) [16],uint param_2)\n\n{\n  if ((*(int *)((int)this + 0xa98) == 4) || (*(int *)((int)this + 0xa98) == 5)) {\n    FUN_0040e9b7((void *)((int)this + 0xa9c),param_1,param_2,param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040603a",
      "entry": "0040603a",
      "c": "\nuint __thiscall\nFUN_0040603a(void *this,char param_1,int param_2,undefined4 *param_3,uint *param_4,int param_5,\n            uint param_6,uint *param_7,void *param_8)\n\n{\n  uint in_EAX;\n  undefined4 uVar1;\n  uint uVar2;\n  WCHAR local_180 [128];\n  CHAR local_80 [128];\n  \n  if ((*(char *)(param_3 + 0x40) == '\\0') || (param_2 == 0)) {\n    uVar2 = in_EAX & 0xffffff00;\n  }\n  else {\n    *(int *)((int)this + 0xa98) = param_2;\n    FUN_0040f28c(param_3,(uint *)local_180,0x80);\n    FUN_00411da7(local_180,local_80,0x80);\n    if (param_2 == 4) {\n      FUN_00406122(this,param_1,param_3,local_180,param_4);\n    }\n    else if (param_2 == 5) {\n      FUN_004063e2(this,param_1,param_3,(ushort *)local_180,param_4,param_5,param_6,param_7,param_8)\n      ;\n    }\n    FUN_0040f445(local_80,0x80);\n    uVar1 = FUN_0040f445((undefined1 *)local_180,0x100);\n    uVar2 = CONCAT31((int3)((uint)uVar1 >> 8),1);\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_00406122",
      "entry": "00406122",
      "c": "\nvoid __thiscall\nFUN_00406122(void *this,char param_1,undefined4 *param_2,wchar_t *param_3,uint *param_4)\n\n{\n  undefined4 uVar1;\n  size_t sVar2;\n  byte bVar3;\n  int iVar4;\n  uint uVar5;\n  char *pcVar6;\n  uint *puVar7;\n  undefined1 *puVar8;\n  uint uVar9;\n  uint *puVar10;\n  undefined4 *puVar11;\n  bool bVar12;\n  undefined1 local_218;\n  undefined1 local_217;\n  undefined1 local_216;\n  uint local_214;\n  uint local_210 [4];\n  uint local_200 [4];\n  undefined4 local_1f0 [4];\n  undefined1 local_1e0;\n  uint local_1dc [5];\n  uint local_1c8 [24];\n  uint local_168 [24];\n  uint local_108 [66];\n  \n  uVar9 = 0;\n  pcVar6 = (char *)((int)this + 0x12a);\n  do {\n    uVar1 = FUN_0040f209(pcVar6 + -0x12a,param_2);\n    if ((char)uVar1 != '\\0') {\n      if (param_4 == (uint *)0x0) {\n        bVar12 = *pcVar6 == '\\0';\n      }\n      else {\n        if (*pcVar6 == '\\0') goto LAB_00406178;\n        iVar4 = FUN_00420c4a((uint *)(pcVar6 + -0x28),param_4,8);\n        bVar12 = iVar4 == 0;\n      }\n      if (bVar12) {\n        FUN_00420320(local_210,(uint *)(pcVar6 + -0x20),0x10);\n        FUN_0040f344((int)local_210,0x10,'\\0',0);\n        FUN_00420320(local_200,(uint *)(pcVar6 + -0x10),0x10);\n        goto LAB_00406366;\n      }\n    }\nLAB_00406178:\n    uVar9 = uVar9 + 1;\n    pcVar6 = pcVar6 + 300;\n    if (3 < uVar9) {\n      FUN_00411ddf(param_3,(int)local_108,0x108);\n      sVar2 = _wcslen(param_3);\n      uVar9 = sVar2 * 2;\n      if (param_4 != (uint *)0x0) {\n        local_214 = uVar9;\n        FUN_00420320((uint *)((int)local_108 + uVar9),param_4,8);\n        uVar9 = uVar9 + 8;\n      }\n      local_214 = uVar9;\n      FUN_0040fd9c(local_1c8);\n      uVar5 = 0;\n      do {\n        FUN_0040fe6c(local_1c8,local_108,uVar9);\n        local_218 = (undefined1)uVar5;\n        local_217 = (undefined1)(uVar5 >> 8);\n        local_216 = (undefined1)(uVar5 >> 0x10);\n        FUN_0040fdcd(local_1c8,(uint *)&local_218,3);\n        if ((uVar5 & 0x3fff) == 0) {\n          puVar7 = local_1c8;\n          puVar10 = local_168;\n          for (iVar4 = 0x18; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar10 = puVar10 + 1;\n          }\n          FUN_0040fcda(local_168,local_1f0);\n          *(undefined1 *)((int)local_200 + (uVar5 >> 0xe)) = local_1e0;\n          uVar9 = local_214;\n        }\n        uVar5 = uVar5 + 1;\n      } while (uVar5 < 0x40000);\n      FUN_0040fcda(local_1c8,local_1dc);\n      uVar9 = 0;\n      do {\n        uVar5 = 0;\n        puVar8 = (undefined1 *)((int)local_210 + uVar9);\n        do {\n          bVar3 = (byte)uVar5;\n          uVar5 = uVar5 + 8;\n          *puVar8 = (char)(*(uint *)((int)local_1dc + uVar9) >> (bVar3 & 0x1f));\n          puVar8 = puVar8 + 1;\n        } while (uVar5 < 0x20);\n        uVar9 = uVar9 + 4;\n      } while (uVar9 < 0x10);\n      puVar11 = (undefined4 *)(*(int *)((int)this + 0x4b0) * 300 + (int)this);\n      for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar11 = *param_2;\n        param_2 = param_2 + 1;\n        puVar11 = puVar11 + 1;\n      }\n      *(undefined2 *)puVar11 = *(undefined2 *)param_2;\n      *(bool *)(*(int *)((int)this + 0x4b0) * 300 + 0x12a + (int)this) = param_4 != (uint *)0x0;\n      if (param_4 != (uint *)0x0) {\n        FUN_00420320((uint *)(*(int *)((int)this + 0x4b0) * 300 + 0x102 + (int)this),param_4,8);\n      }\n      FUN_00420320((uint *)(*(int *)((int)this + 0x4b0) * 300 + 0x10a + (int)this),local_210,0x10);\n      FUN_0040f344(*(int *)((int)this + 0x4b0) * 300 + 0x10a + (int)this,0x10,'\\x01',0);\n      FUN_00420320((uint *)(*(int *)((int)this + 0x4b0) * 300 + 0x11a + (int)this),local_200,0x10);\n      *(uint *)((int)this + 0x4b0) = *(int *)((int)this + 0x4b0) + 1U & 3;\n      FUN_0040f445((undefined1 *)local_108,0x108);\nLAB_00406366:\n      FUN_0040e890((void *)((int)this + 0xa9c),param_1,(int)local_210,0x80,(int)local_200);\n      FUN_0040f445((undefined1 *)local_210,0x10);\n      FUN_0040f445((undefined1 *)local_200,0x10);\n      return;\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_004063e2",
      "entry": "004063e2",
      "c": "\nvoid __thiscall\nFUN_004063e2(void *this,char param_1,undefined4 *param_2,ushort *param_3,uint *param_4,int param_5,\n            uint param_6,uint *param_7,void *param_8)\n\n{\n  byte *pbVar1;\n  undefined4 uVar2;\n  int iVar3;\n  size_t sVar4;\n  undefined4 *puVar5;\n  uint uVar6;\n  void *this_00;\n  uint uVar7;\n  undefined4 *puVar8;\n  uint *puVar9;\n  uint *puVar10;\n  uint *puVar11;\n  uint *puVar12;\n  uint local_260 [8];\n  uint local_240 [8];\n  uint local_220 [8];\n  ulong local_200 [128];\n  \n  if (param_6 < 0x19) {\n    uVar6 = 0;\n    this_00 = (void *)((int)this + 0x4b4);\n    uVar7 = 0;\n    do {\n      if (*(uint *)((int)this_00 + 0x134) == param_6) {\n        uVar2 = FUN_0040f209(this_00,param_2);\n        if ((char)uVar2 != '\\0') {\n          iVar3 = FUN_00420c4a((uint *)((int)this_00 + 0x102),param_4,0x10);\n          if (iVar3 == 0) {\n            FUN_00420320(local_260,(uint *)((int)this_00 + 0x112),0x20);\n            FUN_0040f344((int)local_260,0x20,'\\0',0);\n            FUN_00420320(local_240,(uint *)((int)this_00 + 0x138),0x20);\n            FUN_00420320(local_220,(uint *)((int)this_00 + 0x158),0x20);\n            goto LAB_0040654e;\n          }\n        }\n      }\n      uVar7 = uVar7 + 1;\n      this_00 = (void *)((int)this_00 + 0x178);\n    } while (uVar7 < 4);\n    FUN_00411e15(param_3,(byte *)local_200,0x200);\n    iVar3 = 1 << ((byte)param_6 & 0x1f);\n    puVar12 = local_240;\n    puVar11 = local_220;\n    puVar10 = local_260;\n    uVar7 = 0x10;\n    puVar9 = param_4;\n    sVar4 = _strlen((char *)local_200);\n    FUN_00406844(local_200,sVar4,puVar9,uVar7,(int)puVar10,puVar11,puVar12,iVar3);\n    FUN_0040f445((undefined1 *)local_200,0x200);\n    puVar5 = (undefined4 *)((int)this + (*(uint *)((int)this + 0xa94) & 3) * 0x178 + 0x4b4);\n    *(uint *)((int)this + 0xa94) = *(uint *)((int)this + 0xa94) + 1;\n    puVar5[0x4d] = param_6;\n    puVar8 = puVar5;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n      *puVar8 = *param_2;\n      param_2 = param_2 + 1;\n      puVar8 = puVar8 + 1;\n    }\n    *(undefined2 *)puVar8 = *(undefined2 *)param_2;\n    FUN_00420320((uint *)((int)puVar5 + 0x102),param_4,0x10);\n    FUN_00420320((uint *)((int)puVar5 + 0x112),local_260,0x20);\n    FUN_00420320(puVar5 + 0x4e,local_240,0x20);\n    FUN_00420320(puVar5 + 0x56,local_220,0x20);\n    FUN_0040f344((int)puVar5 + 0x112,0x20,'\\x01',0);\nLAB_0040654e:\n    if (param_7 != (uint *)0x0) {\n      FUN_00420320(param_7,local_220,0x20);\n    }\n    if (param_8 != (void *)0x0) {\n      _memset(param_8,0,8);\n      do {\n        pbVar1 = (byte *)((uVar6 & 7) + (int)param_8);\n        *pbVar1 = *pbVar1 ^ *(byte *)((int)local_240 + uVar6);\n        uVar6 = uVar6 + 1;\n      } while (uVar6 < 0x20);\n      FUN_0040f445((undefined1 *)local_240,0x20);\n    }\n    if (param_5 != 0) {\n      FUN_0040e890((void *)((int)this + 0xa9c),param_1,(int)local_260,0x100,param_5);\n    }\n    FUN_0040f445((undefined1 *)local_260,0x20);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406639",
      "entry": "00406639",
      "c": "\nvoid FUN_00406639(ulong *param_1,uint param_2,uint *param_3,uint param_4,ulong *param_5,\n                 uint *param_6,char *param_7,uint *param_8,char *param_9)\n\n{\n  int iVar1;\n  byte *pbVar2;\n  uint uVar3;\n  uint *puVar4;\n  uint *puVar5;\n  uint local_1b8 [16];\n  ulong local_178 [8];\n  ulong local_158 [8];\n  uint local_138 [26];\n  uint local_d0 [26];\n  uint local_68 [26];\n  \n  if (0x40 < param_2) {\n    FUN_00410016(local_68);\n    FUN_0041005c(local_68,param_1,param_2);\n    FUN_0040ff33(local_68,local_178);\n    param_1 = local_178;\n    param_2 = 0x20;\n  }\n  if ((param_6 == (uint *)0x0) || (*param_7 == '\\0')) {\n    uVar3 = 0;\n    if (param_2 != 0) {\n      do {\n        pbVar2 = (byte *)((int)local_1b8 + uVar3);\n        uVar3 = uVar3 + 1;\n        *pbVar2 = pbVar2[(int)param_1 - (int)local_1b8] ^ 0x36;\n      } while (uVar3 < param_2);\n    }\n    if (param_2 < 0x40) {\n      _memset((void *)((int)local_1b8 + param_2),0x36,0x40 - param_2);\n    }\n    FUN_00410016(local_138);\n    FUN_0041005c(local_138,local_1b8,0x40);\n    if (param_6 != (uint *)0x0) goto LAB_0040671e;\n  }\n  else {\n    puVar4 = param_6;\n    puVar5 = local_138;\n    for (iVar1 = 0x1a; iVar1 != 0; iVar1 = iVar1 + -1) {\n      *puVar5 = *puVar4;\n      puVar4 = puVar4 + 1;\n      puVar5 = puVar5 + 1;\n    }\nLAB_0040671e:\n    if (*param_7 == '\\0') {\n      puVar4 = local_138;\n      for (iVar1 = 0x1a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *param_6 = *puVar4;\n        puVar4 = puVar4 + 1;\n        param_6 = param_6 + 1;\n      }\n      *param_7 = '\\x01';\n    }\n  }\n  FUN_0041005c(local_138,param_3,param_4);\n  FUN_0040ff33(local_138,local_158);\n  if ((param_8 == (uint *)0x0) || (*param_9 == '\\0')) {\n    if (param_2 != 0) {\n      uVar3 = 0;\n      do {\n        pbVar2 = (byte *)((int)local_1b8 + uVar3);\n        uVar3 = uVar3 + 1;\n        *pbVar2 = pbVar2[(int)param_1 - (int)local_1b8] ^ 0x5c;\n      } while (uVar3 < param_2);\n    }\n    if (param_2 < 0x40) {\n      _memset((void *)((int)local_1b8 + param_2),0x5c,0x40 - param_2);\n    }\n    FUN_00410016(local_d0);\n    FUN_0041005c(local_d0,local_1b8,0x40);\n    if (param_8 == (uint *)0x0) goto LAB_0040680f;\n  }\n  else {\n    puVar4 = param_8;\n    puVar5 = local_d0;\n    for (iVar1 = 0x1a; iVar1 != 0; iVar1 = iVar1 + -1) {\n      *puVar5 = *puVar4;\n      puVar4 = puVar4 + 1;\n      puVar5 = puVar5 + 1;\n    }\n  }\n  if (*param_9 == '\\0') {\n    puVar4 = local_d0;\n    for (iVar1 = 0x1a; iVar1 != 0; iVar1 = iVar1 + -1) {\n      *param_8 = *puVar4;\n      puVar4 = puVar4 + 1;\n      param_8 = param_8 + 1;\n    }\n    *param_9 = '\\x01';\n  }\nLAB_0040680f:\n  FUN_0041005c(local_d0,local_158,0x20);\n  FUN_0040ff33(local_d0,param_5);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406844",
      "entry": "00406844",
      "c": "\nvoid FUN_00406844(ulong *param_1,uint param_2,uint *param_3,uint param_4,int param_5,\n                 undefined4 param_6,undefined4 param_7,int param_8)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint local_194 [26];\n  uint local_12c [26];\n  ulong local_c4 [8];\n  uint local_a4 [17];\n  uint local_60 [8];\n  ulong local_40 [8];\n  int local_20 [6];\n  char local_6;\n  char local_5;\n  \n  uVar2 = 0x40;\n  if (param_4 < 0x40) {\n    uVar2 = param_4;\n  }\n  FUN_00420320(local_a4,param_3,uVar2);\n  *(undefined4 *)((int)local_a4 + param_4) = 0x1000000;\n  FUN_00406639(param_1,param_2,local_a4,param_4 + 4,local_40,(uint *)0x0,(char *)0x0,(uint *)0x0,\n               (char *)0x0);\n  FUN_00420320(local_60,local_40,0x20);\n  local_6 = '\\0';\n  local_20[3] = param_8 + -1;\n  uVar2 = 0;\n  local_5 = '\\0';\n  local_20[4] = 0x10;\n  local_20[5] = 0x10;\n  local_20[0] = param_5;\n  local_20[1] = param_6;\n  local_20[2] = param_7;\n  do {\n    for (iVar3 = *(int *)((int)local_20 + uVar2 + 0xc); iVar3 != 0; iVar3 = iVar3 + -1) {\n      FUN_00406639(param_1,param_2,local_40,0x20,local_c4,local_194,&local_6,local_12c,&local_5);\n      FUN_00420320(local_40,local_c4,0x20);\n      uVar1 = 0;\n      do {\n        *(byte *)((int)local_60 + uVar1) =\n             *(byte *)((int)local_60 + uVar1) ^ *(byte *)((int)local_40 + uVar1);\n        uVar1 = uVar1 + 1;\n      } while (uVar1 < 0x20);\n    }\n    FUN_00420320(*(uint **)((int)local_20 + uVar2),local_60,0x20);\n    uVar2 = uVar2 + 4;\n  } while (uVar2 < 0xc);\n  FUN_0040f445((undefined1 *)local_a4,0x44);\n  FUN_0040f445((undefined1 *)local_60,0x20);\n  FUN_0040f445((undefined1 *)local_40,0x20);\n  FUN_0040f445((undefined1 *)local_c4,0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406976",
      "entry": "00406976",
      "c": "\nundefined1 * __fastcall FUN_00406976(undefined1 *param_1)\n\n{\n  *param_1 = 0;\n  *(undefined4 *)(param_1 + 4) = 0;\n  *(undefined4 *)(param_1 + 8) = 0;\n  *(undefined4 *)(param_1 + 0xc) = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00406986",
      "entry": "00406986",
      "c": "\nvoid __thiscall\nFUN_00406986(void *this,int param_1,uint param_2,byte *param_3,uint param_4,int param_5,uint param_6\n            )\n\n{\n  byte bVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  byte local_a;\n  uint local_8;\n  \n  uVar8 = 0;\n  if (param_4 == 0) {\n    local_a = 0;\n  }\n  else {\n    local_a = *param_3;\n  }\n  uVar7 = (uint)(param_4 != 0);\n  if (uVar7 < param_4) {\n    uVar4 = uVar7 + 1;\n    local_8 = uVar4;\n    do {\n      if (param_6 <= uVar8) goto LAB_00406ab4;\n      uVar3 = uVar4;\n      uVar6 = uVar7;\n      if (*(int *)((int)this + 4) == 0) {\n        uVar6 = uVar7 + 1;\n        uVar3 = uVar4 + 1;\n        *(byte *)this = param_3[uVar7];\n        *(undefined4 *)((int)this + 4) = 8;\n        local_8 = uVar3;\n      }\n                    /* WARNING: Load size is inaccurate */\n      bVar1 = *this >> 6;\n      uVar4 = uVar3;\n      uVar7 = uVar6;\n      if (bVar1 == 0) {\n        if (uVar6 < param_4) {\n          *(ushort *)(param_5 + uVar8 * 2) = (ushort)param_3[uVar6];\n          uVar8 = uVar8 + 1;\n          uVar7 = uVar6 + 1;\n          uVar4 = uVar3 + 1;\n          local_8 = uVar4;\n        }\n      }\n      else if (bVar1 == 1) {\n        if (uVar6 < param_4) {\n          *(ushort *)(param_5 + uVar8 * 2) = (ushort)param_3[uVar6] + (ushort)local_a * 0x100;\n          uVar7 = uVar6 + 1;\n          uVar4 = local_8 + 1;\nLAB_00406b21:\n          uVar8 = uVar8 + 1;\n          local_8 = uVar4;\n        }\n      }\n      else if (bVar1 == 2) {\n        if (uVar3 < param_4) {\n          uVar7 = uVar6 + 2;\n          *(ushort *)(param_5 + uVar8 * 2) =\n               (ushort)param_3[uVar6 + 1] * 0x100 + (ushort)param_3[uVar6];\n          uVar4 = uVar3 + 2;\n          goto LAB_00406b21;\n        }\n      }\n      else if ((bVar1 == 3) && (uVar6 < param_4)) {\n        bVar1 = param_3[uVar6];\n        uVar7 = uVar6 + 1;\n        uVar4 = uVar3 + 1;\n        local_8 = uVar4;\n        if ((char)bVar1 < '\\0') {\n          if (uVar7 < param_4) {\n            bVar2 = param_3[uVar7];\n            uVar7 = uVar6 + 2;\n            uVar4 = uVar3 + 2;\n            iVar5 = (bVar1 & 0x7f) + 2;\n            do {\n              local_8 = uVar4;\n              if ((param_6 <= uVar8) || (param_2 <= uVar8)) break;\n              iVar5 = iVar5 + -1;\n              *(ushort *)(param_5 + uVar8 * 2) =\n                   ((short)*(char *)(uVar8 + param_1) + (ushort)bVar2 & 0xff) +\n                   (ushort)local_a * 0x100;\n              uVar8 = uVar8 + 1;\n            } while (0 < iVar5);\n          }\n        }\n        else {\n          iVar5 = bVar1 + 2;\n          do {\n            if ((param_6 <= uVar8) || (param_2 <= uVar8)) break;\n            iVar5 = iVar5 + -1;\n            *(short *)(param_5 + uVar8 * 2) = (short)*(char *)(uVar8 + param_1);\n            uVar8 = uVar8 + 1;\n          } while (0 < iVar5);\n        }\n      }\n                    /* WARNING: Load size is inaccurate */\n      *(char *)this = *this << 2;\n      *(int *)((int)this + 4) = *(int *)((int)this + 4) + -2;\n    } while (uVar7 < param_4);\n  }\n  if (param_6 <= uVar8) {\nLAB_00406ab4:\n    uVar8 = param_6 - 1;\n  }\n  *(undefined2 *)(param_5 + uVar8 * 2) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406b84",
      "entry": "00406b84",
      "c": "\nundefined4 * __fastcall FUN_00406b84(undefined4 *param_1)\n\n{\n  param_1[2] = 1;\n  *param_1 = 0;\n  param_1[1] = 0;\n  *(undefined2 *)(param_1 + 3) = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00406b99",
      "entry": "00406b99",
      "c": "\nvoid __thiscall FUN_00406b99(void *this,undefined4 param_1,undefined1 *param_2)\n\n{\n  FUN_00406d83(this,0xc);\n  *param_2 = 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406baa",
      "entry": "00406baa",
      "c": "\nbool __fastcall FUN_00406baa(int param_1)\n\n{\n  bool bVar1;\n  \n  if (*(char *)(param_1 + 9) == '\\0') {\n    FUN_00406dcb();\n    bVar1 = FUN_00411943();\n    if (!bVar1) {\n      *(undefined1 *)(param_1 + 10) = 1;\n    }\n  }\n  else {\n    bVar1 = false;\n  }\n  return bVar1;\n}\n\n"
    },
    {
      "name": "FUN_00406bd5",
      "entry": "00406bd5",
      "c": "\nvoid __thiscall FUN_00406bd5(void *this,undefined4 param_1)\n\n{\n  if (*(char *)((int)this + 0xc) == '\\0') {\n    FUN_0040138b(10,param_1);\n    FUN_00406dcb();\n  }\n  FUN_00406d83(this,2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406bfd",
      "entry": "00406bfd",
      "c": "\nvoid __thiscall FUN_00406bfd(void *this,undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_00402021(9,param_1,param_2);\n  FUN_00406dcb();\n  FUN_00406d83(this,9);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406c23",
      "entry": "00406c23",
      "c": "\nvoid __thiscall FUN_00406c23(void *this,undefined4 param_1)\n\n{\n  FUN_00406bfd(this,0,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_00406e47",
      "entry": "00406c31",
      "c": "\nvoid __thiscall thunk_FUN_00406e47(void *this,void *param_1)\n\n{\n  code *pcVar1;\n  void *pvStack_8;\n  \n  if ((param_1 == (void *)0xff) && (*(char *)((int)this + 8) == '\\0')) {\n    return;\n  }\n  pvStack_8 = this;\n  FUN_00406d83(this,(int)param_1);\n  pvStack_8 = param_1;\n  __CxxThrowException_8((int *)&pvStack_8,&DAT_0043ba38);\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406c36",
      "entry": "00406c36",
      "c": "\nvoid __cdecl FUN_00406c36(undefined4 param_1,wchar_t *param_2)\n\n{\n  wchar_t local_804 [1024];\n  \n  FID_conflict___vsnprintf_c_l(local_804,0x400,param_2,(_locale_t)0x0,&stack0x0000000c);\n  FUN_0040138b(1,local_804);\n  FUN_00406dcb();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406c74",
      "entry": "00406c74",
      "c": "\nbool FUN_00406c74(LPWSTR param_1,DWORD param_2)\n\n{\n  DWORD DVar1;\n  bool bVar2;\n  \n  DVar1 = GetLastError();\n  if (DVar1 == 0) {\n    bVar2 = false;\n  }\n  else {\n    DVar1 = FormatMessageW(0x1200,(LPCVOID)0x0,DVar1,0x400,param_1,param_2,(va_list *)0x0);\n    bVar2 = DVar1 != 0;\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_00406ca7",
      "entry": "00406ca7",
      "c": "\nvoid __fastcall FUN_00406ca7(void *param_1)\n\n{\n  FUN_00406cba(param_1);\n  FUN_00406e47(param_1,(void *)0x8);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406cba",
      "entry": "00406cba",
      "c": "\nvoid __fastcall FUN_00406cba(void *param_1)\n\n{\n  undefined4 local_50 [19];\n  \n  FUN_004015c6(local_50,7);\n  FUN_004115fe(local_50);\n  FUN_00406d83(param_1,8);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406ce1",
      "entry": "00406ce1",
      "c": "\nvoid __thiscall FUN_00406ce1(void *this,undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_00410e08();\n  FUN_00402021(8,param_1,param_2);\n  FUN_00406dcb();\n  FUN_00406d83(this,6);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406d0c",
      "entry": "00406d0c",
      "c": "\nvoid __thiscall FUN_00406d0c(void *this,undefined4 param_1)\n\n{\n  FUN_00406ce1(this,0,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406d1a",
      "entry": "00406d1a",
      "c": "\nvoid __thiscall FUN_00406d1a(void *this,undefined4 param_1)\n\n{\n  FUN_00406d35(this,0,param_1);\n  FUN_00406e47(this,(void *)0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406d35",
      "entry": "00406d35",
      "c": "\nvoid __thiscall FUN_00406d35(void *this,undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_00402021(0xc,param_1,param_2);\n  FUN_00406dcb();\n  FUN_00406d83(this,0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406d5b",
      "entry": "00406d5b",
      "c": "\nvoid __thiscall FUN_00406d5b(void *this,undefined4 param_1)\n\n{\n  if (*(char *)((int)this + 0xc) == '\\0') {\n    FUN_0040138b(0xb,param_1);\n    FUN_00406dcb();\n  }\n  FUN_00406e47(this,(void *)0x2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406d83",
      "entry": "00406d83",
      "c": "\nvoid __thiscall FUN_00406d83(void *this,int param_1)\n\n{\n  if (param_1 == 1) {\nLAB_00406d9f:\n                    /* WARNING: Load size is inaccurate */\n    if (*this != 0) goto LAB_00406da6;\n  }\n  else {\n    if (param_1 == 2) {\n                    /* WARNING: Load size is inaccurate */\n                    /* WARNING: Load size is inaccurate */\n      if ((*this == 0) || (*this == 1)) {\n        *(undefined4 *)this = 2;\n      }\n      goto LAB_00406da6;\n    }\n    if (param_1 == 3) {\n                    /* WARNING: Load size is inaccurate */\n      if (*this != 0xb) {\n        *(undefined4 *)this = 3;\n      }\n      goto LAB_00406da6;\n    }\n    if (param_1 == 0xff) goto LAB_00406d9f;\n  }\n  *(int *)this = param_1;\nLAB_00406da6:\n  *(int *)((int)this + 4) = *(int *)((int)this + 4) + 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406dcb",
      "entry": "00406dcb",
      "c": "\nvoid FUN_00406dcb(void)\n\n{\n  WCHAR WVar1;\n  bool bVar2;\n  WCHAR *pWVar3;\n  WCHAR *pWVar4;\n  WCHAR local_800 [1024];\n  \n  bVar2 = FUN_00406c74(local_800,0x400);\n  if (bVar2) {\n    pWVar4 = local_800;\n    do {\n      for (; (WVar1 = *pWVar4, WVar1 == L'\\r' || (WVar1 == L'\\n')); pWVar4 = pWVar4 + 1) {\n      }\n      if (WVar1 == L'\\0') {\n        return;\n      }\n      pWVar3 = (WCHAR *)FUN_004222c6((ushort *)pWVar4,0xd);\n      if ((pWVar3 != (WCHAR *)0x0) ||\n         (pWVar3 = (WCHAR *)FUN_004222c6((ushort *)pWVar4,10), pWVar3 != (WCHAR *)0x0)) {\n        *pWVar3 = L'\\0';\n        pWVar3 = pWVar3 + 1;\n      }\n      FUN_0040138b(0,pWVar4);\n      pWVar4 = pWVar3;\n    } while (pWVar3 != (WCHAR *)0x0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406e47",
      "entry": "00406e47",
      "c": "\nvoid __thiscall FUN_00406e47(void *this,void *param_1)\n\n{\n  code *pcVar1;\n  void *local_8;\n  \n  if ((param_1 == (void *)0xff) && (*(char *)((int)this + 8) == '\\0')) {\n    return;\n  }\n  local_8 = this;\n  FUN_00406d83(this,(int)param_1);\n  local_8 = param_1;\n  __CxxThrowException_8((int *)&local_8,&DAT_0043ba38);\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406e7a",
      "entry": "00406e7a",
      "c": "\nvoid FUN_00406e7a(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_00402021(0x21,param_1,param_2);\n  FUN_00406d83(&DAT_00441098,2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406e98",
      "entry": "00406e98",
      "c": "\nvoid __thiscall FUN_00406e98(void *this,undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_00406eb5(this,param_1,param_2);\n  FUN_00406e47(this,&DAT_00000005);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406eb5",
      "entry": "00406eb5",
      "c": "\nvoid __thiscall FUN_00406eb5(void *this,undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_00402021(0xd,param_1,param_2);\n  FUN_00406dcb();\n  FUN_00406d83(this,5);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00406edb",
      "entry": "00406edb",
      "c": "\nint __fastcall FUN_00406edb(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x1010) = 0;\n  *(undefined4 *)(param_1 + 0x1014) = 0;\n  *(undefined4 *)(param_1 + 0x1018) = 0;\n  *(undefined4 *)(param_1 + 0x101c) = 0;\n  *(undefined4 *)(param_1 + 0x1020) = 0;\n  *(undefined4 *)(param_1 + 0x1024) = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00406f04",
      "entry": "00406f04",
      "c": "\nint FUN_00406f04(ushort *param_1)\n\n{\n  bool bVar1;\n  bool bVar2;\n  char cVar3;\n  ushort uVar4;\n  ushort *puVar5;\n  int iVar6;\n  \n  iVar6 = 0;\n  uVar4 = *param_1;\n  if (uVar4 != 0) {\n    puVar5 = param_1 + 2;\n    do {\n      bVar1 = false;\n      cVar3 = FUN_0040bd9d((uint)uVar4);\n      if (((cVar3 != '\\0') && (puVar5[-1] != 0)) &&\n         (cVar3 = FUN_0040bd9d((uint)puVar5[-1]), cVar3 == '\\0')) {\n        if (puVar5[-1] == 0x2e) {\n          cVar3 = FUN_0040bd9d((uint)*puVar5);\n          if ((cVar3 != '\\0') || (*puVar5 == 0)) {\n            bVar1 = true;\n          }\n          if ((puVar5[-1] != 0x2e) || (*puVar5 != 0x2e)) goto LAB_00406f81;\n          cVar3 = FUN_0040bd9d((uint)puVar5[1]);\n          if ((cVar3 != '\\0') || (bVar2 = false, puVar5[1] == 0)) {\n            bVar2 = true;\n          }\n        }\n        else {\nLAB_00406f81:\n          bVar2 = false;\n        }\n        if ((!bVar1) && (!bVar2)) {\n          iVar6 = iVar6 + 1;\n        }\n      }\n      uVar4 = puVar5[-1];\n      puVar5 = puVar5 + 1;\n    } while (uVar4 != 0);\n  }\n  return iVar6;\n}\n\n"
    },
    {
      "name": "FUN_00406fa5",
      "entry": "00406fa5",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined1 FUN_00406fa5(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  short sVar3;\n  short sVar4;\n  bool bVar5;\n  char cVar6;\n  size_t sVar7;\n  int iVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  DWORD DVar11;\n  HANDLE pvVar12;\n  BOOL BVar13;\n  undefined1 uVar14;\n  wchar_t *_Dest;\n  int unaff_EBP;\n  short sVar15;\n  LPVOID lpInBuffer;\n  wchar_t *pwVar16;\n  \n  FUN_0041eb78();\n  if (DAT_00441023 == '\\0') {\n    FUN_00407a9c(L\"SeRestorePrivilege\");\n    FUN_00407a9c(L\"SeCreateSymbolicLinkPrivilege\");\n    DAT_00441023 = '\\x01';\n  }\n  FUN_004013ba((void *)(unaff_EBP + -0x2c),0x1418);\n  iVar1 = *(int *)(unaff_EBP + 0x10);\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  FUN_00410602((short *)(unaff_EBP + -0x107c),iVar1 + 0x1104,0x800);\n  sVar7 = _wcslen((wchar_t *)(unaff_EBP + -0x107c));\n  *(size_t *)(unaff_EBP + -0x14) = sVar7;\n  pwVar16 = (wchar_t *)(unaff_EBP + -0x107c);\n  _Dest = (wchar_t *)(unaff_EBP + -0x207c);\n  iVar8 = _wcsncmp(pwVar16,L\"\\\\??\\\\\",4);\n  *(bool *)(unaff_EBP + -0xd) = iVar8 == 0;\n  if (iVar8 == 0) {\n    pwVar16 = (wchar_t *)(unaff_EBP + -0x1074);\n    iVar8 = _wcsncmp(pwVar16,L\"UNC\\\\\",4);\n    if (iVar8 == 0) {\n      *(undefined2 *)(unaff_EBP + -0x207c) = 0x5c;\n      _Dest = (wchar_t *)(unaff_EBP + -0x207a);\n      pwVar16 = (wchar_t *)(unaff_EBP + -0x106e);\n    }\n  }\n  _wcscpy(_Dest,pwVar16);\n  sVar7 = _wcslen((wchar_t *)(unaff_EBP + -0x207c));\n  iVar8 = *(int *)(unaff_EBP + 8);\n  pwVar16 = *(wchar_t **)(unaff_EBP + 0xc);\n  *(size_t *)(unaff_EBP + -0x18) = sVar7;\n  if ((*(char *)(iVar8 + 0x7197) != '\\0') ||\n     (((*(char *)(unaff_EBP + -0xd) == '\\0' &&\n       (uVar9 = FUN_0040bcc3((ushort *)(iVar1 + 0x1104)), (char)uVar9 == '\\0')) &&\n      (uVar10 = FUN_00407861(iVar8,(ushort *)(iVar1 + 0x28),pwVar16,(ushort *)(iVar1 + 0x1104)),\n      (char)uVar10 != '\\0')))) {\n    FUN_0040a0b1(pwVar16,'\\x01');\n    bVar5 = FUN_0040a231(pwVar16);\n    if (bVar5) {\n      DVar11 = FUN_0040a243(pwVar16);\n      cVar6 = FUN_0040a28f(DVar11);\n      if (cVar6 == '\\0') {\n        FUN_0040a1e0(pwVar16);\n      }\n      else {\n        FUN_0040a18f(pwVar16);\n      }\n    }\n    if ((*(char *)(iVar1 + 0x10f1) == '\\0') && (*(char *)(iVar1 + 0x2104) == '\\0')) {\n      pvVar12 = CreateFileW(pwVar16,0x40000000,0,(LPSECURITY_ATTRIBUTES)0x0,1,0x80,(HANDLE)0x0);\n      if (pvVar12 == (HANDLE)0xffffffff) {\n        FUN_00406c23(&DAT_00441098,pwVar16);\n        goto LAB_00407350;\n      }\n      CloseHandle(pvVar12);\n    }\n    else {\n      BVar13 = CreateDirectoryW(pwVar16,(LPSECURITY_ATTRIBUTES)0x0);\n      if (BVar13 == 0) {\n        uVar14 = 0;\n        FUN_00402021(0x14,0,pwVar16);\n        FUN_00406d83(&DAT_00441098,9);\n        goto LAB_004073e6;\n      }\n    }\n    iVar1 = *(int *)(iVar1 + 0x1100);\n    if (iVar1 == 3) {\n      puVar2 = *(undefined4 **)(unaff_EBP + -0x2c);\n      sVar4 = (short)*(undefined4 *)(unaff_EBP + -0x14);\n      sVar3 = (short)*(undefined4 *)(unaff_EBP + -0x18);\n      *puVar2 = 0xa0000003;\n      sVar15 = sVar4 * 2;\n      *(short *)((int)puVar2 + 10) = sVar15;\n      *(short *)(puVar2 + 1) = (sVar3 + sVar4) * 2 + 0xc;\n      *(undefined4 *)((int)puVar2 + 6) = 0;\n      _wcscpy((wchar_t *)(puVar2 + 4),(wchar_t *)(unaff_EBP + -0x107c));\n      lpInBuffer = *(LPVOID *)(unaff_EBP + -0x2c);\n      *(short *)((int)lpInBuffer + 0xc) = sVar15 + 2;\n      *(short *)((int)lpInBuffer + 0xe) = sVar3 * 2;\n      _wcscpy((wchar_t *)((int)lpInBuffer + (*(int *)(unaff_EBP + -0x14) + 9) * 2),\n              (wchar_t *)(unaff_EBP + -0x207c));\n    }\n    else {\n      if ((iVar1 != 2) && (iVar1 != 1)) goto LAB_00407350;\n      puVar2 = *(undefined4 **)(unaff_EBP + -0x2c);\n      sVar4 = (short)*(undefined4 *)(unaff_EBP + -0x14);\n      sVar3 = (short)*(undefined4 *)(unaff_EBP + -0x18);\n      *puVar2 = 0xa000000c;\n      sVar15 = sVar4 * 2;\n      *(short *)((int)puVar2 + 10) = sVar15;\n      *(short *)(puVar2 + 1) = (sVar3 + sVar4) * 2 + 0x10;\n      *(undefined4 *)((int)puVar2 + 6) = 0;\n      _wcscpy((wchar_t *)(puVar2 + 5),(wchar_t *)(unaff_EBP + -0x107c));\n      lpInBuffer = *(LPVOID *)(unaff_EBP + -0x2c);\n      *(short *)((int)lpInBuffer + 0xc) = sVar15 + 2;\n      *(short *)((int)lpInBuffer + 0xe) = sVar3 * 2;\n      _wcscpy((wchar_t *)((int)lpInBuffer + (*(int *)(unaff_EBP + -0x14) + 0xb) * 2),\n              (wchar_t *)(unaff_EBP + -0x207c));\n      *(uint *)((int)lpInBuffer + 0x10) = *(byte *)(unaff_EBP + -0xd) ^ 1;\n    }\n    pvVar12 = CreateFileW(pwVar16,0xc0000000,0,(LPSECURITY_ATTRIBUTES)0x0,3,0x2200000,(HANDLE)0x0);\n    if (pvVar12 == (HANDLE)0xffffffff) {\n      FUN_00406c23(&DAT_00441098,pwVar16);\n      FUN_00406d83(&DAT_00441098,9);\n    }\n    else {\n      BVar13 = DeviceIoControl(pvVar12,0x900a4,lpInBuffer,*(ushort *)((int)lpInBuffer + 4) + 8,\n                               (LPVOID)0x0,0,(LPDWORD)(unaff_EBP + -0x30),(LPOVERLAPPED)0x0);\n      if (BVar13 != 0) {\n        FUN_00409556((undefined4 *)(unaff_EBP + -0x30b4));\n        *(undefined1 *)(unaff_EBP + -4) = 1;\n        FUN_00407a7b((void *)(unaff_EBP + -0x30b4),(int)pvVar12);\n        iVar1 = *(int *)(unaff_EBP + 8);\n        iVar8 = *(int *)(unaff_EBP + 0x10);\n        FUN_00409da2((void *)(unaff_EBP + -0x30b4),\n                     (int *)(-(uint)(*(int *)(iVar1 + 0x82d0) != 0) & iVar8 + 0x1040U),\n                     (int *)(-(uint)(*(int *)(iVar1 + 0x82d4) != 0) & iVar8 + 0x1048U),\n                     (int *)(-(uint)(*(int *)(iVar1 + 0x82d8) != 0) & iVar8 + 0x1050U));\n        FUN_00409620(unaff_EBP + -0x30b4);\n        if (*(char *)(iVar1 + 0x71a8) == '\\0') {\n          FUN_0040a4ed(pwVar16,*(DWORD *)(iVar8 + 0x24));\n        }\n        uVar14 = 1;\n        FUN_0040959a((int *)(unaff_EBP + -0x30b4));\n        goto LAB_004073e6;\n      }\n      CloseHandle(pvVar12);\n      FUN_00402021(0x15,0,pwVar16);\n      DVar11 = GetLastError();\n      if (((DVar11 == 5) || (DVar11 == 0x522)) && (bVar5 = FUN_004107bc(), !bVar5)) {\n        FUN_004015c6((void *)(unaff_EBP + -0x7c),0x18);\n        FUN_004115fe((undefined4 *)(unaff_EBP + -0x7c));\n      }\n      FUN_00406dcb();\n      FUN_00406d83(&DAT_00441098,9);\n      if (*(char *)(*(int *)(unaff_EBP + 0x10) + 0x10f1) == '\\0') {\n        DeleteFileW(pwVar16);\n      }\n      else {\n        RemoveDirectoryW(pwVar16);\n      }\n    }\n  }\nLAB_00407350:\n  uVar14 = 0;\nLAB_004073e6:\n  FUN_004015fb((int *)(unaff_EBP + -0x2c));\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar14;\n}\n\n"
    },
    {
      "name": "FUN_00407401",
      "entry": "00407401",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_00407401(void)\n\n{\n  int iVar1;\n  PSECURITY_DESCRIPTOR pSecurityDescriptor;\n  char cVar2;\n  bool bVar3;\n  undefined4 uVar4;\n  BOOL BVar5;\n  DWORD DVar6;\n  undefined1 *_Memory;\n  int unaff_EBP;\n  SECURITY_INFORMATION SecurityInformation;\n  \n  FUN_0041eb78();\n  *(undefined4 *)(unaff_EBP + -0x20) = 0;\n  *(undefined4 *)(unaff_EBP + -0x1c) = 0;\n  *(undefined4 *)(unaff_EBP + -0x18) = 0;\n  *(undefined4 *)(unaff_EBP + -0x14) = 0;\n  *(undefined1 *)(unaff_EBP + -0x10) = 0;\n  iVar1 = *(int *)(unaff_EBP + 8);\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  cVar2 = FUN_00403bba();\n  if (cVar2 != '\\0') {\n    if (DAT_00441022 == '\\0') {\n      uVar4 = FUN_00407a9c(L\"SeSecurityPrivilege\");\n      if ((char)uVar4 != '\\0') {\n        DAT_00441021 = '\\x01';\n      }\n      FUN_00407a9c(L\"SeRestorePrivilege\");\n      DAT_00441022 = '\\x01';\n    }\n    SecurityInformation = 7;\n    if (DAT_00441021 != '\\0') {\n      SecurityInformation = 0xf;\n    }\n    pSecurityDescriptor = *(PSECURITY_DESCRIPTOR *)(unaff_EBP + -0x20);\n    BVar5 = SetFileSecurityW(*(LPCWSTR *)(unaff_EBP + 0xc),SecurityInformation,pSecurityDescriptor);\n    if ((BVar5 == 0) &&\n       ((uVar4 = FUN_0040bb03(*(wchar_t **)(unaff_EBP + 0xc),(wchar_t *)(unaff_EBP + -0x106c),0x800)\n        , (char)uVar4 == '\\0' ||\n        (BVar5 = SetFileSecurityW((LPCWSTR)(unaff_EBP + -0x106c),SecurityInformation,\n                                  pSecurityDescriptor), BVar5 == 0)))) {\n      FUN_00402021(0x52,iVar1 + 0x32,*(undefined4 *)(unaff_EBP + 0xc));\n      DVar6 = GetLastError();\n      FUN_00406dcb();\n      if ((DVar6 == 5) && (bVar3 = FUN_004107bc(), !bVar3)) {\n        FUN_004015c6((void *)(unaff_EBP + -0x6c),0x18);\n        FUN_004115fe((undefined4 *)(unaff_EBP + -0x6c));\n      }\n      FUN_00406d83(&DAT_00441098,1);\n    }\n  }\n  _Memory = *(undefined1 **)(unaff_EBP + -0x20);\n  *(undefined4 *)(unaff_EBP + -4) = 2;\n  if (_Memory != (undefined1 *)0x0) {\n    if (*(char *)(unaff_EBP + -0x10) != '\\0') {\n      FUN_0040f445(_Memory,*(int *)(unaff_EBP + -0x18));\n      _Memory = *(undefined1 **)(unaff_EBP + -0x20);\n    }\n    FID_conflict__free(_Memory);\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407542",
      "entry": "00407542",
      "c": "\nbool FUN_00407542(undefined4 param_1,wchar_t *param_2,LPCWSTR param_3,int param_4)\n\n{\n  bool bVar1;\n  BOOL BVar2;\n  undefined4 local_50 [19];\n  \n  FUN_0040c36e((int)param_3,param_3,param_4);\n  bVar1 = FUN_0040a231(param_3);\n  if (bVar1) {\n    FUN_0040a0b1(param_2,'\\x01');\n    BVar2 = CreateHardLinkW(param_2,param_3,(LPSECURITY_ATTRIBUTES)0x0);\n    bVar1 = BVar2 != 0;\n    if (BVar2 == 0) {\n      FUN_0040138b(0x16,param_2);\n      FUN_00406dcb();\n      FUN_00406d83(&DAT_00441098,9);\n    }\n  }\n  else {\n    FUN_0040138b(0x16,param_2);\n    FUN_004015c6(local_50,0x17);\n    FUN_004115fe(local_50);\n    FUN_00406d83(&DAT_00441098,9);\n    bVar1 = false;\n  }\n  return bVar1;\n}\n\n"
    },
    {
      "name": "FUN_004075de",
      "entry": "004075de",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_004075de(void)\n\n{\n  wchar_t *pwVar1;\n  int iVar2;\n  bool bVar3;\n  char cVar4;\n  undefined4 uVar5;\n  int *piVar6;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  pwVar1 = *(wchar_t **)(unaff_EBP + 0xc);\n  if ((*pwVar1 == L'\\0') || (pwVar1[1] != L'\\0')) {\n    FUN_00410602((short *)(unaff_EBP + -0x1014),(int)pwVar1,0x802);\n  }\n  else {\n    FUN_00410602((short *)(unaff_EBP + -0x1014),0x4337a0,0x802);\n    FUN_004105da((wchar_t *)(unaff_EBP + -0x1014),(int)pwVar1,0x802);\n  }\n  iVar2 = *(int *)(unaff_EBP + 8);\n  FUN_004077df(iVar2,(ushort *)(unaff_EBP + -0x4094),0x800);\n  if (*(short *)(unaff_EBP + -0x4094) == 0x3a) {\n    if (*(char *)(unaff_EBP + 0x10) == '\\0') {\n      FUN_004105da((wchar_t *)(unaff_EBP + -0x1014),unaff_EBP + -0x4094,0x802);\n      FUN_00406edb(unaff_EBP + -0x3094);\n      uVar5 = FUN_0040a56d(pwVar1,(wchar_t *)(unaff_EBP + -0x3094));\n      *(char *)(unaff_EBP + -0xd) = (char)uVar5;\n      if ((*(uint *)(unaff_EBP + -0x208c) & 1) != 0) {\n        FUN_0040a4ed(pwVar1,*(uint *)(unaff_EBP + -0x208c) & 0xfffffffe);\n      }\n      FUN_00409556((undefined4 *)(unaff_EBP + -0x204c));\n      *(undefined4 *)(unaff_EBP + -4) = 1;\n      bVar3 = FUN_00409f1a((void *)(unaff_EBP + -0x204c),(wchar_t *)(unaff_EBP + -0x1014),0x11);\n      if (bVar3) {\n        cVar4 = FUN_00403bba();\n        if (cVar4 != '\\0') {\n          FUN_00409620(unaff_EBP + -0x204c);\n        }\n      }\n      FUN_00409556((undefined4 *)(unaff_EBP + -0x50cc));\n      *(undefined1 *)(unaff_EBP + -4) = 2;\n      if (*(char *)(unaff_EBP + -0xd) != '\\0') {\n        bVar3 = FUN_004098e0((void *)(unaff_EBP + -0x50cc),pwVar1,5);\n        if (bVar3) {\n          SetFileTime(*(HANDLE *)(unaff_EBP + -0x50c4),(FILETIME *)(unaff_EBP + -0x206c),\n                      (FILETIME *)(unaff_EBP + -0x2064),(FILETIME *)(unaff_EBP + -0x205c));\n        }\n      }\n      FUN_0040a4ed(pwVar1,*(DWORD *)(unaff_EBP + -0x208c));\n      FUN_0040959a((int *)(unaff_EBP + -0x50cc));\n      piVar6 = (int *)(unaff_EBP + -0x204c);\n    }\n    else {\n      FUN_00409556((undefined4 *)(unaff_EBP + -0x6104));\n      *(undefined4 *)(unaff_EBP + -4) = 0;\n      FUN_00403bba();\n      piVar6 = (int *)(unaff_EBP + -0x6104);\n    }\n    FUN_0040959a(piVar6);\n  }\n  else {\n    FUN_00402021(0x53,iVar2 + 0x32,pwVar1);\n    FUN_00406d83(&DAT_00441098,3);\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004077b8",
      "entry": "004077b8",
      "c": "\nundefined1 FUN_004077b8(undefined4 param_1,undefined4 param_2,int param_3)\n\n{\n  undefined1 uVar1;\n  \n  if (*(int *)(param_3 + 0x6cc8) == 3) {\n    uVar1 = FUN_00406fa5();\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_004077df",
      "entry": "004077df",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_004077df(int param_1,ushort *param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint local_2004 [2047];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x4077ec;\n  uVar2 = *(uint *)(param_1 + 0x5614);\n  if (*(int *)(param_1 + 0x6cc8) == 2) {\n    uVar1 = uVar2 >> 1;\n    if (param_3 - 1U <= uVar2 >> 1) {\n      uVar1 = param_3 - 1U;\n    }\n    FUN_00411bfd((byte *)*(uint **)(param_1 + 0x5610),(int)param_2,uVar1);\n    param_2[uVar1] = 0;\n  }\n  else {\n    if (0x1ffe < uVar2) {\n      uVar2 = 0x1fff;\n    }\n    FUN_00420320(local_2004,*(uint **)(param_1 + 0x5610),uVar2);\n    *(undefined1 *)((int)local_2004 + uVar2) = 0;\n    FUN_00411c3b((byte *)local_2004,param_2,param_3);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407861",
      "entry": "00407861",
      "c": "\nuint FUN_00407861(int param_1,ushort *param_2,wchar_t *param_3,ushort *param_4)\n\n{\n  char cVar1;\n  undefined3 extraout_var;\n  undefined3 extraout_var_00;\n  uint uVar2;\n  size_t _MaxCount;\n  int iVar3;\n  ushort uVar4;\n  undefined1 uVar5;\n  int iVar6;\n  int iVar7;\n  ushort *puVar8;\n  \n  cVar1 = FUN_0040bcf8(param_2);\n  uVar2 = CONCAT31(extraout_var,cVar1);\n  if (cVar1 == '\\0') {\n    cVar1 = FUN_0040bcf8(param_4);\n    uVar2 = CONCAT31(extraout_var_00,cVar1);\n    if (cVar1 == '\\0') {\n      uVar4 = *param_4;\n      uVar5 = 0;\n      iVar6 = 0;\n      if (uVar4 != 0) {\n        puVar8 = param_4 + 2;\n        iVar7 = 0;\n        do {\n          if ((((uVar4 == 0x2e) && (puVar8[-1] == 0x2e)) &&\n              ((cVar1 = FUN_0040bd9d((uint)*puVar8), cVar1 != '\\0' || (*puVar8 == 0)))) &&\n             ((iVar7 == 0 || (cVar1 = FUN_0040bd9d((uint)puVar8[-3]), cVar1 != '\\0')))) {\n            iVar6 = iVar6 + 1;\n          }\n          uVar4 = puVar8[-1];\n          puVar8 = puVar8 + 1;\n          iVar7 = iVar7 + 1;\n        } while (uVar4 != 0);\n        if ((0 < iVar6) && (uVar2 = FUN_00407967(param_3), (char)uVar2 != '\\0')) goto LAB_0040795c;\n      }\n      iVar7 = FUN_00406f04(param_2);\n      _MaxCount = _wcslen((wchar_t *)(param_1 + 0x2012));\n      if ((_MaxCount != 0) &&\n         (iVar3 = _wcsncmp(param_3,(wchar_t *)(param_1 + 0x2012),_MaxCount), iVar3 == 0)) {\n        param_3 = param_3 + _MaxCount;\n        while (cVar1 = FUN_0040bd9d((uint)(ushort)*param_3), cVar1 != '\\0') {\n          param_3 = param_3 + 1;\n        }\n      }\n      iVar3 = FUN_00406f04((ushort *)param_3);\n      if ((iVar6 <= iVar7) && (iVar6 <= iVar3)) {\n        uVar5 = 1;\n      }\n      return CONCAT31((int3)((uint)iVar3 >> 8),uVar5);\n    }\n  }\nLAB_0040795c:\n  return uVar2 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_00407967",
      "entry": "00407967",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined1 * FUN_00407967(wchar_t *param_1)\n\n{\n  char cVar1;\n  size_t sVar2;\n  undefined1 *puVar3;\n  ushort *puVar4;\n  wchar_t local_204c [1958];\n  undefined1 auStack_1100 [192];\n  char local_1040;\n  char local_103f;\n  ushort auStack_1006 [2047];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x407974;\n  sVar2 = _wcslen(param_1);\n  if (sVar2 < 0x800) {\n    FUN_00410602((short *)(auStack_1006 + 1),(int)param_1,0x800);\n    sVar2 = _wcslen((wchar_t *)(auStack_1006 + 1));\n    for (puVar4 = auStack_1006 + sVar2; auStack_1006 + 1 < puVar4; puVar4 = puVar4 + -1) {\n      cVar1 = FUN_0040bd9d((uint)*puVar4);\n      if (cVar1 != '\\0') {\n        *puVar4 = 0;\n        FUN_00406edb((int)local_204c);\n        sVar2 = FUN_0040a56d((wchar_t *)(auStack_1006 + 1),local_204c);\n        if (((char)sVar2 != '\\0') && ((local_103f != '\\0' || (local_1040 == '\\0'))))\n        goto LAB_00407a06;\n      }\n    }\n    puVar3 = auStack_1100;\n  }\n  else {\nLAB_00407a06:\n    puVar3 = (undefined1 *)CONCAT31((int3)(sVar2 >> 8),1);\n  }\n  return puVar3;\n}\n\n"
    },
    {
      "name": "FUN_00407a0d",
      "entry": "00407a0d",
      "c": "\nvoid FUN_00407a0d(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  if ((*(char *)(param_1 + 0x7201) == '\\0') && (*(char *)(param_1 + 0x7194) != '\\0')) {\n    iVar1 = _wcscmp((wchar_t *)(param_2 + 0x4610),L\"ACL\");\n    if (iVar1 == 0) {\n      FUN_00407401();\n    }\n  }\n  iVar1 = _wcscmp((wchar_t *)(param_2 + 0x4610),L\"STM\");\n  if (iVar1 == 0) {\n    FUN_004075de();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407a78",
      "entry": "00407a78",
      "c": "\nvoid FUN_00407a78(void)\n\n{\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407a7b",
      "entry": "00407a7b",
      "c": "\nvoid __thiscall FUN_00407a7b(void *this,int param_1)\n\n{\n  code *pcVar1;\n  \n                    /* WARNING: Load size is inaccurate */\n  pcVar1 = *(code **)(*this + 8);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  (*pcVar1)();\n  *(int *)((int)this + 8) = param_1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407a9c",
      "entry": "00407a9c",
      "c": "\nundefined4 FUN_00407a9c(LPCWSTR param_1)\n\n{\n  HANDLE ProcessHandle;\n  BOOL BVar1;\n  undefined1 uVar2;\n  DWORD DVar4;\n  HANDLE *TokenHandle;\n  _TOKEN_PRIVILEGES local_18;\n  HANDLE local_8;\n  undefined1 uVar3;\n  \n  TokenHandle = &local_8;\n  DVar4 = 0x20;\n  uVar3 = 0;\n  uVar2 = 0;\n  ProcessHandle = GetCurrentProcess();\n  BVar1 = OpenProcessToken(ProcessHandle,DVar4,TokenHandle);\n  if (BVar1 != 0) {\n    local_18.PrivilegeCount = 1;\n    local_18.Privileges[0].Attributes = 2;\n    BVar1 = LookupPrivilegeValueW((LPCWSTR)0x0,param_1,&local_18.Privileges[0].Luid);\n    uVar2 = uVar3;\n    if (BVar1 != 0) {\n      BVar1 = AdjustTokenPrivileges(local_8,0,&local_18,0,(PTOKEN_PRIVILEGES)0x0,(PDWORD)0x0);\n      if (BVar1 != 0) {\n        DVar4 = GetLastError();\n        if (DVar4 == 0) {\n          uVar2 = 1;\n        }\n      }\n    }\n    BVar1 = CloseHandle(local_8);\n  }\n  return CONCAT31((int3)((uint)BVar1 >> 8),uVar2);\n}\n\n"
    },
    {
      "name": "FUN_00407b0d",
      "entry": "00407b0d",
      "c": "\nundefined4 * FUN_00407b0d(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  undefined4 *extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  *(undefined4 **)(unaff_EBP + -0x10) = extraout_ECX;\n  *extraout_ECX = 0;\n  extraout_ECX[1] = 0;\n  FUN_0040ce40();\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  extraout_ECX[2] = *(undefined4 *)(unaff_EBP + 8);\n  *(undefined2 *)((int)extraout_ECX + 0xfe) = 0;\n  *(undefined2 *)(extraout_ECX + 0x440) = 0;\n  extraout_ECX[0x3b] = 0;\n  iVar1 = FUN_0041eb38(0xe6e0);\n  *(int *)(unaff_EBP + -0x14) = iVar1;\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  if (iVar1 == 0) {\n    puVar2 = (undefined4 *)0x0;\n  }\n  else {\n    puVar2 = FUN_00412089();\n  }\n  extraout_ECX[0x3a] = puVar2;\n  *(undefined1 *)(unaff_EBP + -4) = 0;\n  FUN_00414a76();\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return extraout_ECX;\n}\n\n"
    },
    {
      "name": "FUN_00407b9e",
      "entry": "00407b9e",
      "c": "\nvoid __fastcall FUN_00407b9e(int param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = *(void **)(param_1 + 0xe8);\n  if (pvVar1 != (void *)0x0) {\n    FUN_00412297(pvVar1);\n    FUN_0041eb68(pvVar1);\n  }\n  FUN_0040cee1(param_1 + 0x10);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407bca",
      "entry": "00407bca",
      "c": "\nuint __thiscall FUN_00407bca(void *this,uint *param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)((int)this + 4);\n                    /* WARNING: Load size is inaccurate */\n  if ((param_1[1] < uVar1) || ((param_1[1] <= uVar1 && (uVar1 = *this, *param_1 <= uVar1)))) {\n    uVar1 = uVar1 & 0xffffff00;\n  }\n  else {\n    uVar1 = CONCAT31((int3)(uVar1 >> 8),1);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00407be7",
      "entry": "00407be7",
      "c": "\nint __thiscall FUN_00407be7(void *this,uint *param_1)\n\n{\n  uint uVar1;\n  uint3 uVar3;\n  int iVar2;\n  \n                    /* WARNING: Load size is inaccurate */\n  uVar1 = *(uint *)((int)this + 4);\n  uVar3 = (uint3)((uint)param_1 >> 8);\n  if (((param_1[1] < uVar1) || ((param_1[1] <= uVar1 && (*param_1 < *this)))) ||\n     ((*this == *param_1 && (uVar1 == param_1[1])))) {\n    iVar2 = CONCAT31(uVar3,1);\n  }\n  else {\n    iVar2 = (uint)uVar3 << 8;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "FUN_00407c0d",
      "entry": "00407c0d",
      "c": "\nuint FUN_00407c0d(int param_1,undefined4 param_2)\n\n{\n  uint uVar1;\n  undefined3 uVar2;\n  undefined3 extraout_var;\n  byte bVar3;\n  bool bVar4;\n  \n  uVar1 = *(uint *)(param_1 + 0x22b4);\n  uVar2 = (undefined3)(uVar1 >> 8);\n  if (*(int *)(param_1 + 0x6cc8) == 3) {\n    bVar4 = 0x32 < uVar1;\n  }\n  else {\n    bVar4 = uVar1 != 0x1d;\n  }\n  bVar3 = (*(char *)(param_1 + 0x22b8) == '\\0') - 1U & bVar4;\n  if (bVar3 != 0) {\n    FUN_00406e7a(param_1 + 0x32,param_2);\n    FUN_0040138b(0x24,param_1 + 0x32);\n    uVar2 = extraout_var;\n  }\n  return CONCAT31(uVar2,bVar3) ^ 1;\n}\n\n"
    },
    {
      "name": "FUN_00407c64",
      "entry": "00407c64",
      "c": "\nint FUN_00407c64(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0040b146();\n  return (-(uint)(iVar1 != 0x501) & 0xc0000) + 0x40000;\n}\n\n"
    },
    {
      "name": "FUN_00407c7d",
      "entry": "00407c7d",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid __fastcall FUN_00407c7d(int param_1)\n\n{\n  wchar_t *pwVar1;\n  uint *puVar2;\n  uint uVar3;\n  char cVar4;\n  undefined4 uVar5;\n  int iVar6;\n  wchar_t local_1048 [2048];\n  uint uStack_48;\n  int iStack_44;\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x407c87;\n  *(undefined1 *)(param_1 + 0x2100) = 0;\n  *(undefined2 *)(param_1 + 100) = *(undefined2 *)(*(int *)(param_1 + 8) + 0x92fa);\n  FUN_00406edb((int)local_1048);\n  pwVar1 = (wchar_t *)(param_1 + 0xfe);\n  while( true ) {\n    cVar4 = FUN_00405ca1(*(void **)(param_1 + 8),pwVar1,0x800);\n    if (cVar4 == '\\0') break;\n    uVar5 = FUN_0040a56d(pwVar1,local_1048);\n    if ((char)uVar5 != '\\0') {\n      puVar2 = (uint *)(param_1 + 0xa0);\n      uVar3 = *puVar2;\n      *puVar2 = *puVar2 + uStack_48;\n      *(int *)(param_1 + 0xa4) =\n           *(int *)(param_1 + 0xa4) + iStack_44 + (uint)CARRY4(uVar3,uStack_48);\n    }\n  }\n  FUN_0041071e(*(int *)(param_1 + 8) + 0xb43c);\n  while( true ) {\n    cVar4 = FUN_00405ca1(*(void **)(param_1 + 8),pwVar1,0x800);\n    iVar6 = *(int *)(param_1 + 8);\n    if (cVar4 == '\\0') break;\n    if (*(char *)(iVar6 + 0x6128) != '\\0') {\n      FUN_0040f279((undefined1 *)(iVar6 + 0x6024));\n    }\n    *(undefined2 *)(param_1 + 0xfa) = 0;\n    do {\n      iVar6 = FUN_00408284();\n    } while (iVar6 == 1);\n    puVar2 = (uint *)(param_1 + 0x90);\n    uVar3 = *puVar2;\n    *puVar2 = *puVar2 + *(uint *)(param_1 + 0x98);\n    *(int *)(param_1 + 0x94) =\n         *(int *)(param_1 + 0x94) + *(int *)(param_1 + 0x9c) +\n         (uint)CARRY4(uVar3,*(uint *)(param_1 + 0x98));\n  }\n  if (*(char *)(iVar6 + 0x6128) != '\\0') {\n    FUN_0040f279((undefined1 *)(iVar6 + 0x6024));\n  }\n  if (((*(int *)(param_1 + 0xec) == 0) && (*(short *)(*(int *)(param_1 + 8) + 0x92fa) != 0x49)) &&\n     (DAT_00441098 != 0xb)) {\n    if (*(char *)(param_1 + 0x2100) == '\\0') {\n      FUN_0040138b(0x44,pwVar1);\n    }\n    if (DAT_00441098 == 0) {\n      FUN_00406d83(&DAT_00441098,10);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407db2",
      "entry": "00407db2",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid __thiscall FUN_00407db2(void *this,int param_1)\n\n{\n  wchar_t *pwVar1;\n  int iVar2;\n  char cVar3;\n  bool bVar4;\n  undefined3 extraout_var;\n  undefined3 extraout_var_00;\n  DWORD DVar5;\n  undefined3 extraout_var_01;\n  undefined4 uVar6;\n  undefined3 extraout_var_02;\n  undefined1 local_1005;\n  undefined4 local_1004;\n  short local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x407dbc;\n  if (*(char *)(*(int *)((int)this + 8) + 0x7201) != '\\0') {\n    return;\n  }\n  pwVar1 = (wchar_t *)((int)this + 0x1100);\n  cVar3 = FUN_0040a2b2(pwVar1,*(char *)(*(int *)((int)this + 8) + 0x71a8) == '\\0',\n                       *(DWORD *)(param_1 + 0x22bc));\n  if (CONCAT31(extraout_var,cVar3) != 0) {\n    bVar4 = FUN_0040a231(pwVar1);\n    local_1004 = CONCAT31(extraout_var_00,bVar4);\n    if (bVar4) {\n      DVar5 = FUN_0040a243(pwVar1);\n      cVar3 = FUN_0040a28f(DVar5);\n      if (cVar3 == '\\0') {\n        local_1004 = 0;\n        FUN_004092a3(*(int *)((int)this + 8),(void *)0x0,pwVar1,0x800,&local_1005,\n                     *(undefined4 *)(param_1 + 0x32f8),*(undefined4 *)(param_1 + 0x32fc),\n                     param_1 + 0x32d8,0);\n        goto LAB_00407e52;\n      }\nLAB_00407f7d:\n      if (*(char *)(*(int *)((int)this + 8) + 0x71a8) == '\\0') {\n        FUN_0040a4ed(pwVar1,*(DWORD *)(param_1 + 0x22bc));\n      }\n    }\n    else {\nLAB_00407e52:\n      FUN_0040a0b1(pwVar1,'\\x01');\n      cVar3 = FUN_0040a2b2(pwVar1,*(char *)(*(int *)((int)this + 8) + 0x71a8) == '\\0',\n                           *(DWORD *)(param_1 + 0x22bc));\n      if (CONCAT31(extraout_var_01,cVar3) != 0) {\n        uVar6 = FUN_0040bd1a(pwVar1);\n        if ((char)uVar6 == '\\0') {\n          FUN_0040138b(0x74,param_1 + 0x32);\n          FUN_00410602(local_1000,(int)pwVar1,0x800);\n          FUN_0040c058((ushort *)pwVar1,'\\x01');\n          bVar4 = FUN_0040a231(pwVar1);\n          if (bVar4) {\n            DVar5 = FUN_0040a243(pwVar1);\n            cVar3 = FUN_0040a28f(DVar5);\n            if (cVar3 != '\\0') goto LAB_00407f7d;\n          }\n          FUN_0040a0b1(pwVar1,'\\x01');\n          cVar3 = FUN_0040a2b2(pwVar1,*(char *)(*(int *)((int)this + 8) + 0x71a8) == '\\0',\n                               *(DWORD *)(param_1 + 0x22bc));\n          if (CONCAT31(extraout_var_02,cVar3) == 0) goto LAB_00407f0d;\n        }\n        else if ((char)local_1004 != '\\0') goto LAB_00407f7d;\n        FUN_00402021(0x14,param_1 + 0x32,pwVar1);\n        FUN_00406dcb();\n        FUN_00406d83(&DAT_00441098,9);\n        goto LAB_00407f14;\n      }\n    }\n  }\nLAB_00407f0d:\n  *(undefined1 *)((int)this + 0x10ff) = 1;\nLAB_00407f14:\n  if (*(char *)((int)this + 0x10ff) != '\\0') {\n    FUN_00407a78();\n    iVar2 = *(int *)((int)this + 8);\n    FUN_0040a354(pwVar1,(int *)(-(uint)(*(int *)(iVar2 + 0x82d0) != 0) & param_1 + 0x32d8U),\n                 (int *)(-(uint)(*(int *)(iVar2 + 0x82d4) != 0) & param_1 + 0x32e0U),\n                 (int *)(-(uint)(*(int *)(iVar2 + 0x82d8) != 0) & param_1 + 0x32e8U));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00407fc0",
      "entry": "00407fc0",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined1 __thiscall FUN_00407fc0(void *this,int param_1,void *param_2)\n\n{\n  LPCWSTR pWVar1;\n  int iVar2;\n  bool bVar3;\n  char cVar4;\n  DWORD DVar5;\n  undefined4 uVar6;\n  undefined1 uVar7;\n  char local_104d;\n  undefined4 local_104c [19];\n  short local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x407fca;\n  uVar7 = 1;\n  iVar2 = *(int *)((int)this + 8);\n  if (((*(short *)(iVar2 + 0x92fa) == 0x45) || (*(short *)(iVar2 + 0x92fa) == 0x58)) &&\n     (*(char *)(iVar2 + 0x7201) == '\\0')) {\n    pWVar1 = (LPCWSTR)((int)this + 0x1100);\n    bVar3 = FUN_004092a3(iVar2,param_2,pWVar1,0x800,&local_104d,*(undefined4 *)(param_1 + 0x32f8),\n                         *(undefined4 *)(param_1 + 0x32fc),param_1 + 0x32d8,1);\n    if ((!bVar3) && (uVar7 = 0, local_104d == '\\0')) {\n      FUN_00406bfd(&DAT_00441098,param_1 + 0x32,pWVar1);\n      bVar3 = FUN_0040a231(pWVar1);\n      if (bVar3) {\n        DVar5 = FUN_0040a243(pWVar1);\n        cVar4 = FUN_0040a28f(DVar5);\n        if (cVar4 != '\\0') {\n          FUN_004015c6(local_104c,0x62);\n          FUN_004115fe(local_104c);\n        }\n      }\n      uVar6 = FUN_0040bd1a(pWVar1);\n      if ((char)uVar6 == '\\0') {\n        FUN_0040138b(0x74,param_1 + 0x32);\n        FUN_00410602(local_1000,(int)pWVar1,0x800);\n        FUN_0040c058((ushort *)pWVar1,'\\x01');\n        FUN_0040a0b1(pWVar1,'\\x01');\n        bVar3 = FUN_004092a3(*(int *)((int)this + 8),param_2,pWVar1,0x800,&local_104d,\n                             *(undefined4 *)(param_1 + 0x32f8),*(undefined4 *)(param_1 + 0x32fc),\n                             param_1 + 0x32d8,1);\n        if (bVar3) {\n          uVar7 = 1;\n        }\n        else {\n          FUN_00406bfd(&DAT_00441098,param_1 + 0x32,pWVar1);\n        }\n      }\n    }\n  }\n  return uVar7;\n}\n\n"
    },
    {
      "name": "FUN_00408117",
      "entry": "00408117",
      "c": "\nundefined4 __thiscall FUN_00408117(void *this,undefined4 param_1,wchar_t *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 local_50 [19];\n  \n  iVar1 = *(int *)((int)this + 8);\n  if (*(char *)(iVar1 + 0x6124) == '\\0') {\n    iVar1 = FUN_00411b42(1,param_2,(undefined4 *)(iVar1 + 0x6024));\n    if ((char)iVar1 == '\\0') {\n      FUN_004015c6(local_50,2);\n      uVar2 = FUN_004115fe(local_50);\n      return uVar2 & 0xffffff00;\n    }\n    *(undefined1 *)(*(int *)((int)this + 8) + 0x6128) = 1;\n  }\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "FUN_00408167",
      "entry": "00408167",
      "c": "\nvoid __thiscall\nFUN_00408167(void *this,undefined4 param_1,wchar_t *param_2,wchar_t *param_3,uint param_4)\n\n{\n  bool bVar1;\n  char cVar2;\n  bool bVar3;\n  short sVar4;\n  wchar_t wVar5;\n  wchar_t *pwVar6;\n  \n  FUN_00410602(param_3,*(int *)((int)this + 8) + 0x2012,param_4);\n  bVar1 = false;\n  pwVar6 = (wchar_t *)(*(int *)((int)this + 8) + 0x2012);\n  if (*pwVar6 != L'\\0') {\n    pwVar6 = FUN_0040c27e(pwVar6);\n    wVar5 = *pwVar6;\n    cVar2 = FUN_0040bd9d((uint)(ushort)wVar5);\n    if ((cVar2 == '\\0') && (bVar3 = FUN_0040bc8d((uint)(ushort)wVar5), !bVar3)) {\n      FUN_0040b690(param_3,param_4);\n    }\n  }\n  sVar4 = *(short *)(*(int *)((int)this + 8) + 0x92fa);\n  if (((*(int *)(*(int *)((int)this + 8) + 0x7160) == 4) && (sVar4 == 0x58)) &&\n     (bVar3 = FUN_0040bc8d(0x3a), bVar3)) {\n    bVar1 = true;\n    *param_3 = L'\\0';\nLAB_004081fc:\n    if (*(int *)(*(int *)((int)this + 8) + 0x7160) != 1) goto LAB_00408217;\n  }\n  else if (sVar4 != 0x45) goto LAB_004081fc;\n  param_2 = FUN_0040c29a(param_2);\nLAB_00408217:\n  FUN_004105da(param_3,(int)param_2,param_4);\n  if (*(char *)(*(int *)((int)this + 8) + 0x71a3) == '\\0') {\n    FUN_0040be5e((uint *)param_3,param_4);\n  }\n  sVar4 = FUN_00411fac(*param_3);\n  if (bVar1) {\n    if (((param_3[1] == L'_') && (cVar2 = FUN_0040bd9d((uint)(ushort)param_3[2]), cVar2 != '\\0')) &&\n       ((ushort)(sVar4 - 0x41U) < 0x1a)) {\n      wVar5 = L':';\n    }\n    else {\n      if (*param_3 != L'_') {\n        return;\n      }\n      if (param_3[1] != L'_') {\n        return;\n      }\n      wVar5 = L'\\\\';\n      *param_3 = L'\\\\';\n    }\n    param_3[1] = wVar5;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00408284",
      "entry": "00408284",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined4 FUN_00408284(void)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  short sVar3;\n  int iVar4;\n  char cVar5;\n  undefined4 uVar6;\n  void *this;\n  int iVar7;\n  int unaff_EBP;\n  uint uVar8;\n  bool bVar9;\n  \n  FUN_0041eb78();\n  FUN_004013dc();\n  iVar4 = *(int *)((int)this + 8);\n  iVar7 = 0;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  if (*(short *)(iVar4 + 0x82de) == 0) {\n    bVar9 = FUN_00409f42((void *)(unaff_EBP + -0x9d70),(int)this + 0xfe);\n    if (!bVar9) goto LAB_00408415;\n  }\n  else {\n    *(undefined4 *)(unaff_EBP + -0x9d60) = 1;\n  }\n  uVar6 = FUN_00401a04();\n  if ((char)uVar6 == '\\0') {\n    FUN_00406d83(&DAT_00441098,1);\n  }\n  else if (*(char *)(unaff_EBP + -0x3093) == '\\0') {\n    uVar8 = 0;\n    if (*(char *)(unaff_EBP + -0x30a3) != '\\0') {\n      FUN_00410602((short *)(unaff_EBP + -0x1010),unaff_EBP + -0x9d3e,0x800);\n      cVar5 = *(char *)(unaff_EBP + -0x309e);\n      while( true ) {\n        FUN_0040c0c5((wchar_t *)(unaff_EBP + -0x1010),0x800,cVar5 == '\\0');\n        FUN_00406edb(unaff_EBP + -0x2058);\n        uVar6 = FUN_0040a56d((wchar_t *)(unaff_EBP + -0x1010),(wchar_t *)(unaff_EBP + -0x2058));\n        if ((char)uVar6 == '\\0') break;\n        bVar9 = CARRY4(uVar8,*(uint *)(unaff_EBP + -0x1058));\n        uVar8 = uVar8 + *(uint *)(unaff_EBP + -0x1058);\n        iVar7 = iVar7 + *(int *)(unaff_EBP + -0x1054) + (uint)bVar9;\n        cVar5 = *(char *)(unaff_EBP + -0x309e);\n      }\n      puVar1 = (uint *)((int)this + 0xa0);\n      uVar2 = *puVar1;\n      *puVar1 = *puVar1 + uVar8;\n      *(int *)((int)this + 0xa4) = *(int *)((int)this + 0xa4) + iVar7 + (uint)CARRY4(uVar2,uVar8);\n    }\n    FUN_00408430(this,(int *)(unaff_EBP + -0x9d70));\n    sVar3 = *(short *)(*(int *)((int)this + 8) + 0x92fa);\n    if ((sVar3 == 0x54) || (sVar3 == 0x49)) {\n      *(undefined1 *)(*(int *)((int)this + 8) + 0x7201) = 1;\n    }\n    if (*(short *)(*(int *)((int)this + 8) + 0x92fa) != 0x49) {\n      FUN_00411b66(*(char *)(*(int *)((int)this + 8) + 0x7201) == '\\0',(wchar_t *)((int)this + 0xfe)\n                  );\n    }\n    FUN_00401f6d();\n    do {\n      FUN_00403b2d((int *)(unaff_EBP + -0x9d70));\n      cVar5 = FUN_0040848e();\n    } while (cVar5 != '\\0');\n  }\nLAB_00408415:\n  FUN_00401692((int *)(unaff_EBP + -0x9d70));\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00408430",
      "entry": "00408430",
      "c": "\nvoid __thiscall FUN_00408430(void *this,int *param_1)\n\n{\n  char cVar1;\n  undefined1 uVar2;\n  \n  FUN_0040cf3d((void *)((int)this + 0x10),param_1);\n  *(undefined4 *)((int)this + 0xf0) = 0;\n  *(undefined4 *)((int)this + 0xf4) = 0;\n  uVar2 = 0;\n  if (*(char *)(*(int *)((int)this + 8) + 0x6124) == '\\0') {\n    cVar1 = FUN_00411b63();\n    if (cVar1 == '\\0') goto LAB_00408466;\n  }\n  uVar2 = 1;\nLAB_00408466:\n  *(undefined1 *)((int)this + 0x10fe) = uVar2;\n  *(undefined1 *)((int)this + 0x67) = 0;\n  *(undefined1 *)((int)this + 0x10ff) = 0;\n  *(undefined1 *)((int)this + 0xf9) = 1;\n  *(undefined1 *)((int)this + 0xfc) = 0;\n  FUN_004113d2((undefined4 *)this);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040848e",
      "entry": "0040848e",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined1 FUN_0040848e(void)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  void *this;\n  bool bVar3;\n  char cVar4;\n  char cVar5;\n  short sVar6;\n  undefined4 uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  ushort uVar11;\n  uint *this_00;\n  int unaff_EBP;\n  undefined4 *puVar12;\n  undefined4 *puVar13;\n  uint *puVar14;\n  undefined1 uVar15;\n  undefined8 uVar16;\n  \n  FUN_0041eb78();\n  piVar1 = *(int **)(unaff_EBP + 8);\n  *(uint **)(unaff_EBP + -0x1c) = this_00;\n  uVar11 = *(ushort *)(this_00[2] + 0x92fa);\n  *(uint *)(unaff_EBP + -0x18) = (uint)uVar11;\n  if (*(int *)(unaff_EBP + 0xc) == 0) {\n    if (*(char *)((int)this_00 + 0x67) != '\\0') {\n      *(uint **)(unaff_EBP + -0x20) = this_00 + 4;\n      uVar7 = FUN_00418c8d(piVar1,this_00 + 4,0,uVar11);\n      if ((char)uVar7 != '\\0') {\n        uVar11 = (ushort)*(undefined4 *)(unaff_EBP + -0x18);\n        goto LAB_004084e6;\n      }\nLAB_00408537:\n      FUN_00406d83(&DAT_00441098,1);\n    }\nLAB_00408543:\n    uVar15 = 0;\n  }\n  else {\n    *(uint **)(unaff_EBP + -0x20) = this_00 + 4;\nLAB_004084e6:\n    iVar8 = piVar1[0x87d];\n    if (iVar8 == 2) {\n      *(undefined1 *)((int)this_00 + 0x10ff) = 0;\n      if ((piVar1[0xcbd] < 1) && (piVar1[0xcbd] < 0)) {\n        piVar1[0xcbc] = 0;\n        piVar1[0xcbd] = 0;\n      }\n      if ((piVar1[0xcbf] < 1) && (piVar1[0xcbf] < 0)) {\n        piVar1[0xcbe] = 0;\n        piVar1[0xcbf] = 0;\n      }\n      this = (void *)this_00[2];\n      if (((*(int *)((int)this + 0x7164) == 0) && (*(uint *)((int)this + 0xb334) <= this_00[0x3d]))\n         && (*(char *)((int)this_00 + 0xf9) != '\\0')) goto LAB_00408543;\n      *(undefined1 *)(unaff_EBP + -0x13) = 0;\n      iVar8 = FUN_00405d1a(this,(int)(piVar1 + 0x8a6),(char *)(unaff_EBP + -0x13),6,0,\n                           (short *)(unaff_EBP + -0x60b8),0x800);\n      *(bool *)(unaff_EBP + -0x11) = iVar8 != 0;\n      if ((iVar8 != 0) && (*(char *)(unaff_EBP + -0x13) == '\\0')) {\n        *(undefined1 *)((int)this_00 + 0xf9) = 0;\n      }\n      FUN_00402112((int)piVar1);\n      FUN_0040b76c((ushort *)(piVar1 + 0x8b0),(short *)(unaff_EBP + -0x30b8),0x800);\n      cVar5 = *(char *)((int)piVar1 + 0x338b);\n      *(undefined4 *)(unaff_EBP + -0x24) = 1;\n      if (cVar5 == '\\0') {\n        cVar5 = FUN_00402209((int)piVar1);\n        if (cVar5 == '\\0') {\n          *(byte *)(unaff_EBP + -0x11) =\n               *(byte *)(unaff_EBP + -0x11) & ~-(1 < *(uint *)(this_00[2] + 0x82c4));\n        }\n      }\n      else if ((*(int *)(this_00[2] + 0x82c4) != 1) && (*(char *)(unaff_EBP + -0x13) == '\\0')) {\n        *(byte *)(unaff_EBP + -0x11) =\n             *(byte *)(unaff_EBP + -0x11) & (*(int *)(this_00[2] + 0x82c4) == 0) - 1U;\n        iVar8 = FUN_0040c249((undefined1 (*) [16])(unaff_EBP + -0x30b8),'\\0');\n        if (*(int *)(this_00[2] + 0x82c4) + -1 == iVar8) {\n          FUN_0040c249((undefined1 (*) [16])(unaff_EBP + -0x30b8),'\\x01');\n        }\n        else {\n          *(undefined1 *)(unaff_EBP + -0x11) = 0;\n        }\n      }\n      *(undefined1 *)((int)this_00 + 0x67) = *(undefined1 *)((int)piVar1 + 0x3331);\n      *(undefined1 *)(this_00 + 0x1a) = 0;\n      iVar8 = *piVar1;\n      (*(code *)PTR_guard_check_icall_00433278)\n                (piVar1[0x1b30] - piVar1[0xcbc],\n                 (piVar1[0x1b31] - piVar1[0xcbd]) -\n                 (uint)((uint)piVar1[0x1b30] < (uint)piVar1[0xcbc]),0);\n      (**(code **)(iVar8 + 0x10))();\n      cVar5 = '\\0';\n      *(undefined1 *)(unaff_EBP + -0xd) = 0;\n      *(undefined1 *)(unaff_EBP + -0x28) = 0;\n      puVar14 = this_00;\n      if ((*(char *)((int)piVar1 + 0x3333) == '\\0') || (*(char *)(this_00[2] + 0x6127) == '\\0')) {\n        if (*(char *)(unaff_EBP + -0x11) == '\\0') goto LAB_00408726;\nLAB_0040873c:\n        sVar6 = (short)*(undefined4 *)(unaff_EBP + -0x18);\n        bVar3 = thunk_FUN_0041dec2();\n        if (!bVar3) goto LAB_00408543;\n        *(uint **)(unaff_EBP + -0x38) = this_00 + 0x440;\n        FUN_00408167(this_00,piVar1,(wchar_t *)(unaff_EBP + -0x30b8),(wchar_t *)(this_00 + 0x440),\n                     0x800);\n        if (((*(char *)(unaff_EBP + -0xd) != '\\0') || ((short)this_00[0x440] == 0)) ||\n           (*(undefined1 *)(unaff_EBP + -0xe) = 1, (char)piVar1[0xccc] != '\\0')) {\n          *(undefined1 *)(unaff_EBP + -0xe) = 0;\n        }\n        uVar9 = this_00[2];\n        cVar5 = *(char *)(uVar9 + 0x715b);\n        *(undefined4 *)(unaff_EBP + -0x34) = 0x45;\n        *(undefined4 *)(unaff_EBP + -0x30) = 0x58;\n        if (((cVar5 != '\\0') || (*(char *)(uVar9 + 0x715c) != '\\0')) &&\n           ((sVar6 == 0x45 || (sVar6 == 0x58)))) {\n          FUN_00406edb(unaff_EBP + -0x20b8);\n          uVar7 = FUN_0040a56d((wchar_t *)(this_00 + 0x440),(wchar_t *)(unaff_EBP + -0x20b8));\n          if ((char)uVar7 == '\\0') {\n            *(byte *)(unaff_EBP + -0xe) =\n                 *(byte *)(unaff_EBP + -0xe) & (*(char *)(this_00[2] + 0x715b) != '\\0') - 1U;\n          }\n          else {\n            uVar7 = FUN_00407be7((void *)(unaff_EBP + -0x10a8),(uint *)(piVar1 + 0xcb6));\n            if (((char)uVar7 != '\\0') &&\n               ((*(char *)(unaff_EBP + -0x10ac) == '\\0' ||\n                (uVar9 = FUN_00407bca((void *)(unaff_EBP + -0x10a8),this_00), (char)uVar9 != '\\0')))\n               ) {\n              *(undefined1 *)(unaff_EBP + -0xe) = 0;\n            }\n          }\n        }\n        uVar9 = FUN_00407c0d((int)piVar1,unaff_EBP + -0x30b8);\n        if ((char)uVar9 == '\\0') {\n          FUN_00406d83(&DAT_00441098,2);\n          FUN_00401f47(piVar1);\n          uVar15 = (char)piVar1[0x1b33] == '\\0';\n          goto LAB_00408545;\n        }\n        while( true ) {\n          if ((*(char *)((int)piVar1 + 0x3333) != '\\0') &&\n             (uVar7 = FUN_00408117(puVar14,piVar1,(wchar_t *)(unaff_EBP + -0x30b8)),\n             (char)uVar7 == '\\0')) {\n            *(undefined1 *)(puVar14 + 0x840) = 1;\n            goto LAB_00408543;\n          }\n          puVar12 = (undefined4 *)(puVar14[2] + 0x6024);\n          puVar13 = (undefined4 *)(unaff_EBP + -0x1174);\n          for (iVar8 = 0x40; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar13 = *puVar12;\n            puVar12 = puVar12 + 1;\n            puVar13 = puVar13 + 1;\n          }\n          *(undefined2 *)puVar13 = *(undefined2 *)puVar12;\n          iVar8 = piVar1[0xcce];\n          uVar9 = piVar1[0xce1];\n          *(undefined4 *)(unaff_EBP + -4) = 0;\n          FUN_0040d051(*(void **)(unaff_EBP + -0x20),'\\0',piVar1[0xccd],\n                       (undefined4 *)(unaff_EBP + -0x1174),\n                       (uint *)(-(uint)((char)iVar8 != '\\0') & (int)piVar1 + 0x3339U),\n                       (int)piVar1 + 0x3349,uVar9,(uint *)((int)piVar1 + 0x3363),\n                       (void *)(unaff_EBP + -0x2c));\n          if (((*(char *)((int)piVar1 + 0x3333) == '\\0') ||\n              (*(char *)((int)piVar1 + 0x3359) == '\\0')) ||\n             (iVar8 = FUN_00420c4a((uint *)((int)piVar1 + 0x335a),(uint *)(unaff_EBP + -0x2c),8),\n             iVar8 == 0)) {\n            puVar14 = *(uint **)(unaff_EBP + -0x1c);\n            goto LAB_004089a8;\n          }\n          puVar14 = *(uint **)(unaff_EBP + -0x1c);\n          if ((char)piVar1[0x1b37] != '\\0') goto LAB_004089a8;\n          if (*(char *)((int)puVar14 + 0x10fe) != '\\0') break;\n          FUN_00402021(0x83,(int)piVar1 + 0x32,unaff_EBP + -0x30b8);\n          FUN_0040f279((undefined1 *)(puVar14[2] + 0x6024));\n          *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n          thunk_FUN_0040f279((undefined1 *)(unaff_EBP + -0x1174));\n        }\n        FUN_00402021(6,(int)piVar1 + 0x32,unaff_EBP + -0x30b8);\n        FUN_00406d83(&DAT_00441098,0xb);\n        *(undefined1 *)(unaff_EBP + -0xe) = 0;\nLAB_004089a8:\n        *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n        thunk_FUN_0040f279((undefined1 *)(unaff_EBP + -0x1174));\n        FUN_00409556((undefined4 *)(unaff_EBP + -0x1070));\n        iVar8 = piVar1[0xce6];\n        *(int *)(unaff_EBP + -0x20) = iVar8;\n        *(undefined4 *)(unaff_EBP + -4) = 1;\n        if ((iVar8 == 0) || (iVar8 == 5)) {\n          cVar5 = FUN_00402209((int)piVar1);\n          if (cVar5 != '\\0') {\n            if (((*(char *)(unaff_EBP + -0xe) != '\\0') &&\n                (sVar6 = (short)*(undefined4 *)(unaff_EBP + -0x18), sVar6 != 0x50)) &&\n               ((sVar6 != 0x49 && ((sVar6 != 0x45 && (*(int *)(puVar14[2] + 0x7160) != 1)))))) {\n              puVar14[0x3b] = puVar14[0x3b] + 1;\n              FUN_00407db2(puVar14,(int)piVar1);\n            }\nLAB_00408b01:\n            FUN_0040959a((int *)(unaff_EBP + -0x1070));\n            uVar15 = *(undefined1 *)(unaff_EBP + -0x24);\n            goto LAB_00408545;\n          }\n          cVar5 = *(char *)(unaff_EBP + -0xe);\n          if (cVar5 == '\\0') goto LAB_00408ad8;\n          cVar5 = FUN_00407fc0(puVar14,(int)piVar1,(void *)(unaff_EBP + -0x1070));\n          *(char *)(unaff_EBP + -0xe) = cVar5;\nLAB_00408ad1:\n          if (cVar5 == '\\0') goto LAB_00408ad8;\n          goto LAB_00408b1c;\n        }\n        cVar5 = *(char *)(unaff_EBP + -0xe);\n        if (cVar5 == '\\0') {\nLAB_00408ad8:\n          if ((char)piVar1[0x1b33] != '\\0') {\n            *(undefined1 *)(unaff_EBP + -0xd) = 1;\n            *(undefined1 *)(unaff_EBP + -0xe) = 1;\n            bVar3 = thunk_FUN_0041dec2();\n            if (!bVar3) {\n              *(undefined1 *)(unaff_EBP + -0x24) = 0;\n              goto LAB_00408b01;\n            }\nLAB_00408b1c:\n            sVar6 = (short)*(undefined4 *)(unaff_EBP + -0x18);\n            goto LAB_00408b1f;\n          }\n          if (cVar5 != '\\0') goto LAB_00408b1c;\n        }\n        else {\n          sVar6 = (short)*(undefined4 *)(unaff_EBP + -0x18);\n          if ((sVar6 != 0x50) && (*(char *)(puVar14[2] + 0x7201) == '\\0')) {\n            *(undefined1 *)(unaff_EBP + -0x12) = 0;\n            bVar3 = FUN_0040a231((LPCWSTR)(puVar14 + 0x440));\n            if (bVar3) {\n              if (*(char *)(unaff_EBP + -0x12) == '\\0') {\n                FUN_004092a3(puVar14[2],(void *)0x0,(LPCWSTR)(puVar14 + 0x440),0x800,\n                             (undefined1 *)(unaff_EBP + -0x12),piVar1[0xcbe],piVar1[0xcbf],\n                             piVar1 + 0xcb6,0);\n                goto LAB_00408a4c;\n              }\nLAB_00408a56:\n              cVar5 = '\\0';\n              *(undefined1 *)(unaff_EBP + -0xe) = 0;\n              goto LAB_00408ad1;\n            }\nLAB_00408a4c:\n            if (*(char *)(unaff_EBP + -0x12) != '\\0') goto LAB_00408a56;\n            goto LAB_00408b1c;\n          }\nLAB_00408b1f:\n          if ((*(char *)(puVar14[2] + 0x7201) == '\\0') ||\n             (*(undefined1 *)((int)puVar14 + 0x10ff) = 1, *(char *)(puVar14[2] + 0x7201) == '\\0')) {\n            cVar5 = *(char *)(unaff_EBP + -0xd);\n            if (cVar5 != '\\0') goto LAB_00408b87;\n            *(undefined1 *)(unaff_EBP + -0x12) = 0;\n            if ((sVar6 != 0x50) && (uVar7 = FUN_004098bc(unaff_EBP + -0x1070), (char)uVar7 != '\\0'))\n            {\n              FUN_00402021(0x3b,(int)piVar1 + 0x32,puVar14 + 0x440);\n              FUN_00406e98(&DAT_00441098,(int)piVar1 + 0x32,puVar14 + 0x440);\n            }\nLAB_00408b8f:\n            puVar14[0x3b] = puVar14[0x3b] + 1;\n          }\n          else {\n            cVar5 = *(char *)(unaff_EBP + -0xd);\nLAB_00408b87:\n            *(undefined1 *)(unaff_EBP + -0x12) = 1;\n            if (cVar5 == '\\0') goto LAB_00408b8f;\n          }\n          puVar14[0x3c] = puVar14[0x3c] + 1;\n          puVar14[0x20] = 0;\n          puVar14[0x21] = 0;\n          puVar14[0x22] = 0;\n          puVar14[0x23] = 0;\n          FUN_0040ab1a(puVar14 + 0x34,piVar1[0xcc2],*(uint *)(puVar14[2] + 0x92e0));\n          FUN_0040ab1a(puVar14 + 0x2a,piVar1[0xcc2],*(uint *)(puVar14[2] + 0x92e0));\n          uVar9 = piVar1[0xcbc];\n          uVar10 = piVar1[0xcbd];\n          puVar14[0xe] = uVar9;\n          puVar14[0xc] = uVar9;\n          puVar14[0xf] = uVar10;\n          puVar14[0xd] = uVar10;\n          FUN_0040d099(puVar14 + 4,(int)piVar1,unaff_EBP + -0x1070);\n          cVar5 = *(char *)(unaff_EBP + -0x12);\n          cVar4 = *(char *)(unaff_EBP + -0xd);\n          *(char *)((int)puVar14 + 0x41) = cVar5;\n          *(char *)((int)puVar14 + 0x42) = cVar4;\n          *(undefined4 *)(unaff_EBP + -0x28) = 0;\n          *(undefined4 *)(unaff_EBP + -0x24) = 0;\n          if ((cVar5 == '\\0') && ((char)piVar1[0x1b37] == '\\0')) {\n            iVar8 = piVar1[0xcbf];\n            uVar9 = piVar1[0xcbe];\n            if ((-1 < iVar8) && ((0 < iVar8 || (1000000 < uVar9)))) {\n              uVar10 = piVar1[0xcbd] << 10 | (uint)piVar1[0xcbc] >> 0x16;\n              if ((iVar8 <= (int)uVar10) &&\n                 (((iVar8 < (int)uVar10 || (uVar9 < (uint)(piVar1[0xcbc] << 10))) &&\n                  (piVar1[4] != 1)))) {\n                if ((-1 < iVar8) && ((0 < iVar8 || (99999999 < uVar9)))) {\n                  uVar16 = FUN_0040981a(piVar1);\n                  iVar8 = (int)((ulonglong)uVar16 >> 0x20);\n                  if ((iVar8 < piVar1[0xcbd]) ||\n                     ((iVar8 <= piVar1[0xcbd] && ((uint)uVar16 <= (uint)piVar1[0xcbc]))))\n                  goto LAB_00408cce;\n                }\n                FUN_00409a3c((void *)(unaff_EBP + -0x1070),piVar1[0xcbe],piVar1[0xcbf]);\n                *(int *)(unaff_EBP + -0x28) = piVar1[0xcbe];\n                *(int *)(unaff_EBP + -0x24) = piVar1[0xcbf];\n              }\nLAB_00408cce:\n              cVar4 = *(char *)(unaff_EBP + -0xd);\n            }\n          }\n          uVar9 = puVar14[2];\n          *(bool *)(unaff_EBP + -0x1053) = *(char *)(uVar9 + 0x71a0) == '\\0';\n          if (((*(char *)(unaff_EBP + -0x12) == '\\0') && (cVar4 == '\\0')) &&\n             (*(short *)(unaff_EBP + -0x18) != 0x50)) {\n            cVar5 = '\\x01';\n            *(undefined1 *)(unaff_EBP + -0x10) = 1;\n          }\n          else {\n            cVar5 = '\\0';\n            *(undefined1 *)(unaff_EBP + -0x10) = 0;\n          }\n          *(undefined1 *)(unaff_EBP + -0x14) = 1;\n          *(undefined1 *)(unaff_EBP + -0xf) = 1;\n          if (*(int *)(unaff_EBP + -0x20) == 0) {\n            if ((char)piVar1[0xccc] == '\\0') {\n              if ((char)piVar1[0x8ae] == '\\0') {\n                FUN_00409215();\n              }\n              else {\n                FUN_00413377((void *)puVar14[0x3a],piVar1[0xce3],(char)piVar1[0xce2]);\n                uVar9 = puVar14[0x3a];\n                iVar8 = piVar1[0xcbf];\n                *(int *)(uVar9 + 0x4c48) = piVar1[0xcbe];\n                *(int *)(uVar9 + 0x4c4c) = iVar8;\n                *(undefined1 *)(uVar9 + 0x4c60) = 0;\n                FUN_00413020((void *)puVar14[0x3a],piVar1[0x8ad],(char)piVar1[0xce2]);\n              }\n            }\n          }\n          else {\n            iVar8 = piVar1[0xce6];\n            if ((iVar8 == 4) || (iVar8 == 5)) {\n              FUN_0040b76c((ushort *)(piVar1 + 0xce7),(short *)(unaff_EBP + -0x50b8),0x800);\n              FUN_00408167(puVar14,piVar1,(wchar_t *)(unaff_EBP + -0x50b8),\n                           (wchar_t *)(unaff_EBP + -0x40b8),0x800);\n              cVar5 = *(char *)(unaff_EBP + -0x10);\n              if ((cVar5 != '\\0') && (*(short *)(unaff_EBP + -0x40b8) != 0)) {\n                if (iVar8 == 4) {\n                  cVar4 = FUN_00407542(puVar14[2],(wchar_t *)(puVar14 + 0x440),\n                                       (LPCWSTR)(unaff_EBP + -0x40b8),0x800);\n                  goto LAB_00408dee;\n                }\n                cVar4 = FUN_00409155();\n                *(char *)(unaff_EBP + -0xf) = cVar4;\n                goto LAB_00408e0c;\n              }\nLAB_00408e19:\n              cVar4 = *(char *)(unaff_EBP + -0xf);\nLAB_00408e1c:\n              if (piVar1[0x1b32] != 2) goto LAB_00408d57;\n              if (cVar5 == '\\0') goto LAB_00408d53;\nLAB_00408d5f:\n              if (cVar4 == '\\0') goto LAB_00408e36;\n              uVar15 = 1;\n            }\n            else {\n              if (((iVar8 == 1) || (iVar8 == 2)) || (iVar8 == 3)) {\n                if (cVar5 == '\\0') goto LAB_00408e19;\n                cVar4 = FUN_004077b8(uVar9,puVar14 + 4,(int)piVar1);\nLAB_00408dee:\n                *(char *)(unaff_EBP + -0xf) = cVar4;\nLAB_00408e0c:\n                if (cVar4 != '\\0') {\n                  cVar5 = *(char *)(unaff_EBP + -0x10);\n                  goto LAB_00408e1c;\n                }\n              }\n              else {\n                FUN_00402021(0x47,(int)piVar1 + 0x32,puVar14 + 0x440);\n                cVar4 = '\\0';\n                *(undefined1 *)(unaff_EBP + -0xf) = 0;\n              }\n              cVar5 = *(char *)(unaff_EBP + -0x10);\nLAB_00408d53:\n              *(undefined1 *)(unaff_EBP + -0x14) = 0;\nLAB_00408d57:\n              if (cVar5 != '\\0') goto LAB_00408d5f;\nLAB_00408e36:\n              uVar15 = 0;\n            }\n            *(undefined1 *)((int)puVar14 + 0x10ff) = uVar15;\n          }\n          FUN_00401f47(piVar1);\n          if ((*(char *)((int)piVar1 + 0x3331) == '\\0') &&\n             (cVar5 = FUN_0040aaea(puVar14 + 0x34,piVar1 + 0xcc2,\n                                   (ulong *)(-(uint)(*(char *)((int)piVar1 + 0x3362) != '\\0') &\n                                            (int)piVar1 + 0x3363U)), cVar5 != '\\0')) {\n            bVar3 = true;\n          }\n          else {\n            bVar3 = false;\n          }\n          cVar5 = '\\0';\n          if ((char)piVar1[0xce2] == '\\0') {\n            *(undefined1 *)(puVar14 + 0x3f) = 0;\n          }\n          else if ((((char)piVar1[0x8ae] != '\\0') && (-1 < piVar1[0xcbf])) &&\n                  (((0 < piVar1[0xcbf] || (piVar1[0xcbe] != 0)) && (bVar3)))) {\n            *(undefined1 *)(puVar14 + 0x3f) = 1;\n          }\n          *(undefined1 *)(unaff_EBP + -0x10) = 0;\n          if (((*(char *)(unaff_EBP + -0xd) == '\\0') && (*(char *)(unaff_EBP + -0x14) != '\\0')) &&\n             (!bVar3)) {\n            if (((*(char *)((int)piVar1 + 0x3333) == '\\0') ||\n                ((*(char *)((int)piVar1 + 0x3359) != '\\0' && ((char)piVar1[0x1b37] == '\\0')))) ||\n               ((char)puVar14[0x3f] != '\\0')) {\n              uVar7 = 3;\n            }\n            else {\n              uVar7 = 4;\n            }\n            FUN_00402021(uVar7,(int)piVar1 + 0x32,unaff_EBP + -0x30b8);\n            *(undefined1 *)(unaff_EBP + -0x10) = 1;\n            FUN_00406d83(&DAT_00441098,3);\n            cVar5 = *(char *)(unaff_EBP + -0x10);\n          }\n          if (((*(int *)(unaff_EBP + -0x20) == 0) || (piVar1[0xce6] != 4)) ||\n             (*(char *)(unaff_EBP + -0xf) == '\\0')) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n          if (((*(char *)(unaff_EBP + -0x12) == '\\0') &&\n              ((sVar6 = (short)*(undefined4 *)(unaff_EBP + -0x18),\n               sVar6 == *(short *)(unaff_EBP + -0x30) || (sVar6 == *(short *)(unaff_EBP + -0x34)))))\n             && ((*(int *)(unaff_EBP + -0x20) == 0 ||\n                 ((bVar3 || ((piVar1[0xce6] == 5 && (*(char *)(unaff_EBP + -0xf) != '\\0')))))))) {\n            if (cVar5 != '\\0') {\n              if (*(char *)(puVar14[2] + 0x71a0) == '\\0') goto LAB_0040910c;\n              cVar5 = *(char *)(unaff_EBP + -0x10);\n            }\n            if (!bVar3) {\n              if (((*(uint *)(unaff_EBP + -0x24) != 0) || (*(uint *)(unaff_EBP + -0x28) != 0)) &&\n                 ((cVar5 != '\\0' ||\n                  ((puVar14[0x22] != *(uint *)(unaff_EBP + -0x28) ||\n                   (puVar14[0x23] != *(uint *)(unaff_EBP + -0x24))))))) {\n                FUN_00409f09(unaff_EBP + -0x1070);\n              }\n              uVar9 = puVar14[2];\n              FUN_00409da2((void *)(unaff_EBP + -0x1070),\n                           (int *)(-(uint)(*(int *)(uVar9 + 0x82d0) != 0) & (uint)(piVar1 + 0xcb6)),\n                           (int *)(-(uint)(*(int *)(uVar9 + 0x82d4) != 0) & (uint)(piVar1 + 0xcb8)),\n                           (int *)(-(uint)(*(int *)(uVar9 + 0x82d8) != 0) & (uint)(piVar1 + 0xcba)))\n              ;\n              FUN_00409620(unaff_EBP + -0x1070);\n              FUN_00407a78();\n              FUN_00409d9f();\n              puVar14 = *(uint **)(unaff_EBP + -0x1c);\n            }\n            if (*(char *)(puVar14[2] + 0x71a8) == '\\0') {\n              bVar3 = FUN_0040a4ed((LPCWSTR)(puVar14 + 0x440),piVar1[0x8af]);\n              if (!bVar3) {\n                FUN_00402021(0x11,(int)piVar1 + 0x32,puVar14 + 0x440);\n                FUN_00406dcb();\n              }\n            }\n            *(undefined1 *)((int)puVar14 + 0x10ff) = 1;\n          }\n        }\nLAB_0040910c:\n        *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n        FUN_0040959a((int *)(unaff_EBP + -0x1070));\n        cVar5 = *(char *)(unaff_EBP + -0xe);\n        cVar4 = *(char *)(unaff_EBP + -0xd);\n        if (*(char *)(unaff_EBP + -0x11) != '\\0') {\n          puVar14[0x3d] = puVar14[0x3d] + 1;\n        }\n      }\n      else {\n        if ((char)piVar1[0x1b33] != '\\0') goto LAB_00408543;\n        *(undefined1 *)(unaff_EBP + -0x11) = 0;\nLAB_00408726:\n        cVar4 = (char)piVar1[0x1b33];\n        *(char *)(unaff_EBP + -0xd) = cVar4;\n        *(char *)(unaff_EBP + -0x28) = cVar4;\n        if (cVar4 != '\\0') goto LAB_0040873c;\n      }\n      if ((char)puVar14[0x1a] != '\\0') goto LAB_00408543;\n      if (cVar5 == '\\0') {\n        if ((char)piVar1[0x1b33] != '\\0') {\n          uVar15 = cVar4 != '\\0';\n          goto LAB_00408545;\n        }\n        goto LAB_00408513;\n      }\n    }\n    else {\n      if (iVar8 == 3) {\n        if (*(char *)((int)this_00 + 0x10ff) != '\\0') {\n          FUN_00407a0d(this_00[2],(int)piVar1);\n        }\n      }\n      else if (iVar8 == 5) {\n        if ((char)piVar1[0x1171] == '\\0') goto LAB_00408543;\n        uVar7 = FUN_00418c8d(piVar1,this_00 + 4,0,uVar11);\n        if ((char)uVar7 == '\\0') goto LAB_00408537;\n        pcVar2 = *(code **)(*piVar1 + 0x10);\n        (*(code *)PTR_guard_check_icall_00433278)(piVar1[0x1b2e],piVar1[0x1b2f],0);\n        (*pcVar2)();\n        goto LAB_00408576;\n      }\nLAB_00408513:\n      FUN_00401f47(piVar1);\n    }\nLAB_00408576:\n    uVar15 = 1;\n  }\nLAB_00408545:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar15;\n}\n\n"
    },
    {
      "name": "FUN_00409155",
      "entry": "00409155",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined1 FUN_00409155(void)\n\n{\n  bool bVar1;\n  int *piVar2;\n  undefined1 uVar3;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  FUN_0040c36e(*(int *)(unaff_EBP + 0x14),*(short **)(unaff_EBP + 0x14),*(int *)(unaff_EBP + 0x18));\n  FUN_00409556((undefined4 *)(unaff_EBP + -0x1058));\n  uVar3 = 0;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  bVar1 = FUN_00409f42((void *)(unaff_EBP + -0x1058),*(undefined4 *)(unaff_EBP + 0x14));\n  if (bVar1) {\n    FUN_004013ba((void *)(unaff_EBP + -0x20),0x100000);\n    *(undefined1 *)(unaff_EBP + -4) = 1;\n    while( true ) {\n      FUN_00410e08();\n      piVar2 = (int *)FUN_00409bd0((void *)(unaff_EBP + -0x1058),*(LPVOID *)(unaff_EBP + -0x20),\n                                   *(uint *)(unaff_EBP + -0x1c));\n      if (piVar2 == (int *)0x0) break;\n      FUN_00409f7a(*(void **)(unaff_EBP + 8),*(LPCVOID *)(unaff_EBP + -0x20),piVar2);\n    }\n    uVar3 = 1;\n    FUN_004015fb((int *)(unaff_EBP + -0x20));\n  }\n  else {\n    FUN_00402063(0x12,*(undefined4 *)(unaff_EBP + 0xc),*(undefined4 *)(unaff_EBP + 0x14),\n                 *(undefined4 *)(unaff_EBP + 0x10));\n    FUN_0040138b(0x13,*(undefined4 *)(unaff_EBP + 0xc));\n  }\n  FUN_0040959a((int *)(unaff_EBP + -0x1058));\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar3;\n}\n\n"
    },
    {
      "name": "FUN_00409215",
      "entry": "00409215",
      "c": "\nvoid FUN_00409215(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  uint uVar3;\n  int unaff_EBP;\n  int *piVar4;\n  bool bVar5;\n  \n  FUN_0041eb78();\n  iVar1 = FUN_00407c64();\n  FUN_004013ba((void *)(unaff_EBP + -0x20),iVar1);\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  piVar2 = (int *)FUN_0040d114(*(void **)(unaff_EBP + 8),*(undefined1 (**) [16])(unaff_EBP + -0x20),\n                               *(uint *)(unaff_EBP + -0x1c));\n  if (0 < (int)piVar2) {\n    uVar3 = *(uint *)(unaff_EBP + 0x10);\n    piVar4 = *(int **)(unaff_EBP + 0xc);\n    do {\n      if ((0x7fffffff < uVar3) || (((int)uVar3 < 1 && (piVar4 <= piVar2)))) {\n        piVar2 = piVar4;\n      }\n      if (0 < (int)piVar2) {\n        FUN_0040d300(*(void **)(unaff_EBP + 8),*(uint **)(unaff_EBP + -0x20),piVar2);\n        bVar5 = piVar4 < piVar2;\n        piVar4 = (int *)((int)piVar4 - (int)piVar2);\n        uVar3 = (uVar3 - ((int)piVar2 >> 0x1f)) - (uint)bVar5;\n      }\n      piVar2 = (int *)FUN_0040d114(*(void **)(unaff_EBP + 8),\n                                   *(undefined1 (**) [16])(unaff_EBP + -0x20),\n                                   *(uint *)(unaff_EBP + -0x1c));\n    } while (0 < (int)piVar2);\n  }\n  FUN_004015fb((int *)(unaff_EBP + -0x20));\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004092a3",
      "entry": "004092a3",
      "c": "\nbool FUN_004092a3(int param_1,void *param_2,LPCWSTR param_3,int param_4,undefined1 *param_5,\n                 undefined4 param_6,undefined4 param_7,undefined4 param_8,byte param_9)\n\n{\n  bool bVar1;\n  bool bVar2;\n  undefined4 uVar3;\n  INT_PTR IVar4;\n  \n  if (param_5 != (undefined1 *)0x0) {\n    *param_5 = 0;\n  }\n  bVar2 = false;\n  bVar1 = FUN_0040a231(param_3);\n  while (bVar1 != false) {\n    if (bVar2) {\nLAB_004092e2:\n      bVar2 = false;\n      IVar4 = FUN_004119f1(param_1,param_3,param_4,param_6,param_7,param_8,\n                           (uint)(param_2 == (void *)0x0));\n      if (IVar4 == 0) break;\n      if (IVar4 == 1) {\n        if (param_5 != (undefined1 *)0x0) {\n          *param_5 = 1;\n        }\n        return false;\n      }\n      if (IVar4 == 6) {\n        thunk_FUN_00406e47(&DAT_00441098,(void *)0xff);\n      }\n    }\n    else {\n      bVar2 = true;\n      uVar3 = FUN_00409382();\n      if ((char)uVar3 == '\\0') goto LAB_004092e2;\n    }\n    bVar1 = FUN_0040a231(param_3);\n  }\n  if ((param_2 != (void *)0x0) && (bVar2 = FUN_0040966e(param_2,param_3,param_9 + 0x11), bVar2)) {\n    return true;\n  }\n  FUN_0040a0b1(param_3,'\\x01');\n  if (param_2 == (void *)0x0) {\n    bVar2 = FUN_0040a1e0(param_3);\n  }\n  else {\n    bVar2 = FUN_0040966e(param_2,param_3,param_9 + 0x11);\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_00409382",
      "entry": "00409382",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nuint FUN_00409382(void)\n\n{\n  LPCWSTR lpszShortPath;\n  bool bVar1;\n  bool bVar2;\n  wchar_t *pwVar3;\n  wchar_t *pwVar4;\n  undefined2 extraout_var;\n  undefined4 uVar5;\n  uint uVar6;\n  int unaff_EBP;\n  int iVar7;\n  size_t sVar8;\n  \n  FUN_0041eb78();\n  lpszShortPath = *(LPCWSTR *)(unaff_EBP + 8);\n  pwVar3 = (wchar_t *)GetLongPathNameW(lpszShortPath,(LPWSTR)(unaff_EBP + -0x4048),0x800);\n  if ((pwVar3 != (wchar_t *)0x0) && (pwVar3 < (wchar_t *)0x800)) {\n    pwVar3 = (wchar_t *)GetShortPathNameW(lpszShortPath,(LPWSTR)(unaff_EBP + -0x5048),0x800);\n    if ((pwVar3 != (wchar_t *)0x0) && (pwVar3 < (wchar_t *)0x800)) {\n      pwVar3 = FUN_0040c29a((wchar_t *)(unaff_EBP + -0x4048));\n      *(wchar_t **)(unaff_EBP + -0x10) = pwVar3;\n      pwVar4 = FUN_0040c29a((wchar_t *)(unaff_EBP + -0x5048));\n      bVar2 = false;\n      pwVar3 = pwVar4;\n      if (*pwVar4 != L'\\0') {\n        pwVar3 = (wchar_t *)FUN_00411fbb(*(PCNZWCH *)(unaff_EBP + -0x10),pwVar4);\n        if (pwVar3 != (wchar_t *)0x0) {\n          pwVar3 = FUN_0040c29a(lpszShortPath);\n          pwVar3 = (wchar_t *)FUN_00411fbb(pwVar3,pwVar4);\n          if (pwVar3 == (wchar_t *)0x0) {\n            *(undefined2 *)(unaff_EBP + -0x1010) = 0;\n            iVar7 = 0;\n            pwVar3 = (wchar_t *)0x0;\n            do {\n              if ((short)pwVar3 != 0) goto LAB_004094a3;\n              FUN_00410602((short *)(unaff_EBP + -0x1010),(int)lpszShortPath,0x800);\n              pwVar4 = L\"rtmp%d\";\n              sVar8 = 0x800;\n              pwVar3 = FUN_0040c29a((wchar_t *)(unaff_EBP + -0x1010));\n              FUN_00404092(pwVar3,sVar8,pwVar4);\n              bVar1 = FUN_0040a231((LPCWSTR)(unaff_EBP + -0x1010));\n              if (bVar1) {\n                pwVar3 = (wchar_t *)0x0;\n                *(undefined2 *)(unaff_EBP + -0x1010) = 0;\n              }\n              else {\n                pwVar3 = (wchar_t *)CONCAT22(extraout_var,*(undefined2 *)(unaff_EBP + -0x1010));\n              }\n              iVar7 = iVar7 + 0x7b;\n            } while (iVar7 < 10000);\n            if ((short)pwVar3 != 0) {\nLAB_004094a3:\n              FUN_00410602((short *)(unaff_EBP + -0x3048),(int)lpszShortPath,0x800);\n              FUN_0040c310((wchar_t *)(unaff_EBP + -0x3048),*(int *)(unaff_EBP + -0x10),0x800);\n              pwVar3 = (wchar_t *)\n                       MoveFileW((LPCWSTR)(unaff_EBP + -0x3048),(LPCWSTR)(unaff_EBP + -0x1010));\n              if (pwVar3 != (wchar_t *)0x0) {\n                FUN_00409556((undefined4 *)(unaff_EBP + -0x2048));\n                *(undefined4 *)(unaff_EBP + -4) = 0;\n                bVar1 = FUN_0040a231(lpszShortPath);\n                if (!bVar1) {\n                  bVar2 = FUN_0040966e((void *)(unaff_EBP + -0x2048),lpszShortPath,0x12);\n                }\n                MoveFileW((LPCWSTR)(unaff_EBP + -0x1010),(LPCWSTR)(unaff_EBP + -0x3048));\n                if (bVar2 != false) {\n                  FUN_00409620(unaff_EBP + -0x2048);\n                  FUN_0040974e((int *)(unaff_EBP + -0x2048));\n                }\n                uVar5 = FUN_0040959a((int *)(unaff_EBP + -0x2048));\n                uVar6 = CONCAT31((int3)((uint)uVar5 >> 8),1);\n                goto LAB_00409545;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  uVar6 = (uint)pwVar3 & 0xffffff00;\nLAB_00409545:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar6;\n}\n\n"
    },
    {
      "name": "FUN_00409556",
      "entry": "00409556",
      "c": "\nundefined4 * __fastcall FUN_00409556(undefined4 *param_1)\n\n{\n  param_1[2] = 0xffffffff;\n  *(undefined2 *)((int)param_1 + 0x32) = 0;\n  *(undefined1 *)(param_1 + 3) = 0;\n  param_1[4] = 0;\n  *(undefined2 *)(param_1 + 5) = 0;\n  param_1[0x40d] = 0;\n  *(undefined1 *)(param_1 + 0xc) = 0;\n  *(undefined2 *)(param_1 + 9) = 0;\n  param_1[6] = 0;\n  param_1[10] = 0;\n  param_1[0xb] = 0;\n  *param_1 = &PTR_FUN_0043386c;\n  *(undefined2 *)(param_1 + 7) = 0x100;\n  *(undefined1 *)((int)param_1 + 0x1e) = 1;\n  param_1[8] = 0x100;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040959a",
      "entry": "0040959a",
      "c": "\nvoid __fastcall FUN_0040959a(int *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  ExceptionList = &local_10;\n  *param_1 = (int)&PTR_FUN_0043386c;\n  if ((param_1[2] != -1) && (*(char *)((int)param_1 + 0x15) == '\\0')) {\n    if ((char)param_1[7] == '\\0') {\n      FUN_00409620((int)param_1);\n    }\n    else {\n      FUN_0040974e(param_1);\n    }\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004095f0",
      "entry": "004095f0",
      "c": "\nint * __thiscall FUN_004095f0(void *this,byte param_1)\n\n{\n  FUN_0040959a((int *)this);\n  if ((param_1 & 1) != 0) {\n    FUN_0041eb68(this);\n  }\n  return (int *)this;\n}\n\n"
    },
    {
      "name": "FUN_00409620",
      "entry": "00409620",
      "c": "\nchar __fastcall FUN_00409620(int param_1)\n\n{\n  BOOL BVar1;\n  char cVar2;\n  \n  cVar2 = '\\x01';\n  if (*(int *)(param_1 + 8) != -1) {\n    if ((*(char *)(param_1 + 0x15) == '\\0') && (*(int *)(param_1 + 0x10) == 0)) {\n      BVar1 = CloseHandle(*(HANDLE *)(param_1 + 8));\n      cVar2 = '\\x01' - (BVar1 != 1);\n    }\n    *(undefined4 *)(param_1 + 8) = 0xffffffff;\n  }\n  *(undefined4 *)(param_1 + 0x10) = 0;\n  if ((cVar2 == '\\0') && (*(char *)(param_1 + 0x1e) != '\\0')) {\n    FUN_00406bd5(&DAT_00441098,param_1 + 0x32);\n  }\n  return cVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040966e",
      "entry": "0040966e",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool __thiscall FUN_0040966e(void *this,wchar_t *param_1,uint param_2)\n\n{\n  wchar_t *pwVar1;\n  HANDLE pvVar2;\n  undefined4 uVar3;\n  DWORD dwShareMode;\n  DWORD dwDesiredAccess;\n  wchar_t local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x409678;\n  if (((param_2 & 0x10) == 0) && (*(char *)((int)this + 0x30) == '\\0')) {\n    dwShareMode = 0;\n  }\n  else {\n    dwShareMode = 1;\n  }\n  *(uint *)((int)this + 0x20) = param_2;\n  dwDesiredAccess = (param_2 >> 1 ^ 1) * -0x80000000 + 0x40000000;\n  pwVar1 = FUN_0040c27e(param_1);\n  if (((*pwVar1 == L'.') || (*pwVar1 == L' ')) && ((param_2 & 0x20) == 0)) {\n    pvVar2 = (HANDLE)0xffffffff;\n  }\n  else {\n    pvVar2 = CreateFileW(param_1,dwDesiredAccess,dwShareMode,(LPSECURITY_ATTRIBUTES)0x0,2,0,\n                         (HANDLE)0x0);\n  }\n  *(HANDLE *)((int)this + 8) = pvVar2;\n  if (pvVar2 == (HANDLE)0xffffffff) {\n    uVar3 = FUN_0040bb03(param_1,local_1000,0x800);\n    if ((char)uVar3 != '\\0') {\n      pvVar2 = CreateFileW(local_1000,dwDesiredAccess,dwShareMode,(LPSECURITY_ATTRIBUTES)0x0,2,0,\n                           (HANDLE)0x0);\n      *(HANDLE *)((int)this + 8) = pvVar2;\n    }\n  }\n  *(undefined4 *)((int)this + 0x10) = 0;\n  *(undefined1 *)((int)this + 0x1c) = 1;\n  *(undefined1 *)((int)this + 0x15) = 0;\n  FUN_00410602((short *)((int)this + 0x32),(int)param_1,0x800);\n  return *(int *)((int)this + 8) != -1;\n}\n\n"
    },
    {
      "name": "FUN_0040974e",
      "entry": "0040974e",
      "c": "\nbool __fastcall FUN_0040974e(int *param_1)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  \n  if (param_1[4] == 0) {\n    if (param_1[2] != -1) {\n      pcVar1 = *(code **)(*param_1 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)();\n      (*pcVar1)();\n    }\n    if (*(char *)((int)param_1 + 0x1d) != '\\0') {\n      bVar2 = FUN_0040a1e0((LPCWSTR)((int)param_1 + 0x32));\n      return bVar2;\n    }\n  }\n  return false;\n}\n\n"
    },
    {
      "name": "FUN_00409785",
      "entry": "00409785",
      "c": "\nint __thiscall FUN_00409785(void *this,LPVOID param_1,uint param_2)\n\n{\n  HANDLE pvVar1;\n  BOOL BVar2;\n  undefined4 uVar3;\n  int iVar4;\n  DWORD DVar5;\n  uint uVar6;\n  void *local_8;\n  \n  local_8 = this;\n  if (*(int *)((int)this + 0x10) == 1) {\n    pvVar1 = GetStdHandle(0xfffffff6);\n    *(HANDLE *)((int)this + 8) = pvVar1;\n  }\n  BVar2 = ReadFile(*(HANDLE *)((int)this + 8),param_1,param_2,(LPDWORD)&local_8,(LPOVERLAPPED)0x0);\n  if (BVar2 == 0) {\n    uVar3 = FUN_004098bc((int)this);\n    if (((char)uVar3 == '\\0') || (param_2 < 0x4e21)) {\n      if ((*(int *)((int)this + 0x10) == 1) && (DVar5 = GetLastError(), DVar5 == 0x6d)) {\n        return 0;\n      }\n      if (((*(int *)((int)this + 0x10) != 0) || (param_2 < 0x8001)) ||\n         (DVar5 = GetLastError(), DVar5 != 0x21)) {\n        return -1;\n      }\n      uVar6 = 0x8000;\n    }\n    else {\n      uVar6 = 20000;\n    }\n    iVar4 = FUN_00409785(this,param_1,uVar6);\n    return iVar4;\n  }\n  return (int)local_8;\n}\n\n"
    },
    {
      "name": "FUN_0040981a",
      "entry": "0040981a",
      "c": "\nundefined8 __fastcall FUN_0040981a(int *param_1)\n\n{\n  code *pcVar1;\n  undefined4 extraout_EDX;\n  undefined4 unaff_EBP;\n  int *unaff_ESI;\n  undefined8 uVar2;\n  \n  pcVar1 = *(code **)(*param_1 + 0x14);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  (*pcVar1)();\n  pcVar1 = *(code **)(*param_1 + 0x10);\n  (*(code *)PTR_guard_check_icall_00433278)(0,0,2);\n  (*pcVar1)();\n  pcVar1 = *(code **)(*param_1 + 0x14);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  uVar2 = (*pcVar1)();\n  pcVar1 = *(code **)(*unaff_ESI + 0x10);\n  (*(code *)PTR_guard_check_icall_00433278)(unaff_EBP,extraout_EDX,0);\n  (*pcVar1)();\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_00409892",
      "entry": "00409892",
      "c": "\nuint __fastcall FUN_00409892(int *param_1)\n\n{\n  code *pcVar1;\n  undefined4 uVar2;\n  undefined4 uStack_8;\n  \n  uStack_8 = (uint)param_1 & 0xffffff;\n  pcVar1 = *(code **)(*param_1 + 0xc);\n  (*(code *)PTR_guard_check_icall_00433278)((int)&uStack_8 + 3,1);\n  uVar2 = (*pcVar1)();\n  return CONCAT31((int3)((uint)uVar2 >> 8),uStack_8._3_1_);\n}\n\n"
    },
    {
      "name": "FUN_004098bc",
      "entry": "004098bc",
      "c": "\nuint __fastcall FUN_004098bc(int param_1)\n\n{\n  uint in_EAX;\n  \n  if (*(int *)(param_1 + 8) != -1) {\n    in_EAX = GetFileType(*(HANDLE *)(param_1 + 8));\n    if ((in_EAX == 2) || (in_EAX == 3)) {\n      return CONCAT31((int3)(in_EAX >> 8),1);\n    }\n  }\n  return in_EAX & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_004098e0",
      "entry": "004098e0",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool __thiscall FUN_004098e0(void *this,LPCWSTR param_1,uint param_2)\n\n{\n  bool bVar1;\n  HANDLE hFile;\n  undefined4 uVar2;\n  DWORD dwShareMode;\n  DWORD DVar3;\n  FILETIME FStack_1050;\n  wchar_t local_1048 [2082];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x4098ea;\n  *(undefined4 *)((int)this + 0x1034) = 0;\n  if ((*(char *)((int)this + 0x30) == '\\0') && ((param_2 & 4) == 0)) {\n    bVar1 = false;\n  }\n  else {\n    bVar1 = true;\n  }\n  DVar3 = ((~(param_2 >> 1) & 1) + 1) * 0x40000000;\n  if ((param_2 & 1) != 0) {\n    DVar3 = DVar3 | 0x40000000;\n  }\n  dwShareMode = ~(param_2 >> 3) & 1;\n  if (bVar1) {\n    dwShareMode = dwShareMode | 2;\n  }\n  FUN_00406edb((int)local_1048);\n  if (*(char *)((int)this + 0x24) != '\\0') {\n    DVar3 = DVar3 | 0x100;\n  }\n  hFile = CreateFileW(param_1,DVar3,dwShareMode,(LPSECURITY_ATTRIBUTES)0x0,3,0x8000000,(HANDLE)0x0);\n  if (hFile == (HANDLE)0xffffffff) {\n    FStack_1050.dwLowDateTime = GetLastError();\n    uVar2 = FUN_0040bb03(param_1,local_1048,0x800);\n    if ((char)uVar2 != '\\0') {\n      hFile = CreateFileW(local_1048,DVar3,dwShareMode,(LPSECURITY_ATTRIBUTES)0x0,3,0x8000000,\n                          (HANDLE)0x0);\n      DVar3 = GetLastError();\n      if (DVar3 == 2) {\n        FStack_1050.dwLowDateTime = 2;\n      }\n      goto LAB_004099c3;\n    }\n  }\n  else {\nLAB_004099c3:\n    if (hFile != (HANDLE)0xffffffff) goto LAB_004099d9;\n  }\n  if (FStack_1050.dwLowDateTime == 2) {\n    *(undefined4 *)((int)this + 0x1034) = 1;\n  }\nLAB_004099d9:\n  if ((*(char *)((int)this + 0x24) != '\\0') && (hFile != (HANDLE)0xffffffff)) {\n    FStack_1050.dwLowDateTime = 0xffffffff;\n    FStack_1050.dwHighDateTime = 0xffffffff;\n    SetFileTime(hFile,(FILETIME *)0x0,&FStack_1050,(FILETIME *)0x0);\n  }\n  *(undefined1 *)((int)this + 0x1c) = 0;\n  *(undefined4 *)((int)this + 0x10) = 0;\n  *(undefined1 *)((int)this + 0x15) = 0;\n  if (hFile != (HANDLE)0xffffffff) {\n    *(HANDLE *)((int)this + 8) = hFile;\n    FUN_00410602((short *)((int)this + 0x32),(int)param_1,0x800);\n    *(undefined1 *)((int)this + 0x25) = 0;\n  }\n  return hFile != (HANDLE)0xffffffff;\n}\n\n"
    },
    {
      "name": "FUN_00409a3c",
      "entry": "00409a3c",
      "c": "\nvoid __thiscall FUN_00409a3c(void *this,uint param_1,int param_2)\n\n{\n  code *pcVar1;\n  char cVar2;\n  \n  cVar2 = FUN_00409a74(this,param_1,param_2,0);\n  if (cVar2 != '\\0') {\n    FUN_00409f09((int)this);\n                    /* WARNING: Load size is inaccurate */\n    pcVar1 = *(code **)(*this + 0x10);\n    (*(code *)PTR_guard_check_icall_00433278)(0,0,0);\n    (*pcVar1)();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00409a74",
      "entry": "00409a74",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nchar __thiscall FUN_00409a74(void *this,uint param_1,int param_2,DWORD param_3)\n\n{\n  uint *puVar1;\n  code *pcVar2;\n  DWORD DVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  bool bVar7;\n  longlong lVar8;\n  int local_1010;\n  LONG local_100c [2];\n  undefined4 local_1004;\n  undefined1 local_1000 [4092];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x409a7e;\n  if (*(int *)((int)this + 8) != -1) {\n    if (*(int *)((int)this + 0x10) != 1) {\n      lVar8 = CONCAT44(param_2,param_1);\n      if (((param_2 < 1) && (lVar8 = CONCAT44(param_2,param_1), param_2 < 0)) &&\n         (lVar8 = CONCAT44(param_2,param_1), param_3 != 0)) {\n        if (param_3 == 1) {\n                    /* WARNING: Load size is inaccurate */\n          pcVar2 = *(code **)(*this + 0x14);\n          (*(code *)PTR_guard_check_icall_00433278)();\n          lVar8 = (*pcVar2)();\n        }\n        else {\n          lVar8 = FUN_0040981a((int *)this);\n        }\n        param_3 = 0;\n        lVar8 = lVar8 + CONCAT44(param_2,param_1);\n      }\n      local_100c[0] = (LONG)((ulonglong)lVar8 >> 0x20);\n      DVar3 = SetFilePointer(*(HANDLE *)((int)this + 8),(LONG)lVar8,local_100c,param_3);\n      if (DVar3 != 0xffffffff) {\n        return '\\x01';\n      }\n      DVar3 = GetLastError();\n      return '\\x01' - (DVar3 != 0);\n    }\n    puVar1 = (uint *)((int)this + 0x28);\n    if (param_3 == 1) {\n      bVar7 = CARRY4(param_1,*puVar1);\n      param_1 = param_1 + *puVar1;\n      param_2 = param_2 + *(int *)((int)this + 0x2c) + (uint)bVar7;\n    }\n    else if (param_3 != 0) {\n      return '\\0';\n    }\n    if ((param_2 < *(int *)((int)this + 0x2c)) ||\n       ((param_2 <= *(int *)((int)this + 0x2c) && (param_1 < *puVar1)))) {\n      return '\\0';\n    }\n    uVar4 = param_1 - *puVar1;\n    local_1010 = (param_2 - *(int *)((int)this + 0x2c)) - (uint)(param_1 < *puVar1);\n    if (local_1010 != 0) goto LAB_00409af2;\n    while (uVar4 != 0) {\nLAB_00409af2:\n      uVar6 = uVar4;\n      if (local_1010 != 0) goto LAB_00409b08;\n      uVar5 = uVar4;\n      if (0xfff < uVar4) goto LAB_00409b08;\n      while( true ) {\n        local_1004 = 0;\n                    /* WARNING: Load size is inaccurate */\n        pcVar2 = *(code **)(*this + 0xc);\n        (*(code *)PTR_guard_check_icall_00433278)(local_1000,uVar4);\n        uVar4 = (*pcVar2)();\n        if ((int)uVar4 < 1) {\n          return '\\0';\n        }\n        uVar6 = uVar5 - uVar4;\n        local_1010 = (local_1010 - ((int)uVar4 >> 0x1f)) - (uint)(uVar5 < uVar4);\n        uVar4 = uVar6;\n        if (local_1010 == 0) break;\nLAB_00409b08:\n        uVar4 = 0x1000;\n        uVar5 = uVar6;\n      }\n    }\n    *puVar1 = param_1;\n    *(int *)((int)this + 0x2c) = param_2;\n  }\n  return '\\x01';\n}\n\n"
    },
    {
      "name": "FUN_00409bd0",
      "entry": "00409bd0",
      "c": "\nuint __thiscall FUN_00409bd0(void *this,LPVOID param_1,uint param_2)\n\n{\n  uint *puVar1;\n  code *pcVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  char acStack_e [2];\n  uint uStack_c;\n  undefined8 local_8;\n  \n  if (*(char *)((int)this + 0x25) != '\\0') {\n    return 0;\n  }\n  local_8._0_4_ = 0;\n  local_8._4_4_ = 0;\n  local_8 = 0;\n  if (*(int *)((int)this + 0x18) == 2) {\n                    /* WARNING: Load size is inaccurate */\n    pcVar2 = *(code **)(*this + 0x14);\n    (*(code *)PTR_guard_check_icall_00433278)();\n    local_8 = (*pcVar2)();\n  }\n  uVar6 = 0;\n  do {\n    uVar3 = FUN_00409785(this,param_1,param_2);\n    if ((uVar3 == 0xffffffff) &&\n       (*(undefined4 *)((int)this + 0x1034) = 2, *(char *)((int)this + 0x1e) != '\\0')) {\n      if (*(int *)((int)this + 0x18) == 2) {\n        uVar3 = 0;\n        uStack_c = 0;\n        if (param_2 != 0) {\n          do {\n                    /* WARNING: Load size is inaccurate */\n            iVar5 = *this;\n            (*(code *)PTR_guard_check_icall_00433278)(local_8 + (ulonglong)uStack_c,0);\n            (**(code **)(iVar5 + 0x10))();\n            uVar4 = param_2 - uStack_c;\n            if (0x1ff < uVar4) {\n              uVar4 = 0x200;\n            }\n            iVar5 = FUN_00409785(this,param_1,uVar4);\n            if (iVar5 == -1) {\n              iVar5 = 0x200;\n            }\n            uVar3 = uVar3 + iVar5;\n            if (uVar3 != 0xffffffff) {\n              uVar6 = uVar6 + uVar3;\n            }\n            uStack_c = uStack_c + 0x200;\n          } while (uStack_c < param_2);\n        }\n      }\n      else {\n        acStack_e[0] = '\\0';\n        acStack_e[1] = 0;\n        if ((*(int *)((int)this + 0x18) == 0) && (*(int *)((int)this + 0x10) == 0)) {\n          FUN_00406b99(&DAT_00441098,(int)this + 0x32,acStack_e);\n          if (acStack_e[0] != '\\0') goto LAB_00409d46;\n        }\n        if (*(int *)((int)this + 0x18) == 1) {\nLAB_00409d46:\n          *(undefined1 *)((int)this + 0x25) = 1;\n          return 0;\n        }\n        FUN_00406d1a(&DAT_00441098,(int)this + 0x32);\n      }\n    }\n    uVar6 = uVar6 + uVar3;\n    if ((((*(int *)((int)this + 0x10) != 1) || (*(char *)((int)this + 0x14) != '\\0')) ||\n        ((int)uVar3 < 1)) || (param_2 <= uVar3)) {\n      if ((int)uVar6 < 1) {\n        return uVar6;\n      }\n      puVar1 = (uint *)((int)this + 0x28);\n      uVar3 = *puVar1;\n      *puVar1 = *puVar1 + uVar6;\n      *(int *)((int)this + 0x2c) =\n           *(int *)((int)this + 0x2c) + ((int)uVar6 >> 0x1f) + (uint)CARRY4(uVar3,uVar6);\n      return uVar6;\n    }\n    param_1 = (LPVOID)((int)param_1 + uVar3);\n    param_2 = param_2 - uVar3;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00409d70",
      "entry": "00409d70",
      "c": "\nvoid __thiscall FUN_00409d70(void *this,uint param_1,int param_2,DWORD param_3)\n\n{\n  char cVar1;\n  \n  cVar1 = FUN_00409a74(this,param_1,param_2,param_3);\n  if ((cVar1 == '\\0') && (*(char *)((int)this + 0x1e) != '\\0')) {\n    FUN_00406d5b(&DAT_00441098,(int)this + 0x32);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00409d9f",
      "entry": "00409d9f",
      "c": "\nvoid FUN_00409d9f(void)\n\n{\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00409da2",
      "entry": "00409da2",
      "c": "\nvoid __thiscall FUN_00409da2(void *this,int *param_1,int *param_2,int *param_3)\n\n{\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  byte bVar4;\n  undefined8 uStack_18;\n  undefined8 uStack_10;\n  undefined8 uStack_8;\n  \n  if ((*(int *)((int)this + 0x20) != 0x100) && ((*(byte *)((int)this + 0x20) & 2) == 0)) {\n    FlushFileBuffers(*(HANDLE *)((int)this + 8));\n  }\n  bVar2 = true;\n  if ((param_1 == (int *)0x0) || (*param_1 == 0 && param_1[1] == 0)) {\n    bVar1 = false;\n    bVar4 = 0;\n  }\n  else {\n    bVar1 = true;\n    bVar4 = 1;\n  }\n  if ((param_2 == (int *)0x0) || (bVar3 = true, *param_2 == 0 && param_2[1] == 0)) {\n    bVar3 = false;\n  }\n  if ((param_3 == (int *)0x0) || (*param_3 == 0 && param_3[1] == 0)) {\n    bVar2 = false;\n  }\n  if (bVar1) {\n    FUN_0041138a(param_1,&uStack_18);\n  }\n  if (bVar3) {\n    FUN_0041138a(param_2,&uStack_8);\n  }\n  if (bVar2) {\n    FUN_0041138a(param_3,&uStack_10);\n  }\n  SetFileTime(*(HANDLE *)((int)this + 8),(FILETIME *)(-(uint)bVar3 & (uint)&uStack_8),\n              (FILETIME *)(-(uint)bVar2 & (uint)&uStack_10),\n              (FILETIME *)(-(uint)bVar4 & (uint)&uStack_18));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00409e80",
      "entry": "00409e80",
      "c": "\nundefined8 __fastcall FUN_00409e80(int param_1)\n\n{\n  DWORD DVar1;\n  DWORD DVar2;\n  LONG local_8;\n  \n  if (*(int *)(param_1 + 8) == -1) {\n    if (*(char *)(param_1 + 0x1e) != '\\0') {\n      local_8 = param_1;\n      FUN_00406d5b(&DAT_00441098,param_1 + 0x32);\n      goto LAB_00409eaa;\n    }\n  }\n  else {\nLAB_00409eaa:\n    if (*(int *)(param_1 + 0x10) == 1) {\n      DVar1 = *(DWORD *)(param_1 + 0x28);\n      local_8 = *(LONG *)(param_1 + 0x2c);\n      goto LAB_00409efd;\n    }\n    local_8 = 0;\n    DVar1 = SetFilePointer(*(HANDLE *)(param_1 + 8),0,&local_8,1);\n    if ((DVar1 != 0xffffffff) || (DVar2 = GetLastError(), DVar2 == 0)) goto LAB_00409efd;\n    if (*(char *)(param_1 + 0x1e) != '\\0') {\n      FUN_00406d5b(&DAT_00441098,param_1 + 0x32);\n      goto LAB_00409efd;\n    }\n  }\n  DVar1 = 0xffffffff;\n  local_8 = -1;\nLAB_00409efd:\n  return CONCAT44(local_8,DVar1);\n}\n\n"
    },
    {
      "name": "FUN_00409f09",
      "entry": "00409f09",
      "c": "\nundefined4 __fastcall FUN_00409f09(int param_1)\n\n{\n  BOOL BVar1;\n  \n  BVar1 = SetEndOfFile(*(HANDLE *)(param_1 + 8));\n  return CONCAT31((int3)((uint)-(BVar1 + -1) >> 8),'\\x01' - (BVar1 + -1 != 0));\n}\n\n"
    },
    {
      "name": "FUN_00409f1a",
      "entry": "00409f1a",
      "c": "\nbool __thiscall FUN_00409f1a(void *this,wchar_t *param_1,uint param_2)\n\n{\n  bool bVar1;\n  \n  bVar1 = FUN_0040966e(this,param_1,param_2);\n  if (!bVar1) {\n    FUN_00406c23(&DAT_00441098,param_1);\n  }\n  return bVar1;\n}\n\n"
    },
    {
      "name": "FUN_00409f42",
      "entry": "00409f42",
      "c": "\nbool __thiscall FUN_00409f42(void *this,undefined4 param_1)\n\n{\n  code *pcVar1;\n  char cVar2;\n  undefined4 unaff_ESI;\n  \n                    /* WARNING: Load size is inaccurate */\n  pcVar1 = *(code **)(*this + 4);\n  (*(code *)PTR_guard_check_icall_00433278)(param_1,0);\n  cVar2 = (*pcVar1)();\n  if (cVar2 == '\\0') {\n    FUN_00406d0c(&DAT_00441098,unaff_ESI);\n  }\n  return cVar2 != '\\0';\n}\n\n"
    },
    {
      "name": "FUN_00409f7a",
      "entry": "00409f7a",
      "c": "\nchar __thiscall FUN_00409f7a(void *this,LPCVOID param_1,int *param_2)\n\n{\n  int iVar1;\n  code *pcVar2;\n  bool bVar3;\n  HANDLE pvVar4;\n  DWORD nNumberOfBytesToWrite;\n  BOOL BVar5;\n  undefined4 *puVar6;\n  int *piVar7;\n  char cVar8;\n  undefined8 uVar9;\n  int *local_8;\n  undefined4 *local_4;\n  \n  if (param_2 == (int *)0x0) {\n    cVar8 = '\\x01';\n  }\n  else {\n    local_4 = (undefined4 *)((int)this + 8);\n    if (*(int *)((int)this + 0x10) == 1) {\n      local_8 = (int *)this;\n      pvVar4 = GetStdHandle(0xfffffff5);\n      *(HANDLE *)((int)this + 8) = pvVar4;\n    }\n    puVar6 = (undefined4 *)((int)this + 8);\nLAB_00409fb1:\n    local_8 = (int *)0x0;\n    cVar8 = '\\0';\n    if (*(int *)((int)this + 0x10) == 0) {\n      BVar5 = WriteFile((HANDLE)*puVar6,param_1,(DWORD)param_2,(LPDWORD)&local_8,(LPOVERLAPPED)0x0);\n      cVar8 = '\\x01' - (BVar5 != 1);\nLAB_0040a020:\n      if (cVar8 != '\\0') goto LAB_0040a0a2;\n    }\n    else {\n      piVar7 = (int *)0x0;\n      if (param_2 != (int *)0x0) {\n        do {\n          nNumberOfBytesToWrite = (int)param_2 - (int)piVar7;\n          if (0x3fff < nNumberOfBytesToWrite) {\n            nNumberOfBytesToWrite = 0x4000;\n          }\n          BVar5 = WriteFile((HANDLE)*puVar6,(LPCVOID)((int)param_1 + (int)piVar7),\n                            nNumberOfBytesToWrite,(LPDWORD)&local_8,(LPOVERLAPPED)0x0);\n          cVar8 = BVar5 == 1;\n        } while (((bool)cVar8) && (piVar7 = piVar7 + 0x1000, puVar6 = local_4, piVar7 < param_2));\n        goto LAB_0040a020;\n      }\n    }\n    if ((*(char *)((int)this + 0x1e) == '\\0') || (*(int *)((int)this + 0x10) != 0))\n    goto LAB_0040a0a2;\n    bVar3 = FUN_00406baa(0x441098);\n    if (bVar3) {\n      puVar6 = local_4;\n      if ((local_8 < param_2) && (local_8 != (int *)0x0)) {\n                    /* WARNING: Load size is inaccurate */\n        iVar1 = *this;\n        pcVar2 = *(code **)(iVar1 + 0x14);\n        (*(code *)PTR_guard_check_icall_00433278)(0);\n        uVar9 = (*pcVar2)();\n        (*(code *)PTR_guard_check_icall_00433278)\n                  ((int)(int *)uVar9 - (int)local_8,\n                   (int)((ulonglong)uVar9 >> 0x20) - (uint)((int *)uVar9 < local_8));\n        (**(code **)(iVar1 + 0x10))();\n        puVar6 = local_4;\n      }\n      goto LAB_00409fb1;\n    }\n    FUN_00406e98(&DAT_00441098,0,(int)this + 0x32);\nLAB_0040a0a2:\n    *(undefined1 *)((int)this + 0xc) = 1;\n  }\n  return cVar8;\n}\n\n"
    },
    {
      "name": "FUN_0040a0b1",
      "entry": "0040a0b1",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nuint FUN_0040a0b1(wchar_t *param_1,char param_2)\n\n{\n  char cVar1;\n  char cVar2;\n  uint uVar3;\n  undefined3 extraout_var;\n  wchar_t *pwVar4;\n  undefined3 extraout_var_00;\n  undefined3 extraout_var_01;\n  int local_1004;\n  wchar_t local_1000 [2048];\n  \n  uVar3 = 0x1004;\n  local_1000[0x7fe] = L'\ua0bb';\n  local_1000[0x7ff] = L'@';\n  if ((param_1 == (wchar_t *)0x0) || (uVar3 = 0, *param_1 == L'\\0')) {\n    uVar3 = uVar3 & 0xffffff00;\n  }\n  else {\n    cVar2 = '\\x01';\n    local_1004 = 0;\n    pwVar4 = param_1;\n    do {\n      uVar3 = local_1004 >> 1;\n      if (0x7ff < uVar3) break;\n      cVar1 = FUN_0040bd9d((uint)(ushort)*pwVar4);\n      if (((cVar1 != '\\0') && (param_1 < pwVar4)) &&\n         ((pwVar4 != param_1 + 2 || (param_1[1] != L':')))) {\n        _wcsncpy(local_1000,param_1,uVar3);\n        local_1000[uVar3] = L'\\0';\n        cVar2 = FUN_0040a2b2(local_1000,'\\x01',0);\n        cVar2 = '\\x01' - (CONCAT31(extraout_var,cVar2) != 0);\n      }\n      pwVar4 = pwVar4 + 1;\n      local_1004 = local_1004 + 2;\n    } while (*pwVar4 != L'\\0');\n    if (param_2 == '\\0') {\n      pwVar4 = FUN_0040c27e(param_1);\n      cVar1 = FUN_0040bd9d((uint)(ushort)*pwVar4);\n      local_1004 = CONCAT31(extraout_var_00,cVar1);\n      if (cVar1 == '\\0') {\n        cVar1 = FUN_0040a2b2(param_1,'\\x01',0);\n        cVar2 = '\\x01' - (CONCAT31(extraout_var_01,cVar1) != 0);\n        local_1004 = CONCAT31((int3)((uint)-CONCAT31(extraout_var_01,cVar1) >> 8),cVar2);\n      }\n    }\n    uVar3 = CONCAT31((int3)((uint)local_1004 >> 8),cVar2);\n  }\n  return uVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040a18f",
      "entry": "0040a18f",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool FUN_0040a18f(LPCWSTR param_1)\n\n{\n  BOOL BVar1;\n  undefined4 uVar2;\n  bool bVar3;\n  wchar_t local_1004 [2046];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x40a19c;\n  BVar1 = RemoveDirectoryW(param_1);\n  bVar3 = BVar1 != 0;\n  if (BVar1 == 0) {\n    uVar2 = FUN_0040bb03(param_1,local_1004,0x800);\n    if ((char)uVar2 != '\\0') {\n      BVar1 = RemoveDirectoryW(local_1004);\n      bVar3 = BVar1 != 0;\n    }\n  }\n  return bVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040a1e0",
      "entry": "0040a1e0",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool FUN_0040a1e0(LPCWSTR param_1)\n\n{\n  BOOL BVar1;\n  undefined4 uVar2;\n  bool bVar3;\n  wchar_t local_1004 [2046];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x40a1ed;\n  BVar1 = DeleteFileW(param_1);\n  bVar3 = BVar1 != 0;\n  if (BVar1 == 0) {\n    uVar2 = FUN_0040bb03(param_1,local_1004,0x800);\n    if ((char)uVar2 != '\\0') {\n      BVar1 = DeleteFileW(local_1004);\n      bVar3 = BVar1 != 0;\n    }\n  }\n  return bVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040a231",
      "entry": "0040a231",
      "c": "\nbool FUN_0040a231(LPCWSTR param_1)\n\n{\n  DWORD DVar1;\n  \n  DVar1 = FUN_0040a243(param_1);\n  return DVar1 != 0xffffffff;\n}\n\n"
    },
    {
      "name": "FUN_0040a243",
      "entry": "0040a243",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nDWORD FUN_0040a243(LPCWSTR param_1)\n\n{\n  DWORD DVar1;\n  undefined4 uVar2;\n  wchar_t local_1004 [2046];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x40a250;\n  DVar1 = GetFileAttributesW(param_1);\n  if (DVar1 == 0xffffffff) {\n    uVar2 = FUN_0040bb03(param_1,local_1004,0x800);\n    if ((char)uVar2 != '\\0') {\n      DVar1 = GetFileAttributesW(local_1004);\n    }\n  }\n  return DVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040a28f",
      "entry": "0040a28f",
      "c": "\nundefined1 FUN_0040a28f(uint param_1)\n\n{\n  undefined1 uVar1;\n  \n  if ((param_1 == 0xffffffff) || ((param_1 & 0x10) == 0)) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = 1;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040a2a6",
      "entry": "0040a2a6",
      "c": "\nuint FUN_0040a2a6(uint param_1)\n\n{\n  return param_1 >> 10 & 0xffffff01;\n}\n\n"
    },
    {
      "name": "FUN_0040a2b2",
      "entry": "0040a2b2",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nchar FUN_0040a2b2(wchar_t *param_1,char param_2,DWORD param_3)\n\n{\n  bool bVar1;\n  char cVar2;\n  wchar_t *pwVar3;\n  BOOL BVar4;\n  undefined4 uVar5;\n  DWORD DVar6;\n  wchar_t local_1004 [2046];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x40a2bf;\n  pwVar3 = FUN_0040c27e(param_1);\n  if ((*pwVar3 == L'.') || (*pwVar3 == L' ')) {\nLAB_0040a2e3:\n    bVar1 = FUN_0040a231(param_1);\n    if (!bVar1) {\n      uVar5 = FUN_0040bb03(param_1,local_1004,0x800);\n      if ((char)uVar5 != '\\0') {\n        BVar4 = CreateDirectoryW(local_1004,(LPSECURITY_ATTRIBUTES)0x0);\n        if (BVar4 != 0) goto LAB_0040a316;\n      }\n    }\n    DVar6 = GetLastError();\n    cVar2 = '\\x02';\n    if (DVar6 != 2) {\n      cVar2 = (DVar6 == 3) + '\\x01';\n    }\n  }\n  else {\n    BVar4 = CreateDirectoryW(param_1,(LPSECURITY_ATTRIBUTES)0x0);\n    if (BVar4 == 0) goto LAB_0040a2e3;\nLAB_0040a316:\n    if (param_2 != '\\0') {\n      FUN_0040a4ed(param_1,param_3);\n    }\n    cVar2 = '\\0';\n  }\n  return cVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040a346",
      "entry": "0040a346",
      "c": "\nvoid FUN_0040a346(LPCWSTR param_1)\n\n{\n  FUN_0040a4ed(param_1,0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040a354",
      "entry": "0040a354",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0040a354(LPCWSTR param_1,int *param_2,int *param_3,int *param_4)\n\n{\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  DWORD DVar5;\n  undefined4 uVar6;\n  HANDLE pvStack_1020;\n  undefined8 uStack_1018;\n  undefined8 uStack_1010;\n  undefined8 uStack_1008;\n  wchar_t awStack_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x40a35e;\n  bVar1 = true;\n  if ((param_2 == (int *)0x0) || (bVar2 = true, *param_2 == 0 && param_2[1] == 0)) {\n    bVar2 = false;\n  }\n  if ((param_3 == (int *)0x0) || (bVar3 = true, *param_3 == 0 && param_3[1] == 0)) {\n    bVar3 = false;\n  }\n  if ((param_4 == (int *)0x0) || (bVar4 = true, *param_4 == 0 && param_4[1] == 0)) {\n    bVar4 = false;\n  }\n  DVar5 = FUN_0040a243(param_1);\n  if ((DVar5 == 0xffffffff) || ((DVar5 & 1) == 0)) {\n    bVar1 = false;\n  }\n  else {\n    FUN_0040a4ed(param_1,0);\n  }\n  pvStack_1020 = CreateFileW(param_1,0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0x2000000,(HANDLE)0x0\n                            );\n  if (pvStack_1020 == (HANDLE)0xffffffff) {\n    uVar6 = FUN_0040bb03(param_1,awStack_1000,0x800);\n    if ((char)uVar6 == '\\0') {\n      return;\n    }\n    pvStack_1020 = CreateFileW(awStack_1000,0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0x2000000,\n                               (HANDLE)0x0);\n    if (pvStack_1020 == (HANDLE)0xffffffff) {\n      return;\n    }\n  }\n  if (bVar2) {\n    FUN_0041138a(param_2,&uStack_1018);\n  }\n  if (bVar3) {\n    FUN_0041138a(param_3,&uStack_1008);\n  }\n  if (bVar4) {\n    FUN_0041138a(param_4,&uStack_1010);\n  }\n  SetFileTime(pvStack_1020,(FILETIME *)(-(uint)bVar3 & (uint)&uStack_1008),\n              (FILETIME *)(-(uint)bVar4 & (uint)&uStack_1010),\n              (FILETIME *)(-(uint)bVar2 & (uint)&uStack_1018));\n  CloseHandle(pvStack_1020);\n  if (bVar1) {\n    FUN_0040a4ed(param_1,DVar5);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040a4ed",
      "entry": "0040a4ed",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool FUN_0040a4ed(LPCWSTR param_1,DWORD param_2)\n\n{\n  BOOL BVar1;\n  undefined4 uVar2;\n  bool bVar3;\n  wchar_t local_1004 [2046];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x40a4fa;\n  BVar1 = SetFileAttributesW(param_1,param_2);\n  bVar3 = BVar1 != 0;\n  if (BVar1 == 0) {\n    uVar2 = FUN_0040bb03(param_1,local_1004,0x800);\n    if ((char)uVar2 != '\\0') {\n      BVar1 = SetFileAttributesW(local_1004,param_2);\n      bVar3 = BVar1 != 0;\n    }\n  }\n  return bVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040a544",
      "entry": "0040a544",
      "c": "\nundefined2 * __fastcall FUN_0040a544(undefined2 *param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x802) = 0xffffffff;\n  *param_1 = 0;\n  *(undefined1 *)(param_1 + 0x800) = 1;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040a55a",
      "entry": "0040a55a",
      "c": "\nvoid __fastcall FUN_0040a55a(int param_1)\n\n{\n  if (*(HANDLE *)(param_1 + 0x1004) != (HANDLE)0xffffffff) {\n    FindClose(*(HANDLE *)(param_1 + 0x1004));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040a56d",
      "entry": "0040a56d",
      "c": "\nuint FUN_0040a56d(wchar_t *param_1,wchar_t *param_2)\n\n{\n  bool bVar1;\n  undefined1 uVar2;\n  undefined3 extraout_var;\n  HANDLE hFindFile;\n  uint uVar3;\n  \n  *(undefined1 *)(param_2 + 0x822) = 0;\n  bVar1 = FUN_0040bdb4(param_1);\n  hFindFile = (HANDLE)CONCAT31(extraout_var,bVar1);\n  if ((!bVar1) &&\n     (hFindFile = FUN_0040a69b((HANDLE)0xffffffff,param_1,param_2), hFindFile != (HANDLE)0xffffffff)\n     ) {\n    FindClose(hFindFile);\n    uVar3 = *(uint *)(param_2 + 0x804);\n    param_2[0x820] = L'\\0';\n    param_2[0x821] = L'\\0';\n    uVar2 = FUN_0040a28f(uVar3);\n    *(undefined1 *)(param_2 + 0x806) = uVar2;\n    uVar3 = FUN_0040a2a6(*(uint *)(param_2 + 0x804));\n    *(char *)((int)param_2 + 0x100d) = (char)uVar3;\n    return CONCAT31((int3)(uVar3 >> 8),1);\n  }\n  return (uint)hFindFile & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0040a5d1",
      "entry": "0040a5d1",
      "c": "\nundefined4 __thiscall FUN_0040a5d1(void *this,wchar_t *param_1)\n\n{\n  undefined1 uVar1;\n  HANDLE in_EAX;\n  uint uVar2;\n  wchar_t *_Str1;\n  \n                    /* WARNING: Load size is inaccurate */\n  while (*(undefined1 *)(param_1 + 0x822) = 0, *this != 0) {\n    if (*(char *)((int)this + 0x1000) == '\\0') {\n      in_EAX = FUN_0040a69b(*(HANDLE *)((int)this + 0x1004),(LPCWSTR)this,param_1);\n    }\n    else {\n      in_EAX = FUN_0040a69b((HANDLE)0xffffffff,(LPCWSTR)this,param_1);\n      *(HANDLE *)((int)this + 0x1004) = in_EAX;\n    }\n    if (in_EAX == (HANDLE)0xffffffff) break;\n    uVar2 = *(uint *)(param_1 + 0x804);\n    param_1[0x820] = L'\\0';\n    param_1[0x821] = L'\\0';\n    uVar1 = FUN_0040a28f(uVar2);\n    *(undefined1 *)(param_1 + 0x806) = uVar1;\n    uVar2 = FUN_0040a2a6(*(uint *)(param_1 + 0x804));\n    *(char *)((int)param_1 + 0x100d) = (char)uVar2;\n    *(undefined1 *)((int)this + 0x1000) = 0;\n    _Str1 = FUN_0040c29a(param_1);\n    in_EAX = (HANDLE)_wcscmp(_Str1,L\".\");\n    if ((in_EAX != (HANDLE)0x0) && (in_EAX = (HANDLE)_wcscmp(_Str1,L\"..\"), in_EAX != (HANDLE)0x0)) {\n      return CONCAT31((int3)((uint)in_EAX >> 8),1);\n    }\n  }\n  return (uint)in_EAX & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0040a67e",
      "entry": "0040a67e",
      "c": "\nvoid __thiscall FUN_0040a67e(void *this,int param_1)\n\n{\n  FUN_00410602((short *)this,param_1,0x800);\n  *(undefined1 *)((int)this + 0x1000) = 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040a69b",
      "entry": "0040a69b",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nHANDLE FUN_0040a69b(HANDLE param_1,LPCWSTR param_2,wchar_t *param_3)\n\n{\n  undefined4 uVar1;\n  DWORD DVar2;\n  BOOL BVar3;\n  HANDLE pvVar4;\n  bool bVar5;\n  wchar_t local_1254 [2048];\n  _WIN32_FIND_DATAW local_254;\n  \n  local_254.cAlternateFileName[0xc] = L'\ua6a8';\n  local_254.cAlternateFileName[0xd] = L'@';\n  pvVar4 = (HANDLE)0xffffffff;\n  if (param_1 == (HANDLE)0xffffffff) {\n    param_1 = FindFirstFileW(param_2,&local_254);\n    if (param_1 != (HANDLE)0xffffffff) {\nLAB_0040a742:\n      FUN_00410602(param_3,(int)param_2,0x800);\n      FUN_0040c310(param_3,(int)local_254.cFileName,0x800);\n      *(DWORD *)(param_3 + 0x800) = local_254.nFileSizeLow;\n      *(DWORD *)(param_3 + 0x804) = local_254.dwFileAttributes;\n      *(DWORD *)(param_3 + 0x802) = local_254.nFileSizeHigh;\n      *(DWORD *)(param_3 + 0x814) = local_254.ftCreationTime.dwLowDateTime;\n      *(DWORD *)(param_3 + 0x816) = local_254.ftCreationTime.dwHighDateTime;\n      *(DWORD *)(param_3 + 0x818) = local_254.ftLastAccessTime.dwLowDateTime;\n      *(DWORD *)(param_3 + 0x81a) = local_254.ftLastAccessTime.dwHighDateTime;\n      *(DWORD *)(param_3 + 0x81c) = local_254.ftLastWriteTime.dwLowDateTime;\n      *(DWORD *)(param_3 + 0x81e) = local_254.ftLastWriteTime.dwHighDateTime;\n      FUN_004115da(param_3 + 0x808,&local_254.ftLastWriteTime.dwLowDateTime);\n      FUN_004115da(param_3 + 0x80c,&local_254.ftCreationTime.dwLowDateTime);\n      FUN_004115da(param_3 + 0x810,&local_254.ftLastAccessTime.dwLowDateTime);\n      goto LAB_0040a804;\n    }\n    uVar1 = FUN_0040bb03(param_2,local_1254,0x800);\n    if ((char)uVar1 != '\\0') {\n      param_1 = FindFirstFileW(local_1254,&local_254);\n      if (param_1 != (HANDLE)0xffffffff) goto LAB_0040a742;\n    }\n    DVar2 = GetLastError();\n    pvVar4 = param_1;\n    if (((DVar2 == 2) || (DVar2 == 3)) || (DVar2 == 0x12)) {\n      bVar5 = false;\n    }\n    else {\n      bVar5 = true;\n    }\n  }\n  else {\n    BVar3 = FindNextFileW(param_1,&local_254);\n    if (BVar3 != 0) goto LAB_0040a742;\n    DVar2 = GetLastError();\n    bVar5 = DVar2 != 0x12;\n  }\n  *(bool *)(param_3 + 0x822) = bVar5;\n  param_1 = pvVar4;\nLAB_0040a804:\n  param_3[0x820] = L'\\0';\n  param_3[0x821] = L'\\0';\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040a814",
      "entry": "0040a814",
      "c": "\nint __thiscall FUN_0040a814(void *this,char param_1)\n\n{\n  void *_Dst;\n  \n  *(undefined1 *)((int)this + 8) = 0;\n  if (param_1 == '\\0') {\n    *(undefined4 *)((int)this + 0xc) = 0;\n  }\n  else {\n    _Dst = (void *)FUN_0041ee53(0x8003);\n    *(void **)((int)this + 0xc) = _Dst;\n    _memset(_Dst,0,0x8003);\n  }\n  return (int)this;\n}\n\n"
    },
    {
      "name": "FUN_0040a84a",
      "entry": "0040a84a",
      "c": "\nvoid __fastcall FUN_0040a84a(int param_1)\n\n{\n  if (*(char *)(param_1 + 8) == '\\0') {\n    FID_conflict__free(*(void **)(param_1 + 0xc));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040a85a",
      "entry": "0040a85a",
      "c": "\nvoid __thiscall FUN_0040a85a(void *this,undefined4 param_1)\n\n{\n  if ((*(int *)((int)this + 0xc) != 0) && (*(char *)((int)this + 8) == '\\0')) {\n    FID_conflict__free(*(void **)((int)this + 0xc));\n  }\n  *(undefined4 *)((int)this + 0xc) = param_1;\n  *(undefined1 *)((int)this + 8) = 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040a881",
      "entry": "0040a881",
      "c": "\nvoid __thiscall FUN_0040a881(void *this,int param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(int *)((int)this + 4) + param_1;\n                    /* WARNING: Load size is inaccurate */\n  *(uint *)this = *this + (uVar1 >> 3);\n  *(uint *)((int)this + 4) = uVar1 & 7;\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_0040a89d",
      "entry": "0040a898",
      "c": "\nuint3 __fastcall thunk_FUN_0040a89d(int *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = param_1[3];\n  iVar2 = *param_1;\n  return CONCAT21(CONCAT11(*(undefined1 *)(iVar1 + iVar2),*(undefined1 *)(iVar1 + 1 + iVar2)),\n                  *(undefined1 *)(iVar1 + 2 + iVar2)) >> (8U - (char)param_1[1] & 0x1f) & 0xffff;\n}\n\n"
    },
    {
      "name": "FUN_0040a89d",
      "entry": "0040a89d",
      "c": "\nuint3 __fastcall FUN_0040a89d(int *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = param_1[3];\n  iVar2 = *param_1;\n  return CONCAT21(CONCAT11(*(undefined1 *)(iVar1 + iVar2),*(undefined1 *)(iVar1 + 1 + iVar2)),\n                  *(undefined1 *)(iVar1 + 2 + iVar2)) >> (8U - (char)param_1[1] & 0x1f) & 0xffff;\n}\n\n"
    },
    {
      "name": "FUN_0040a8ce",
      "entry": "0040a8ce",
      "c": "\nundefined4 * __fastcall FUN_0040a8ce(undefined4 *param_1)\n\n{\n  param_1[2] = 0;\n  *param_1 = 0;\n  param_1[3] = 0;\n  param_1[4] = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040a8e0",
      "entry": "0040a8e0",
      "c": "\nint __thiscall FUN_0040a8e0(void *this,int param_1)\n\n{\n  undefined4 extraout_EDX;\n  \n  FUN_0040ac99((int)this);\n  FUN_0040aa12((int)this,extraout_EDX,param_1);\n  return (int)this;\n}\n\n"
    },
    {
      "name": "FUN_0040a8f9",
      "entry": "0040a8f9",
      "c": "\nint __thiscall FUN_0040a8f9(void *this,int param_1)\n\n{\n  int iVar1;\n  undefined4 extraout_EDX;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  \n  FUN_0040aab0(this,param_1,0x108,8,FUN_0040a8e0);\n  FUN_0040ac99((int)this + 0x840);\n  FUN_0040aa12((int)this + 0x840,extraout_EDX,param_1 + 0x840);\n  puVar2 = (undefined4 *)(param_1 + 0x948);\n  puVar3 = (undefined4 *)((int)this + 0x948);\n  for (iVar1 = 0x80; iVar1 != 0; iVar1 = iVar1 + -1) {\n    *puVar3 = *puVar2;\n    puVar2 = puVar2 + 1;\n    puVar3 = puVar3 + 1;\n  }\n  *(undefined4 *)((int)this + 0xb48) = *(undefined4 *)(param_1 + 0xb48);\n  *(undefined4 *)((int)this + 0xb4c) = *(undefined4 *)(param_1 + 0xb4c);\n  *(undefined4 *)((int)this + 0xb50) = *(undefined4 *)(param_1 + 0xb50);\n  return (int)this;\n}\n\n"
    },
    {
      "name": "FUN_0040a971",
      "entry": "0040a971",
      "c": "\nint __fastcall FUN_0040a971(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 8;\n  iVar1 = param_1;\n  do {\n    FUN_0040ac99(iVar1);\n    iVar1 = iVar1 + 0x108;\n    iVar2 = iVar2 + -1;\n  } while (iVar2 != 0);\n  FUN_0040ac99(param_1 + 0x840);\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040a99e",
      "entry": "0040a99e",
      "c": "\nvoid __fastcall FUN_0040a99e(int param_1)\n\n{\n  void *pvVar1;\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  pvVar1 = *(void **)(param_1 + 0xc);\n  ExceptionList = &local_10;\n  if (pvVar1 != (void *)0x0) {\n    ExceptionList = &local_10;\n    FUN_00410eed((int)pvVar1);\n    FUN_0041eb68(pvVar1);\n  }\n  FUN_0040f445((undefined1 *)(param_1 + 4),4);\n  if (*(int *)(param_1 + 8) != 0) {\n    FUN_0040f445(*(undefined1 **)(param_1 + 8),0xb54);\n    FUN_0041eb68(*(void **)(param_1 + 8));\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040aa12",
      "entry": "0040aa12",
      "c": "\nundefined8 __fastcall FUN_0040aa12(int param_1,undefined4 param_2,int param_3)\n\n{\n  ulonglong uVar1;\n  \n  if (param_1 != param_3) {\n    uVar1 = FUN_00420320(*(uint **)(param_1 + 0xf0),*(uint **)(param_3 + 0xf0),0xb0);\n    param_2 = (undefined4)(uVar1 >> 0x20);\n    *(undefined4 *)(param_1 + 0x100) = *(undefined4 *)(param_3 + 0x100);\n    *(undefined1 *)(param_1 + 0x104) = *(undefined1 *)(param_3 + 0x104);\n  }\n  return CONCAT44(param_2,param_1);\n}\n\n"
    },
    {
      "name": "FUN_0040aa56",
      "entry": "0040aa56",
      "c": "\nbool __thiscall FUN_0040aa56(void *this,int *param_1)\n\n{\n  int iVar1;\n  bool bVar2;\n  \n                    /* WARNING: Load size is inaccurate */\n  if ((*this == 0) || (*param_1 == 0)) {\n    return true;\n  }\n                    /* WARNING: Load size is inaccurate */\n  if ((*this == 1) && (*param_1 == 1)) {\nLAB_0040aa78:\n    bVar2 = *(int *)((int)this + 4) == param_1[1];\n  }\n  else {\n                    /* WARNING: Load size is inaccurate */\n    if (*this == 2) {\n      if (*param_1 == 2) goto LAB_0040aa78;\n    }\n    else {\n                    /* WARNING: Load size is inaccurate */\n      if ((*this == 3) && (*param_1 == 3)) {\n        iVar1 = FUN_00420c4a((uint *)((int)this + 4),(uint *)(param_1 + 1),0x20);\n        return (bool)('\\x01' - (iVar1 != 0));\n      }\n    }\n    bVar2 = false;\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040aab0",
      "entry": "0040aab0",
      "c": "\nvoid FUN_0040aab0(undefined4 param_1,int param_2,int param_3,int param_4,undefined *param_5)\n\n{\n  if (param_4 != 0) {\n    do {\n      (*(code *)PTR_guard_check_icall_00433278)(param_2);\n      (*(code *)param_5)();\n      param_2 = param_2 + param_3;\n      param_4 = param_4 + -1;\n    } while (param_4 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040aaea",
      "entry": "0040aaea",
      "c": "\nvoid __thiscall FUN_0040aaea(void *this,int *param_1,ulong *param_2)\n\n{\n  int local_28 [9];\n  \n  FUN_0040abb6(this,local_28);\n  if (param_2 != (ulong *)0x0) {\n    FUN_00405f85(local_28,param_2);\n  }\n  FUN_0040aa56(local_28,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ab1a",
      "entry": "0040ab1a",
      "c": "\nvoid __thiscall FUN_0040ab1a(void *this,int param_1,uint param_2)\n\n{\n  int iVar1;\n  void *pvVar2;\n  \n  pvVar2 = *(void **)((int)this + 8);\n  if (pvVar2 == (void *)0x0) {\n    iVar1 = FUN_0041eb38(0xb54);\n    if (iVar1 == 0) {\n      pvVar2 = (void *)0x0;\n    }\n    else {\n      pvVar2 = (void *)FUN_0040a971(iVar1);\n    }\n    *(void **)((int)this + 8) = pvVar2;\n  }\n  *(int *)this = param_1;\n  if (param_1 == 1) {\n    *(undefined4 *)((int)this + 4) = 0;\n  }\n  else if (param_1 == 2) {\n    *(undefined4 *)((int)this + 4) = 0xffffffff;\n  }\n  else if (param_1 == 3) {\n    FUN_004058b1(pvVar2);\n  }\n  if (7 < param_2) {\n    param_2 = 8;\n  }\n  *(uint *)((int)this + 0x10) = param_2;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ab83",
      "entry": "0040ab83",
      "c": "\nulonglong __fastcall FUN_0040ab83(int *param_1,undefined4 param_2,int param_3)\n\n{\n  ulonglong uVar1;\n  \n  uVar1 = CONCAT44(param_2,param_3);\n  *param_1 = param_3;\n  if ((param_3 == 1) || (param_3 == 2)) {\n    param_1[1] = 0;\n  }\n  if (param_3 == 3) {\n    uVar1 = FUN_00420320((uint *)(param_1 + 1),(uint *)&DAT_0043e000,0x20);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040abb6",
      "entry": "0040abb6",
      "c": "\nvoid __thiscall FUN_0040abb6(void *this,int *param_1)\n\n{\n  uint *puVar1;\n  undefined1 local_b58 [2900];\n  \n                    /* WARNING: Load size is inaccurate */\n  *param_1 = *this;\n                    /* WARNING: Load size is inaccurate */\n  puVar1 = (uint *)(param_1 + 1);\n  if (*this == 1) {\n    *puVar1 = *(uint *)((int)this + 4);\n  }\n                    /* WARNING: Load size is inaccurate */\n  if (*this == 2) {\n    *puVar1 = ~*(uint *)((int)this + 4);\n  }\n                    /* WARNING: Load size is inaccurate */\n  if (*this == 3) {\n    FUN_0040a8f9(local_b58,*(int *)((int)this + 8));\n    FUN_00405821((int)local_b58,(int)puVar1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ac05",
      "entry": "0040ac05",
      "c": "\nvoid FUN_0040ac05(void)\n\n{\n  uint uVar1;\n  void *this;\n  int *extraout_ECX;\n  int unaff_EBP;\n  uint *puVar2;\n  \n  FUN_0041eb78();\n  if (*extraout_ECX == 2) {\n    uVar1 = FUN_00405dce(extraout_ECX[1],*(byte **)(unaff_EBP + 8),*(int *)(unaff_EBP + 0xc));\n    extraout_ECX[1] = uVar1;\n  }\n  if (*extraout_ECX == 3) {\n    if ((1 < (uint)extraout_ECX[4]) && (puVar2 = (uint *)0x0, extraout_ECX[3] == 0)) {\n      this = (void *)FUN_0041eb38(0x338);\n      *(void **)(unaff_EBP + -0x10) = this;\n      *(undefined4 *)(unaff_EBP + -4) = 0;\n      if (this != (void *)0x0) {\n        puVar2 = FUN_00410e46(this,8);\n      }\n      *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n      extraout_ECX[3] = (int)puVar2;\n    }\n    uVar1 = *(uint *)(unaff_EBP + 0xc);\n    puVar2 = *(uint **)(unaff_EBP + 8);\n    *(int *)(extraout_ECX[2] + 0xb4c) = extraout_ECX[3];\n    *(int *)(extraout_ECX[2] + 0xb50) = extraout_ECX[4];\n    FUN_00405912(extraout_ECX[2],puVar2,uVar1);\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ac99",
      "entry": "0040ac99",
      "c": "\nvoid __fastcall FUN_0040ac99(int param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (-param_1 & 0x3fU) + param_1;\n  *(int *)(param_1 + 0xf0) = iVar1;\n  *(int *)(param_1 + 0xf4) = iVar1 + 0x80;\n  *(int *)(param_1 + 0xf8) = iVar1 + 0xa0;\n  *(int *)(param_1 + 0xfc) = iVar1 + 0xa8;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040acc4",
      "entry": "0040acc4",
      "c": "\nulonglong __thiscall FUN_0040acc4(void *this,uint param_1)\n\n{\n  undefined4 extraout_EDX;\n  ulonglong uVar1;\n  \n  FUN_004020bd((void *)((int)this + 0x1028),param_1);\n  *(undefined1 *)((int)this + 0x10) = 0;\n  uVar1 = FUN_0040ab83((int *)((int)this + 0x1070),extraout_EDX,0);\n  *(undefined4 *)((int)this + 0x1040) = 0;\n  *(undefined4 *)((int)this + 0x1044) = 0;\n  *(undefined4 *)((int)this + 0x1050) = 0;\n  *(undefined4 *)((int)this + 0x1054) = 0;\n  *(undefined4 *)((int)this + 0x1048) = 0;\n  *(undefined4 *)((int)this + 0x104c) = 0;\n  *(undefined4 *)((int)this + 0x1098) = 0;\n  *(undefined4 *)((int)this + 0x24) = 0;\n  *(undefined4 *)((int)this + 0x109c) = 0;\n  *(undefined1 *)((int)this + 0x10a0) = 0;\n  *(undefined1 *)((int)this + 0x10c1) = 0;\n  *(undefined1 *)((int)this + 0x10ca) = 0;\n  *(undefined4 *)((int)this + 0x10ec) = 0;\n  *(undefined4 *)((int)this + 0x10f0) = 0;\n  *(undefined4 *)((int)this + 0x10f4) = 0;\n  *(undefined2 *)((int)this + 0x10f8) = 0;\n  *(undefined1 *)((int)this + 0x10fa) = 0;\n  *(undefined4 *)((int)this + 0x1100) = 0;\n  *(undefined2 *)((int)this + 0x2104) = 0;\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040ad5e",
      "entry": "0040ad5e",
      "c": "\nvoid __fastcall FUN_0040ad5e(int param_1)\n\n{\n  *(undefined2 *)(param_1 + 0x14) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0;\n  *(undefined2 *)(param_1 + 0x1c) = 0;\n  *(undefined1 *)(param_1 + 0x1e) = 0;\n  *(undefined4 *)(param_1 + 0x20) = 0;\n  *(undefined4 *)(param_1 + 0x24) = 0;\n  *(undefined4 *)(param_1 + 0x28) = 0;\n  *(undefined4 *)(param_1 + 0x2c) = 0;\n  *(undefined4 *)(param_1 + 0x30) = 0;\n  *(undefined4 *)(param_1 + 0x34) = 0;\n  *(undefined4 *)(param_1 + 0x38) = 0;\n  *(undefined4 *)(param_1 + 0x3c) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ad87",
      "entry": "0040ad87",
      "c": "\nundefined4 * __thiscall FUN_0040ad87(void *this,LPCSTR param_1)\n\n{\n  undefined4 uVar1;\n  \n  *(undefined4 *)((int)this + 4) = 0;\n  *(undefined4 *)((int)this + 8) = 1;\n  uVar1 = ConvertStringToBSTR(param_1);\n  *(undefined4 *)this = uVar1;\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_0040ada6",
      "entry": "0040ada6",
      "c": "\nint * __thiscall FUN_0040ada6(void *this,undefined4 param_1)\n\n{\n  code *pcVar1;\n  int iVar2;\n  int *piVar3;\n  int unaff_retaddr;\n  \n  *(undefined4 *)((int)this + 4) = 0;\n  *(undefined4 *)((int)this + 8) = 1;\n  iVar2 = Ordinal_2(param_1);\n  *(int *)this = iVar2;\n  if ((iVar2 == 0) && (unaff_retaddr != 0)) {\n    _com_issue_error(-0x7ff8fff2);\n    pcVar1 = (code *)swi(3);\n    piVar3 = (int *)(*pcVar1)();\n    return piVar3;\n  }\n  return (int *)this;\n}\n\n"
    },
    {
      "name": "FUN_0040addb",
      "entry": "0040addb",
      "c": "\nundefined4 * FUN_0040addb(void)\n\n{\n  code *pcVar1;\n  void *this;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  puVar3 = extraout_ECX;\n  this = (void *)FUN_0041eb38(0xc);\n  *(void **)(unaff_EBP + -0x10) = this;\n  puVar2 = (undefined4 *)0x0;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  if (this != (void *)0x0) {\n    puVar2 = FUN_0040ad87(this,*(LPCSTR *)(unaff_EBP + 8));\n  }\n  *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n  *extraout_ECX = puVar2;\n  if (puVar2 != (undefined4 *)0x0) {\n    ExceptionList = *(void **)(unaff_EBP + -0xc);\n    return extraout_ECX;\n  }\n  _com_issue_error(-0x7ff8fff2);\n  pcVar1 = (code *)swi(3);\n  puVar3 = (undefined4 *)(*pcVar1)(puVar3);\n  return puVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040ae2d",
      "entry": "0040ae2d",
      "c": "\nundefined4 * FUN_0040ae2d(void)\n\n{\n  code *pcVar1;\n  void *this;\n  int *piVar2;\n  undefined4 *puVar3;\n  undefined4 *extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  puVar3 = extraout_ECX;\n  this = (void *)FUN_0041eb38(0xc);\n  *(void **)(unaff_EBP + -0x10) = this;\n  piVar2 = (int *)0x0;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  if (this != (void *)0x0) {\n    piVar2 = FUN_0040ada6(this,*(undefined4 *)(unaff_EBP + 8));\n  }\n  *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n  *extraout_ECX = piVar2;\n  if (piVar2 != (int *)0x0) {\n    ExceptionList = *(void **)(unaff_EBP + -0xc);\n    return extraout_ECX;\n  }\n  _com_issue_error(-0x7ff8fff2);\n  pcVar1 = (code *)swi(3);\n  puVar3 = (undefined4 *)(*pcVar1)(puVar3);\n  return puVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040ae7f",
      "entry": "0040ae7f",
      "c": "\nvoid __fastcall FUN_0040ae7f(undefined4 *param_1)\n\n{\n  if ((int *)*param_1 != (int *)0x0) {\n    FUN_0040aef6((int *)*param_1);\n    *param_1 = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ae92",
      "entry": "0040ae92",
      "c": "\nundefined1 FUN_0040ae92(void)\n\n{\n  byte bVar1;\n  _OSVERSIONINFOW local_118;\n  \n  if (DAT_004410b0 != '\\0') {\n    return DAT_004410b1;\n  }\n  local_118.dwOSVersionInfoSize = 0x114;\n  GetVersionExW(&local_118);\n  if (local_118.dwMajorVersion < 0xb) {\n    if ((local_118.dwMajorVersion == 10) && (21999 < local_118.dwBuildNumber)) {\n      bVar1 = FUN_0040af24();\n      if (bVar1 == 0) goto LAB_0040aedf;\n    }\n    DAT_004410b1 = 0;\n  }\n  else {\nLAB_0040aedf:\n    DAT_004410b1 = 1;\n  }\n  DAT_004410b0 = 1;\n  return DAT_004410b1;\n}\n\n"
    },
    {
      "name": "FUN_0040aef6",
      "entry": "0040aef6",
      "c": "\nLONG __fastcall FUN_0040aef6(int *param_1)\n\n{\n  LONG LVar1;\n  \n  LVar1 = InterlockedDecrement(param_1 + 2);\n  if ((LVar1 == 0) && (param_1 != (int *)0x0)) {\n    FUN_0040b1b4(param_1);\n    FUN_0041eb68(param_1);\n  }\n  return LVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040af24",
      "entry": "0040af24",
      "c": "\nbyte FUN_0040af24(void)\n\n{\n  undefined4 *puVar1;\n  code *pcVar2;\n  HRESULT HVar3;\n  int *piVar4;\n  int iVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  undefined4 uVar8;\n  undefined4 uVar9;\n  byte bVar10;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  bVar10 = 0;\n  *(undefined4 *)(unaff_EBP + -0x14) = 0;\n  HVar3 = CoCreateInstance((IID *)&DAT_0043581c,(LPUNKNOWN)0x0,1,(IID *)&DAT_0043574c,\n                           (LPVOID *)(unaff_EBP + -0x14));\n  if (HVar3 < 0) {\n    bVar10 = 0;\n  }\n  else {\n    *(undefined4 *)(unaff_EBP + -0x10) = 0;\n    piVar4 = FUN_0040ae2d();\n    puVar1 = (undefined4 *)*piVar4;\n    *(undefined4 *)(unaff_EBP + -4) = 0;\n    if (puVar1 == (undefined4 *)0x0) {\n      uVar9 = 0;\n    }\n    else {\n      uVar9 = *puVar1;\n    }\n    iVar5 = **(int **)(unaff_EBP + -0x14);\n    (*(code *)PTR_guard_check_icall_00433278)\n              (*(int **)(unaff_EBP + -0x14),uVar9,0,0,0,0,0,0,unaff_EBP + -0x10);\n    iVar5 = (**(code **)(iVar5 + 0xc))();\n    *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n    if (*(int **)(unaff_EBP + -0x20) != (int *)0x0) {\n      FUN_0040aef6(*(int **)(unaff_EBP + -0x20));\n    }\n    if (-1 < iVar5) {\n      HVar3 = CoSetProxyBlanket(*(IUnknown **)(unaff_EBP + -0x10),10,0,(OLECHAR *)0x0,3,3,\n                                (RPC_AUTH_IDENTITY_HANDLE)0x0,0);\n      if (-1 < HVar3) {\n        *(undefined4 *)(unaff_EBP + -0x18) = 0;\n        piVar4 = FUN_0040addb();\n        *(undefined4 *)(unaff_EBP + -4) = 1;\n        piVar6 = FUN_0040addb();\n        puVar1 = (undefined4 *)*piVar4;\n        *(undefined1 *)(unaff_EBP + -4) = 2;\n        if (puVar1 == (undefined4 *)0x0) {\n          uVar9 = 0;\n        }\n        else {\n          uVar9 = *puVar1;\n        }\n        if ((undefined4 *)*piVar6 == (undefined4 *)0x0) {\n          uVar8 = 0;\n        }\n        else {\n          uVar8 = *(undefined4 *)*piVar6;\n        }\n        iVar5 = **(int **)(unaff_EBP + -0x10);\n        (*(code *)PTR_guard_check_icall_00433278)\n                  (*(int **)(unaff_EBP + -0x10),uVar8,uVar9,0x30,0,unaff_EBP + -0x18);\n        iVar5 = (**(code **)(iVar5 + 0x50))();\n        if (*(int **)(unaff_EBP + -0x20) != (int *)0x0) {\n          FUN_0040aef6(*(int **)(unaff_EBP + -0x20));\n          *(undefined4 *)(unaff_EBP + -0x20) = 0;\n        }\n        *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n        if (*(int **)(unaff_EBP + -0x28) != (int *)0x0) {\n          FUN_0040aef6(*(int **)(unaff_EBP + -0x28));\n        }\n        if (-1 < iVar5) {\n          piVar4 = *(int **)(unaff_EBP + -0x18);\n          *(undefined4 *)(unaff_EBP + -0x1c) = 0;\n          *(undefined4 *)(unaff_EBP + -0x24) = 0;\n          while (piVar4 != (int *)0x0) {\n            iVar5 = *piVar4;\n            (*(code *)PTR_guard_check_icall_00433278)\n                      (piVar4,0xffffffff,1,unaff_EBP + -0x1c,unaff_EBP + -0x24);\n            (**(code **)(iVar5 + 0x10))();\n            if (*(int *)(unaff_EBP + -0x24) == 0) break;\n            iVar5 = **(int **)(unaff_EBP + -0x1c);\n            (*(code *)PTR_guard_check_icall_00433278)\n                      (*(int **)(unaff_EBP + -0x1c),L\"Name\",0,unaff_EBP + -0x38,0,0);\n            (**(code **)(iVar5 + 0x10))();\n            pauVar7 = FUN_004223f9(*(undefined1 (**) [16])(unaff_EBP + -0x30),\n                                   (undefined1 (*) [16])L\"Windows 10\");\n            bVar10 = bVar10 | pauVar7 != (undefined1 (*) [16])0x0;\n            Ordinal_9(unaff_EBP + -0x38);\n            pcVar2 = *(code **)(**(int **)(unaff_EBP + -0x1c) + 8);\n            (*(code *)PTR_guard_check_icall_00433278)(*(int **)(unaff_EBP + -0x1c));\n            (*pcVar2)();\n            piVar4 = *(int **)(unaff_EBP + -0x18);\n          }\n          pcVar2 = *(code **)(**(int **)(unaff_EBP + -0x10) + 8);\n          (*(code *)PTR_guard_check_icall_00433278)(*(int **)(unaff_EBP + -0x10));\n          (*pcVar2)();\n          pcVar2 = *(code **)(**(int **)(unaff_EBP + -0x14) + 8);\n          (*(code *)PTR_guard_check_icall_00433278)(*(int **)(unaff_EBP + -0x14));\n          (*pcVar2)();\n          pcVar2 = *(code **)(**(int **)(unaff_EBP + -0x18) + 8);\n          (*(code *)PTR_guard_check_icall_00433278)(*(int **)(unaff_EBP + -0x18));\n          (*pcVar2)();\n          goto LAB_0040b138;\n        }\n      }\n      pcVar2 = *(code **)(**(int **)(unaff_EBP + -0x10) + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(*(int **)(unaff_EBP + -0x10));\n      (*pcVar2)();\n    }\n    pcVar2 = *(code **)(**(int **)(unaff_EBP + -0x14) + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(*(int **)(unaff_EBP + -0x14));\n    (*pcVar2)();\n    bVar10 = 0;\n  }\nLAB_0040b138:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return bVar10;\n}\n\n"
    },
    {
      "name": "FUN_0040b146",
      "entry": "0040b146",
      "c": "\nint FUN_0040b146(void)\n\n{\n  _OSVERSIONINFOW local_118;\n  \n  if (DAT_0043e020 == 0xffffffff) {\n    local_118.dwOSVersionInfoSize = 0x114;\n    GetVersionExW(&local_118);\n    DAT_0043e020 = local_118.dwPlatformId;\n    DAT_004410a8 = local_118.dwMajorVersion;\n    DAT_004410ac = local_118.dwMinorVersion;\n  }\n  if (DAT_0043e020 != 2) {\n    return 0x501;\n  }\n  return DAT_004410a8 * 0x100 + DAT_004410ac;\n}\n\n"
    },
    {
      "name": "FUN_0040b1b4",
      "entry": "0040b1b4",
      "c": "\nvoid __fastcall FUN_0040b1b4(int *param_1)\n\n{\n  if (*param_1 != 0) {\n    Ordinal_6(*param_1);\n    *param_1 = 0;\n  }\n  if (param_1[1] != 0) {\n    FID_conflict__free((void *)param_1[1]);\n    param_1[1] = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b1dc",
      "entry": "0040b1dc",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool FUN_0040b1dc(wchar_t *param_1,wchar_t *param_2,uint param_3)\n\n{\n  wchar_t wVar1;\n  bool bVar2;\n  size_t sVar3;\n  int iVar4;\n  byte bVar5;\n  uint uVar6;\n  undefined4 local_2008;\n  wchar_t local_2000 [2048];\n  wchar_t local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x40b1e6;\n  uVar6 = param_3 & 0xffff;\n  bVar5 = (byte)(param_3 >> 0x1f);\n  local_2008 = CONCAT31(local_2008._1_3_,bVar5);\n  if (uVar6 != 0) {\n    sVar3 = _wcslen(param_1);\n    if (((uVar6 != 2) && (uVar6 != 4)) && (uVar6 != 3)) {\n      if ((int)param_3 < 0) {\n        iVar4 = _wcsncmp(param_1,param_2,sVar3);\n      }\n      else {\n        iVar4 = FUN_00411fdd(param_1,param_2,sVar3);\n      }\n      if ((iVar4 == 0) &&\n         (((wVar1 = param_2[sVar3], wVar1 == L'\\\\' || (wVar1 == L'/')) || (wVar1 == L'\\0')))) {\n        return true;\n      }\n      if (uVar6 == 1) {\n        return false;\n      }\n    }\n    FUN_0040b94e(param_1,local_2000,0x800);\n    FUN_0040b94e(param_2,local_1000,0x800);\n    if (((uVar6 == 2) || (uVar6 == 4)) &&\n       (iVar4 = FUN_0040b4cb(local_2000,local_1000,bVar5), iVar4 != 0)) {\n      return false;\n    }\n    if (uVar6 == 3) goto LAB_0040b2c6;\n    if ((uVar6 == 5) || (uVar6 == 6)) {\n      bVar2 = FUN_0040bdb4(local_2000);\n      if (bVar2) goto LAB_0040b2c6;\n      if ((uVar6 == 5) || (bVar2 = FUN_0040bdb4(param_1), bVar2)) {\n        if (local_2000[0] == L'\\0') goto LAB_0040b317;\n        sVar3 = _wcslen(local_2000);\n        if ((int)param_3 < 0) {\n          iVar4 = _wcsncmp(local_2000,local_1000,sVar3);\n        }\n        else {\n          iVar4 = FUN_00411fdd(local_2000,local_1000,sVar3);\n        }\n      }\n      else {\n        iVar4 = FUN_0040b4cb(local_2000,local_1000,bVar5);\n      }\n      if (iVar4 != 0) {\n        return false;\n      }\n    }\n  }\nLAB_0040b317:\n  param_1 = FUN_0040c29a(param_1);\n  param_2 = FUN_0040c29a(param_2);\n  if (uVar6 == 2) {\n    iVar4 = FUN_0040b4cb(param_1,param_2,bVar5);\n    return (bool)('\\x01' - (iVar4 != 0));\n  }\nLAB_0040b2c6:\n  bVar2 = FUN_0040b37a(param_1,(ushort *)param_2,local_2008);\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040b37a",
      "entry": "0040b37a",
      "c": "\nbool FUN_0040b37a(wchar_t *param_1,ushort *param_2,undefined4 param_3)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  ushort *puVar4;\n  wchar_t *pwVar5;\n  ushort *puVar6;\n  int iVar7;\n  short sVar8;\n  wchar_t *_Str;\n  short sVar9;\n  char cVar10;\n  \n  do {\n    while( true ) {\n      cVar10 = (char)param_3;\n      uVar2 = FUN_0040b4ec((uint)*param_2,cVar10);\n      uVar3 = FUN_0040b4ec((uint)(ushort)*param_1,cVar10);\n      _Str = param_1 + 1;\n      sVar8 = (short)uVar3;\n      sVar9 = (short)uVar2;\n      if (sVar8 == 0) {\n        return sVar9 == 0;\n      }\n      if (sVar8 == 0x2a) {\n        if (*_Str == L'\\0') {\n          return true;\n        }\n        if (*_Str == L'.') {\n          if ((param_1[2] == L'*') && (param_1[3] == L'\\0')) {\n            return true;\n          }\n          puVar4 = FUN_004222c6(param_2,0x2e);\n          if (param_1[2] == L'\\0') {\n            if ((puVar4 != (ushort *)0x0) && (puVar4[1] != 0)) {\n              return false;\n            }\n            return true;\n          }\n          if ((puVar4 != (ushort *)0x0) &&\n             (pwVar5 = _wcspbrk(_Str,L\"*?\"), param_2 = puVar4, pwVar5 == (wchar_t *)0x0)) {\n            puVar6 = FUN_004222c6(puVar4 + 1,0x2e);\n            if (puVar6 == (ushort *)0x0) {\n              iVar7 = FUN_0040b4cb(param_1 + 2,(wchar_t *)(puVar4 + 1),cVar10);\n              return (bool)('\\x01' - (iVar7 != 0));\n            }\n          }\n        }\n        do {\n          if (*param_2 == 0) {\n            return false;\n          }\n          bVar1 = FUN_0040b37a(_Str,param_2,param_3);\n          param_2 = param_2 + 1;\n        } while (!bVar1);\n        return true;\n      }\n      param_1 = _Str;\n      if ((uVar3 & 0xffff) != 0x3f) break;\n      if (sVar9 == 0) {\n        return false;\n      }\nLAB_0040b3ff:\n      param_2 = param_2 + 1;\n    }\n    if (sVar8 == sVar9) goto LAB_0040b3ff;\n    if ((sVar8 != 0x2e) || (((sVar9 != 0 && ((uVar2 & 0xffff) != 0x5c)) && (sVar9 != 0x2e)))) {\n      return false;\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_0040b4cb",
      "entry": "0040b4cb",
      "c": "\nvoid FUN_0040b4cb(wchar_t *param_1,wchar_t *param_2,char param_3)\n\n{\n  if (param_3 == '\\0') {\n    thunk_FUN_00411fbb(param_1,param_2);\n  }\n  else {\n    _wcscmp(param_1,param_2);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b4ec",
      "entry": "0040b4ec",
      "c": "\nundefined4 FUN_0040b4ec(undefined4 param_1,char param_2)\n\n{\n  if (param_2 == '\\0') {\n    param_1 = FUN_00411fac((ushort)param_1);\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040b505",
      "entry": "0040b505",
      "c": "\nvoid * FUN_0040b505(void)\n\n{\n  void *extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  *(void **)(unaff_EBP + -0x10) = extraout_ECX;\n  FUN_0040f1d0((void *)((int)extraout_ECX + 0x6024));\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x7170) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x7174) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x7178) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x717c) = 0;\n  *(undefined1 *)((int)extraout_ECX + 0x7180) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71b0) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71b4) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71b8) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71bc) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71c0) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71c4) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71d0) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71d4) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71d8) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71dc) = 0;\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  *(undefined4 *)((int)extraout_ECX + 0x71e0) = 0;\n  *(undefined4 *)((int)extraout_ECX + 0x71e4) = 0;\n  FUN_0040b61e(extraout_ECX);\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return extraout_ECX;\n}\n\n"
    },
    {
      "name": "FUN_0040b5a6",
      "entry": "0040b5a6",
      "c": "\nvoid __fastcall FUN_0040b5a6(int *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &local_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &local_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2] << 3);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b5f4",
      "entry": "0040b5f4",
      "c": "\nvoid __fastcall FUN_0040b5f4(void *param_1)\n\n{\n  _memset(param_1,0,0x92f0);\n  FUN_0040b5a6((int *)((int)param_1 + 0x7170));\n  thunk_FUN_0040f279((undefined1 *)((int)param_1 + 0x6024));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b61e",
      "entry": "0040b61e",
      "c": "\nvoid __fastcall FUN_0040b61e(void *param_1)\n\n{\n  uint uVar1;\n  \n  _memset(param_1,0,0x92f0);\n  *(undefined4 *)((int)param_1 + 0xc) = 0x2000000;\n  *(undefined4 *)((int)param_1 + 0x7134) = 0;\n  *(undefined4 *)((int)param_1 + 0x7138) = 3;\n  *(undefined4 *)((int)param_1 + 0x712c) = 0;\n  *(undefined4 *)((int)param_1 + 0x7190) = 0;\n  *(undefined4 *)((int)param_1 + 0x82d0) = 2;\n  *(undefined4 *)((int)param_1 + 0x71f0) = 0x7fffffff;\n  *(undefined4 *)((int)param_1 + 0x71f4) = 0x7fffffff;\n  *(undefined4 *)((int)param_1 + 0x71f8) = 0x7fffffff;\n  *(undefined4 *)((int)param_1 + 0x71fc) = 0x7fffffff;\n  *(undefined4 *)((int)param_1 + 0x713c) = 2;\n  uVar1 = FUN_004110dc();\n  *(uint *)((int)param_1 + 0x92e0) = uVar1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b690",
      "entry": "0040b690",
      "c": "\nvoid FUN_0040b690(wchar_t *param_1,uint param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = _wcslen(param_1);\n  if (sVar1 != 0) {\n    if ((param_1[sVar1 - 1] != L'\\\\') && (sVar1 + 1 < param_2)) {\n      param_1[sVar1] = L'\\\\';\n      param_1[sVar1 + 1] = L'\\0';\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b6c4",
      "entry": "0040b6c4",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0040b6c4(WCHAR *param_1,LPCWSTR param_2,int param_3)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  wchar_t local_2008 [2048];\n  WCHAR local_1008 [2048];\n  LPWSTR local_8;\n  \n  local_8 = L\"\u5653\u758b\u5708\\xf685\u7c74\u8366>\u7674\u458d\ubbfc\u0800\";\n  if ((param_1 == (WCHAR *)0x0) || (*param_1 == L'\\0')) {\n    if (param_3 == 0) {\n      return;\n    }\n    *param_2 = L'\\0';\n    return;\n  }\n  uVar1 = GetFullPathNameW(param_1,0x800,local_1008,&local_8);\n  if ((uVar1 == 0) || (0x800 < uVar1)) {\n    uVar2 = FUN_0040bb03(param_1,local_2008,0x800);\n    if ((char)uVar2 != '\\0') {\n      uVar1 = GetFullPathNameW(local_2008,0x800,local_1008,&local_8);\n    }\n    if (uVar1 != 0) goto LAB_0040b736;\n  }\n  else {\nLAB_0040b736:\n    if (uVar1 < 0x800) {\n      param_1 = local_1008;\n      goto LAB_0040b74d;\n    }\n  }\n  if (param_1 == param_2) {\n    return;\n  }\nLAB_0040b74d:\n  FUN_00410602(param_2,(int)param_1,param_3);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b76c",
      "entry": "0040b76c",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nushort * FUN_0040b76c(ushort *param_1,short *param_2,int param_3)\n\n{\n  char cVar1;\n  ushort *puVar2;\n  ushort uVar3;\n  ushort *puVar4;\n  short local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x40b776;\n  uVar3 = *param_1;\n  if (uVar3 != 0) {\n    puVar4 = param_1 + 2;\n    do {\n      cVar1 = FUN_0040bd9d((uint)uVar3);\n      if ((((cVar1 != '\\0') && (puVar4[-1] == 0x2e)) && (*puVar4 == 0x2e)) &&\n         (cVar1 = FUN_0040bd9d((uint)puVar4[1]), cVar1 != '\\0')) {\n        param_1 = puVar4 + 2;\n      }\n      uVar3 = puVar4[-1];\n      puVar4 = puVar4 + 1;\n    } while (uVar3 != 0);\n    uVar3 = *param_1;\n  }\n  if (uVar3 != 0) {\n    uVar3 = *param_1;\n    do {\n      puVar4 = param_1;\n      if ((uVar3 != 0) && (param_1[1] == 0x3a)) {\n        puVar4 = param_1 + 2;\n        uVar3 = *puVar4;\n      }\n      if (((uVar3 == 0x5c) && (puVar4[1] == 0x5c)) &&\n         ((puVar2 = FUN_004222c6(puVar4 + 2,0x5c), puVar2 != (ushort *)0x0 &&\n          (puVar2 = FUN_004222c6(puVar2 + 1,0x5c), puVar2 != (ushort *)0x0)))) {\n        puVar4 = puVar2 + 1;\n      }\n      uVar3 = *puVar4;\n      puVar2 = puVar4;\n      while (uVar3 != 0) {\n        cVar1 = FUN_0040bd9d((uint)uVar3);\n        if (cVar1 == '\\0') {\n          if (uVar3 != 0x2e) break;\n        }\n        else {\n          puVar2 = puVar4 + 1;\n        }\n        puVar4 = puVar4 + 1;\n        uVar3 = *puVar4;\n      }\n    } while ((puVar2 != param_1) && (uVar3 = *puVar2, param_1 = puVar2, uVar3 != 0));\n  }\n  if ((*param_1 == 0x2e) && ((param_1[1] == 0x2e && (param_1[2] == 0)))) {\n    param_1 = param_1 + 2;\n  }\n  if (param_2 != (short *)0x0) {\n    FUN_00410602(local_1000,(int)param_1,0x800);\n    FUN_00410602(param_2,(int)local_1000,param_3);\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040b8db",
      "entry": "0040b8db",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0040b8db(LPCWSTR param_1,int param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  WCHAR local_1004 [2046];\n  uint uStack_8;\n  \n  uStack_8 = 0x40b8e8;\n  uVar1 = FUN_0040b146();\n  if (0x5ff < uVar1) {\n    iVar2 = FoldStringW(0x20,param_1,-1,local_1004,0x800);\n    if (iVar2 != 0) {\n      uStack_8 = uStack_8 & 0xffff;\n      FUN_00410602(param_1,(int)local_1004,param_2);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b92d",
      "entry": "0040b92d",
      "c": "\nundefined1 (*) [16] FUN_0040b92d(wchar_t *param_1)\n\n{\n  undefined1 (*pauVar1) [16];\n  \n  if (param_1 == (wchar_t *)0x0) {\n    pauVar1 = (undefined1 (*) [16])0x0;\n  }\n  else {\n    pauVar1 = (undefined1 (*) [16])FUN_0040c29a(param_1);\n    pauVar1 = FUN_0042279b(pauVar1,0x2e);\n  }\n  return pauVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040b94e",
      "entry": "0040b94e",
      "c": "\nvoid FUN_0040b94e(wchar_t *param_1,wchar_t *param_2,int param_3)\n\n{\n  wchar_t *pwVar1;\n  size_t _Count;\n  \n  if (param_3 != 0) {\n    _Count = param_3 - 1;\n    pwVar1 = FUN_0040c29a(param_1);\n    if ((uint)((int)pwVar1 - (int)param_1 >> 1) <= _Count) {\n      pwVar1 = FUN_0040c29a(param_1);\n      _Count = (int)pwVar1 - (int)param_1 >> 1;\n    }\n    _wcsncpy(param_2,param_1,_Count);\n    param_2[_Count] = L'\\0';\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040b991",
      "entry": "0040b991",
      "c": "\nvoid FUN_0040b991(wchar_t *param_1,wchar_t *param_2,uint param_3)\n\n{\n  int iVar1;\n  ushort *puVar2;\n  uint uVar3;\n  \n  *param_2 = L'\\0';\n  iVar1 = FUN_0040bc98((ushort *)param_1);\n  if ((char)iVar1 == '\\0') {\n    if (((*param_1 == L'\\\\') && (param_1[1] == L'\\\\')) &&\n       (puVar2 = FUN_004222c6((ushort *)(param_1 + 2),0x5c), puVar2 != (ushort *)0x0)) {\n      puVar2 = FUN_004222c6(puVar2 + 1,0x5c);\n      if (puVar2 == (ushort *)0x0) {\n        uVar3 = _wcslen(param_1);\n      }\n      else {\n        uVar3 = ((int)puVar2 - (int)param_1 >> 1) + 1;\n      }\n      uVar3 = -(uint)(uVar3 < param_3) & uVar3;\n      _wcsncpy(param_2,param_1,uVar3);\n      param_2[uVar3] = L'\\0';\n    }\n  }\n  else {\n    FUN_00404092(param_2,param_3,L\"%c:\\\\\");\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ba1e",
      "entry": "0040ba1e",
      "c": "\nwchar_t * FUN_0040ba1e(wchar_t *param_1)\n\n{\n  wchar_t wVar1;\n  wchar_t *pwVar2;\n  size_t sVar3;\n  undefined4 uVar4;\n  wchar_t *pwVar5;\n  wchar_t *pwVar6;\n  \n  pwVar2 = FUN_0040c29a(param_1);\n  pwVar5 = pwVar2;\n  if (*pwVar2 != L'\\0') {\n    sVar3 = _wcslen(pwVar2);\n    for (pwVar5 = pwVar2 + (sVar3 - 1);\n        (uVar4 = FUN_0041047a((uint)(ushort)*pwVar5), (char)uVar4 == '\\0' && (pwVar2 < pwVar5));\n        pwVar5 = pwVar5 + -1) {\n    }\n    wVar1 = *pwVar5;\n    pwVar6 = pwVar5;\n    while (uVar4 = FUN_0041047a((uint)(ushort)wVar1), (char)uVar4 != '\\0') {\n      if (pwVar6 <= pwVar2) {\n        return pwVar5;\n      }\n      pwVar6 = pwVar6 + -1;\n      wVar1 = *pwVar6;\n    }\n    if (pwVar2 < pwVar6) {\n      while (*pwVar6 != L'.') {\n        uVar4 = FUN_0041047a((uint)(ushort)*pwVar6);\n        if ((char)uVar4 != '\\0') {\n          pwVar2 = (wchar_t *)FUN_004222c6((ushort *)pwVar2,0x2e);\n          if (pwVar2 == (wchar_t *)0x0) {\n            return pwVar5;\n          }\n          if (pwVar6 <= pwVar2) {\n            return pwVar5;\n          }\n          return pwVar6;\n        }\n        pwVar6 = pwVar6 + -1;\n        if (pwVar6 <= pwVar2) {\n          return pwVar5;\n        }\n      }\n    }\n  }\n  return pwVar5;\n}\n\n"
    },
    {
      "name": "FUN_0040baad",
      "entry": "0040baad",
      "c": "\nwchar_t * FUN_0040baad(LPCSTR param_1,wchar_t *param_2,wchar_t *param_3,size_t param_4)\n\n{\n  if ((param_2 == (wchar_t *)0x0) || (*param_2 == L'\\0')) {\n    if (param_1 == (LPCSTR)0x0) {\n      *param_3 = L'\\0';\n    }\n    else {\n      FUN_00411b84(param_1,param_3,param_4);\n    }\n  }\n  else if (param_3 != param_2) {\n    _wcsncpy(param_3,param_2,param_4);\n  }\n  if (param_4 != 0) {\n    param_3[param_4 - 1] = L'\\0';\n  }\n  return param_3;\n}\n\n"
    },
    {
      "name": "FUN_0040bb03",
      "entry": "0040bb03",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nuint FUN_0040bb03(wchar_t *param_1,wchar_t *param_2,uint param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  size_t sVar3;\n  int iVar4;\n  undefined4 uVar5;\n  size_t sVar6;\n  WCHAR local_1004 [2];\n  undefined2 local_1000;\n  undefined4 uStack_8;\n  \n  uVar2 = 0x1000;\n  uStack_8 = 0x40bb10;\n  if (*param_1 != L'\\0') {\n    FUN_0040bc98((ushort *)param_1);\n    sVar3 = _wcslen(param_1);\n    uVar2 = FUN_0040bcc3((ushort *)param_1);\n    if ((char)uVar2 == '\\0') {\n      uVar2 = GetCurrentDirectoryW(0x7ff,local_1004);\n      if ((uVar2 != 0) && (uVar2 < 0x800)) {\n        cVar1 = FUN_0040bd9d((uint)(ushort)*param_1);\n        if (cVar1 == '\\0') {\n          FUN_0040b690(local_1004,0x800);\n          sVar6 = _wcslen(local_1004);\n          uVar2 = sVar6 + sVar3 + 4;\n          if (uVar2 < param_3) {\n            FUN_00410602(param_2,0x433950,param_3);\n            FUN_004105da(param_2,(int)local_1004,param_3);\n            if ((*param_1 == L'.') &&\n               (cVar1 = FUN_0040bd9d((uint)(ushort)param_1[1]), cVar1 != '\\0')) {\n              param_1 = param_1 + 2;\n            }\n            goto LAB_0040bb63;\n          }\n        }\n        else {\n          uVar2 = sVar3 + 6;\n          if (uVar2 < param_3) {\n            FUN_00410602(param_2,0x433950,param_3);\n            local_1000 = 0;\n            FUN_004105da(param_2,(int)local_1004,param_3);\n            goto LAB_0040bb63;\n          }\n        }\n      }\n    }\n    else {\n      iVar4 = FUN_0040bc98((ushort *)param_1);\n      if ((char)iVar4 == '\\0') {\n        uVar2 = 0;\n        if (((*param_1 == L'\\\\') && (param_1 = param_1 + 1, *param_1 == L'\\\\')) &&\n           (uVar2 = sVar3 + 6, uVar2 < param_3)) {\n          FUN_00410602(param_2,0x433950,param_3);\n          FUN_004105da(param_2,0x43395c,param_3);\n          goto LAB_0040bb63;\n        }\n      }\n      else {\n        uVar2 = sVar3 + 4;\n        if (uVar2 < param_3) {\n          FUN_00410602(param_2,0x433950,param_3);\nLAB_0040bb63:\n          uVar5 = FUN_004105da(param_2,(int)param_1,param_3);\n          return CONCAT31((int3)((uint)uVar5 >> 8),1);\n        }\n      }\n    }\n  }\n  return uVar2 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0040bc8d",
      "entry": "0040bc8d",
      "c": "\nbool FUN_0040bc8d(int param_1)\n\n{\n  return param_1 == 0x3a;\n}\n\n"
    },
    {
      "name": "FUN_0040bc98",
      "entry": "0040bc98",
      "c": "\nint FUN_0040bc98(ushort *param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint3 uVar3;\n  \n  uVar1 = FUN_004104a4((uint)*param_1);\n  iVar2 = (uVar1 & 0xffff) - 0x41;\n  uVar3 = (uint3)((uint)iVar2 >> 8);\n  if (((ushort)iVar2 < 0x1a) && (param_1[1] == 0x3a)) {\n    iVar2 = CONCAT31(uVar3,1);\n  }\n  else {\n    iVar2 = (uint)uVar3 << 8;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040bcc3",
      "entry": "0040bcc3",
      "c": "\nuint FUN_0040bcc3(ushort *param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  undefined3 extraout_var;\n  \n  uVar2 = 0;\n  if ((*param_1 == 0x5c) && (param_1[1] == 0x5c)) {\nLAB_0040bcee:\n    uVar2 = CONCAT31((int3)(uVar2 >> 8),1);\n  }\n  else {\n    uVar2 = FUN_0040bc98(param_1);\n    if ((char)uVar2 != '\\0') {\n      cVar1 = FUN_0040bd9d((uint)param_1[2]);\n      uVar2 = CONCAT31(extraout_var,cVar1);\n      if (cVar1 != '\\0') goto LAB_0040bcee;\n    }\n    uVar2 = uVar2 & 0xffffff00;\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040bcf8",
      "entry": "0040bcf8",
      "c": "\nundefined1 FUN_0040bcf8(ushort *param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  \n  uVar2 = FUN_0040bcc3(param_1);\n  if (((char)uVar2 == '\\0') && (cVar1 = FUN_0040bd9d((uint)*param_1), cVar1 == '\\0')) {\n    return 0;\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0040bd1a",
      "entry": "0040bd1a",
      "c": "\nuint FUN_0040bd1a(wchar_t *param_1)\n\n{\n  wchar_t wVar1;\n  char cVar2;\n  wchar_t *pwVar3;\n  undefined3 extraout_var;\n  uint uVar4;\n  ushort uVar5;\n  undefined1 uVar6;\n  wchar_t *pwVar7;\n  \n  uVar6 = 0;\n  if (((*param_1 == L'\\0') || (param_1[1] == L'\\0')) ||\n     (pwVar3 = (wchar_t *)FUN_004222c6((ushort *)(param_1 + 2),0x3a), pwVar3 == (wchar_t *)0x0)) {\n    pwVar3 = (wchar_t *)(uint)(ushort)*param_1;\n    pwVar7 = param_1;\n    if (*param_1 != L'\\0') {\n      do {\n        uVar5 = (ushort)pwVar3;\n        if (uVar5 < 0x20) goto LAB_0040bd99;\n        if ((uVar5 == 0x20) || (uVar5 == 0x2e)) {\n          cVar2 = FUN_0040bd9d((uint)(ushort)pwVar7[1]);\n          pwVar3 = (wchar_t *)CONCAT31(extraout_var,cVar2);\n          if (cVar2 != '\\0') goto LAB_0040bd99;\n        }\n        wVar1 = pwVar7[1];\n        pwVar3 = (wchar_t *)(uint)(ushort)wVar1;\n        pwVar7 = pwVar7 + 1;\n      } while (wVar1 != L'\\0');\n      pwVar3 = _wcspbrk(param_1,L\"?*<>|\\\"\");\n      if (pwVar3 == (wchar_t *)0x0) {\n        uVar6 = 1;\n      }\n    }\n    uVar4 = CONCAT31((int3)((uint)pwVar3 >> 8),uVar6);\n  }\n  else {\nLAB_0040bd99:\n    uVar4 = (uint)pwVar3 & 0xffffff00;\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "FUN_0040bd9d",
      "entry": "0040bd9d",
      "c": "\nundefined1 FUN_0040bd9d(int param_1)\n\n{\n  undefined1 uVar1;\n  \n  if ((param_1 == 0x5c) || (param_1 == 0x2f)) {\n    uVar1 = 1;\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040bdb4",
      "entry": "0040bdb4",
      "c": "\nbool FUN_0040bdb4(wchar_t *param_1)\n\n{\n  wchar_t *pwVar1;\n  bool bVar2;\n  \n  if (param_1 == (wchar_t *)0x0) {\n    bVar2 = false;\n  }\n  else {\n    if ((((*param_1 == L'\\\\') && (param_1[1] == L'\\\\')) && (param_1[2] == L'?')) &&\n       (param_1[3] == L'\\\\')) {\n      param_1 = param_1 + 4;\n    }\n    pwVar1 = _wcspbrk(param_1,L\"*?\");\n    bVar2 = pwVar1 != (wchar_t *)0x0;\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040bdf3",
      "entry": "0040bdf3",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0040bdf3(ushort *param_1,int param_2,short *param_3,int param_4)\n\n{\n  int iVar1;\n  wchar_t local_1004 [2046];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x40be00;\n  FUN_00410602(local_1004,(int)param_1,0x800);\n  iVar1 = FUN_0040bc98(param_1);\n  if (((char)iVar1 == '\\0') || (param_1[2] != 0)) {\n    FUN_0040b690(local_1004,0x800);\n  }\n  FUN_004105da(local_1004,param_2,0x800);\n  FUN_00410602(param_3,(int)local_1004,param_4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040be5e",
      "entry": "0040be5e",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0040be5e(uint *param_1,uint param_2)\n\n{\n  uint *puVar1;\n  ushort uVar2;\n  short sVar3;\n  bool bVar4;\n  char cVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  uint *puVar8;\n  int iVar9;\n  int iVar10;\n  undefined **local_1010;\n  int local_1008;\n  short local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x40be68;\n  iVar10 = 0;\n  local_1010 = (undefined **)param_1;\n  while( true ) {\n    uVar2 = *(ushort *)local_1010;\n    cVar5 = FUN_0040bd9d((uint)uVar2);\n    iVar9 = iVar10;\n    if ((cVar5 != '\\0') || (uVar2 == 0)) {\n      while ((iVar9 = iVar9 + -1, 0 < iVar9 &&\n             ((sVar3 = *(short *)((int)param_1 + iVar9 * 2), sVar3 == 0x20 ||\n              (((sVar3 == 0x2e &&\n                (cVar5 = FUN_0040bd9d((uint)*(ushort *)((int)param_1 + iVar9 * 2 + -2)),\n                cVar5 == '\\0')) &&\n               ((*(short *)((int)param_1 + iVar9 * 2 + -2) != 0x2e || (iVar9 != 1))))))))) {\n        iVar10 = iVar10 + -1;\n      }\n    }\n    *(ushort *)((int)param_1 + iVar10 * 2) = uVar2;\n    if (*(ushort *)local_1010 == 0) break;\n    local_1010 = (undefined **)((int)local_1010 + 2);\n    iVar10 = iVar10 + 1;\n  }\n  local_1008 = 0;\n  sVar3 = (short)*param_1;\n  puVar1 = param_1;\n  do {\n    if (sVar3 == 0) {\n      return;\n    }\n    if ((local_1008 == 0) ||\n       (cVar5 = FUN_0040bd9d((uint)*(ushort *)((int)puVar1 + -2)), cVar5 != '\\0')) {\n      iVar10 = 6;\n      bVar4 = false;\n      local_1010 = &PTR_DAT_0043e024;\n      do {\n        iVar9 = 0;\n        puVar8 = puVar1;\nLAB_0040bf3b:\n        uVar2 = (ushort)*puVar8;\n        if (*(short *)(*local_1010 + iVar9 * 2) == 0x23) {\n          uVar6 = FUN_0041047a((uint)uVar2);\n          if ((char)uVar6 == '\\0') goto LAB_0040bf6e;\nLAB_0040c006:\n          iVar9 = iVar9 + 1;\n          puVar8 = (uint *)((int)puVar8 + 2);\n          goto LAB_0040bf3b;\n        }\n        if (*(short *)(*local_1010 + iVar9 * 2) != 0) {\n          uVar7 = FUN_00411fac(uVar2);\n          if (*(ushort *)(*local_1010 + iVar9 * 2) != uVar7) goto LAB_0040bf6e;\n          goto LAB_0040c006;\n        }\n        if ((uVar2 == 0) ||\n           (((uVar2 == 0x2e && (cVar5 = FUN_0040ae92(), cVar5 == '\\0')) ||\n            (cVar5 = FUN_0040bd9d((uint)*(ushort *)((int)puVar1 + iVar9 * 2)), cVar5 != '\\0')))) {\n          bVar4 = true;\n        }\n        else {\n          bVar4 = false;\n        }\nLAB_0040bf6e:\n        local_1010 = local_1010 + 1;\n        iVar10 = iVar10 + -1;\n      } while (iVar10 != 0);\n      if (bVar4) {\n        FUN_00410602(local_1000,(int)param_1,0x800);\n        if (local_1008 + 1U < param_2) {\n          FUN_00420320((uint *)((int)puVar1 + 2),puVar1,(param_2 - local_1008) * 2 - 2);\n        }\n        *(undefined2 *)puVar1 = 0x5f;\n      }\n    }\n    local_1008 = local_1008 + 1;\n    puVar1 = (uint *)((int)param_1 + local_1008 * 2);\n    sVar3 = (short)*puVar1;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_0040c058",
      "entry": "0040c058",
      "c": "\nvoid FUN_0040c058(ushort *param_1,char param_2)\n\n{\n  ushort *puVar1;\n  wchar_t *pwVar2;\n  int iVar3;\n  \n  if (*param_1 != 0) {\n    iVar3 = 0;\n    do {\n      pwVar2 = L\"?*<>|\\\"\";\n      if (param_2 == '\\0') {\n        pwVar2 = L\"?*\";\n      }\n      puVar1 = FUN_004222c6((ushort *)pwVar2,*param_1);\n      if ((puVar1 != (ushort *)0x0) || ((param_2 != '\\0' && (*param_1 < 0x20)))) {\n        *param_1 = 0x5f;\n      }\n      if ((2 < iVar3) && (*param_1 == 0x3a)) {\n        *param_1 = 0x5f;\n      }\n      param_1 = param_1 + 1;\n      iVar3 = iVar3 + 2;\n    } while (*param_1 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040c0c5",
      "entry": "0040c0c5",
      "c": "\nvoid FUN_0040c0c5(wchar_t *param_1,uint param_2,char param_3)\n\n{\n  wchar_t wVar1;\n  undefined1 (*_Str) [16];\n  int iVar2;\n  wchar_t *pwVar3;\n  undefined4 uVar4;\n  size_t sVar5;\n  wchar_t *pwVar6;\n  wchar_t *pwVar7;\n  \n  _Str = FUN_0040b92d(param_1);\n  if (_Str == (undefined1 (*) [16])0x0) {\n    FUN_004105da(param_1,0x433900,param_2);\n    _Str = FUN_0040b92d(param_1);\n    if (_Str == (undefined1 (*) [16])0x0) goto LAB_0040c0f8;\n  }\n  else if (((*(short *)(*_Str + 2) == 0) ||\n           (iVar2 = FUN_00411fbb((PCNZWCH)_Str,L\".exe\"), iVar2 == 0)) ||\n          (iVar2 = FUN_00411fbb((PCNZWCH)_Str,L\".sfx\"), iVar2 == 0)) {\n    FUN_00410602((short *)_Str,0x433900,param_2 - ((int)_Str - (int)param_1 >> 1));\n  }\n  if ((*(short *)*_Str == 0x2e) && (*(short *)(*_Str + 2) != 0)) {\n    if (param_3 == '\\0') {\n      pwVar3 = FUN_0040ba1e(param_1);\n      *pwVar3 = *pwVar3 + L'\\x01';\n      wVar1 = *pwVar3;\n      while( true ) {\n        if (wVar1 != L':') {\n          return;\n        }\n        *pwVar3 = L'0';\n        pwVar7 = pwVar3 + -1;\n        if ((pwVar7 < param_1) || (uVar4 = FUN_0041047a((uint)(ushort)*pwVar7), (char)uVar4 == '\\0')\n           ) break;\n        *pwVar7 = *pwVar7 + L'\\x01';\n        wVar1 = *pwVar7;\n        pwVar3 = pwVar7;\n      }\n      sVar5 = _wcslen(param_1);\n      for (pwVar6 = param_1 + sVar5; pwVar6 != pwVar7; pwVar6 = pwVar6 + -1) {\n        pwVar6[1] = *pwVar6;\n      }\n      *pwVar3 = L'1';\n      return;\n    }\n    uVar4 = FUN_0041047a((uint)*(ushort *)(*_Str + 4));\n    if (((char)uVar4 != '\\0') &&\n       (uVar4 = FUN_0041047a((uint)*(ushort *)(*_Str + 6)), (char)uVar4 != '\\0')) {\n      sVar5 = _wcslen((wchar_t *)_Str);\n      pwVar3 = (wchar_t *)(_Str[-1] + sVar5 * 2 + 0xe);\n      *pwVar3 = *pwVar3 + L'\\x01';\n      wVar1 = *pwVar3;\n      while( true ) {\n        if (wVar1 != L':') {\n          return;\n        }\n        if ((pwVar3 <= param_1) || (pwVar3[-1] == L'.')) break;\n        *pwVar3 = L'0';\n        wVar1 = pwVar3[-1] + L'\\x01';\n        pwVar3 = pwVar3 + -1;\n        *pwVar3 = wVar1;\n      }\n      *pwVar3 = L'a';\n      return;\n    }\n    FUN_00410602((short *)(*_Str + 4),0x433924,(param_2 - ((int)_Str - (int)param_1 >> 1)) + -2);\n    return;\n  }\nLAB_0040c0f8:\n  *param_1 = L'\\0';\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040c249",
      "entry": "0040c249",
      "c": "\nundefined4 FUN_0040c249(undefined1 (*param_1) [16],char param_2)\n\n{\n  undefined1 (*pauVar1) [16];\n  undefined4 uVar2;\n  ulonglong uVar3;\n  \n  uVar2 = 0;\n  pauVar1 = FUN_0042279b(param_1,0x3b);\n  if (pauVar1 != (undefined1 (*) [16])0x0) {\n    uVar3 = thunk_FUN_00411f24((ushort *)(*pauVar1 + 2));\n    uVar2 = (undefined4)uVar3;\n    if (param_2 != '\\0') {\n      *(undefined2 *)*pauVar1 = 0;\n    }\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040c27e",
      "entry": "0040c27e",
      "c": "\nwchar_t * FUN_0040c27e(wchar_t *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = _wcslen(param_1);\n  if (sVar1 != 0) {\n    param_1 = param_1 + (sVar1 - 1);\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040c29a",
      "entry": "0040c29a",
      "c": "\nwchar_t * FUN_0040c29a(wchar_t *param_1)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t *pwVar3;\n  int iVar4;\n  \n  sVar2 = _wcslen(param_1);\n  iVar4 = sVar2 - 1;\n  if (-1 < iVar4) {\n    pwVar3 = param_1 + iVar4;\n    do {\n      cVar1 = FUN_0040bd9d((uint)(ushort)*pwVar3);\n      if (cVar1 != '\\0') {\n        return pwVar3 + 1;\n      }\n      pwVar3 = pwVar3 + -1;\n      iVar4 = iVar4 + -1;\n    } while (-1 < iVar4);\n  }\n  if ((*param_1 != L'\\0') && (param_1[1] == L':')) {\n    param_1 = param_1 + 2;\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040c2e4",
      "entry": "0040c2e4",
      "c": "\nvoid FUN_0040c2e4(wchar_t *param_1)\n\n{\n  wchar_t *pwVar1;\n  \n  pwVar1 = FUN_0040c29a(param_1);\n  if ((param_1 + 2 <= pwVar1) && ((param_1[1] != L':' || (param_1 + 4 <= pwVar1)))) {\n    pwVar1 = pwVar1 + -1;\n  }\n  *pwVar1 = L'\\0';\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040c310",
      "entry": "0040c310",
      "c": "\nvoid FUN_0040c310(wchar_t *param_1,int param_2,int param_3)\n\n{\n  wchar_t *pwVar1;\n  \n  pwVar1 = FUN_0040c29a(param_1);\n  FUN_00410602(pwVar1,param_2,param_3 - ((int)pwVar1 - (int)param_1 >> 1));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040c335",
      "entry": "0040c335",
      "c": "\nvoid FUN_0040c335(int param_1,char *param_2,int param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  char *pcVar3;\n  \n  uVar2 = 0;\n  if (param_3 != 1) {\n    pcVar3 = param_2;\n    do {\n      cVar1 = pcVar3[param_1 - (int)param_2];\n      if (cVar1 == '\\0') break;\n      if (cVar1 == '/') {\n        cVar1 = '\\\\';\n      }\n      uVar2 = uVar2 + 1;\n      *pcVar3 = cVar1;\n      pcVar3 = pcVar3 + 1;\n    } while (uVar2 < param_3 - 1U);\n  }\n  param_2[uVar2] = '\\0';\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040c36e",
      "entry": "0040c36e",
      "c": "\nvoid FUN_0040c36e(int param_1,short *param_2,int param_3)\n\n{\n  short *psVar1;\n  uint uVar2;\n  short sVar3;\n  \n  uVar2 = 0;\n  if (param_3 != 1) {\n    psVar1 = param_2;\n    do {\n      sVar3 = *(short *)((param_1 - (int)param_2) + (int)psVar1);\n      if (sVar3 == 0) break;\n      if (sVar3 == 0x2f) {\n        sVar3 = 0x5c;\n      }\n      *psVar1 = sVar3;\n      uVar2 = uVar2 + 1;\n      psVar1 = psVar1 + 1;\n    } while (uVar2 < param_3 - 1U);\n  }\n  param_2[uVar2] = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040c3b0",
      "entry": "0040c3b0",
      "c": "\nundefined4 * __fastcall FUN_0040c3b0(undefined4 *param_1)\n\n{\n  *param_1 = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040c3b6",
      "entry": "0040c3b6",
      "c": "\nvoid __fastcall FUN_0040c3b6(undefined4 *param_1)\n\n{\n  FID_conflict__free((void *)*param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040c3bf",
      "entry": "0040c3bf",
      "c": "\nulonglong __thiscall FUN_0040c3bf(void *this,int *param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 extraout_EDX;\n  ulonglong uVar4;\n  \n  uVar4 = FUN_00420320((uint *)((int)this + 4),(uint *)(param_1 + 1),0x1c);\n  param_1[8] = 0;\n  if (*param_1 != 0) {\n    uVar1 = FUN_0040c426(this,*param_1);\n    uVar3 = param_1[5] & 0x3ffff;\n    param_1[9] = uVar3;\n    if ((((*param_1 == 6) || (*param_1 == 4)) || (*param_1 == 5)) &&\n       ((uVar3 * 2 < 0x40001 && ((char)uVar1 != '\\0')))) {\n                    /* WARNING: Load size is inaccurate */\n      iVar2 = *this + uVar3;\n    }\n    else {\n                    /* WARNING: Load size is inaccurate */\n      iVar2 = *this;\n    }\n    uVar4 = CONCAT44(CONCAT31((int3)((uint)extraout_EDX >> 8),(char)uVar1),iVar2);\n    param_1[8] = iVar2;\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "FUN_0040c426",
      "entry": "0040c426",
      "c": "\nundefined4 __thiscall FUN_0040c426(void *this,int param_1)\n\n{\n  char *pcVar1;\n  char cVar2;\n  byte *pbVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  byte bVar8;\n  int iVar9;\n  uint uVar10;\n  byte *pbVar11;\n  int *piVar12;\n  int *piVar13;\n  byte *pbVar14;\n  byte bVar15;\n  int iVar16;\n  int iVar17;\n  uint uVar18;\n  byte *pbVar19;\n  char *local_4c;\n  int local_48;\n  int local_44;\n  int local_40;\n  int local_3c;\n  uint local_34;\n  byte *local_30;\n  byte *local_24;\n  uint local_1c [7];\n  \n  if ((param_1 == 1) || (param_1 == 2)) {\n    pbVar11 = *(byte **)((int)this + 0x14);\n                    /* WARNING: Load size is inaccurate */\n    if ((byte *)0x3fffc < pbVar11 + -4) {\nLAB_0040c979:\n      return (uint)pbVar11 & 0xffffff00;\n    }\n    cVar2 = (param_1 == 2) + -0x18;\n    pbVar3 = (byte *)CONCAT31((int3)((uint)pbVar11 >> 8),cVar2);\n    piVar12 = *this;\n    iVar16 = *(int *)((int)this + 0x1c);\n    pbVar19 = (byte *)0x0;\n    if (pbVar11 != (byte *)0x4) {\n      do {\n        piVar13 = (int *)((int)piVar12 + 1);\n        pbVar14 = pbVar19 + 1;\n        iVar17 = iVar16 + 1;\n        if (((char)*piVar12 == -0x18) || ((char)*piVar12 == (char)pbVar3)) {\n          iVar6 = *piVar13;\n          if (iVar6 < 0) {\n            iVar7 = iVar17 + iVar6;\n            if (-1 < iVar7) {\n              iVar7 = iVar6 + 0x1000000;\n              *piVar13 = iVar7;\n            }\n          }\n          else {\n            iVar7 = iVar6 + -0x1000000;\n            if (iVar7 < 0) {\n              *piVar13 = iVar6 - iVar17;\n            }\n          }\n          pbVar3 = (byte *)CONCAT31((int3)((uint)iVar7 >> 8),cVar2);\n          piVar13 = (int *)((int)piVar12 + 5);\n          pbVar14 = pbVar19 + 5;\n          iVar17 = iVar16 + 5;\n        }\n        piVar12 = piVar13;\n        iVar16 = iVar17;\n        pbVar19 = pbVar14;\n      } while (pbVar14 < pbVar11 + -4);\n    }\n  }\n  else if (param_1 == 3) {\n    pbVar3 = *(byte **)((int)this + 0x14);\n                    /* WARNING: Load size is inaccurate */\n    pbVar19 = *this;\n    pbVar11 = pbVar3;\n    if ((byte *)0x3ffeb < pbVar3 + -0x15) goto LAB_0040c979;\n    uVar18 = *(uint *)((int)this + 0x1c) >> 4;\n    if (pbVar3 != (byte *)0x15) {\n      iVar16 = ((uint)(pbVar3 + -0x16) >> 4) + 1;\n      do {\n        pbVar3 = (byte *)(*pbVar19 & 0x1f);\n        if (((byte *)0xf < pbVar3) &&\n           (bVar15 = pbVar3[0x43e078], pbVar3 = (byte *)(uint)bVar15, bVar15 != 0)) {\n          bVar8 = 0;\n          uVar4 = 0x12;\n          do {\n            pbVar3 = (byte *)(1 << (bVar8 & 0x1f));\n            if ((((uint)bVar15 & (uint)pbVar3) != 0) &&\n               (pbVar3 = (byte *)FUN_0040c985((int)pbVar19,uVar4 + 0x18,'\\x04'),\n               pbVar3 == &DAT_00000005)) {\n              uVar10 = FUN_0040c985((int)pbVar19,uVar4,'\\x14');\n              pbVar3 = (byte *)FUN_0040c9d0((int)pbVar19,uVar10 - uVar18 & 0xfffff,uVar4,'\\x14');\n            }\n            bVar8 = bVar8 + 1;\n            uVar4 = uVar4 + 0x29;\n          } while (uVar4 < 0x65);\n        }\n        pbVar19 = pbVar19 + 0x10;\n        uVar18 = uVar18 + 1;\n        iVar16 = iVar16 + -1;\n      } while (iVar16 != 0);\n    }\n  }\n  else if (param_1 == 4) {\n    pbVar19 = *(byte **)((int)this + 4);\n    pbVar3 = *(byte **)((int)this + 0x14);\n    pbVar11 = pbVar3 + -3;\n    if ((((byte *)0x1fffd < pbVar11) || (pbVar3 < pbVar19 + -3)) ||\n       (pbVar11 = *(byte **)((int)this + 8), (byte *)0x2 < pbVar11)) goto LAB_0040c979;\n                    /* WARNING: Load size is inaccurate */\n    local_4c = *this;\n    pcVar1 = local_4c + (int)pbVar3;\n    local_30 = (byte *)0x0;\n    do {\n      uVar18 = 0;\n      if (local_30 < pbVar3) {\n        pbVar14 = local_30 + ((int)pcVar1 - (int)(pbVar19 + -3));\n        do {\n          if (pbVar19 <= pbVar14 + (int)(pbVar19 + (-3 - (int)pcVar1))) {\n            uVar4 = (uint)*pbVar14;\n            uVar10 = (uint)pbVar14[-3];\n            iVar16 = (uVar4 - uVar10) + uVar18;\n            iVar17 = FUN_0042614a(uVar4 - uVar10);\n            iVar6 = FUN_0042614a(iVar16 - uVar4);\n            iVar16 = FUN_0042614a(iVar16 - uVar10);\n            if (((iVar6 < iVar17) || (iVar16 < iVar17)) && (uVar18 = uVar4, iVar16 < iVar6)) {\n              uVar18 = uVar10;\n            }\n          }\n          bVar15 = (char)uVar18 - *local_4c;\n          local_4c = local_4c + 1;\n          (pbVar19 + -3)[(int)pbVar14] = bVar15;\n          pbVar14 = pbVar14 + 3;\n          uVar18 = (uint)bVar15;\n        } while (pbVar14 + (int)(pbVar19 + (-3 - (int)pcVar1)) < pbVar3);\n      }\n      local_30 = local_30 + 1;\n    } while (local_30 < (byte *)0x3);\n    pbVar3 = pbVar3 + -2;\n    if (pbVar11 < pbVar3) {\n      pbVar19 = pbVar11 + 2 + (int)pcVar1;\n      pbVar3 = (byte *)((uint)(pbVar3 + (-1 - (int)pbVar11)) / 3);\n      pbVar11 = pbVar3 + 1;\n      do {\n        bVar15 = pbVar19[-1];\n        pbVar3 = (byte *)CONCAT31((int3)((uint)pbVar3 >> 8),bVar15);\n        pbVar19[-2] = pbVar19[-2] + bVar15;\n        *pbVar19 = *pbVar19 + bVar15;\n        pbVar19 = pbVar19 + 3;\n        pbVar11 = pbVar11 + -1;\n      } while (pbVar11 != (byte *)0x0);\n    }\n  }\n  else if (param_1 == 5) {\n    pbVar19 = *(byte **)((int)this + 0x14);\n                    /* WARNING: Load size is inaccurate */\n    local_30 = *this;\n    pbVar3 = *(byte **)((int)this + 4);\n    pbVar14 = local_30 + (int)pbVar19;\n    pbVar11 = pbVar3;\n    if ((((byte *)0x20000 < pbVar19) || ((byte *)0x80 < pbVar3)) || (pbVar3 == (byte *)0x0))\n    goto LAB_0040c979;\n    local_24 = (byte *)0x0;\n    if (pbVar3 != (byte *)0x0) {\n      do {\n        local_3c = 0;\n        local_40 = 0;\n        local_44 = 0;\n        iVar16 = 0;\n        local_48 = 0;\n        iVar17 = 0;\n        local_4c = (char *)0x0;\n        _memset(local_1c,0,0x1c);\n        local_34 = 0;\n        iVar6 = local_3c;\n        for (pbVar11 = local_24; iVar7 = local_40, pbVar11 < pbVar19;\n            pbVar11 = pbVar11 + (int)pbVar3) {\n          iVar5 = iVar7 - local_44;\n          bVar15 = *local_30;\n          local_30 = local_30 + 1;\n          iVar9 = ((uint)(local_48 * (int)local_4c + iVar17 * iVar5 + iVar16 * iVar7 + iVar6 * 8) >>\n                   3 & 0xff) - (uint)bVar15;\n          bVar8 = (byte)iVar9;\n          pbVar11[(int)pbVar14] = bVar8;\n          local_3c._0_1_ = (char)iVar6;\n          uVar18 = (char)bVar15 * 8;\n          iVar6 = FUN_0042614a(uVar18);\n          local_1c[0] = local_1c[0] + iVar6;\n          iVar6 = FUN_0042614a(uVar18 - iVar7);\n          local_1c[1] = local_1c[1] + iVar6;\n          iVar6 = FUN_0042614a(iVar7 + uVar18);\n          local_1c[2] = local_1c[2] + iVar6;\n          iVar6 = FUN_0042614a(uVar18 - iVar5);\n          local_1c[3] = local_1c[3] + iVar6;\n          iVar6 = FUN_0042614a(iVar5 + uVar18);\n          local_1c[4] = local_1c[4] + iVar6;\n          iVar6 = FUN_0042614a(uVar18 - local_48);\n          local_1c[5] = local_1c[5] + iVar6;\n          iVar6 = FUN_0042614a(uVar18 + local_48);\n          uVar18 = local_1c[0];\n          local_1c[6] = local_1c[6] + iVar6;\n          if ((local_34 & 0x1f) == 0) {\n            uVar4 = 0;\n            local_1c[0] = 0;\n            uVar10 = 1;\n            do {\n              if (local_1c[uVar10] < uVar18) {\n                uVar18 = local_1c[uVar10];\n                uVar4 = uVar10;\n              }\n              local_1c[uVar10] = 0;\n              uVar10 = uVar10 + 1;\n            } while (uVar10 < 7);\n            if (uVar4 == 1) {\n              if (-0x11 < iVar16) {\n                iVar16 = iVar16 + -1;\n              }\n            }\n            else if (uVar4 == 2) {\n              if (iVar16 < 0x10) {\n                iVar16 = iVar16 + 1;\n              }\n            }\n            else if (uVar4 == 3) {\n              if (-0x11 < iVar17) {\n                iVar17 = iVar17 + -1;\n              }\n            }\n            else if (uVar4 == 4) {\n              if (iVar17 < 0x10) {\n                iVar17 = iVar17 + 1;\n              }\n            }\n            else if (uVar4 == 5) {\n              if (-0x11 < (int)local_4c) {\n                local_4c = (char *)((int)local_4c + -1);\n              }\n            }\n            else if ((uVar4 == 6) && ((int)local_4c < 0x10)) {\n              local_4c = (char *)((int)local_4c + 1);\n            }\n          }\n          local_34 = local_34 + 1;\n          iVar6 = iVar9;\n          local_40 = (int)(char)(bVar8 - (char)local_3c);\n          local_44 = iVar7;\n          local_48 = iVar5;\n        }\n        local_24 = local_24 + 1;\n      } while (local_24 < pbVar3);\n    }\n  }\n  else {\n    pbVar3 = (byte *)(param_1 + -6);\n    if (pbVar3 == (byte *)0x0) {\n      pbVar3 = *(byte **)((int)this + 0x14);\n      iVar16 = 0;\n      uVar18 = *(uint *)((int)this + 4);\n      pbVar11 = (byte *)((int)pbVar3 * 2);\n      if ((((byte *)0x20000 < pbVar3) || (0x400 < uVar18)) || (uVar4 = uVar18, uVar18 == 0))\n      goto LAB_0040c979;\n      do {\n        bVar15 = 0;\n        for (pbVar19 = pbVar3; pbVar19 < pbVar11; pbVar19 = pbVar19 + uVar18) {\n                    /* WARNING: Load size is inaccurate */\n          bVar15 = bVar15 - *(char *)(*this + iVar16);\n          iVar16 = iVar16 + 1;\n          pbVar19[*this] = bVar15;\n        }\n        pbVar3 = pbVar3 + 1;\n        uVar4 = uVar4 - 1;\n      } while (uVar4 != 0);\n      pbVar3 = (byte *)0x0;\n    }\n  }\n  return CONCAT31((int3)((uint)pbVar3 >> 8),1);\n}\n\n"
    },
    {
      "name": "FUN_0040c985",
      "entry": "0040c985",
      "c": "\nuint FUN_0040c985(int param_1,uint param_2,char param_3)\n\n{\n  uint uVar1;\n  \n  uVar1 = param_2 >> 3;\n  return CONCAT22(CONCAT11(*(undefined1 *)(uVar1 + 3 + param_1),*(undefined1 *)(uVar1 + 2 + param_1)\n                          ),\n                  CONCAT11(*(undefined1 *)(uVar1 + 1 + param_1),*(undefined1 *)(uVar1 + param_1)))\n         >> ((byte)param_2 & 7) & 0xffffffffU >> (0x20U - param_3 & 0x1f);\n}\n\n"
    },
    {
      "name": "FUN_0040c9d0",
      "entry": "0040c9d0",
      "c": "\nvoid FUN_0040c9d0(int param_1,int param_2,uint param_3,char param_4)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  byte bVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  \n  bVar1 = (byte)param_3 & 7;\n  uVar4 = param_2 << bVar1;\n  uVar5 = ~((0xffffffffU >> (0x20U - param_4 & 0x1f)) << bVar1);\n  pbVar2 = (byte *)(param_1 + (param_3 >> 3));\n  iVar6 = 4;\n  do {\n    bVar1 = (byte)uVar5;\n    uVar5 = uVar5 >> 8 | 0xff000000;\n    bVar3 = (byte)uVar4;\n    uVar4 = uVar4 >> 8;\n    *pbVar2 = bVar1 & *pbVar2 | bVar3;\n    pbVar2 = pbVar2 + 1;\n    iVar6 = iVar6 + -1;\n  } while (iVar6 != 0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ca1f",
      "entry": "0040ca1f",
      "c": "\nvoid __fastcall FUN_0040ca1f(int *param_1)\n\n{\n  int iVar1;\n  \n  if (*param_1 == 0) {\n    iVar1 = FUN_0041ee53(0x40004);\n    *param_1 = iVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ca36",
      "entry": "0040ca36",
      "c": "\nvoid FUN_0040ca36(byte *param_1,uint param_2,undefined4 *param_3)\n\n{\n  uint uVar1;\n  byte bVar2;\n  uint uVar3;\n  int iVar4;\n  \n  iVar4 = 0;\n  uVar1 = 1;\n  bVar2 = 0;\n  if (1 < param_2) {\n    do {\n      bVar2 = bVar2 ^ param_1[uVar1];\n      uVar1 = uVar1 + 1;\n    } while (uVar1 < param_2);\n  }\n  if (bVar2 == *param_1) {\n    uVar1 = FUN_00405dce(0xffffffff,param_1,param_2);\n    uVar3 = 0;\n    do {\n      if ((*(uint *)((int)&DAT_0043e044 + uVar3) == ~uVar1) &&\n         (*(uint *)((int)&DAT_0043e040 + uVar3) == param_2)) {\n        *param_3 = *(undefined4 *)(iVar4 * 0xc + 0x43e048);\n        return;\n      }\n      uVar3 = uVar3 + 0xc;\n      iVar4 = iVar4 + 1;\n    } while (uVar3 < 0x48);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ca93",
      "entry": "0040ca93",
      "c": "\nuint FUN_0040ca93(int *param_1)\n\n{\n  uint3 uVar1;\n  uint3 uVar2;\n  undefined1 extraout_var;\n  undefined1 extraout_var_00;\n  undefined1 extraout_var_01;\n  uint uVar3;\n  \n  uVar1 = thunk_FUN_0040a89d(param_1);\n  if ((uVar1 & 0xc000) == 0) {\n    FUN_0040a881(param_1,6);\n    uVar3 = (uVar1 & 0x3c00) >> 10;\n  }\n  else if ((uVar1 & 0xc000) == 0x4000) {\n    if ((uVar1 & 0x3c00) == 0) {\n      uVar3 = CONCAT13(extraout_var,uVar1) >> 2 | 0xffffff00;\n    }\n    else {\n      uVar3 = (uVar1 & 0x3fc0) >> 6;\n    }\n    FUN_0040a881(param_1,(uint)((uVar1 & 0x3c00) == 0) * 4 + 10);\n  }\n  else {\n    if ((uVar1 & 0xc000) == 0x8000) {\n      FUN_0040a881(param_1,2);\n      uVar1 = thunk_FUN_0040a89d(param_1);\n      uVar3 = CONCAT13(extraout_var_01,uVar1);\n    }\n    else {\n      FUN_0040a881(param_1,2);\n      uVar1 = thunk_FUN_0040a89d(param_1);\n      FUN_0040a881(param_1,0x10);\n      uVar2 = thunk_FUN_0040a89d(param_1);\n      uVar3 = (uint)uVar1 << 0x10 | CONCAT13(extraout_var_00,uVar2);\n    }\n    FUN_0040a881(param_1,0x10);\n  }\n  return uVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040cb49",
      "entry": "0040cb49",
      "c": "\nvoid __thiscall FUN_0040cb49(void *this,uint param_1,uint *param_2,uint param_3)\n\n{\n                    /* WARNING: Load size is inaccurate */\n  if ((param_1 < 0x40000) && (param_2 != (uint *)(*this + param_1))) {\n    if (0x40000 - param_1 <= param_3) {\n      param_3 = 0x40000 - param_1;\n    }\n    if (param_3 != 0) {\n      FUN_00420320((uint *)(*this + param_1),param_2,param_3);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040cb83",
      "entry": "0040cb83",
      "c": "\nundefined4 * __thiscall FUN_0040cb83(void *this,undefined4 param_1)\n\n{\n  *(undefined4 *)this = 0;\n  *(undefined4 *)((int)this + 8) = 0;\n  *(undefined4 *)((int)this + 0xc) = 0;\n  *(undefined1 *)((int)this + 0x10) = 0;\n  *(undefined4 *)((int)this + 0x14) = param_1;\n  *(undefined4 *)((int)this + 4) = 0;\n  *(undefined4 *)((int)this + 0x1c) = 0;\n  *(undefined4 *)((int)this + 0x18) = 0;\n  *(undefined4 *)((int)this + 0x20) = 0;\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_0040cbaf",
      "entry": "0040cbaf",
      "c": "\nuint __fastcall FUN_0040cbaf(int *param_1)\n\n{\n  uint uVar1;\n  uint in_EAX;\n  \n  uVar1 = param_1[7];\n  if (uVar1 < (uint)param_1[6]) {\n    param_1[7] = uVar1 + 1;\n    return CONCAT31((int3)((uint)*param_1 >> 8),*(undefined1 *)(uVar1 + *param_1));\n  }\n  return in_EAX & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0040cbc6",
      "entry": "0040cbc6",
      "c": "\nshort __fastcall FUN_0040cbc6(int *param_1)\n\n{\n  int iVar1;\n  short sVar2;\n  \n  iVar1 = param_1[7];\n  if (iVar1 + 1U < (uint)param_1[6]) {\n    sVar2 = (ushort)*(byte *)(iVar1 + 1 + *param_1) * 0x100 + (ushort)*(byte *)(iVar1 + *param_1);\n    param_1[7] = iVar1 + 2;\n  }\n  else {\n    sVar2 = 0;\n  }\n  return sVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040cbfb",
      "entry": "0040cbfb",
      "c": "\nundefined4 __fastcall FUN_0040cbfb(int *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  \n  iVar1 = param_1[7];\n  if (iVar1 + 3U < (uint)param_1[6]) {\n    iVar2 = *param_1;\n    uVar3 = CONCAT31(CONCAT21(CONCAT11(*(undefined1 *)(iVar1 + 3 + iVar2),\n                                       *(undefined1 *)(iVar1 + 2 + iVar2)),\n                              *(undefined1 *)(iVar1 + 1 + iVar2)),*(undefined1 *)(iVar1 + iVar2));\n    param_1[7] = iVar1 + 4;\n  }\n  else {\n    uVar3 = 0;\n  }\n  return uVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040cc3d",
      "entry": "0040cc3d",
      "c": "\nundefined8 __fastcall FUN_0040cc3d(int *param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  \n  uVar1 = FUN_0040cbfb(param_1);\n  uVar2 = FUN_0040cbfb(param_1);\n  return CONCAT44(uVar2,uVar1);\n}\n\n"
    },
    {
      "name": "FUN_0040cc5d",
      "entry": "0040cc5d",
      "c": "\nuint __thiscall FUN_0040cc5d(void *this,uint *param_1,uint param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(int *)((int)this + 0x18) - *(int *)((int)this + 0x1c);\n  if (param_2 <= uVar1) {\n    uVar1 = param_2;\n  }\n  if (uVar1 != 0) {\n                    /* WARNING: Load size is inaccurate */\n    FUN_00420320(param_1,(uint *)(*this + *(int *)((int)this + 0x1c)),uVar1);\n  }\n  if (uVar1 < param_2) {\n    _memset((void *)(uVar1 + (int)param_1),0,param_2 - uVar1);\n  }\n  *(int *)((int)this + 0x1c) = *(int *)((int)this + 0x1c) + uVar1;\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040ccac",
      "entry": "0040ccac",
      "c": "\nuint __thiscall FUN_0040ccac(void *this,char param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)((int)this + 0x18);\n  if (uVar1 < 3) {\n    uVar1 = 0;\n  }\n  else {\n    if (param_1 != '\\0') {\n      uVar1 = *(uint *)((int)this + 0x1c);\n    }\n                    /* WARNING: Load size is inaccurate */\n    uVar1 = FUN_00405dce(0xffffffff,(byte *)(*this + 2),uVar1 - 2);\n    uVar1 = ~uVar1 & 0xffff;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040ccdb",
      "entry": "0040ccdb",
      "c": "\nuint __fastcall FUN_0040ccdb(int *param_1)\n\n{\n  uint uVar1;\n  \n  if ((uint)param_1[6] < 5) {\n    return 0xffffffff;\n  }\n  uVar1 = FUN_00405dce(0xffffffff,(byte *)(*param_1 + 4),param_1[6] - 4);\n  return ~uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040ccfb",
      "entry": "0040ccfb",
      "c": "\nlonglong __fastcall FUN_0040ccfb(int *param_1)\n\n{\n  uint uVar1;\n  char cVar2;\n  longlong lVar3;\n  uint uVar4;\n  uint uVar5;\n  longlong lVar6;\n  \n  uVar5 = 0;\n  lVar3 = 0;\n  uVar4 = param_1[7];\n  if ((uint)param_1[7] < (uint)param_1[6]) {\n    do {\n      if (0x3f < uVar5) {\n        return 0;\n      }\n      uVar1 = uVar4 + 1;\n      param_1[7] = uVar1;\n      cVar2 = *(char *)(uVar4 + *param_1);\n      lVar6 = __allshl((byte)uVar5,0);\n      lVar3 = lVar6 + lVar3;\n      if (-1 < cVar2) {\n        return lVar3;\n      }\n      uVar5 = uVar5 + 7;\n      uVar4 = uVar1;\n    } while (uVar1 < (uint)param_1[6]);\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0040cd66",
      "entry": "0040cd66",
      "c": "\nint __thiscall FUN_0040cd66(void *this,uint param_1)\n\n{\n  uint uVar1;\n  \n  if (param_1 < *(uint *)((int)this + 0x18)) {\n                    /* WARNING: Load size is inaccurate */\n    uVar1 = param_1;\n    do {\n      if (-1 < *(char *)(*this + uVar1)) {\n        return (uVar1 - param_1) + 1;\n      }\n      uVar1 = uVar1 + 1;\n    } while (uVar1 < *(uint *)((int)this + 0x18));\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0040cd8a",
      "entry": "0040cd8a",
      "c": "\nuint __thiscall FUN_0040cd8a(void *this,uint param_1)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  int iVar3;\n  uint uVar4;\n  int unaff_EBP;\n  uint uVar5;\n  \n  uVar5 = 0;\n  if (*(int *)((int)this + 0x20) == 0) {\n    if (param_1 != 0) {\n      FUN_00401732(this,param_1);\n                    /* WARNING: Load size is inaccurate */\n      pcVar2 = *(code **)(**(int **)((int)this + 0x14) + 0xc);\n      (*(code *)PTR_guard_check_icall_00433278)(*(int *)((int)this + 0x18) + *this,param_1);\n      uVar5 = (*pcVar2)();\n      *(int *)((int)this + 0x18) = *(int *)((int)this + 0x18) + uVar5;\n    }\n  }\n  else {\n    uVar1 = *(uint *)((int)this + 4);\n    uVar5 = uVar1 - *(int *)((int)this + 0x18);\n    if (uVar5 < param_1) {\n      iVar3 = param_1 - uVar5;\n      uVar4 = (-iVar3 & 0xfU) + iVar3;\n      FUN_00401732(this,uVar4);\n                    /* WARNING: Load size is inaccurate */\n      pcVar2 = *(code **)(**(int **)((int)this + 0x14) + 0xc);\n      (*(code *)PTR_guard_check_icall_00433278)(*this + uVar1,uVar4);\n      uVar5 = (*pcVar2)();\n                    /* WARNING: Load size is inaccurate */\n      FUN_00406010(*(void **)((int)this + 0x20),(undefined1 (*) [16])(*this + unaff_EBP),uVar4);\n      *(int *)((int)this + 0x18) = *(int *)((int)this + 0x18) + (-(uint)(uVar5 != 0) & uVar1);\n    }\n    else {\n      *(uint *)((int)this + 0x18) = param_1 + *(int *)((int)this + 0x18);\n      uVar5 = param_1;\n    }\n  }\n  return uVar5;\n}\n\n"
    },
    {
      "name": "FUN_0040ce40",
      "entry": "0040ce40",
      "c": "\nundefined1 * FUN_0040ce40(void)\n\n{\n  int iVar1;\n  void *pvVar2;\n  undefined1 *extraout_ECX;\n  int unaff_EBP;\n  void *pvVar3;\n  \n  FUN_0041eb78();\n  *(undefined1 **)(unaff_EBP + -0x10) = extraout_ECX;\n  FUN_0040a8ce((undefined4 *)(extraout_ECX + 0x98));\n  pvVar3 = (void *)0x0;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  FUN_0040a8ce((undefined4 *)(extraout_ECX + 0xac));\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  FUN_0040a8ce((undefined4 *)(extraout_ECX + 0xc0));\n  *(undefined1 *)(unaff_EBP + -4) = 2;\n  iVar1 = FUN_0041eb38(0x10c0);\n  *(int *)(unaff_EBP + -0x14) = iVar1;\n  *(undefined1 *)(unaff_EBP + -4) = 3;\n  if (iVar1 == 0) {\n    pvVar2 = (void *)0x0;\n  }\n  else {\n    pvVar2 = FUN_00405e37();\n  }\n  *(undefined1 *)(unaff_EBP + -4) = 2;\n  *(void **)(extraout_ECX + 0x48) = pvVar2;\n  iVar1 = FUN_0041eb38(0x10c0);\n  *(int *)(unaff_EBP + -0x14) = iVar1;\n  *(undefined1 *)(unaff_EBP + -4) = 4;\n  if (iVar1 != 0) {\n    pvVar3 = FUN_00405e37();\n  }\n  *(void **)(extraout_ECX + 0x4c) = pvVar3;\n  FUN_0040cfd4(extraout_ECX);\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return extraout_ECX;\n}\n\n"
    },
    {
      "name": "FUN_0040cee1",
      "entry": "0040cee1",
      "c": "\nvoid __fastcall FUN_0040cee1(int param_1)\n\n{\n  undefined1 *puVar1;\n  \n  puVar1 = *(undefined1 **)(param_1 + 0x48);\n  if (puVar1 != (undefined1 *)0x0) {\n    FUN_00405f02(puVar1);\n    FUN_0041eb68(puVar1);\n  }\n  puVar1 = *(undefined1 **)(param_1 + 0x4c);\n  if (puVar1 != (undefined1 *)0x0) {\n    FUN_00405f02(puVar1);\n    FUN_0041eb68(puVar1);\n  }\n  FUN_0040a99e(param_1 + 0xc0);\n  FUN_0040a99e(param_1 + 0xac);\n  FUN_0040a99e(param_1 + 0x98);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040cf3d",
      "entry": "0040cf3d",
      "c": "\nvoid __thiscall FUN_0040cf3d(void *this,int *param_1)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  longlong lVar7;\n  \n  if (param_1[4] == 1) {\n    lVar7 = 0;\n  }\n  else {\n    lVar7 = FUN_0040981a(param_1);\n  }\n  iVar5 = (int)((ulonglong)lVar7 >> 0x20);\n  uVar6 = (uint)lVar7;\n  iVar3 = param_1[0x890];\n  if (iVar3 == 0 && param_1[0x891] == 0) {\n    iVar3 = param_1[0x894];\n    if (iVar3 == 0 && param_1[0x895] == 0) {\n      if ((lVar7 < 0) || ((iVar5 == 0 || lVar7 < 0 && (uVar6 < 0x18)))) goto LAB_0040cfb1;\n      iVar3 = uVar6 - 0x17;\n      *(uint *)((int)this + 0x8c) = iVar5 - (uint)(uVar6 < 0x17);\n    }\n    else {\n      *(int *)((int)this + 0x8c) = param_1[0x895];\n    }\n  }\n  else {\n    *(int *)((int)this + 0x8c) = param_1[0x891];\n  }\n  *(int *)((int)this + 0x88) = iVar3;\nLAB_0040cfb1:\n  uVar4 = *(uint *)((int)this + 0x88) - uVar6;\n  puVar1 = (uint *)((int)this + 0x90);\n  uVar2 = *puVar1;\n  *puVar1 = *puVar1 + uVar4;\n  *(int *)((int)this + 0x94) =\n       *(int *)((int)this + 0x94) +\n       ((*(int *)((int)this + 0x8c) - iVar5) - (uint)(*(uint *)((int)this + 0x88) < uVar6)) +\n       (uint)CARRY4(uVar2,uVar4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040cfd4",
      "entry": "0040cfd4",
      "c": "\nvoid __fastcall FUN_0040cfd4(undefined1 *param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x50) = 0xffffffff;\n  *param_1 = 0;\n  param_1[0xc] = 0;\n  *(undefined4 *)(param_1 + 0x20) = 0;\n  *(undefined4 *)(param_1 + 0x24) = 0;\n  *(undefined4 *)(param_1 + 0x28) = 0;\n  *(undefined4 *)(param_1 + 0x2c) = 0;\n  *(undefined4 *)(param_1 + 0x30) = 1;\n  *(undefined4 *)(param_1 + 0x54) = 0;\n  param_1[0x58] = 0;\n  *(undefined4 *)(param_1 + 0x34) = 0;\n  *(undefined4 *)(param_1 + 0x38) = 0;\n  *(undefined4 *)(param_1 + 0x1c) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0;\n  *(undefined4 *)(param_1 + 0x3c) = 0;\n  *(undefined2 *)(param_1 + 0xd4) = 0;\n  *(undefined4 *)(param_1 + 0x78) = 0;\n  *(undefined4 *)(param_1 + 0x7c) = 0;\n  *(undefined4 *)(param_1 + 0x70) = 0;\n  *(undefined4 *)(param_1 + 0x74) = 0;\n  *(undefined4 *)(param_1 + 0x68) = 0;\n  *(undefined4 *)(param_1 + 0x6c) = 0;\n  *(undefined4 *)(param_1 + 0x60) = 0;\n  *(undefined4 *)(param_1 + 100) = 0;\n  *(undefined4 *)(param_1 + 0x40) = 0;\n  *(undefined4 *)(param_1 + 0x44) = 0;\n  *(undefined4 *)(param_1 + 0x80) = 0;\n  *(undefined4 *)(param_1 + 0x84) = 0;\n  *(undefined4 *)(param_1 + 0x88) = 0;\n  *(undefined4 *)(param_1 + 0x8c) = 0;\n  *(undefined4 *)(param_1 + 0x90) = 0;\n  *(undefined4 *)(param_1 + 0x94) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d051",
      "entry": "0040d051",
      "c": "\nvoid __thiscall\nFUN_0040d051(void *this,char param_1,int param_2,undefined4 *param_3,uint *param_4,int param_5,\n            uint param_6,uint *param_7,void *param_8)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == '\\0') {\n    uVar1 = FUN_0040603a(*(void **)((int)this + 0x4c),'\\0',param_2,param_3,param_4,param_5,param_6,\n                         param_7,param_8);\n    *(char *)((int)this + 0xd5) = (char)uVar1;\n  }\n  else {\n    uVar1 = FUN_0040603a(*(void **)((int)this + 0x48),'\\x01',param_2,param_3,param_4,param_5,param_6\n                         ,param_7,param_8);\n    *(char *)((int)this + 0xd4) = (char)uVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d099",
      "entry": "0040d099",
      "c": "\nvoid __thiscall FUN_0040d099(void *this,int param_1,int param_2)\n\n{\n  if (param_1 != 0) {\n    *(int *)((int)this + 0x34) = param_1;\n  }\n  if (param_2 != 0) {\n    *(int *)((int)this + 0x38) = param_2;\n  }\n  *(undefined4 *)((int)this + 0x50) = 0xffffffff;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d0b6",
      "entry": "0040d0b6",
      "c": "\nvoid __thiscall FUN_0040d0b6(void *this,undefined4 param_1,undefined4 param_2)\n\n{\n  *(undefined4 *)((int)this + 0x14) = param_1;\n  *(undefined1 *)((int)this + 0xc) = 1;\n  *(undefined4 *)((int)this + 0x10) = param_2;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d0cb",
      "entry": "0040d0cb",
      "c": "\nvoid __thiscall FUN_0040d0cb(void *this,int param_1)\n\n{\n  if ((*(char *)((int)this + 0x30) != '\\0') && (*(int *)((int)this + 0x34) != 0)) {\n    FUN_00411b1e(param_1 + *(int *)((int)this + 0x80),this);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d114",
      "entry": "0040d114",
      "c": "\nuint __thiscall FUN_0040d114(void *this,undefined1 (*param_1) [16],uint param_2)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined1 (*pauVar3) [16];\n  int *piVar4;\n  code *pcVar5;\n  char cVar6;\n  int *piVar7;\n  int iVar8;\n  undefined4 uVar9;\n  int iVar10;\n  uint uVar11;\n  uint local_10;\n  uint local_8;\n  \n  if (*(char *)((int)this + 0xd5) != '\\0') {\n    param_2 = param_2 & 0xfffffff0;\n  }\n  local_10 = 0;\n  uVar11 = 0;\n  pauVar3 = param_1;\n  while (param_2 != 0) {\n                    /* WARNING: Load size is inaccurate */\n    piVar4 = *(int **)((int)this + 0x34);\n    if (*this == '\\0') {\n      local_8 = param_2;\n      if ((*(int *)((int)this + 0x2c) < 1) &&\n         ((*(int *)((int)this + 0x2c) < 0 || (*(uint *)((int)this + 0x28) < param_2)))) {\n        local_8 = *(uint *)((int)this + 0x28);\n      }\n      if (local_8 != 0) {\n        if (((((*(char *)((int)this + 0x57) != '\\0') && (*(char *)((int)this + 0xd5) != '\\0')) &&\n             ((int)*(uint *)((int)this + 0x2c) < 1)) &&\n            ((0x7fffffff < *(uint *)((int)this + 0x2c) || (*(uint *)((int)this + 0x28) < param_2))))\n           && (uVar11 = ((local_10 + local_8 & 0xfffffff0) - (local_10 + local_8)) + local_8,\n              0 < (int)uVar11)) {\n          local_8 = uVar11;\n        }\n        pcVar5 = *(code **)(*piVar4 + 0x18);\n        (*(code *)PTR_guard_check_icall_00433278)();\n        cVar6 = (*pcVar5)();\n        if (cVar6 == '\\0') {\n          return 0xffffffff;\n        }\n        pcVar5 = *(code **)(**(int **)((int)this + 0x34) + 0xc);\n        (*(code *)PTR_guard_check_icall_00433278)(pauVar3,local_8);\n        uVar11 = (*pcVar5)();\n        piVar7 = *(int **)((int)this + 0x40);\n        if (piVar7 == (int *)0x0) {\n          piVar7 = piVar4 + 0x8a6;\n        }\n        if ((*(char *)((int)this + 0x33) == '\\0') && (*(char *)((int)piVar7 + 0x1099) != '\\0')) {\n          FUN_0040ac05();\n        }\n      }\n    }\n    else {\n      FUN_00420320((uint *)param_1,*(uint **)((int)this + 8),*(uint *)((int)this + 4));\n      uVar11 = *(uint *)((int)this + 4);\n      *(undefined4 *)((int)this + 4) = 0;\n    }\n    puVar1 = (uint *)((int)this + 0x70);\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + uVar11;\n    *(int *)((int)this + 0x74) =\n         *(int *)((int)this + 0x74) + ((int)uVar11 >> 0x1f) + (uint)CARRY4(uVar2,uVar11);\n    param_2 = param_2 - uVar11;\n    local_10 = local_10 + uVar11;\n    pauVar3 = (undefined1 (*) [16])(*pauVar3 + uVar11);\n    iVar10 = *(uint *)((int)this + 0x28) - uVar11;\n    iVar8 = (*(int *)((int)this + 0x2c) - ((int)uVar11 >> 0x1f)) -\n            (uint)(*(uint *)((int)this + 0x28) < uVar11);\n    *(int *)((int)this + 0x28) = iVar10;\n    *(int *)((int)this + 0x2c) = iVar8;\n    if (((*(char *)((int)this + 0x57) == '\\0') || (iVar10 != 0 || iVar8 != 0)) ||\n       ((uVar11 != 0 && ((*(char *)((int)this + 0xd5) == '\\0' || ((local_10 & 0xf) == 0)))))) break;\n    uVar9 = FUN_00418c8d(piVar4,this,1,*(short *)((int)this + 0x54));\n    if ((char)uVar9 == '\\0') {\n      *(undefined1 *)((int)this + 0x58) = 1;\n      return 0xffffffff;\n    }\n  }\n  if (*(int *)((int)this + 0x34) != 0) {\n    FUN_0040d0cb(this,(*(int *)(*(int *)((int)this + 0x34) + 0x6cc0) - *(int *)((int)this + 0x20)) +\n                      *(int *)((int)this + 0x70));\n  }\n  if ((uVar11 != 0xffffffff) && (uVar11 = local_10, *(char *)((int)this + 0xd5) != '\\0')) {\n    FUN_00406010(*(void **)((int)this + 0x4c),param_1,local_10);\n  }\n  FUN_00410e08();\n  return uVar11;\n}\n\n"
    },
    {
      "name": "FUN_0040d300",
      "entry": "0040d300",
      "c": "\nvoid __thiscall FUN_0040d300(void *this,uint *param_1,int *param_2)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  \n  *(uint **)((int)this + 0x1c) = param_1;\n  *(int **)((int)this + 0x18) = param_2;\n  if (*(char *)((int)this + 0xc) == '\\0') {\n    if (*(char *)((int)this + 0x31) == '\\0') {\n      FUN_00409f7a(*(void **)((int)this + 0x38),param_1,param_2);\n    }\n  }\n  else if (param_2 <= *(int **)((int)this + 0x10)) {\n    FUN_00420320(*(uint **)((int)this + 0x14),param_1,(uint)param_2);\n    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + (int)param_2;\n    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) - (int)param_2;\n  }\n  puVar1 = (uint *)((int)this + 0x78);\n  uVar2 = *puVar1;\n  *puVar1 = *puVar1 + (int)param_2;\n  *(int *)((int)this + 0x7c) = *(int *)((int)this + 0x7c) + (uint)CARRY4(uVar2,(uint)param_2);\n  if (*(char *)((int)this + 0x32) == '\\0') {\n    FUN_0040ac05();\n  }\n  FUN_00410e08();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d368",
      "entry": "0040d368",
      "c": "\nundefined4 * __fastcall FUN_0040d368(undefined4 *param_1)\n\n{\n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  param_1[3] = 0;\n  *(undefined1 *)(param_1 + 4) = 0;\n  param_1[5] = 0;\n  param_1[6] = 0;\n  param_1[7] = 0;\n  param_1[8] = 0;\n  *(undefined1 *)(param_1 + 9) = 0;\n  param_1[10] = 0;\n  param_1[0xb] = 0;\n  param_1[0xc] = 0;\n  param_1[0xd] = 0;\n  *(undefined1 *)(param_1 + 0xe) = 0;\n  param_1[0xf] = 0;\n  param_1[0x10] = 0;\n  param_1[0x11] = 0;\n  param_1[0x12] = 0;\n  *(undefined1 *)(param_1 + 0x13) = 0;\n  param_1[0x14] = 0;\n  param_1[0x15] = 0;\n  param_1[0x16] = 0;\n  param_1[0x17] = 0;\n  *(undefined1 *)(param_1 + 0x18) = 0;\n  *(undefined1 *)(param_1 + 0x19) = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040d3bf",
      "entry": "0040d3bf",
      "c": "\nvoid __fastcall FUN_0040d3bf(int *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &local_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &local_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2] << 2);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d40d",
      "entry": "0040d40d",
      "c": "\nvoid __fastcall FUN_0040d40d(int *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &local_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &local_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2] * 0xc);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d459",
      "entry": "0040d459",
      "c": "\nvoid __fastcall FUN_0040d459(int *param_1)\n\n{\n  int *piVar1;\n  int iVar2;\n  uint uVar3;\n  \n  uVar3 = 0;\n  piVar1 = param_1 + 10;\n  if (param_1[0xb] != 0) {\n    iVar2 = 0;\n    do {\n      FID_conflict__free(*(void **)(iVar2 + 4 + *piVar1));\n      FID_conflict__free(*(void **)(iVar2 + 8 + *piVar1));\n      uVar3 = uVar3 + 1;\n      iVar2 = iVar2 + 0xc;\n    } while (uVar3 < (uint)param_1[0xb]);\n  }\n  FUN_0040d3bf(param_1 + 0x14);\n  FUN_0040d3bf(param_1 + 0xf);\n  FUN_0040d40d(piVar1);\n  FUN_0040d3bf(param_1 + 5);\n  FUN_0040d3bf(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d4b8",
      "entry": "0040d4b8",
      "c": "\nvoid __thiscall FUN_0040d4b8(void *this,int param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  \n  uVar3 = param_1 + *(int *)((int)this + 4);\n  *(uint *)((int)this + 4) = uVar3;\n  if (*(uint *)((int)this + 8) < uVar3) {\n    if ((*(uint *)((int)this + 0xc) != 0) && (*(uint *)((int)this + 0xc) < uVar3)) {\n      FUN_00406c36(&DAT_00441098,L\"Maximum allowed array size (%u) is exceeded\");\n      FUN_00406ca7(&DAT_00441098);\n    }\n    uVar1 = (*(uint *)((int)this + 8) >> 2) + 0x20 + *(int *)((int)this + 8);\n    uVar3 = *(uint *)((int)this + 4);\n    if (*(uint *)((int)this + 4) <= uVar1) {\n      uVar3 = uVar1;\n    }\n    if (*(char *)((int)this + 0x10) == '\\0') {\n                    /* WARNING: Load size is inaccurate */\n      puVar2 = (uint *)FUN_00423e3e(*this,uVar3 << 2);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n    }\n    else {\n      puVar2 = (uint *)FUN_00423e33(uVar3 << 2);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n                    /* WARNING: Load size is inaccurate */\n      if (*this != 0) {\n                    /* WARNING: Load size is inaccurate */\n        FUN_00420320(puVar2,*this,*(int *)((int)this + 8) << 2);\n                    /* WARNING: Load size is inaccurate */\n        FUN_0040f445(*this,*(int *)((int)this + 8) << 2);\n                    /* WARNING: Load size is inaccurate */\n        FID_conflict__free(*this);\n      }\n    }\n    *(uint **)this = puVar2;\n    *(uint *)((int)this + 8) = uVar3;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d57c",
      "entry": "0040d57c",
      "c": "\nvoid __thiscall FUN_0040d57c(void *this,int param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  \n  uVar3 = param_1 + *(int *)((int)this + 4);\n  *(uint *)((int)this + 4) = uVar3;\n  if (*(uint *)((int)this + 8) < uVar3) {\n    if ((*(uint *)((int)this + 0xc) != 0) && (*(uint *)((int)this + 0xc) < uVar3)) {\n      FUN_00406c36(&DAT_00441098,L\"Maximum allowed array size (%u) is exceeded\");\n      FUN_00406ca7(&DAT_00441098);\n    }\n    uVar1 = (*(uint *)((int)this + 8) >> 2) + 0x20 + *(int *)((int)this + 8);\n    uVar3 = *(uint *)((int)this + 4);\n    if (*(uint *)((int)this + 4) <= uVar1) {\n      uVar3 = uVar1;\n    }\n    if (*(char *)((int)this + 0x10) == '\\0') {\n                    /* WARNING: Load size is inaccurate */\n      puVar2 = (uint *)FUN_00423e3e(*this,uVar3 * 0xc);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n    }\n    else {\n      puVar2 = (uint *)FUN_00423e33(uVar3 * 0xc);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n                    /* WARNING: Load size is inaccurate */\n      if (*this != 0) {\n                    /* WARNING: Load size is inaccurate */\n        FUN_00420320(puVar2,*this,*(int *)((int)this + 8) * 0xc);\n                    /* WARNING: Load size is inaccurate */\n        FUN_0040f445(*this,*(int *)((int)this + 8) * 0xc);\n                    /* WARNING: Load size is inaccurate */\n        FID_conflict__free(*this);\n      }\n    }\n    *(uint **)this = puVar2;\n    *(uint *)((int)this + 8) = uVar3;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d640",
      "entry": "0040d640",
      "c": "\nint __cdecl FUN_0040d640(int *param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  uint local_a4 [20];\n  uint local_54 [20];\n  \n  iVar1 = *param_1;\n  iVar2 = *param_2;\n  FUN_004105a7((char *)local_a4,(int)(&PTR_s_s_IDS_BROWSETITLE_0043e278)[iVar1 * 3],0x50);\n  puVar3 = FUN_00422670(local_a4,':');\n  if (puVar3 != (uint *)0x0) {\n    *(undefined1 *)puVar3 = 0;\n  }\n  FUN_004105a7((char *)local_54,(int)(&PTR_s_s_IDS_BROWSETITLE_0043e278)[iVar2 * 3],0x50);\n  puVar3 = FUN_00422670(local_54,':');\n  if (puVar3 != (uint *)0x0) {\n    *(undefined1 *)puVar3 = 0;\n  }\n  iVar4 = _strcmp((char *)local_a4,(char *)local_54);\n  if (iVar4 == 0) {\n    if ((&DAT_0043e274)[iVar1 * 3] == (&DAT_0043e274)[iVar2 * 3]) {\n      iVar4 = 0;\n    }\n    else {\n      iVar4 = (-(uint)((uint)(&DAT_0043e274)[iVar1 * 3] < (uint)(&DAT_0043e274)[iVar2 * 3]) &\n              0xfffffffe) + 1;\n    }\n  }\n  return iVar4;\n}\n\n"
    },
    {
      "name": "FUN_0040d6e0",
      "entry": "0040d6e0",
      "c": "\nvoid __cdecl FUN_0040d6e0(int *param_1,int *param_2)\n\n{\n  _strcmp((&PTR_s_s_IDS_BROWSETITLE_0043e278)[*param_1 * 3],\n          (&PTR_s_s_IDS_BROWSETITLE_0043e278)[*param_2 * 3]);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d710",
      "entry": "0040d710",
      "c": "\nint __cdecl FUN_0040d710(int param_1,int *param_2)\n\n{\n  int iVar1;\n  uint *puVar2;\n  int iVar3;\n  uint local_54 [20];\n  \n  iVar1 = *param_2;\n  FUN_004105a7((char *)local_54,(int)(&PTR_s_s_IDS_BROWSETITLE_0043e278)[iVar1 * 3],0x50);\n  puVar2 = FUN_00422670(local_54,':');\n  if (puVar2 != (uint *)0x0) {\n    *(undefined1 *)puVar2 = 0;\n  }\n  iVar3 = _strcmp(*(char **)(param_1 + 8),(char *)local_54);\n  if (iVar3 == 0) {\n    if (*(uint *)(param_1 + 4) == (&DAT_0043e274)[iVar1 * 3]) {\n      iVar3 = 0;\n    }\n    else {\n      iVar3 = (-(uint)(*(uint *)(param_1 + 4) < (uint)(&DAT_0043e274)[iVar1 * 3]) & 0xfffffffe) + 1;\n    }\n  }\n  return iVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040d780",
      "entry": "0040d780",
      "c": "\nvoid __cdecl FUN_0040d780(char *param_1,int *param_2)\n\n{\n  _strcmp(param_1,(&PTR_s_s_IDS_BROWSETITLE_0043e278)[*param_2 * 3]);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d7a0",
      "entry": "0040d7a0",
      "c": "\nint __cdecl FUN_0040d7a0(int *param_1,int *param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(*param_1 * 0xc + DAT_004410b8);\n  uVar1 = *(uint *)(*param_2 * 0xc + DAT_004410b8);\n  if (uVar2 == uVar1) {\n    return 0;\n  }\n  return (-(uint)(uVar2 < uVar1) & 0xfffffffe) + 1;\n}\n\n"
    },
    {
      "name": "FUN_0040d7d0",
      "entry": "0040d7d0",
      "c": "\nvoid __cdecl FUN_0040d7d0(int *param_1,int *param_2)\n\n{\n  _strcmp(*(char **)(*param_1 * 0xc + 4 + DAT_004410b8),\n          *(char **)(*param_2 * 0xc + 4 + DAT_004410b8));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d800",
      "entry": "0040d800",
      "c": "\nvoid __cdecl FUN_0040d800(char *param_1,int *param_2)\n\n{\n  _strcmp(param_1,*(char **)(*param_2 * 0xc + 4 + DAT_004410b8));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d81c",
      "entry": "0040d81c",
      "c": "\nuint __thiscall FUN_0040d81c(void *this,undefined4 param_1,int *param_2,int *param_3)\n\n{\n  ushort *puVar1;\n  int iVar2;\n  uint3 uVar4;\n  uint uVar3;\n  ulonglong uVar5;\n  ushort local_404 [512];\n  \n  puVar1 = (ushort *)FUN_0040d89c(this,param_1,L\"SIZE\",(short *)local_404,0x200);\n  if (((char)puVar1 == '\\0') || (puVar1 = FUN_004222c6(local_404,0x2a), puVar1 == (ushort *)0x0)) {\n    uVar3 = (uint)puVar1 & 0xffffff00;\n  }\n  else {\n    uVar5 = thunk_FUN_00411f24(local_404);\n    *param_2 = (int)uVar5;\n    uVar5 = thunk_FUN_00411f24(puVar1 + 1);\n    iVar2 = (int)uVar5;\n    *param_3 = iVar2;\n    uVar4 = (uint3)(uVar5 >> 8);\n    if (((*param_2 == 100) && (iVar2 == 100)) || ((*param_2 < 1 || (iVar2 < 1)))) {\n      uVar3 = (uint)uVar4 << 8;\n    }\n    else {\n      uVar3 = CONCAT31(uVar4,1);\n    }\n  }\n  return uVar3;\n}\n\n"
    },
    {
      "name": "FUN_0040d89c",
      "entry": "0040d89c",
      "c": "\nvoid __thiscall\nFUN_0040d89c(void *this,undefined4 param_1,undefined4 param_2,short *param_3,int param_4)\n\n{\n  wchar_t local_f4 [80];\n  CHAR local_54 [80];\n  \n  FUN_00404092(local_f4,0x50,L\"$%s:%s\");\n  FUN_00411da7(local_f4,local_54,0x50);\n  FUN_0040d9f0(this,local_54,param_3,param_4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040d8ec",
      "entry": "0040d8ec",
      "c": "\nuint __thiscall\nFUN_0040d8ec(void *this,undefined4 param_1,int param_2,LPCWSTR param_3,char *param_4,size_t param_5)\n\n{\n  int *in_EAX;\n  char *pcVar1;\n  CHAR local_b0 [80];\n  char local_60 [80];\n  undefined1 local_10 [4];\n  undefined4 local_c;\n  char *local_8;\n  \n  if (*(int *)((int)this + 0x2c) == 0) goto LAB_0040d9a6;\n  local_c = param_1;\n  local_8 = local_60;\n  local_60[0] = '\\0';\n  if (param_3 != (LPCWSTR)0x0) {\n    FUN_00411da7(param_3,local_b0,0x50);\n  }\n  if (param_2 == 0) {\n    FUN_004105a7(local_60,0x433a34,0x50);\n  }\n  else {\n    if (param_2 == 1) {\n      pcVar1 = \"$%s\";\n    }\n    else {\n      if (param_2 != 2) goto LAB_0040d96e;\n      pcVar1 = \"@%s\";\n    }\n    FUN_0040e5b1(local_60,0x50,pcVar1);\n  }\nLAB_0040d96e:\n  in_EAX = (int *)_bsearch(local_10,*(void **)((int)this + 0x14),*(size_t *)((int)this + 0x18),4,\n                           FUN_0040d710);\n  if (in_EAX != (int *)0x0) {\n    pcVar1 = _strncpy(param_4,(&PTR_s_s_IDS_BROWSETITLE_0043e278)[*in_EAX * 3],param_5);\n    return CONCAT31((int3)((uint)pcVar1 >> 8),1);\n  }\nLAB_0040d9a6:\n  return (uint)in_EAX & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0040d9b0",
      "entry": "0040d9b0",
      "c": "\nbool __thiscall\nFUN_0040d9b0(void *this,undefined4 param_1,short *param_2,int param_3,int param_4,LPCWSTR param_5)\n\n{\n  undefined4 uVar1;\n  bool bVar2;\n  char local_54 [80];\n  \n  uVar1 = FUN_0040d8ec(this,param_1,param_4,param_5,local_54,0x50);\n  if ((char)uVar1 == '\\0') {\n    bVar2 = false;\n  }\n  else {\n    uVar1 = FUN_0040d9f0(this,local_54,param_2,param_3);\n    bVar2 = (char)uVar1 != '\\0';\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040d9f0",
      "entry": "0040d9f0",
      "c": "\nuint __thiscall FUN_0040d9f0(void *this,void *param_1,short *param_2,int param_3)\n\n{\n  int *in_EAX;\n  undefined4 uVar1;\n  \n  if ((*(int *)((int)this + 0x2c) != 0) &&\n     (in_EAX = (int *)_bsearch(param_1,*(void **)((int)this + 0x50),*(size_t *)((int)this + 0x54),4,\n                               FUN_0040d800), in_EAX != (int *)0x0)) {\n    uVar1 = FUN_00410602(param_2,*(int *)(*in_EAX * 0xc + *(int *)((int)this + 0x28) + 8),param_3);\n    return CONCAT31((int3)((uint)uVar1 >> 8),1);\n  }\n  return (uint)in_EAX & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0040da42",
      "entry": "0040da42",
      "c": "\nvoid __fastcall FUN_0040da42(int param_1)\n\n{\n  FUN_0040da67();\n  FUN_0040e29e(param_1);\n  if (*(char *)(param_1 + 100) != '\\0') {\n    SetProcessDefaultLayout(1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040da67",
      "entry": "0040da67",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0040da67(void)\n\n{\n  short sVar1;\n  ushort uVar2;\n  bool bVar3;\n  ushort *puVar4;\n  wchar_t *pwVar5;\n  uint uVar6;\n  int iVar7;\n  LPWSTR _Memory;\n  LPWSTR _Memory_00;\n  size_t _MaxCount;\n  int iVar8;\n  wchar_t *pwVar9;\n  int *piVar10;\n  char *pcVar11;\n  undefined4 *this;\n  undefined4 uVar12;\n  uint uVar13;\n  undefined4 *unaff_EBP;\n  int iVar14;\n  uint uVar15;\n  uint uVar16;\n  undefined8 uVar17;\n  wchar_t wVar18;\n  \n  FUN_0041eb78();\n  unaff_EBP[4] = 0x5c;\n  unaff_EBP[0xe] = this;\n  puVar4 = FUN_004222c6((ushort *)unaff_EBP[0x18],0x5c);\n  if (puVar4 == (ushort *)0x0) {\n    GetModuleFileNameW((HMODULE)0x0,(LPWSTR)(unaff_EBP + -0xc74),0x800);\n    pwVar5 = FUN_0040c29a((wchar_t *)(unaff_EBP + -0xc74));\n    iVar14 = unaff_EBP[0x18];\n    *pwVar5 = L'\\0';\n    FUN_004105da((wchar_t *)(unaff_EBP + -0xc74),iVar14,0x800);\n  }\n  else {\n    FUN_00410602((short *)(unaff_EBP + -0xc74),unaff_EBP[0x18],0x800);\n  }\n  FUN_00409556(unaff_EBP + -0x1082);\n  unaff_EBP[-1] = 0;\n  bVar3 = FUN_004098e0(unaff_EBP + -0x1082,(LPCWSTR)(unaff_EBP + -0xc74),4);\n  if (bVar3) {\n    uVar16 = 0;\n    if (DAT_0043e720 != 0) {\n      do {\n        FUN_0040e261(this,uVar16);\n        FUN_0040e261(this + 5,uVar16);\n        uVar16 = uVar16 + 1;\n      } while (uVar16 < DAT_0043e720);\n    }\n    _qsort((void *)*this,this[1],4,FUN_0040d6e0);\n    _qsort((void *)this[5],this[6],4,FUN_0040d640);\n    *(undefined1 *)((int)unaff_EBP + 0x53) = 0;\n    uVar16 = 0xffffffff;\n    unaff_EBP[0xf] = 0;\n    do {\n      if (uVar16 != 0xffffffff) goto LAB_0040dc8e;\n      uVar17 = FUN_00409e80((int)(unaff_EBP + -0x1082));\n      unaff_EBP[0x12] = (int)uVar17;\n      uVar6 = FUN_00409bd0(unaff_EBP + -0x1082,unaff_EBP + -0x874,0x2000);\n      unaff_EBP[0x11] = uVar6;\n      iVar14 = 0;\n      unaff_EBP[10] = uVar6 - 0x10;\n      if (-1 < (int)(uVar6 - 0x10)) {\n        do {\n          if ((*(char *)((int)unaff_EBP + iVar14 + -0x21d0) == '*') &&\n             (*(char *)((int)unaff_EBP + iVar14 + -0x21cf) == '*')) {\n            iVar7 = _strncmp((char *)((int)unaff_EBP + iVar14 + -0x21ce),\"*messages***\",0xb);\n            if (iVar7 != 0) {\n              uVar6 = unaff_EBP[0x11];\n              goto LAB_0040dbd6;\n            }\nLAB_0040dc52:\n            iVar7 = unaff_EBP[0x12];\n            uVar16 = iVar14 + iVar7;\n            goto LAB_0040dc5d;\n          }\nLAB_0040dbd6:\n          if ((((*(short *)((int)unaff_EBP + iVar14 + -0x21d0) == 0x2a) &&\n               (pwVar5 = (wchar_t *)((int)unaff_EBP + iVar14 + -0x21cc), pwVar5[-1] == L'*')) &&\n              (iVar14 <= (int)(uVar6 - 0x20))) &&\n             (iVar7 = _wcsncmp(pwVar5,L\"*messages***\",0xb), iVar7 == 0)) {\n            *(undefined1 *)((int)unaff_EBP + 0x53) = 1;\n            goto LAB_0040dc52;\n          }\n          if (((*(char *)((int)unaff_EBP + iVar14 + -0x21d0) == 'R') &&\n              (*(char *)((int)unaff_EBP + iVar14 + -0x21cf) == 'a')) &&\n             (iVar7 = _strncmp((char *)((int)unaff_EBP + iVar14 + -0x21ce),\"r!\\x1a\\a\",4), iVar7 == 0\n             )) goto LAB_0040e242;\n          iVar14 = iVar14 + 1;\n          if ((int)unaff_EBP[10] < iVar14) break;\n          uVar6 = unaff_EBP[0x11];\n        } while( true );\n      }\n      iVar7 = unaff_EBP[0x12];\nLAB_0040dc5d:\n      FUN_00409d70(unaff_EBP + -0x1082,iVar7 + unaff_EBP[0x11] + -0x10,0,0);\n      iVar14 = unaff_EBP[0xf];\n      unaff_EBP[0xf] = iVar14 + 1U;\n    } while (iVar14 + 1U < 0x100);\n    if (uVar16 != 0xffffffff) {\nLAB_0040dc8e:\n      FUN_00409d70(unaff_EBP + -0x1082,uVar16,(int)uVar16 >> 0x1f,0);\n      _Memory = (LPWSTR)FUN_00423e33(0x200002);\n      unaff_EBP[0x13] = _Memory;\n      if (_Memory != (LPWSTR)0x0) {\n        uVar16 = FUN_00409bd0(unaff_EBP + -0x1082,_Memory,0x200000);\n        unaff_EBP[0x12] = uVar16;\n        if (*(char *)((int)unaff_EBP + 0x53) == '\\0') {\n          _Memory_00 = (LPWSTR)FUN_00423e33(uVar16 * 2 + 2);\n          if (_Memory_00 == (LPWSTR)0x0) goto LAB_0040e242;\n          iVar14 = unaff_EBP[0x12];\n          *(CHAR *)(iVar14 + (int)_Memory) = '\\0';\n          FUN_00411b84((LPCSTR)_Memory,_Memory_00,iVar14 + 1);\n          FID_conflict__free(_Memory);\n          uVar16 = unaff_EBP[0x12];\n          unaff_EBP[0x13] = _Memory_00;\n        }\n        else {\n          uVar16 = uVar16 >> 1;\n          unaff_EBP[0x12] = uVar16;\n          _Memory_00 = _Memory;\n        }\n        uVar6 = 0x100000;\n        if (uVar16 < 0x100001) {\n          uVar6 = uVar16;\n        }\n        _Memory_00[uVar6] = L'\\0';\n        FUN_004105a7((char *)(unaff_EBP + -0x42),0x4339d0,100);\n        pwVar5 = (wchar_t *)FUN_00423e33(0x20002);\n        unaff_EBP[0x11] = pwVar5;\n        if (pwVar5 == (wchar_t *)0x0) {\n          FID_conflict__free(_Memory_00);\n        }\n        else {\n          uVar16 = 0;\n          uVar12 = 0;\n          unaff_EBP[0xc] = 0;\n          *(undefined1 *)(unaff_EBP + -0x10) = 0;\n          unaff_EBP[0xb] = 0;\n          unaff_EBP[0x15] = 0;\n          unaff_EBP[10] = 0x20;\n          unaff_EBP[0xf] = 9;\n          if (unaff_EBP[0x12] != 0) {\n            unaff_EBP[6] = 0xd;\n            unaff_EBP[5] = 10;\n            uVar6 = 0;\n            do {\n              uVar15 = 0;\n              iVar14 = unaff_EBP[0x13];\n              if ((uVar6 == 0) ||\n                 ((sVar1 = *(short *)(iVar14 + -2 + uVar6 * 2), sVar1 != *(short *)(unaff_EBP + 6)\n                  && (sVar1 != *(short *)(unaff_EBP + 5))))) {\nLAB_0040e02a:\n                wVar18 = *(wchar_t *)(iVar14 + uVar6 * 2);\n                uVar15 = uVar6 + 1;\n                unaff_EBP[0x15] = uVar15;\n                if (wVar18 == L'\\0') break;\n                if (wVar18 == *(wchar_t *)(unaff_EBP + 4)) {\n                  if (0xffff < uVar16) goto LAB_0040e150;\n                  sVar1 = *(short *)(iVar14 + uVar15 * 2);\n                  if (sVar1 == 0x22) {\n                    wVar18 = L'\\\"';\n                  }\n                  else if (sVar1 == 0x5c) {\n                    wVar18 = L'\\\\';\n                  }\n                  else if (sVar1 == 0x6e) {\n                    wVar18 = L'\\n';\n                  }\n                  else if (sVar1 == 0x72) {\n                    wVar18 = L'\\r';\n                  }\n                  else {\n                    if (sVar1 != 0x74) goto LAB_0040e0ac;\n                    wVar18 = L'\\t';\n                  }\n                  pwVar5[uVar16] = wVar18;\n                  uVar15 = uVar6 + 2;\n                  unaff_EBP[0x15] = uVar15;\n                  uVar16 = uVar16 + 1;\n                }\n                else if ((wVar18 == L'\\r') || (wVar18 == L'\\n')) {\n                  if (*(char *)(unaff_EBP + -0x10) != '\\0') {\n                    unaff_EBP[7] = unaff_EBP[0xb];\n                    pcVar11 = __strdup((char *)(unaff_EBP + -0x10));\n                    unaff_EBP[8] = pcVar11;\n                    if (uVar16 != 0) {\n                      pwVar9 = pwVar5 + (uVar16 - 1);\n                      do {\n                        if ((*pwVar9 != L' ') && (*pwVar9 != *(wchar_t *)(unaff_EBP + 0xf))) break;\n                        *pwVar9 = L'\\0';\n                        pwVar9 = pwVar9 + -1;\n                        uVar16 = uVar16 - 1;\n                      } while (uVar16 != 0);\n                      if ((uVar16 != 0) && (pwVar5[uVar16 - 1] == L'\\\"')) {\n                        pwVar5[uVar16 - 1] = L'\\0';\n                      }\n                    }\n                    pwVar5[uVar16] = L'\\0';\n                    if (*pwVar5 == L'\\\"') {\n                      pwVar5 = pwVar5 + 1;\n                    }\n                    pwVar5 = __wcsdup(pwVar5);\n                    unaff_EBP[9] = pwVar5;\n                    FUN_0040e27c((void *)(unaff_EBP[0xe] + 0x28),unaff_EBP[7],unaff_EBP[8],\n                                 unaff_EBP[9]);\n                    pwVar5 = (wchar_t *)unaff_EBP[0x11];\n                    uVar15 = unaff_EBP[0x15];\n                  }\n                  *(undefined1 *)(unaff_EBP + -0x10) = 0;\n                  uVar16 = 0;\n                  unaff_EBP[0xb] = 0;\n                }\n                else {\n                  if (0xffff < uVar16) goto LAB_0040e150;\nLAB_0040e0ac:\n                  pwVar5[uVar16] = wVar18;\n                  uVar16 = uVar16 + 1;\n                }\n                unaff_EBP[0xc] = uVar16;\n              }\n              else {\n                if (*(short *)(iVar14 + uVar6 * 2) != 0x3a) {\nLAB_0040df29:\n                  puVar4 = (ushort *)(iVar14 + uVar6 * 2);\n                  unaff_EBP[0x10] = puVar4;\n                  uVar12 = FUN_0041045b((uint)*puVar4);\n                  if ((char)uVar12 != '\\0') {\n                    FUN_00410602((short *)(unaff_EBP + -0xa6),unaff_EBP[0x10],100);\n                    pwVar9 = _wcspbrk((wchar_t *)(unaff_EBP + -0xa6),L\" \\t,\");\n                    unaff_EBP[0x10] = pwVar9;\n                    if (pwVar9 != (wchar_t *)0x0) {\n                      *pwVar9 = L'\\0';\n                      FUN_00411da7((LPCWSTR)(unaff_EBP + -0xa6),(LPSTR)(unaff_EBP + -0x5b),100);\n                      FUN_004105a7((char *)(unaff_EBP + -0x29),(int)(unaff_EBP + -0x42),100);\n                      FUN_00410580((char *)(unaff_EBP + -0x29),(int)(unaff_EBP + -0x5b),100);\n                      FUN_004105a7((char *)(unaff_EBP + -0x10),(int)(unaff_EBP + -0x29),0x32);\n                      piVar10 = (int *)_bsearch(unaff_EBP + -0x29,*(void **)unaff_EBP[0xe],\n                                                ((undefined4 *)unaff_EBP[0xe])[1],4,FUN_0040d780);\n                      if (piVar10 != (int *)0x0) {\n                        unaff_EBP[0xb] = *(undefined4 *)(&DAT_0043e270 + *piVar10 * 0xc);\n                      }\n                      for (uVar15 = unaff_EBP[0x15] + 1 +\n                                    (unaff_EBP[0x10] - (int)(unaff_EBP + -0xa6) >> 1);\n                          (sVar1 = *(short *)(unaff_EBP[0x13] + uVar15 * 2),\n                          sVar1 == *(short *)(unaff_EBP + 10) ||\n                          (sVar1 == *(short *)(unaff_EBP + 0xf))); uVar15 = uVar15 + 1) {\n                      }\n                      unaff_EBP[0x15] = uVar15;\n                      goto LAB_0040e150;\n                    }\n                  }\n                  iVar14 = unaff_EBP[0x13];\n                  uVar6 = unaff_EBP[0x15];\n                  goto LAB_0040e02a;\n                }\n                iVar14 = unaff_EBP[0x15];\n                unaff_EBP[0xd] = 0xffffffff;\n                iVar7 = unaff_EBP[0x13];\n                *unaff_EBP = L\"STRINGS\";\n                unaff_EBP[1] = L\"DIALOG\";\n                unaff_EBP[2] = L\"MENU\";\n                unaff_EBP[3] = L\"DIRECTION\";\n                do {\n                  _MaxCount = _wcslen((wchar_t *)unaff_EBP[uVar15]);\n                  pwVar5 = (wchar_t *)unaff_EBP[uVar15];\n                  unaff_EBP[0x10] = _MaxCount;\n                  iVar8 = _wcsncmp((wchar_t *)(iVar7 + 2 + iVar14 * 2),pwVar5,_MaxCount);\n                  if ((iVar8 == 0) &&\n                     (*(ushort *)(iVar7 + 2 + (unaff_EBP[0x10] + iVar14) * 2) < 0x21)) {\n                    iVar14 = unaff_EBP[0x10] + iVar14 + 1;\n                    unaff_EBP[0xd] = uVar15;\n                    uVar13 = uVar15;\n                  }\n                  else {\n                    uVar13 = unaff_EBP[0xd];\n                  }\n                  uVar15 = uVar15 + 1;\n                } while (uVar15 < 4);\n                uVar16 = unaff_EBP[0xc];\n                unaff_EBP[0x15] = iVar14;\n                pwVar5 = (wchar_t *)unaff_EBP[0x11];\n                if (uVar13 == 0) {\n                  FUN_004105a7((char *)(unaff_EBP + -0x42),0x4339d0,100);\n                }\n                else {\n                  uVar6 = unaff_EBP[0x15];\n                  iVar14 = unaff_EBP[0x13];\n                  if ((int)uVar13 < 1) goto LAB_0040df29;\n                  while( true ) {\n                    puVar4 = (ushort *)(iVar14 + uVar6 * 2);\n                    if ((*puVar4 != *(ushort *)(unaff_EBP + 10)) &&\n                       (*puVar4 != *(ushort *)(unaff_EBP + 0xf))) break;\n                    uVar6 = uVar6 + 1;\n                  }\n                  unaff_EBP[0x15] = uVar6;\n                  uVar6 = 0;\n                  uVar2 = *puVar4;\n                  unaff_EBP[0x10] = 0;\n                  pwVar5 = (wchar_t *)unaff_EBP[0x11];\n                  if (0x20 < uVar2) {\n                    do {\n                      if (0x62 < uVar6) break;\n                      uVar2 = *puVar4;\n                      puVar4 = puVar4 + 1;\n                      *(ushort *)((int)unaff_EBP + uVar6 * 2 + -0x1d0) = uVar2;\n                      uVar6 = uVar6 + 1;\n                    } while (0x20 < *puVar4);\n                    unaff_EBP[0x10] = uVar6;\n                  }\n                  *(undefined2 *)((int)unaff_EBP + uVar6 * 2 + -0x1d0) = 0;\n                  FUN_00411da7((LPCWSTR)(unaff_EBP + -0x74),(LPSTR)(unaff_EBP + -0x29),100);\n                  unaff_EBP[0x15] = unaff_EBP[0x15] + unaff_EBP[0x10];\n                  if (unaff_EBP[0xd] == 3) {\n                    iVar14 = _wcscmp((wchar_t *)(unaff_EBP + -0x74),L\"RTL\");\n                    *(char *)(unaff_EBP[0xe] + 100) = '\\x01' - (iVar14 != 0);\n                  }\n                  else {\n                    pcVar11 = \"$%s:\";\n                    if (unaff_EBP[0xd] != 1) {\n                      pcVar11 = \"@%s:\";\n                    }\n                    FUN_0040e5b1((char *)(unaff_EBP + -0x42),100,pcVar11);\n                  }\n                }\n                uVar15 = unaff_EBP[0x15];\n              }\nLAB_0040e150:\n              uVar6 = uVar15;\n            } while (uVar15 < (uint)unaff_EBP[0x12]);\n            uVar12 = unaff_EBP[0xb];\n          }\n          uVar6 = 0;\n          if (*(char *)(unaff_EBP + -0x10) == '\\0') {\n            iVar14 = unaff_EBP[0xe];\n          }\n          else {\n            unaff_EBP[7] = uVar12;\n            pcVar11 = __strdup((char *)(unaff_EBP + -0x10));\n            unaff_EBP[8] = pcVar11;\n            if (uVar16 != 0) {\n              pwVar9 = pwVar5 + (uVar16 - 1);\n              do {\n                if ((*pwVar9 != L' ') && (*pwVar9 != *(wchar_t *)(unaff_EBP + 0xf))) break;\n                *pwVar9 = L'\\0';\n                pwVar9 = pwVar9 + -1;\n                uVar16 = uVar16 - 1;\n              } while (uVar16 != 0);\n              if ((uVar16 != 0) && (pwVar5[uVar16 - 1] == L'\\\"')) {\n                pwVar5[uVar16 - 1] = L'\\0';\n              }\n            }\n            pwVar5[uVar16] = L'\\0';\n            if (*pwVar5 == L'\\\"') {\n              pwVar5 = pwVar5 + 1;\n            }\n            pwVar5 = __wcsdup(pwVar5);\n            unaff_EBP[9] = pwVar5;\n            iVar14 = unaff_EBP[0xe];\n            FUN_0040e27c((void *)(iVar14 + 0x28),unaff_EBP[7],unaff_EBP[8],unaff_EBP[9]);\n          }\n          FID_conflict__free((void *)unaff_EBP[0x13]);\n          FID_conflict__free((void *)unaff_EBP[0x11]);\n          if (*(int *)(iVar14 + 0x2c) != 0) {\n            do {\n              FUN_0040e261((undefined4 *)(iVar14 + 0x3c),uVar6);\n              FUN_0040e261((void *)(iVar14 + 0x50),uVar6);\n              uVar6 = uVar6 + 1;\n            } while (uVar6 < *(uint *)(iVar14 + 0x2c));\n          }\n          DAT_004410b8 = *(undefined4 *)(iVar14 + 0x28);\n          _qsort(*(void **)(iVar14 + 0x3c),*(size_t *)(iVar14 + 0x40),4,FUN_0040d7a0);\n          _qsort(*(void **)(iVar14 + 0x50),*(size_t *)(iVar14 + 0x54),4,FUN_0040d7d0);\n        }\n      }\n    }\n  }\nLAB_0040e242:\n  FUN_0040959a(unaff_EBP + -0x1082);\n  ExceptionList = (void *)unaff_EBP[-3];\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e261",
      "entry": "0040e261",
      "c": "\nvoid __thiscall FUN_0040e261(void *this,undefined4 param_1)\n\n{\n  FUN_0040d4b8(this,1);\n                    /* WARNING: Load size is inaccurate */\n  *(undefined4 *)(*this + -4 + *(int *)((int)this + 4) * 4) = param_1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e27c",
      "entry": "0040e27c",
      "c": "\nvoid __thiscall FUN_0040e27c(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 *puVar1;\n  \n  FUN_0040d57c(this,1);\n                    /* WARNING: Load size is inaccurate */\n  puVar1 = (undefined4 *)(*this + -0xc + *(int *)((int)this + 4) * 0xc);\n  *puVar1 = param_1;\n  puVar1[1] = param_2;\n  puVar1[2] = param_3;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e29e",
      "entry": "0040e29e",
      "c": "\nvoid __fastcall FUN_0040e29e(int param_1)\n\n{\n  HMODULE hModule;\n  HRSRC pHVar1;\n  \n  hModule = GetModuleHandleW((LPCWSTR)0x0);\n  pHVar1 = FindResourceW(hModule,L\"RTL\",(LPCWSTR)&DAT_00000005);\n  if (pHVar1 != (HRSRC)0x0) {\n    *(undefined1 *)(param_1 + 100) = 1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e2c1",
      "entry": "0040e2c1",
      "c": "\nvoid __thiscall FUN_0040e2c1(void *this,HWND param_1)\n\n{\n  uint uVar1;\n  \n  if (*(char *)((int)this + 100) != '\\0') {\n    uVar1 = GetWindowLongW(param_1,-0x14);\n    SetWindowLongW(param_1,-0x14,uVar1 | 0x400000);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e2e8",
      "entry": "0040e2e8",
      "c": "\nvoid __thiscall FUN_0040e2e8(void *this,HWND param_1,undefined4 param_2,char param_3)\n\n{\n  char cVar1;\n  size_t _MaxCount;\n  int iVar2;\n  undefined4 uVar3;\n  HWND hWnd;\n  uint uVar4;\n  int iVar5;\n  int *piVar6;\n  int iVar7;\n  size_t local_93c;\n  int local_938;\n  HWND local_934;\n  int iStack_930;\n  int iStack_92c;\n  int iStack_928;\n  tagRECT tStack_924;\n  int iStack_914;\n  tagRECT tStack_910;\n  tagRECT tStack_900;\n  CHAR local_8f0 [80];\n  wchar_t local_8a0 [80];\n  WCHAR local_800 [1024];\n  \n  local_934 = (HWND)this;\n  FUN_00404092(local_8a0,0x50,L\"$%s:\");\n  FUN_00411da7(local_8a0,local_8f0,0x50);\n  _MaxCount = _strlen(local_8f0);\n  uVar4 = 0;\n  local_93c = _MaxCount;\n  if (DAT_0043e720 != 0) {\n    piVar6 = &DAT_0043e274;\n    do {\n      if (((*piVar6 != 0) &&\n          (iVar2 = _strncmp(local_8f0,(char *)piVar6[1],_MaxCount), _MaxCount = local_93c,\n          iVar2 == 0)) &&\n         (uVar3 = FUN_0040d9f0(this,(void *)piVar6[1],local_800,0x400), _MaxCount = local_93c,\n         (char)uVar3 != '\\0')) {\n        SetDlgItemTextW(param_1,*piVar6,local_800);\n        _MaxCount = local_93c;\n      }\n      uVar4 = uVar4 + 1;\n      piVar6 = piVar6 + 3;\n    } while (uVar4 < DAT_0043e720);\n  }\n  uVar3 = FUN_0040d81c(this,param_2,&local_938,(int *)&local_93c);\n  GetWindowRect(param_1,&tStack_924);\n  GetClientRect(param_1,&tStack_900);\n  iVar2 = (tStack_924.right - tStack_924.left) + 1;\n  iVar7 = (tStack_924.bottom - tStack_924.top) + 1;\n  iStack_92c = 100;\n  iVar5 = iVar7 - tStack_900.bottom;\n  iStack_928 = iVar2 - tStack_900.right;\n  if (param_3 == '\\0') {\n    if ((char)uVar3 != '\\0') {\n      iStack_914 = (tStack_900.right * local_938) / 100 + iStack_928;\n      iStack_930 = (int)(tStack_900.bottom * local_93c) / 100 + iVar5;\n      iVar7 = (iVar7 - iStack_930) / 2 + tStack_924.top;\n      iVar2 = (iVar2 - iStack_914) / 2 + tStack_924.left;\n      if (iVar2 < 0) {\n        iVar2 = 0;\n      }\n      if (iVar7 < 0) {\n        iVar7 = 0;\n      }\n      uVar4 = GetWindowLongW(param_1,-0x10);\n      SetWindowPos(param_1,(HWND)0x0,iVar2,iVar7,iStack_914,iStack_930,~(uVar4 >> 10) & 2 | 0x204);\n      GetWindowRect(param_1,&tStack_924);\n    }\n    cVar1 = FUN_0040d89c(local_934,param_2,L\"CAPTION\",local_800,0x400);\n    if (cVar1 != '\\0') {\n      SetWindowTextW(param_1,local_800);\n    }\n  }\n  iVar2 = GetSystemMetrics(8);\n  hWnd = GetWindow(param_1,5);\n  if ((char)uVar3 != '\\0') {\n    local_934 = hWnd;\n    for (iVar7 = 0; (hWnd != (HWND)0x0 && (iVar7 < 0x200)); iVar7 = iVar7 + 1) {\n      GetWindowRect(hWnd,&tStack_910);\n      SetWindowPos(hWnd,(HWND)0x0,\n                   (((tStack_910.left - iStack_928 / 2) - tStack_924.left) * local_938) / 100,\n                   (int)(((tStack_910.top - (iVar5 - iVar2)) - tStack_924.top) * local_93c) / 100,\n                   (((tStack_910.right - tStack_910.left) + 1) * local_938) / iStack_92c,\n                   (int)(((tStack_910.bottom - tStack_910.top) + 1) * local_93c) / 100,0x204);\n      hWnd = GetWindow(hWnd,2);\n      if (hWnd == local_934) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e5b1",
      "entry": "0040e5b1",
      "c": "\nvoid __cdecl FUN_0040e5b1(char *param_1,size_t param_2,char *param_3)\n\n{\n  FUN_0040e5cb(param_1,param_2,param_3,&stack0x00000010);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e5cb",
      "entry": "0040e5cb",
      "c": "\nvoid __cdecl FUN_0040e5cb(char *param_1,size_t param_2,char *param_3,va_list param_4)\n\n{\n  FID_conflict___vsnprintf_l(param_1,param_2,param_3,(_locale_t)0x0,param_4);\n  return;\n}\n\n"
    },
    {
      "name": "FID_conflict:__vsnprintf_l",
      "entry": "0040e5e6",
      "c": "\n/* Library Function - Multiple Matches With Different Base Names\n    __vsnprintf_l\n    __vsnwprintf_l\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nint __cdecl\nFID_conflict___vsnprintf_l\n          (char *_DstBuf,size_t _MaxCount,char *_Format,_locale_t _Locale,va_list _ArgList)\n\n{\n  uint *puVar1;\n  int iVar2;\n  \n  puVar1 = (uint *)FUN_0040405f();\n  iVar2 = ___stdio_common_vsprintf\n                    (*puVar1 | 1,puVar1[1],_DstBuf,_MaxCount,_Format,\n                     (__crt_locale_pointers *)_Locale,_ArgList);\n  if (iVar2 < 0) {\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040e617",
      "entry": "0040e617",
      "c": "\nvoid FUN_0040e617(UINT param_1)\n\n{\n  DAT_004450c0 = DAT_004450c0 + 1;\n  if (7 < DAT_004450c0) {\n    DAT_004450c0 = 0;\n  }\n  FUN_0040e648(param_1,(LPWSTR)(&DAT_004410c0 + DAT_004450c0 * 0x800),0x400);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e648",
      "entry": "0040e648",
      "c": "\nLPWSTR FUN_0040e648(UINT param_1,LPWSTR param_2,int param_3)\n\n{\n  bool bVar1;\n  int iVar2;\n  \n  *param_2 = L'\\0';\n  bVar1 = FUN_0040d9b0(&DAT_00441030,param_1,param_2,param_3,0,(LPCWSTR)0x0);\n  if (!bVar1) {\n    iVar2 = LoadStringW(DAT_00441028,param_1,param_2,param_3);\n    if (iVar2 == 0) {\n      LoadStringW(DAT_0044102c,param_1,param_2,param_3);\n    }\n  }\n  return param_2;\n}\n\n"
    },
    {
      "name": "FUN_0040e69c",
      "entry": "0040e69c",
      "c": "\nint __fastcall FUN_0040e69c(int param_1)\n\n{\n  if (DAT_004450c8 == '\\0') {\n    FUN_0040e6b5();\n  }\n  *(undefined1 *)(param_1 + 1) = 1;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040e6b5",
      "entry": "0040e6b5",
      "c": "\nvoid FUN_0040e6b5(void)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  iVar4 = 0;\n  iVar3 = 0;\n  do {\n    (&DAT_004450c8)[(byte)(&DAT_0043e098)[iVar3]] = (char)iVar3;\n    iVar3 = iVar3 + 1;\n  } while (iVar3 < 0x100);\n  do {\n    bVar2 = (&DAT_0043e098)[iVar4];\n    (&DAT_00445dc9)[iVar4 * 4] = bVar2;\n    (&DAT_00445dc8)[iVar4 * 4] = bVar2;\n    (&DAT_004459cb)[iVar4 * 4] = bVar2;\n    (&DAT_004459c8)[iVar4 * 4] = bVar2;\n    (&DAT_004455cb)[iVar4 * 4] = bVar2;\n    (&DAT_004455ca)[iVar4 * 4] = bVar2;\n    (&DAT_004451ca)[iVar4 * 4] = bVar2;\n    (&DAT_004451c9)[iVar4 * 4] = bVar2;\n    bVar1 = FUN_0040ef04(bVar2,2);\n    (&DAT_00445dcb)[iVar4 * 4] = bVar1;\n    (&DAT_004459ca)[iVar4 * 4] = bVar1;\n    (&DAT_004455c9)[iVar4 * 4] = bVar1;\n    (&DAT_004451c8)[iVar4 * 4] = bVar1;\n    bVar1 = FUN_0040ef04(bVar2,3);\n    bVar2 = (&DAT_004450c8)[iVar4];\n    (&DAT_00445dca)[iVar4 * 4] = bVar1;\n    (&DAT_004459c9)[iVar4 * 4] = bVar1;\n    (&DAT_004455c8)[iVar4 * 4] = bVar1;\n    (&DAT_004451cb)[iVar4 * 4] = bVar1;\n    bVar1 = FUN_0040ef04(bVar2,0xb);\n    uVar5 = (uint)bVar2;\n    (&DAT_00446dca)[iVar4 * 4] = bVar1;\n    (&DAT_004469c9)[iVar4 * 4] = bVar1;\n    (&DAT_004465c8)[iVar4 * 4] = bVar1;\n    (&DAT_004461cb)[iVar4 * 4] = bVar1;\n    (&DAT_00447dca)[uVar5 * 4] = bVar1;\n    (&DAT_004479c9)[uVar5 * 4] = bVar1;\n    (&DAT_004475c8)[uVar5 * 4] = bVar1;\n    (&DAT_004471cb)[uVar5 * 4] = bVar1;\n    bVar1 = FUN_0040ef04(bVar2,9);\n    (&DAT_00446dc8)[iVar4 * 4] = bVar1;\n    (&DAT_004469cb)[iVar4 * 4] = bVar1;\n    (&DAT_004465ca)[iVar4 * 4] = bVar1;\n    (&DAT_004461c9)[iVar4 * 4] = bVar1;\n    (&DAT_00447dc8)[uVar5 * 4] = bVar1;\n    (&DAT_004479cb)[uVar5 * 4] = bVar1;\n    (&DAT_004475ca)[uVar5 * 4] = bVar1;\n    (&DAT_004471c9)[uVar5 * 4] = bVar1;\n    bVar1 = FUN_0040ef04(bVar2,0xd);\n    (&DAT_00446dc9)[iVar4 * 4] = bVar1;\n    (&DAT_004469c8)[iVar4 * 4] = bVar1;\n    (&DAT_004465cb)[iVar4 * 4] = bVar1;\n    (&DAT_004461ca)[iVar4 * 4] = bVar1;\n    (&DAT_00447dc9)[uVar5 * 4] = bVar1;\n    (&DAT_004479c8)[uVar5 * 4] = bVar1;\n    (&DAT_004475cb)[uVar5 * 4] = bVar1;\n    (&DAT_004471ca)[uVar5 * 4] = bVar1;\n    bVar2 = FUN_0040ef04(bVar2,0xe);\n    (&DAT_00446dcb)[iVar4 * 4] = bVar2;\n    (&DAT_004469ca)[iVar4 * 4] = bVar2;\n    (&DAT_004465c9)[iVar4 * 4] = bVar2;\n    (&DAT_004461c8)[iVar4 * 4] = bVar2;\n    iVar4 = iVar4 + 1;\n    (&DAT_00447dcb)[uVar5 * 4] = bVar2;\n    (&DAT_004479ca)[uVar5 * 4] = bVar2;\n    (&DAT_004475c9)[uVar5 * 4] = bVar2;\n    (&DAT_004471c8)[uVar5 * 4] = bVar2;\n  } while (iVar4 < 0x100);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e890",
      "entry": "0040e890",
      "c": "\n/* WARNING: Removing unreachable block (ram,0x0040e8c5) */\n/* WARNING: Removing unreachable block (ram,0x0040e89e) */\n\nvoid __thiscall FUN_0040e890(void *this,char param_1,int param_2,int param_3,int param_4)\n\n{\n  uint *puVar1;\n  byte bVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint local_20;\n  uint local_1c;\n  uint local_18;\n  uint local_14;\n  \n  puVar1 = (uint *)cpuid(0x80000000);\n  local_20 = *puVar1;\n  local_1c = puVar1[1];\n  local_14 = puVar1[2];\n  local_18 = puVar1[3];\n  if ((local_20 & 0x7fffffff) == 0) {\n    bVar2 = 0;\n  }\n  else {\n    puVar1 = (uint *)cpuid_Version_info(1);\n    local_20 = *puVar1;\n    local_1c = puVar1[1];\n    local_14 = puVar1[2];\n    local_18 = puVar1[3];\n    bVar2 = (byte)(local_18 >> 0x19) & 1;\n  }\n  *(byte *)this = bVar2;\n  if (param_3 == 0x80) {\n    uVar6 = 0x10;\n    *(undefined4 *)((int)this + 4) = 10;\n  }\n  else if (param_3 == 0xc0) {\n    uVar6 = 0x18;\n    *(undefined4 *)((int)this + 4) = 0xc;\n  }\n  else {\n    if (param_3 != 0x100) goto LAB_0040e93c;\n    uVar6 = 0x20;\n    *(undefined4 *)((int)this + 4) = 0xe;\n  }\n  uVar4 = 0;\n  do {\n    uVar5 = uVar4 + 1;\n    *(undefined1 *)((int)&local_20 + (uVar4 & 0xfffffffc) + (uVar4 & 3)) =\n         *(undefined1 *)(uVar4 + param_2);\n    uVar4 = uVar5;\n  } while (uVar5 < uVar6);\nLAB_0040e93c:\n  iVar3 = 0;\n  if (param_4 == 0) {\n    _memset((void *)((int)this + 8),0,0x10);\n  }\n  else {\n    do {\n      *(undefined1 *)((int)this + 8 + iVar3) = *(undefined1 *)(iVar3 + param_4);\n      iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x10);\n  }\n  FUN_0040efe2(this,&local_20);\n  if (param_1 == '\\0') {\n    FUN_0040ef2e((int)this);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e985",
      "entry": "0040e985",
      "c": "\nvoid FUN_0040e985(uint *param_1,uint *param_2,uint *param_3)\n\n{\n  *param_1 = *param_2 ^ *param_3;\n  param_1[1] = param_2[1] ^ param_3[1];\n  param_1[2] = param_2[2] ^ param_3[2];\n  param_1[3] = param_2[3] ^ param_3[3];\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040e9b7",
      "entry": "0040e9b7",
      "c": "\nvoid __thiscall\nFUN_0040e9b7(void *this,undefined1 (*param_1) [16],uint param_2,undefined1 (*param_3) [16])\n\n{\n  int iVar1;\n  uint uVar2;\n  uint *puVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint uVar8;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  uint local_50;\n  uint local_4c;\n  uint *local_48;\n  undefined4 local_30;\n  undefined4 local_2c;\n  undefined4 local_28;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  uint local_18;\n  uint local_14;\n  uint local_10;\n  uint local_c;\n  uint local_8;\n  uint local_4;\n  \n  if (param_2 != 0) {\n    uVar8 = param_2 >> 4;\n                    /* WARNING: Load size is inaccurate */\n    if (*this == '\\0') {\n      FUN_00420320(&local_10,(uint *)((int)this + 8),0x10);\n      if (uVar8 != 0) {\n        local_48 = (uint *)(*param_1 + 8);\n        puVar3 = (uint *)(*param_3 + 8);\n        do {\n          iVar1 = *(int *)((int)this + 4);\n          puVar4 = (uint *)((int)puVar3 + (int)param_1 + (-8 - (int)param_3));\n          FUN_0040e985(&local_20,puVar4,(uint *)(iVar1 * 0x10 + 0x18 + (int)this));\n          local_5c = *(uint *)(&DAT_004461c8 + (local_20 & 0xff) * 4) ^\n                     *(uint *)(&DAT_00446dc8 + (local_1c >> 0x18) * 4) ^\n                     *(uint *)(&DAT_004469c8 + (local_18 >> 0x10 & 0xff) * 4) ^\n                     *(uint *)(&DAT_004465c8 + (local_14 >> 8 & 0xff) * 4);\n          local_50 = *(uint *)(&DAT_004465c8 + (local_20 >> 8 & 0xff) * 4) ^\n                     *(uint *)(&DAT_004461c8 + (local_1c & 0xff) * 4) ^\n                     *(uint *)(&DAT_00446dc8 + (local_18 >> 0x18) * 4) ^\n                     *(uint *)(&DAT_004469c8 + (local_14 >> 0x10 & 0xff) * 4);\n          local_58 = *(uint *)(&DAT_004469c8 + (local_20 >> 0x10 & 0xff) * 4) ^\n                     *(uint *)(&DAT_004465c8 + (local_1c >> 8 & 0xff) * 4) ^\n                     *(uint *)(&DAT_004461c8 + (local_18 & 0xff) * 4) ^\n                     *(uint *)(&DAT_00446dc8 + (local_14 >> 0x18) * 4);\n          local_54 = *(uint *)(&DAT_00446dc8 + (local_20 >> 0x18) * 4) ^\n                     *(uint *)(&DAT_004469c8 + (local_1c >> 0x10 & 0xff) * 4) ^\n                     *(uint *)(&DAT_004465c8 + (local_18 >> 8 & 0xff) * 4) ^\n                     *(uint *)(&DAT_004461c8 + (local_14 & 0xff) * 4);\n          if (1 < iVar1 + -1) {\n            puVar7 = (uint *)((iVar1 + 1) * 0x10 + (int)this);\n            local_4c = iVar1 + -2;\n            do {\n              uVar2 = puVar7[-2] ^ local_5c;\n              uVar5 = *puVar7 ^ local_58;\n              local_54 = puVar7[1] ^ local_54;\n              uVar6 = puVar7[-1] ^ local_50;\n              local_5c = *(uint *)(&DAT_004469c8 + (uVar5 >> 0x10 & 0xff) * 4) ^\n                         *(uint *)(&DAT_004465c8 + (local_54 >> 8 & 0xff) * 4) ^\n                         *(uint *)(&DAT_00446dc8 + (uVar6 >> 0x18) * 4) ^\n                         *(uint *)(&DAT_004461c8 + (uVar2 & 0xff) * 4);\n              local_50 = *(uint *)(&DAT_004469c8 + (local_54 >> 0x10 & 0xff) * 4) ^\n                         *(uint *)(&DAT_004465c8 + (uVar2 >> 8 & 0xff) * 4) ^\n                         *(uint *)(&DAT_00446dc8 + (uVar5 >> 0x18) * 4) ^\n                         *(uint *)(&DAT_004461c8 + (uVar6 & 0xff) * 4);\n              local_58 = *(uint *)(&DAT_004465c8 + (uVar6 >> 8 & 0xff) * 4) ^\n                         *(uint *)(&DAT_004469c8 + (uVar2 >> 0x10 & 0xff) * 4) ^\n                         *(uint *)(&DAT_00446dc8 + (local_54 >> 0x18) * 4) ^\n                         *(uint *)(&DAT_004461c8 + (uVar5 & 0xff) * 4);\n              puVar7 = puVar7 + -4;\n              local_54 = *(uint *)(&DAT_004469c8 + (uVar6 >> 0x10 & 0xff) * 4) ^\n                         *(uint *)(&DAT_004465c8 + (uVar5 >> 8 & 0xff) * 4) ^\n                         *(uint *)(&DAT_00446dc8 + (uVar2 >> 0x18) * 4) ^\n                         *(uint *)(&DAT_004461c8 + (local_54 & 0xff) * 4);\n              local_4c = local_4c + -1;\n            } while (local_4c != 0);\n          }\n          local_20 = *(uint *)((int)this + 0x28) ^ local_5c;\n          local_14 = *(uint *)((int)this + 0x34) ^ local_54;\n          local_18 = *(uint *)((int)this + 0x30) ^ local_58;\n          local_1c = *(uint *)((int)this + 0x2c) ^ local_50;\n          local_30 = CONCAT13((&DAT_004450c8)[local_1c >> 0x18],\n                              CONCAT12((&DAT_004450c8)[local_18 >> 0x10 & 0xff],\n                                       CONCAT11((&DAT_004450c8)[local_14 >> 8 & 0xff],\n                                                (&DAT_004450c8)[local_20 & 0xff])));\n          local_2c = CONCAT13((&DAT_004450c8)[local_18 >> 0x18],\n                              CONCAT12((&DAT_004450c8)[local_14 >> 0x10 & 0xff],\n                                       CONCAT11((&DAT_004450c8)[local_20 >> 8 & 0xff],\n                                                (&DAT_004450c8)[local_1c & 0xff])));\n          local_28 = CONCAT13((&DAT_004450c8)[local_14 >> 0x18],\n                              CONCAT12((&DAT_004450c8)[local_20 >> 0x10 & 0xff],\n                                       CONCAT11((&DAT_004450c8)[local_1c >> 8 & 0xff],\n                                                (&DAT_004450c8)[local_18 & 0xff])));\n          local_30 = *(uint *)((int)this + 0x18) ^ local_30;\n          local_24 = CONCAT13((&DAT_004450c8)[local_20 >> 0x18],\n                              CONCAT12((&DAT_004450c8)[local_1c >> 0x10 & 0xff],\n                                       CONCAT11((&DAT_004450c8)[local_18 >> 8 & 0xff],\n                                                (&DAT_004450c8)[local_14 & 0xff])));\n          local_4c = *(uint *)((int)this + 0x24) ^ local_24;\n          local_2c = *(uint *)((int)this + 0x1c) ^ local_2c;\n          local_28 = *(uint *)((int)this + 0x20) ^ local_28;\n          if (*(char *)((int)this + 1) != '\\0') {\n            local_30 = local_30 ^ local_10;\n            local_2c = local_2c ^ local_c;\n            local_28 = local_28 ^ local_8;\n            local_4c = local_4c ^ local_4;\n          }\n          local_10 = *puVar4;\n          local_c = local_48[-1];\n          local_8 = *local_48;\n          local_4 = local_48[1];\n          local_48 = local_48 + 4;\n          puVar3[-2] = local_30;\n          puVar3[1] = local_4c;\n          puVar3[-1] = local_2c;\n          *puVar3 = local_28;\n          puVar3 = puVar3 + 4;\n          uVar8 = uVar8 - 1;\n        } while (uVar8 != 0);\n      }\n      FUN_00420320((uint *)((int)this + 8),&local_10,0x10);\n    }\n    else {\n      FUN_0040ee7a(this,param_1,uVar8,param_3);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ee7a",
      "entry": "0040ee7a",
      "c": "\nvoid __thiscall\nFUN_0040ee7a(void *this,undefined1 (*param_1) [16],int param_2,undefined1 (*param_3) [16])\n\n{\n  undefined1 auVar1 [16];\n  undefined1 (*pauVar2) [16];\n  int iVar3;\n  undefined1 auVar4 [16];\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  \n  uVar9 = *(undefined4 *)((int)this + 8);\n  uVar10 = *(undefined4 *)((int)this + 0xc);\n  uVar11 = *(undefined4 *)((int)this + 0x10);\n  uVar12 = *(undefined4 *)((int)this + 0x14);\n  uVar5 = uVar9;\n  uVar6 = uVar10;\n  uVar7 = uVar11;\n  uVar8 = uVar12;\n  if (param_2 != 0) {\n    do {\n      auVar4 = *param_1;\n      uVar9 = auVar4._0_4_;\n      uVar10 = auVar4._4_4_;\n      uVar11 = auVar4._8_4_;\n      uVar12 = auVar4._12_4_;\n      iVar3 = *(int *)((int)this + 4) + -1;\n      auVar4 = *(undefined1 (*) [16])((int)this + *(int *)((int)this + 4) * 0x10 + 0x18) ^ auVar4;\n      if (0 < iVar3) {\n        pauVar2 = (undefined1 (*) [16])((int)this + iVar3 * 0x10 + 0x18);\n        do {\n          auVar1 = *pauVar2;\n          iVar3 = iVar3 + -1;\n          pauVar2 = pauVar2 + -1;\n          auVar4 = aesdec(auVar4,auVar1);\n        } while (0 < iVar3);\n      }\n      auVar4 = aesdeclast(auVar4,*(undefined1 (*) [16])((int)this + 0x18));\n      if (*(char *)((int)this + 1) != '\\0') {\n        auVar1._4_4_ = uVar6;\n        auVar1._0_4_ = uVar5;\n        auVar1._8_4_ = uVar7;\n        auVar1._12_4_ = uVar8;\n        auVar4 = auVar4 ^ auVar1;\n      }\n      *param_3 = auVar4;\n      param_2 = param_2 + -1;\n      param_3 = param_3 + 1;\n      uVar5 = uVar9;\n      uVar6 = uVar10;\n      uVar7 = uVar11;\n      uVar8 = uVar12;\n      param_1 = param_1 + 1;\n    } while (param_2 != 0);\n  }\n  *(undefined4 *)((int)this + 8) = uVar9;\n  *(undefined4 *)((int)this + 0xc) = uVar10;\n  *(undefined4 *)((int)this + 0x10) = uVar11;\n  *(undefined4 *)((int)this + 0x14) = uVar12;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040ef04",
      "entry": "0040ef04",
      "c": "\nbyte FUN_0040ef04(byte param_1,byte param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  \n  bVar2 = 0;\n  if (param_2 != 0) {\n    do {\n      if ((param_2 & 1) != 0) {\n        bVar2 = bVar2 ^ param_1;\n      }\n      bVar1 = param_1 * '\\x02';\n      if ((char)param_1 < '\\0') {\n        bVar1 = bVar1 ^ 0x1b;\n      }\n      param_2 = param_2 >> 1;\n      param_1 = bVar1;\n    } while (param_2 != 0);\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040ef2e",
      "entry": "0040ef2e",
      "c": "\nvoid __fastcall FUN_0040ef2e(int param_1)\n\n{\n  byte *pbVar1;\n  byte *pbVar2;\n  byte *pbVar3;\n  byte bVar4;\n  uint *puVar5;\n  int iVar6;\n  byte *pbVar7;\n  int iVar8;\n  byte *pbVar9;\n  int local_20;\n  uint local_10 [4];\n  \n  local_20 = 1;\n  if (1 < *(int *)(param_1 + 4)) {\n    puVar5 = (uint *)(param_1 + 0x28);\n    do {\n      iVar8 = 0;\n      do {\n        pbVar9 = (byte *)((int)local_10 + iVar8);\n        iVar6 = 4;\n        pbVar7 = (byte *)((int)puVar5 + 2);\n        do {\n          pbVar1 = pbVar7 + 1;\n          pbVar2 = pbVar7 + -1;\n          pbVar3 = pbVar7 + -2;\n          bVar4 = *pbVar7;\n          pbVar7 = pbVar7 + 4;\n          *pbVar9 = (&DAT_00447dc8)[(uint)*pbVar1 * 4 + iVar8] ^\n                    (&DAT_004475c8)[(uint)*pbVar2 * 4 + iVar8] ^\n                    (&DAT_004471c8)[(uint)*pbVar3 * 4 + iVar8] ^\n                    (&DAT_004479c8)[(uint)bVar4 * 4 + iVar8];\n          pbVar9 = pbVar9 + 4;\n          iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        iVar8 = iVar8 + 1;\n      } while (iVar8 < 4);\n      FUN_00420320(puVar5,local_10,0x10);\n      local_20 = local_20 + 1;\n      puVar5 = puVar5 + 4;\n    } while (local_20 < *(int *)(param_1 + 4));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040efe2",
      "entry": "0040efe2",
      "c": "\nuint __thiscall FUN_0040efe2(void *this,uint *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int iVar4;\n  uint uVar5;\n  byte *pbVar6;\n  uint uVar7;\n  int iVar8;\n  undefined4 *puVar9;\n  int iVar10;\n  int iVar11;\n  bool bVar12;\n  bool bVar13;\n  ulonglong uVar14;\n  uint local_2c;\n  undefined4 local_24;\n  undefined4 local_20;\n  byte local_1c [8];\n  byte local_14;\n  byte local_13;\n  byte local_12;\n  byte local_11;\n  byte local_10 [4];\n  byte local_c [12];\n  \n  iVar2 = *(int *)((int)this + 4);\n  iVar10 = iVar2 + -6;\n  uVar14 = FUN_00420320(&local_20,param_1,0x20);\n  uVar5 = (uint)uVar14;\n  iVar8 = 0;\n  uVar7 = 0;\n  iVar11 = 0;\n  if (0 < iVar10) {\n    do {\n      if (*(int *)((int)this + 4) < iVar8) {\n        return uVar5;\n      }\n      if (iVar11 < iVar10) {\n        puVar9 = &local_20 + iVar11;\n        do {\n          if (3 < (int)uVar7) break;\n          iVar1 = uVar7 + iVar8 * 4;\n          uVar3 = *puVar9;\n          iVar11 = iVar11 + 1;\n          puVar9 = puVar9 + 1;\n          uVar7 = uVar7 + 1;\n          *(undefined4 *)((int)this + iVar1 * 4 + 0x18) = uVar3;\n        } while (iVar11 < iVar10);\n      }\n      if (uVar7 == 4) {\n        iVar8 = iVar8 + 1;\n      }\n      uVar5 = -(uint)(uVar7 != 4);\n      uVar7 = uVar7 & uVar5;\n    } while (iVar11 < iVar10);\n  }\n  if (iVar8 <= *(int *)((int)this + 4)) {\n    local_24 = &DAT_0043e198;\n    do {\n      local_20._0_1_ = (byte)local_20 ^ (&DAT_0043e098)[*(byte *)((int)&local_24 + iVar10 * 4 + 1)];\n      local_20._1_1_ = local_20._1_1_ ^ (&DAT_0043e098)[*(byte *)((int)&local_24 + iVar10 * 4 + 2)];\n      local_20._2_1_ = local_20._2_1_ ^ (&DAT_0043e098)[*(byte *)((int)&local_24 + iVar10 * 4 + 3)];\n      local_20._3_1_ = local_20._3_1_ ^ (&DAT_0043e098)[*(byte *)(&local_24 + iVar10)];\n      local_20._0_1_ = *local_24 ^ (byte)local_20;\n      uVar5 = (uint)(byte)local_20;\n      local_24 = local_24 + 1;\n      if (iVar10 == 8) {\n        pbVar6 = local_1c;\n        local_2c = 3;\n        do {\n          iVar11 = 4;\n          do {\n            *pbVar6 = *pbVar6 ^ pbVar6[-4];\n            pbVar6 = pbVar6 + 1;\n            iVar11 = iVar11 + -1;\n          } while (iVar11 != 0);\n          local_2c = local_2c + -1;\n        } while (local_2c != 0);\n        pbVar6 = local_c;\n        local_2c = 3;\n        local_10[0] = local_10[0] ^ (&DAT_0043e098)[local_14];\n        local_10[1] = local_10[1] ^ (&DAT_0043e098)[local_13];\n        local_10[2] = local_10[2] ^ (&DAT_0043e098)[local_12];\n        local_10[3] = local_10[3] ^ (&DAT_0043e098)[local_11];\n        do {\n          iVar11 = 4;\n          do {\n            uVar5 = (uint)pbVar6[-4];\n            *pbVar6 = *pbVar6 ^ pbVar6[-4];\n            pbVar6 = pbVar6 + 1;\n            iVar11 = iVar11 + -1;\n          } while (iVar11 != 0);\n          local_2c = local_2c + -1;\n          iVar11 = 0;\n        } while (local_2c != 0);\nLAB_0040f171:\n        do {\n          iVar1 = *(int *)((int)this + 4);\n          bVar13 = SBORROW4(iVar8,iVar1);\n          iVar4 = iVar8 - iVar1;\n          bVar12 = iVar8 == iVar1;\n          if (!bVar12 && iVar1 <= iVar8) goto LAB_0040f1bc;\n          if (iVar11 < iVar10) {\n            puVar9 = &local_20 + iVar11;\n            do {\n              if (3 < (int)uVar7) break;\n              iVar1 = uVar7 + iVar8 * 4;\n              uVar3 = *puVar9;\n              iVar11 = iVar11 + 1;\n              puVar9 = puVar9 + 1;\n              uVar7 = uVar7 + 1;\n              *(undefined4 *)((int)this + iVar1 * 4 + 0x18) = uVar3;\n            } while (iVar11 < iVar10);\n          }\n          if (uVar7 == 4) {\n            iVar8 = iVar8 + 1;\n          }\n          uVar5 = -(uint)(uVar7 != 4);\n          uVar7 = uVar7 & uVar5;\n        } while (iVar11 < iVar10);\n      }\n      else {\n        if (1 < iVar10) {\n          uVar5 = iVar2 - 7;\n          pbVar6 = local_1c;\n          local_2c = uVar5;\n          do {\n            iVar11 = 4;\n            do {\n              uVar5 = CONCAT31((int3)(uVar5 >> 8),pbVar6[-4]);\n              *pbVar6 = *pbVar6 ^ pbVar6[-4];\n              pbVar6 = pbVar6 + 1;\n              iVar11 = iVar11 + -1;\n            } while (iVar11 != 0);\n            local_2c = local_2c - 1;\n          } while (local_2c != 0);\n        }\n        iVar11 = 0;\n        if (0 < iVar10) goto LAB_0040f171;\n      }\n      iVar11 = *(int *)((int)this + 4);\n      bVar13 = SBORROW4(iVar8,iVar11);\n      iVar4 = iVar8 - iVar11;\n      bVar12 = iVar8 == iVar11;\nLAB_0040f1bc:\n    } while (bVar12 || bVar13 != iVar4 < 0);\n  }\n  return uVar5;\n}\n\n"
    },
    {
      "name": "FUN_0040f1d0",
      "entry": "0040f1d0",
      "c": "\nvoid * __fastcall FUN_0040f1d0(void *param_1)\n\n{\n  *(undefined1 *)((int)param_1 + 0x101) = 0;\n  FUN_0040f3fa(param_1,L\"\");\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0040f1e8",
      "entry": "0040f1e8",
      "c": "\nvoid __fastcall FUN_0040f1e8(int *param_1)\n\n{\n  if (*param_1 != 0) {\n    FreeLibrary((HMODULE)*param_1);\n  }\n  *param_1 = 0;\n  param_1[2] = 0;\n  param_1[3] = 0;\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_0040f279",
      "entry": "0040f204",
      "c": "\nvoid __fastcall thunk_FUN_0040f279(undefined1 *param_1)\n\n{\n  param_1[0x100] = 0;\n  FUN_0040f445(param_1,0x100);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f209",
      "entry": "0040f209",
      "c": "\nundefined4 __thiscall FUN_0040f209(void *this,void *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  wchar_t *pwVar3;\n  int iVar4;\n  wchar_t local_204 [128];\n  wchar_t local_104 [128];\n  \n  iVar4 = 0x80;\n  FUN_0040f28c(this,(uint *)local_104,0x80);\n  FUN_0040f28c(param_1,(uint *)local_204,0x80);\n  iVar1 = _wcscmp(local_104,local_204);\n  iVar2 = 0x80;\n  pwVar3 = local_104;\n  do {\n    *(undefined1 *)pwVar3 = 0;\n    pwVar3 = (wchar_t *)((int)pwVar3 + 1);\n    iVar2 = iVar2 + -1;\n  } while (iVar2 != 0);\n  pwVar3 = local_204;\n  do {\n    *(undefined1 *)pwVar3 = 0;\n    pwVar3 = (wchar_t *)((int)pwVar3 + 1);\n    iVar4 = iVar4 + -1;\n  } while (iVar4 != 0);\n  return CONCAT31((int3)((uint)pwVar3 >> 8),'\\x01' - (iVar1 != 0));\n}\n\n"
    },
    {
      "name": "FUN_0040f279",
      "entry": "0040f279",
      "c": "\nvoid __fastcall FUN_0040f279(undefined1 *param_1)\n\n{\n  param_1[0x100] = 0;\n  FUN_0040f445(param_1,0x100);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f28c",
      "entry": "0040f28c",
      "c": "\nvoid __thiscall FUN_0040f28c(void *this,uint *param_1,uint param_2)\n\n{\n  if (*(char *)((int)this + 0x100) == '\\0') {\n    *(undefined2 *)param_1 = 0;\n  }\n  else {\n    FUN_0040f303(this,(uint *)this,0x80,param_1,param_2,'\\0');\n    *(undefined2 *)((int)param_1 + param_2 * 2 + -2) = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f2c5",
      "entry": "0040f2c5",
      "c": "\nvoid __fastcall FUN_0040f2c5(undefined4 *param_1)\n\n{\n  HMODULE hModule;\n  FARPROC pFVar1;\n  \n  if (*(char *)(param_1 + 1) == '\\0') {\n    hModule = (HMODULE)FUN_0041081b(0x433a78);\n    *param_1 = hModule;\n    if (hModule != (HMODULE)0x0) {\n      pFVar1 = GetProcAddress(hModule,\"CryptProtectMemory\");\n      param_1[2] = pFVar1;\n      pFVar1 = GetProcAddress((HMODULE)*param_1,\"CryptUnprotectMemory\");\n      param_1[3] = pFVar1;\n    }\n    *(undefined1 *)(param_1 + 1) = 1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f303",
      "entry": "0040f303",
      "c": "\nvoid __thiscall\nFUN_0040f303(void *this,uint *param_1,uint param_2,uint *param_3,uint param_4,char param_5)\n\n{\n  if (param_4 <= param_2) {\n    param_2 = param_4;\n  }\n  FUN_00420320(param_3,param_1,param_2 * 2);\n  FUN_0040f344((int)param_3,param_4 * 2,param_5,*(byte *)((int)this + 0x101));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f344",
      "entry": "0040f344",
      "c": "\nvoid FUN_0040f344(int param_1,uint param_2,char param_3,byte param_4)\n\n{\n  code *pcVar1;\n  code *pcVar2;\n  int iVar3;\n  DWORD DVar4;\n  uint uVar5;\n  wchar_t *pwVar6;\n  \n  if (DAT_004481d0 == (code *)0x0) {\n    FUN_0040f2c5((undefined4 *)&DAT_004481c8);\n  }\n  pcVar2 = DAT_004481d4;\n  pcVar1 = DAT_004481d0;\n  if (param_3 == '\\0') {\n    if (DAT_004481d4 == (code *)0x0) goto LAB_0040f3d1;\n    (*(code *)PTR_guard_check_icall_00433278)(param_1,param_2 & 0xfffffff0,param_4);\n    iVar3 = (*pcVar2)();\n    if (iVar3 != 0) {\n      return;\n    }\n    pwVar6 = L\"CryptUnprotectMemory failed\";\n  }\n  else {\n    if (DAT_004481d0 == (code *)0x0) {\nLAB_0040f3d1:\n      DVar4 = GetCurrentProcessId();\n      uVar5 = 0;\n      if (param_2 == 0) {\n        return;\n      }\n      do {\n        *(byte *)(uVar5 + param_1) = *(byte *)(uVar5 + param_1) ^ (char)DVar4 + 'K' + (char)uVar5;\n        uVar5 = uVar5 + 1;\n      } while (uVar5 < param_2);\n      return;\n    }\n    (*(code *)PTR_guard_check_icall_00433278)(param_1,param_2 & 0xfffffff0,param_4);\n    iVar3 = (*pcVar1)();\n    if (iVar3 != 0) {\n      return;\n    }\n    pwVar6 = L\"CryptProtectMemory failed\";\n  }\n  FUN_00406c36(&DAT_00441098,pwVar6);\n  FUN_00406dcb();\n  thunk_FUN_00406e47(&DAT_00441098,(void *)0x2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f3fa",
      "entry": "0040f3fa",
      "c": "\nvoid __thiscall FUN_0040f3fa(void *this,wchar_t *param_1)\n\n{\n  size_t sVar1;\n  uint *puVar2;\n  uint uVar3;\n  char cVar4;\n  \n  if (*param_1 == L'\\0') {\n    *(undefined1 *)((int)this + 0x100) = 0;\n    _memset(this,0,0x100);\n  }\n  else {\n    cVar4 = '\\x01';\n    uVar3 = 0x80;\n    *(undefined1 *)((int)this + 0x100) = 1;\n    puVar2 = (uint *)this;\n    sVar1 = _wcslen(param_1);\n    FUN_0040f303(this,(uint *)param_1,sVar1 + 1,puVar2,uVar3,cVar4);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f445",
      "entry": "0040f445",
      "c": "\nvoid FUN_0040f445(undefined1 *param_1,int param_2)\n\n{\n  if ((param_1 != (undefined1 *)0x0) && (param_2 != 0)) {\n    do {\n      *param_1 = 0;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + -1;\n    } while (param_2 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040f461",
      "entry": "0040f461",
      "c": "\nvoid FUN_0040f461(uint *param_1,uint *param_2,uint *param_3,char param_4)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint local_28;\n  uint local_24;\n  ulong *local_20;\n  uint local_1c;\n  uint local_18;\n  ulong *local_14;\n  ulong *local_10;\n  \n  if (param_4 == '\\0') {\n    local_14 = param_2;\n    FUN_00420320(param_2,param_3,0x40);\n  }\n  else {\n    local_14 = param_3;\n  }\n  local_1c = param_1[2];\n  uVar6 = param_1[1];\n  uVar2 = *param_1;\n  local_18 = param_1[3];\n  uVar3 = param_1[4];\n  local_24 = 0;\n  uVar1 = __byteswap_ulong(*local_14);\n  *local_14 = uVar1;\n  uVar3 = (uVar6 & (local_18 ^ local_1c) ^ local_18) + (uVar2 << 5 | uVar2 >> 0x1b) + uVar1 +\n          uVar3 + 0x5a827999;\n  uVar6 = uVar6 >> 2 | uVar6 << 0x1e;\n  local_20 = local_14 + 3;\n  local_10 = local_14;\n  do {\n    uVar1 = __byteswap_ulong(local_10[1]);\n    local_10[1] = uVar1;\n    uVar5 = uVar2 >> 2 | uVar2 << 0x1e;\n    uVar2 = local_18 + 0x5a827999 +\n            ((local_1c ^ uVar6) & uVar2 ^ local_1c) + (uVar3 << 5 | uVar3 >> 0x1b) + uVar1;\n    uVar1 = __byteswap_ulong(local_20[-1]);\n    local_20[-1] = uVar1;\n    uVar4 = uVar3 >> 2 | uVar3 << 0x1e;\n    uVar3 = local_1c + 0x5a827999 +\n            ((uVar6 ^ uVar5) & uVar3 ^ uVar6) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar1;\n    uVar1 = __byteswap_ulong(*local_20);\n    *local_20 = uVar1;\n    local_18 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar7 = uVar6 + ((uVar4 ^ uVar5) & uVar2 ^ uVar5) +\n                    (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x5a827999 + uVar1;\n    uVar1 = __byteswap_ulong(local_20[1]);\n    local_20[1] = uVar1;\n    local_24 = local_24 + 5;\n    local_1c = uVar3 >> 2 | uVar3 * 0x40000000;\n    local_10 = local_14 + local_24;\n    uVar2 = uVar5 + ((uVar4 ^ local_18) & uVar3 ^ uVar4) +\n                    (uVar7 * 0x20 | uVar7 >> 0x1b) + uVar1 + 0x5a827999;\n    uVar1 = __byteswap_ulong(*local_10);\n    *local_10 = uVar1;\n    uVar6 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar3 = uVar4 + 0x5a827999 +\n            ((local_18 ^ local_1c) & uVar7 ^ local_18) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar1;\n    local_20 = local_20 + 5;\n  } while (local_24 != 0xf);\n  uVar4 = local_14[0xe] ^ local_14[9] ^ local_14[1] ^ local_14[3];\n  uVar5 = local_14[0xd] ^ local_14[8] ^ *local_14 ^ local_14[2];\n  uVar8 = uVar5 << 1 | (uint)((int)uVar5 < 0);\n  uVar4 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n  uVar7 = uVar2 >> 2 | uVar2 * 0x40000000;\n  local_14[1] = uVar4;\n  uVar2 = ((local_1c ^ uVar6) & uVar2 ^ local_1c) + (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar8 +\n          local_18 + 0x5a827999;\n  *local_14 = uVar8;\n  uVar5 = local_14[0xf] ^ local_14[10] ^ local_14[4] ^ local_14[2];\n  uVar4 = ((uVar6 ^ uVar7) & uVar3 ^ uVar6) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar4 +\n          local_1c + 0x5a827999;\n  local_18 = uVar3 >> 2 | uVar3 * 0x40000000;\n  uVar3 = uVar5 << 1 | (uint)((int)uVar5 < 0);\n  local_28 = uVar2 >> 2 | uVar2 * 0x40000000;\n  local_14[2] = uVar3;\n  local_20 = (ulong *)(((local_18 ^ uVar7) & uVar2 ^ uVar7) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar3\n                      + uVar6 + 0x5a827999);\n  uVar6 = local_14[0xb] ^ local_14[5] ^ uVar8 ^ local_14[3];\n  uVar6 = uVar6 << 1 | (uint)((int)uVar6 < 0);\n  local_14[3] = uVar6;\n  local_1c = ((local_18 ^ local_28) & uVar4 ^ local_18) +\n             ((int)local_20 * 0x20 | (uint)local_20 >> 0x1b) + 0x5a827999 + uVar6 + uVar7;\n  local_24 = uVar4 >> 2 | uVar4 * 0x40000000;\n  local_10 = (ulong *)0x11;\n  do {\n    uVar5 = (int)local_10 + 3U & 0xf;\n    uVar4 = (int)local_10 + 5U & 0xf;\n    uVar6 = local_14[(int)local_10 - 5U & 0xf] ^ local_14[(uint)local_10 & 0xf] ^ local_14[uVar5] ^\n            local_14[uVar4];\n    uVar6 = uVar6 << 1 | (uint)((int)uVar6 < 0);\n    local_14[uVar5] = uVar6;\n    uVar7 = (uint)local_20 >> 2 | (int)local_20 << 0x1e;\n    uVar6 = local_18 + 0x6ed9eba1 +\n            (local_28 ^ local_24 ^ (uint)local_20) + (local_1c << 5 | local_1c >> 0x1b) + uVar6;\n    uVar8 = (int)local_10 + 4U & 0xf;\n    uVar11 = (int)local_10 + 6U & 0xf;\n    uVar2 = local_14[(int)local_10 - 4U & 0xf] ^ local_14[(int)local_10 + 1U & 0xf] ^\n            local_14[uVar8] ^ local_14[uVar11];\n    uVar2 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n    local_14[uVar8] = uVar2;\n    uVar9 = local_1c >> 2 | local_1c << 0x1e;\n    uVar2 = local_28 + 0x6ed9eba1 +\n            (local_24 ^ uVar7 ^ local_1c) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar2;\n    uVar10 = (int)local_10 + 7U & 0xf;\n    uVar3 = local_14[(int)local_10 - 3U & 0xf] ^ local_14[(int)local_10 + 2U & 0xf] ^\n            local_14[uVar10] ^ local_14[uVar4];\n    uVar3 = uVar3 << 1 | (uint)((int)uVar3 < 0);\n    local_14[uVar4] = uVar3;\n    local_18 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar6 = local_24 + 0x6ed9eba1 + (uVar6 ^ uVar7 ^ uVar9) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar3\n    ;\n    uVar3 = local_14[(int)local_10 - 8U & 0xf] ^ local_14[(int)local_10 - 2U & 0xf] ^\n            local_14[uVar11] ^ local_14[uVar5];\n    uVar3 = uVar3 << 1 | (uint)((int)uVar3 < 0);\n    local_14[uVar11] = uVar3;\n    local_28 = uVar2 >> 2 | uVar2 * 0x40000000;\n    local_20 = (ulong *)(uVar7 + 0x6ed9eba1 +\n                        (local_18 ^ uVar2 ^ uVar9) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar3);\n    uVar2 = local_14[(int)local_10 - 7U & 0xf] ^ local_14[(int)local_10 - 1U & 0xf] ^\n            local_14[uVar10] ^ local_14[uVar8];\n    uVar2 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n    local_14[uVar10] = uVar2;\n    local_24 = uVar6 >> 2 | uVar6 * 0x40000000;\n    local_1c = uVar9 + 0x6ed9eba1 +\n               (local_18 ^ local_28 ^ uVar6) +\n               ((int)local_20 * 0x20 | (uint)local_20 >> 0x1b) + uVar2;\n    uVar6 = (int)local_10 + 8;\n    local_10 = (ulong *)((int)local_10 + 5U);\n  } while (uVar6 < 0x24);\n  local_10 = (ulong *)0x25;\n  do {\n    uVar4 = (int)local_10 + 3U & 0xf;\n    uVar8 = (int)local_10 + 5U & 0xf;\n    uVar6 = local_14[(int)local_10 - 5U & 0xf] ^ local_14[(uint)local_10 & 0xf] ^ local_14[uVar8] ^\n            local_14[uVar4];\n    uVar2 = uVar6 << 1 | (uint)((int)uVar6 < 0);\n    local_14[uVar4] = uVar2;\n    uVar6 = (uint)local_20 >> 2 | (int)local_20 << 0x1e;\n    uVar2 = (local_1c << 5 | local_1c >> 0x1b) + 0x8f1bbcdc +\n            ((local_24 | (uint)local_20) & local_28 | local_24 & (uint)local_20) + uVar2 + local_18;\n    uVar7 = (int)local_10 + 6U & 0xf;\n    uVar5 = (int)local_10 + 4U & 0xf;\n    uVar3 = local_14[(int)local_10 - 4U & 0xf] ^ local_14[(int)local_10 + 1U & 0xf] ^\n            local_14[uVar5] ^ local_14[uVar7];\n    uVar3 = uVar3 << 1 | (uint)((int)uVar3 < 0);\n    local_14[uVar5] = uVar3;\n    uVar10 = local_1c >> 2 | local_1c << 0x1e;\n    uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar6 | local_1c) & local_24 | uVar6 & local_1c) + uVar3 + local_28;\n    uVar11 = (int)local_10 + 7U & 0xf;\n    uVar9 = local_14[(int)local_10 - 3U & 0xf] ^ local_14[(int)local_10 + 2U & 0xf] ^\n            local_14[uVar11] ^ local_14[uVar8];\n    uVar9 = uVar9 << 1 | (uint)((int)uVar9 < 0);\n    local_14[uVar8] = uVar9;\n    local_18 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar2 | uVar10) & uVar6 | uVar2 & uVar10) + uVar9 + local_24;\n    uVar4 = local_14[(int)local_10 - 8U & 0xf] ^ local_14[(int)local_10 - 2U & 0xf] ^\n            local_14[uVar4] ^ local_14[uVar7];\n    uVar4 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n    local_14[uVar7] = uVar4;\n    local_28 = uVar3 >> 2 | uVar3 * 0x40000000;\n    local_20 = (ulong *)((uVar2 * 0x20 | uVar2 >> 0x1b) +\n                        ((local_18 | uVar3) & uVar10 | local_18 & uVar3) + 0x8f1bbcdc + uVar4 +\n                        uVar6);\n    uVar6 = local_14[(int)local_10 - 7U & 0xf] ^ local_14[(int)local_10 - 1U & 0xf] ^\n            local_14[uVar5] ^ local_14[uVar11];\n    uVar6 = uVar6 << 1 | (uint)((int)uVar6 < 0);\n    local_14[uVar11] = uVar6;\n    local_24 = uVar2 >> 2 | uVar2 * 0x40000000;\n    local_1c = ((int)local_20 * 0x20 | (uint)local_20 >> 0x1b) + 0x8f1bbcdc +\n               ((local_28 | uVar2) & local_18 | local_28 & uVar2) + uVar6 + uVar10;\n    uVar6 = (int)local_10 + 8;\n    local_10 = (ulong *)((int)local_10 + 5U);\n  } while (uVar6 < 0x38);\n  local_10 = (ulong *)0x39;\n  do {\n    uVar5 = (int)local_10 + 3U & 0xf;\n    uVar4 = (int)local_10 + 5U & 0xf;\n    uVar6 = local_14[(int)local_10 - 5U & 0xf] ^ local_14[(uint)local_10 & 0xf] ^ local_14[uVar5] ^\n            local_14[uVar4];\n    uVar6 = uVar6 << 1 | (uint)((int)uVar6 < 0);\n    local_14[uVar5] = uVar6;\n    uVar7 = (uint)local_20 >> 2 | (int)local_20 << 0x1e;\n    uVar6 = (local_28 ^ local_24 ^ (uint)local_20) + uVar6 + local_18 +\n            (local_1c << 5 | local_1c >> 0x1b) + 0xca62c1d6;\n    uVar11 = (int)local_10 + 6U & 0xf;\n    uVar8 = (int)local_10 + 4U & 0xf;\n    uVar2 = local_14[(int)local_10 - 4U & 0xf] ^ local_14[(int)local_10 + 1U & 0xf] ^\n            local_14[uVar8] ^ local_14[uVar11];\n    uVar2 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n    local_14[uVar8] = uVar2;\n    uVar2 = (local_24 ^ uVar7 ^ local_1c) + uVar2 + local_28 +\n            (uVar6 * 0x20 | uVar6 >> 0x1b) + 0xca62c1d6;\n    uVar9 = local_1c >> 2 | local_1c << 0x1e;\n    uVar10 = (int)local_10 + 7U & 0xf;\n    uVar3 = local_14[(int)local_10 - 3U & 0xf] ^ local_14[(int)local_10 + 2U & 0xf] ^\n            local_14[uVar10] ^ local_14[uVar4];\n    uVar3 = uVar3 << 1 | (uint)((int)uVar3 < 0);\n    local_14[uVar4] = uVar3;\n    local_18 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar6 = (uVar6 ^ uVar7 ^ uVar9) + uVar3 + local_24 + (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6\n    ;\n    uVar3 = local_14[(int)local_10 - 8U & 0xf] ^ local_14[(int)local_10 - 2U & 0xf] ^\n            local_14[uVar5] ^ local_14[uVar11];\n    uVar3 = uVar3 << 1 | (uint)((int)uVar3 < 0);\n    local_14[uVar11] = uVar3;\n    local_28 = uVar2 >> 2 | uVar2 * 0x40000000;\n    local_20 = (ulong *)((local_18 ^ uVar2 ^ uVar9) + uVar3 + uVar7 +\n                        (uVar6 * 0x20 | uVar6 >> 0x1b) + 0xca62c1d6);\n    uVar2 = local_14[(int)local_10 - 7U & 0xf] ^ local_14[(int)local_10 - 1U & 0xf] ^\n            local_14[uVar10] ^ local_14[uVar8];\n    uVar2 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n    local_14[uVar10] = uVar2;\n    local_24 = uVar6 >> 2 | uVar6 * 0x40000000;\n    local_1c = ((int)local_20 * 0x20 | (uint)local_20 >> 0x1b) + 0xca62c1d6 +\n               (local_18 ^ local_28 ^ uVar6) + uVar2 + uVar9;\n    uVar6 = (int)local_10 + 8;\n    local_10 = (ulong *)((int)local_10 + 5U);\n  } while (uVar6 < 0x4c);\n  param_1[1] = param_1[1] + (int)local_20;\n  param_1[2] = param_1[2] + local_24;\n  param_1[3] = param_1[3] + local_28;\n  *param_1 = *param_1 + local_1c;\n  param_1[4] = param_1[4] + local_18;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040fcda",
      "entry": "0040fcda",
      "c": "\nvoid FUN_0040fcda(uint *param_1,undefined4 *param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  uint local_40 [16];\n  \n  uVar1 = param_1[6];\n  uVar5 = param_1[6] & 0x3f;\n  uVar2 = param_1[7];\n  *(undefined1 *)(uVar5 + 0x20 + (int)param_1) = 0x80;\n  uVar6 = uVar5 + 1;\n  if (uVar6 != 0x38) {\n    if (0x38 < uVar6) {\n      if (uVar6 < 0x40) {\n        _memset((void *)((int)param_1 + uVar5 + 0x21),0,0x40 - uVar6);\n      }\n      uVar6 = 0;\n      FUN_0040f461(param_1,local_40,param_1 + 8,'\\x01');\n    }\n    _memset((void *)((int)param_1 + uVar6 + 0x20),0,0x38 - uVar6);\n  }\n  uVar3 = __byteswap_ulong(uVar2 << 3 | uVar1 >> 0x1d);\n  param_1[0x16] = uVar3;\n  uVar3 = __byteswap_ulong(uVar1 << 3);\n  param_1[0x17] = uVar3;\n  FUN_0040f461(param_1,local_40,param_1 + 8,'\\x01');\n  iVar7 = (int)param_1 - (int)param_2;\n  iVar4 = 5;\n  do {\n    *param_2 = *(undefined4 *)(iVar7 + (int)param_2);\n    param_2 = param_2 + 1;\n    iVar4 = iVar4 + -1;\n  } while (iVar4 != 0);\n  FUN_0040fd9c(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040fd9c",
      "entry": "0040fd9c",
      "c": "\nvoid FUN_0040fd9c(undefined4 *param_1)\n\n{\n  param_1[6] = 0;\n  param_1[7] = 0;\n  *param_1 = 0x67452301;\n  param_1[1] = 0xefcdab89;\n  param_1[2] = 0x98badcfe;\n  param_1[3] = 0x10325476;\n  param_1[4] = 0xc3d2e1f0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0040fdcd",
      "entry": "0040fdcd",
      "c": "\nuint FUN_0040fdcd(uint *param_1,uint *param_2,uint param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  ulonglong uVar5;\n  uint local_40 [16];\n  \n  uVar3 = param_1[6] & 0x3f;\n  puVar1 = param_1 + 6;\n  uVar2 = *puVar1;\n  *puVar1 = *puVar1 + param_3;\n  param_1[7] = param_1[7] + (uint)CARRY4(uVar2,param_3);\n  uVar2 = uVar3 + param_3;\n  if (uVar2 < 0x40) {\n    uVar4 = 0;\n  }\n  else {\n    uVar4 = -uVar3 + 0x40;\n    FUN_00420320((uint *)((int)param_1 + uVar3 + 0x20),param_2,uVar4);\n    uVar2 = FUN_0040f461(param_1,local_40,param_1 + 8,'\\x01');\n    for (uVar3 = -uVar3 + 0x7f; uVar3 < param_3; uVar3 = uVar3 + 0x40) {\n      uVar2 = FUN_0040f461(param_1,local_40,(uint *)((int)param_2 + (uVar3 - 0x3f)),'\\0');\n      uVar4 = uVar4 + 0x40;\n    }\n    uVar3 = 0;\n  }\n  if (uVar4 < param_3) {\n    uVar5 = FUN_00420320((uint *)((int)param_1 + uVar3 + 0x20),(uint *)((int)param_2 + uVar4),\n                         param_3 - uVar4);\n    uVar2 = (uint)uVar5;\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_0040fe6c",
      "entry": "0040fe6c",
      "c": "\nuint FUN_0040fe6c(uint *param_1,uint *param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint *puVar6;\n  uint *puVar7;\n  ulonglong uVar8;\n  uint local_40 [16];\n  \n  uVar2 = param_1[6] & 0x3f;\n  puVar4 = param_1 + 6;\n  uVar1 = *puVar4;\n  *puVar4 = *puVar4 + param_3;\n  param_1[7] = param_1[7] + (uint)CARRY4(uVar1,param_3);\n  uVar1 = uVar2 + param_3;\n  if (uVar1 < 0x40) {\n    uVar5 = 0;\n  }\n  else {\n    uVar5 = -uVar2 + 0x40;\n    FUN_00420320((uint *)((int)param_1 + uVar2 + 0x20),param_2,uVar5);\n    FUN_0040f461(param_1,local_40,param_1 + 8,'\\x01');\n    uVar1 = -uVar2 + 0x7f;\n    if (uVar1 < param_3) {\n      puVar4 = (uint *)(uVar5 + (int)param_2);\n      do {\n        FUN_0040f461(param_1,local_40,puVar4,'\\0');\n        uVar5 = uVar5 + 0x40;\n        uVar1 = (0x3f - (int)param_2) + (int)(puVar4 + 0x10);\n        puVar6 = local_40;\n        puVar7 = puVar4;\n        for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n          *puVar7 = *puVar6;\n          puVar6 = puVar6 + 1;\n          puVar7 = puVar7 + 1;\n        }\n        puVar4 = puVar4 + 0x10;\n      } while (uVar1 < param_3);\n    }\n    uVar2 = 0;\n  }\n  if (uVar5 < param_3) {\n    uVar8 = FUN_00420320((uint *)(uVar2 + 0x20 + (int)param_1),(uint *)((int)param_2 + uVar5),\n                         param_3 - uVar5);\n    uVar1 = (uint)uVar8;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0040ff33",
      "entry": "0040ff33",
      "c": "\nvoid FUN_0040ff33(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  uVar1 = param_1[8];\n  uVar4 = param_1[8] & 0x3f;\n  uVar2 = param_1[9];\n  *(undefined1 *)(uVar4 + 0x28 + (int)param_1) = 0x80;\n  uVar5 = uVar4 + 1;\n  if (uVar5 != 0x38) {\n    if (0x38 < uVar5) {\n      if (uVar5 < 0x40) {\n        _memset((void *)((int)param_1 + uVar4 + 0x29),0,0x40 - uVar5);\n      }\n      FUN_004100b7(param_1);\n      uVar5 = 0;\n    }\n    _memset((void *)((int)param_1 + uVar5 + 0x28),0,0x38 - uVar5);\n  }\n  uVar3 = __byteswap_ulong(uVar2 << 3 | uVar1 >> 0x1d);\n  param_1[0x18] = uVar3;\n  uVar3 = __byteswap_ulong(uVar1 << 3);\n  param_1[0x19] = uVar3;\n  FUN_004100b7(param_1);\n  uVar3 = __byteswap_ulong(*param_1);\n  *param_2 = uVar3;\n  uVar3 = __byteswap_ulong(param_1[1]);\n  param_2[1] = uVar3;\n  uVar3 = __byteswap_ulong(param_1[2]);\n  param_2[2] = uVar3;\n  uVar3 = __byteswap_ulong(param_1[3]);\n  param_2[3] = uVar3;\n  uVar3 = __byteswap_ulong(param_1[4]);\n  param_2[4] = uVar3;\n  uVar3 = __byteswap_ulong(param_1[5]);\n  param_2[5] = uVar3;\n  uVar3 = __byteswap_ulong(param_1[6]);\n  param_2[6] = uVar3;\n  uVar3 = __byteswap_ulong(param_1[7]);\n  param_2[7] = uVar3;\n  FUN_00410016(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410016",
      "entry": "00410016",
      "c": "\nvoid FUN_00410016(undefined4 *param_1)\n\n{\n  param_1[8] = 0;\n  param_1[9] = 0;\n  *param_1 = 0x6a09e667;\n  param_1[1] = 0xbb67ae85;\n  param_1[2] = 0x3c6ef372;\n  param_1[3] = 0xa54ff53a;\n  param_1[4] = 0x510e527f;\n  param_1[5] = 0x9b05688c;\n  param_1[6] = 0x1f83d9ab;\n  param_1[7] = 0x5be0cd19;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041005c",
      "entry": "0041005c",
      "c": "\nvoid FUN_0041005c(uint *param_1,uint *param_2,uint param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = param_1[8] & 0x3f;\n  puVar1 = param_1 + 8;\n  uVar2 = *puVar1;\n  *puVar1 = *puVar1 + param_3;\n  param_1[9] = param_1[9] + (uint)CARRY4(uVar2,param_3);\n  if (param_3 != 0) {\n    do {\n      uVar2 = 0x40 - uVar3;\n      if (param_3 <= 0x40 - uVar3) {\n        uVar2 = param_3;\n      }\n      FUN_00420320((uint *)((int)param_1 + uVar3 + 0x28),param_2,uVar2);\n      param_2 = (uint *)((int)param_2 + uVar2);\n      uVar3 = uVar3 + uVar2;\n      param_3 = param_3 - uVar2;\n      if (uVar3 == 0x40) {\n        uVar3 = 0;\n        FUN_004100b7(param_1);\n      }\n    } while (param_3 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004100b7",
      "entry": "004100b7",
      "c": "\nvoid FUN_004100b7(uint *param_1)\n\n{\n  int *piVar1;\n  int *piVar2;\n  uint uVar3;\n  uint uVar4;\n  ulong uVar5;\n  uint uVar6;\n  ulong *puVar7;\n  uint *puVar8;\n  uint uVar9;\n  int iVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  uint uVar14;\n  uint local_134;\n  uint local_12c;\n  uint local_128;\n  uint local_120;\n  uint local_11c;\n  ulong local_100;\n  uint local_fc [8];\n  uint local_dc [5];\n  uint local_c8 [50];\n  \n  uVar13 = 0;\n  puVar7 = param_1 + 10;\n  do {\n    uVar5 = __byteswap_ulong(*puVar7);\n    (&local_100)[uVar13] = uVar5;\n    puVar7 = puVar7 + 1;\n    uVar13 = uVar13 + 1;\n  } while (uVar13 < 0x10);\n  iVar10 = 0x30;\n  puVar8 = local_c8;\n  do {\n    uVar13 = puVar8[-0xd];\n    uVar3 = *puVar8;\n    puVar8[2] = ((uVar13 << 0xe | uVar13 >> 0x12) ^ (uVar13 >> 7 | uVar13 << 0x19) ^ uVar13 >> 3) +\n                ((uVar3 << 0xf | uVar3 >> 0x11) ^ (uVar3 << 0xd | uVar3 >> 0x13) ^ uVar3 >> 10) +\n                puVar8[-0xe] + puVar8[-5];\n    iVar10 = iVar10 + -1;\n    puVar8 = puVar8 + 1;\n  } while (iVar10 != 0);\n  uVar9 = 0;\n  local_11c = param_1[3];\n  local_134 = param_1[6];\n  local_120 = param_1[7];\n  uVar3 = param_1[1];\n  uVar12 = param_1[4];\n  uVar13 = *param_1;\n  uVar6 = param_1[2];\n  uVar11 = param_1[5];\n  do {\n    local_128 = uVar11;\n    local_12c = uVar6;\n    uVar14 = uVar13;\n    uVar11 = uVar12;\n    uVar6 = uVar3;\n    uVar4 = local_134;\n    piVar1 = (int *)((int)&DAT_00433b28 + uVar9);\n    piVar2 = (int *)((int)&local_100 + uVar9);\n    uVar9 = uVar9 + 4;\n    iVar10 = ((uVar11 >> 0xb | uVar11 << 0x15) ^ (uVar11 << 7 | uVar11 >> 0x19) ^\n             (uVar11 >> 6 | uVar11 << 0x1a)) + (~uVar11 & local_134 ^ local_128 & uVar11) + *piVar1\n             + *piVar2 + local_120;\n    local_120 = local_134;\n    uVar12 = local_11c + iVar10;\n    local_134 = local_128;\n    local_11c = local_12c;\n    uVar13 = ((uVar14 >> 0xd | uVar14 << 0x13) ^ (uVar14 << 10 | uVar14 >> 0x16) ^\n             (uVar14 >> 2 | uVar14 << 0x1e)) + ((local_12c ^ uVar6) & uVar14 ^ local_12c & uVar6) +\n             iVar10;\n    uVar3 = uVar14;\n  } while (uVar9 < 0x100);\n  param_1[1] = param_1[1] + uVar14;\n  param_1[2] = param_1[2] + uVar6;\n  param_1[3] = param_1[3] + local_12c;\n  param_1[5] = param_1[5] + uVar11;\n  param_1[6] = param_1[6] + local_128;\n  param_1[4] = param_1[4] + uVar12;\n  param_1[7] = param_1[7] + uVar4;\n  *param_1 = *param_1 + uVar13;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410264",
      "entry": "00410264",
      "c": "\nundefined8 __fastcall\nFUN_00410264(undefined4 param_1,undefined4 param_2,uint param_3,int param_4,uint param_5,\n            uint param_6)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  \n  if ((param_4 < (int)param_6) || ((param_4 <= (int)param_6 && (param_3 <= param_5)))) {\n    uVar2 = FUN_0041028f(param_4,param_2,param_3,param_4,param_5,param_6);\n    param_2 = (undefined4)((ulonglong)uVar2 >> 0x20);\n    uVar1 = (undefined4)uVar2;\n  }\n  else {\n    uVar1 = 100;\n  }\n  return CONCAT44(param_2,uVar1);\n}\n\n"
    },
    {
      "name": "FUN_0041028f",
      "entry": "0041028f",
      "c": "\nundefined8 __fastcall\nFUN_0041028f(undefined4 param_1,undefined4 param_2,uint param_3,int param_4,uint param_5,\n            uint param_6)\n\n{\n  uint uVar1;\n  longlong lVar2;\n  undefined8 uVar3;\n  \n  uVar1 = param_5 | param_6;\n  if (uVar1 != 0) {\n    lVar2 = __allmul(param_3,param_4,100,0);\n    uVar3 = __alldiv((uint)lVar2,(uint)((ulonglong)lVar2 >> 0x20),param_5,param_6);\n    param_2 = (undefined4)((ulonglong)uVar3 >> 0x20);\n    uVar1 = (uint)uVar3;\n  }\n  return CONCAT44(param_2,uVar1);\n}\n\n"
    },
    {
      "name": "FUN_004102ba",
      "entry": "004102ba",
      "c": "\nvoid FUN_004102ba(void)\n\n{\n  LPSTR pCVar1;\n  LPSTR _Memory;\n  int unaff_EBP;\n  int iVar2;\n  LPWSTR pWVar3;\n  \n  FUN_0041eb78();\n  if (*(int *)(unaff_EBP + 0x14) == 2) {\n    iVar2 = *(int *)(unaff_EBP + 0x10);\n    pWVar3 = *(LPWSTR *)(unaff_EBP + 0xc);\n    FUN_00411c3b(*(byte **)(unaff_EBP + 8),(ushort *)pWVar3,iVar2);\n  }\n  else {\n    _Memory = (LPSTR)0x0;\n    *(undefined4 *)(unaff_EBP + -0x24) = 0;\n    *(undefined4 *)(unaff_EBP + -0x20) = 0;\n    *(undefined4 *)(unaff_EBP + -0x1c) = 0;\n    *(undefined4 *)(unaff_EBP + -0x18) = 0;\n    *(undefined1 *)(unaff_EBP + -0x14) = 0;\n    iVar2 = *(int *)(unaff_EBP + 0x10);\n    *(undefined4 *)(unaff_EBP + -4) = 0;\n    *(undefined4 *)(unaff_EBP + -0x10) = 0;\n    if (*(int *)(unaff_EBP + 0x14) == 1) {\n      FUN_004020bd((void *)(unaff_EBP + -0x24),iVar2 + 1);\n      pCVar1 = *(LPSTR *)(unaff_EBP + -0x24);\n      FUN_0041042a(*(char **)(unaff_EBP + 8),pCVar1,*(uint *)(unaff_EBP + -0x20));\n      *(LPSTR *)(unaff_EBP + -0x10) = pCVar1;\n      _Memory = pCVar1;\n    }\n    else {\n      pCVar1 = *(LPSTR *)(unaff_EBP + 8);\n    }\n    pWVar3 = *(LPWSTR *)(unaff_EBP + 0xc);\n    FUN_00411b84(pCVar1,pWVar3,iVar2);\n    *(undefined4 *)(unaff_EBP + -4) = 1;\n    if (*(int *)(unaff_EBP + -0x10) != 0) {\n      if (*(char *)(unaff_EBP + -0x14) != '\\0') {\n        FUN_0040f445(_Memory,*(int *)(unaff_EBP + -0x1c));\n      }\n      FID_conflict__free(_Memory);\n    }\n  }\n  if (iVar2 != 0) {\n    pWVar3[iVar2 + -1] = L'\\0';\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410371",
      "entry": "00410371",
      "c": "\nushort * FUN_00410371(ushort *param_1,int param_2,int param_3)\n\n{\n  ushort uVar1;\n  bool bVar2;\n  char cVar3;\n  bool bVar4;\n  uint uVar5;\n  \n  uVar1 = *param_1;\n  while (cVar3 = FUN_0041048d((uint)uVar1), cVar3 != '\\0') {\n    param_1 = param_1 + 1;\n    uVar1 = *param_1;\n  }\n  if (uVar1 == 0) {\n    param_1 = (ushort *)0x0;\n  }\n  else {\n    bVar4 = false;\n    uVar5 = 0;\n    bVar2 = false;\n    do {\n      if ((!bVar4) && (cVar3 = FUN_0041048d((uint)*param_1), bVar4 = bVar2, cVar3 != '\\0')) break;\n      if (*param_1 == 0x22) {\n        if (param_1[1] == 0x22) {\n          if ((param_2 != 0) && (uVar5 < param_3 - 1U)) {\n            *(undefined2 *)(param_2 + uVar5 * 2) = 0x22;\n            uVar5 = uVar5 + 1;\n          }\n          param_1 = param_1 + 1;\n          bVar4 = bVar2;\n        }\n        else {\n          bVar2 = !bVar4;\n          bVar4 = bVar2;\n        }\n      }\n      else if ((param_2 != 0) && (bVar4 = bVar2, uVar5 < param_3 - 1U)) {\n        *(ushort *)(param_2 + uVar5 * 2) = *param_1;\n        uVar5 = uVar5 + 1;\n      }\n      param_1 = param_1 + 1;\n    } while (*param_1 != 0);\n    if (param_2 != 0) {\n      *(undefined2 *)(param_2 + uVar5 * 2) = 0;\n    }\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0041042a",
      "entry": "0041042a",
      "c": "\nvoid FUN_0041042a(char *param_1,LPSTR param_2,uint param_3)\n\n{\n  size_t sVar1;\n  \n  sVar1 = _strlen(param_1);\n  if (sVar1 + 1 < param_3) {\n    param_3 = sVar1 + 1;\n  }\n  OemToCharBuffA(param_1,param_2,param_3);\n  param_2[param_3 - 1] = '\\0';\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041045b",
      "entry": "0041045b",
      "c": "\nuint FUN_0041045b(int param_1)\n\n{\n  uint uVar1;\n  \n  if (((param_1 < 0x41) || (0x5a < param_1)) && (param_1 = param_1 - 0x61, 0x19 < (uint)param_1)) {\n    uVar1 = param_1 & 0xffffff00;\n  }\n  else {\n    uVar1 = CONCAT31((int3)((uint)param_1 >> 8),1);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0041047a",
      "entry": "0041047a",
      "c": "\nundefined4 FUN_0041047a(int param_1)\n\n{\n  return CONCAT31((int3)(param_1 - 0x30U >> 8),'\\x01' - (9 < param_1 - 0x30U));\n}\n\n"
    },
    {
      "name": "FUN_0041048d",
      "entry": "0041048d",
      "c": "\nundefined1 FUN_0041048d(int param_1)\n\n{\n  undefined1 uVar1;\n  \n  if ((param_1 == 0x20) || (param_1 == 9)) {\n    uVar1 = 1;\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_004104a4",
      "entry": "004104a4",
      "c": "\nundefined4 FUN_004104a4(int param_1)\n\n{\n  short sVar1;\n  \n  sVar1 = (short)param_1;\n  if ((ushort)(param_1 + -0x61) < 0x1a) {\n    sVar1 = sVar1 + -0x20;\n  }\n  return CONCAT22((short)((uint)(param_1 + -0x61) >> 0x10),sVar1);\n}\n\n"
    },
    {
      "name": "FUN_004104bd",
      "entry": "004104bd",
      "c": "\nvoid FUN_004104bd(uint param_1,int param_2,int param_3,int param_4)\n\n{\n  short sVar1;\n  bool bVar2;\n  int iVar3;\n  short *psVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  bool bVar8;\n  undefined8 uVar9;\n  longlong lVar10;\n  uint local_6c;\n  short local_64 [50];\n  \n  iVar3 = 1;\n  uVar6 = 0;\n  local_6c = 1;\n  uVar7 = 0;\n  if ((param_2 < 1) && (param_2 < 0)) {\n    bVar8 = param_1 != 0;\n    param_1 = -param_1;\n    bVar2 = true;\n    param_2 = -(param_2 + (uint)bVar8);\n  }\n  else {\n    iVar3 = 0;\n    bVar2 = false;\n  }\n  lVar10 = CONCAT44(param_2,iVar3);\n  do {\n    uVar5 = (uint)((ulonglong)lVar10 >> 0x20);\n    if ((uint)(param_4 - iVar3) <= local_6c) break;\n    uVar9 = __allrem(param_1,uVar5,10,0);\n    local_64[uVar7] = (short)uVar9 + 0x30;\n    uVar7 = uVar7 + 1;\n    local_6c = local_6c + 1;\n    lVar10 = __alldiv(param_1,uVar5,10,0);\n    param_1 = (uint)lVar10;\n  } while (lVar10 != 0);\n  if (bVar2) {\n    local_64[uVar7] = 0x2d;\n    uVar7 = uVar7 + 1;\n  }\n  if (uVar7 != 0) {\n    psVar4 = local_64 + (uVar7 - 1);\n    do {\n      sVar1 = *psVar4;\n      psVar4 = psVar4 + -1;\n      *(short *)(param_3 + uVar6 * 2) = sVar1;\n      uVar6 = uVar6 + 1;\n    } while (uVar6 < uVar7);\n  }\n  *(undefined2 *)(uVar7 * 2 + param_3) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410580",
      "entry": "00410580",
      "c": "\nvoid FUN_00410580(char *param_1,int param_2,uint param_3)\n\n{\n  size_t sVar1;\n  \n  sVar1 = _strlen(param_1);\n  if (sVar1 < param_3) {\n    FUN_004105a7(param_1 + sVar1,param_2,param_3 - sVar1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004105a7",
      "entry": "004105a7",
      "c": "\nvoid FUN_004105a7(char *param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_3 != 0) {\n    iVar1 = param_3 + -1;\n    if (iVar1 != 0) {\n      iVar2 = param_2 - (int)param_1;\n      do {\n        if (param_1[iVar2] == '\\0') break;\n        *param_1 = param_1[iVar2];\n        param_1 = param_1 + 1;\n        iVar1 = iVar1 + -1;\n      } while (iVar1 != 0);\n    }\n    *param_1 = '\\0';\n  }\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_00411fbb",
      "entry": "004105d5",
      "c": "\nint thunk_FUN_00411fbb(PCNZWCH param_1,PCNZWCH param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = CompareStringW(0x400,0x1001,param_1,-1,param_2,-1);\n  return iVar1 + -2;\n}\n\n"
    },
    {
      "name": "FUN_004105da",
      "entry": "004105da",
      "c": "\nvoid FUN_004105da(wchar_t *param_1,int param_2,uint param_3)\n\n{\n  size_t sVar1;\n  \n  sVar1 = _wcslen(param_1);\n  if (sVar1 < param_3) {\n    FUN_00410602(param_1 + sVar1,param_2,param_3 - sVar1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410602",
      "entry": "00410602",
      "c": "\nvoid FUN_00410602(short *param_1,int param_2,int param_3)\n\n{\n  short sVar1;\n  int iVar2;\n  int iVar3;\n  \n  if (param_3 != 0) {\n    iVar2 = param_3 + -1;\n    if (iVar2 != 0) {\n      iVar3 = param_2 - (int)param_1;\n      do {\n        sVar1 = *(short *)(iVar3 + (int)param_1);\n        if (sVar1 == 0) break;\n        *param_1 = sVar1;\n        param_1 = param_1 + 1;\n        iVar2 = iVar2 + -1;\n      } while (iVar2 != 0);\n    }\n    *param_1 = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410637",
      "entry": "00410637",
      "c": "\nint * __fastcall FUN_00410637(int *param_1)\n\n{\n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  param_1[3] = 0;\n  *(undefined1 *)(param_1 + 4) = 0;\n  FUN_00410708(param_1);\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00410659",
      "entry": "00410659",
      "c": "\nvoid __thiscall FUN_00410659(void *this,wchar_t *param_1)\n\n{\n  int iVar1;\n  size_t sVar2;\n  \n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = L\"\";\n  }\n  iVar1 = *(int *)((int)this + 4);\n  sVar2 = _wcslen(param_1);\n  FUN_004017e9(this,sVar2 + 1);\n                    /* WARNING: Load size is inaccurate */\n  _wcscpy((wchar_t *)(*this + iVar1 * 2),param_1);\n  *(int *)((int)this + 0x18) = *(int *)((int)this + 0x18) + 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410695",
      "entry": "00410695",
      "c": "\nvoid * __fastcall FUN_00410695(void *param_1)\n\n{\n  void *local_8;\n  \n  local_8 = param_1;\n  FUN_004106a7(param_1,&local_8);\n  return local_8;\n}\n\n"
    },
    {
      "name": "FUN_004106a7",
      "entry": "004106a7",
      "c": "\nuint __thiscall FUN_004106a7(void *this,undefined4 *param_1)\n\n{\n  wchar_t *_Str;\n  uint uVar1;\n  size_t sVar2;\n  \n  if (*(uint *)((int)this + 0x14) < *(uint *)((int)this + 4)) {\n                    /* WARNING: Load size is inaccurate */\n    _Str = (wchar_t *)(*this + *(uint *)((int)this + 0x14) * 2);\n    sVar2 = _wcslen(_Str);\n    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + sVar2 + 1;\n    if (param_1 != (undefined4 *)0x0) {\n      *param_1 = _Str;\n    }\n    uVar1 = CONCAT31((int3)((uint)param_1 >> 8),1);\n  }\n  else {\n    if (param_1 != (undefined4 *)0x0) {\n      *param_1 = 0;\n    }\n    uVar1 = (uint)param_1 & 0xffffff00;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_004106e3",
      "entry": "004106e3",
      "c": "\nundefined4 __thiscall FUN_004106e3(void *this,short *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  void *local_8;\n  \n  local_8 = this;\n  uVar1 = FUN_004106a7(this,&local_8);\n  if ((char)uVar1 != '\\0') {\n    uVar1 = FUN_00410602(param_1,(int)local_8,param_2);\n    uVar1 = CONCAT31((int3)((uint)uVar1 >> 8),1);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00410708",
      "entry": "00410708",
      "c": "\nvoid __fastcall FUN_00410708(int *param_1)\n\n{\n  param_1[5] = 0;\n  RemoveAll(param_1);\n  param_1[6] = 0;\n  param_1[0x17] = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041071e",
      "entry": "0041071e",
      "c": "\nvoid __fastcall FUN_0041071e(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x14) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410723",
      "entry": "00410723",
      "c": "\n/* WARNING: Removing unreachable block (ram,0x00410779) */\n/* WARNING: Removing unreachable block (ram,0x00410731) */\n/* WARNING: Removing unreachable block (ram,0x00410754) */\n\nuint FUN_00410723(void)\n\n{\n  uint *puVar1;\n  int iVar2;\n  uint uStack_20;\n  \n  puVar1 = (uint *)cpuid(0x80000000);\n  if ((*puVar1 & 0x7fffffff) < 7) {\n    if ((*puVar1 & 0x7fffffff) == 0) {\n      return 0;\n    }\n  }\n  else {\n    iVar2 = cpuid_Extended_Feature_Enumeration_info(7);\n    if ((*(uint *)(iVar2 + 4) & 0x20) != 0) {\n      return 5;\n    }\n  }\n  iVar2 = cpuid_Version_info(1);\n  if ((*(uint *)(iVar2 + 0xc) & 0x80000) == 0) {\n    if ((*(uint *)(iVar2 + 0xc) & 0x200) == 0) {\n      if ((*(uint *)(iVar2 + 8) & 0x4000000) == 0) {\n        uStack_20 = *(uint *)(iVar2 + 8) >> 0x19 & 1;\n      }\n      else {\n        uStack_20 = 2;\n      }\n    }\n    else {\n      uStack_20 = 3;\n    }\n  }\n  else {\n    uStack_20 = 4;\n  }\n  return uStack_20;\n}\n\n"
    },
    {
      "name": "FUN_004107bc",
      "entry": "004107bc",
      "c": "\nbool FUN_004107bc(void)\n\n{\n  BOOL BVar1;\n  bool bVar2;\n  _SID_IDENTIFIER_AUTHORITY local_14;\n  PSID local_c;\n  uint local_8;\n  \n  local_14.Value[4] = '\\0';\n  local_14.Value[5] = '\\x05';\n  local_14.Value[0] = '\\0';\n  local_14.Value[1] = '\\0';\n  local_14.Value[2] = '\\0';\n  local_14.Value[3] = '\\0';\n  local_8 = AllocateAndInitializeSid(&local_14,'\\x02',0x20,0x220,0,0,0,0,0,0,&local_c);\n  bVar2 = local_8 == 0;\n  if (!bVar2) {\n    BVar1 = CheckTokenMembership((HANDLE)0x0,local_c,(PBOOL)&local_8);\n    local_8 = local_8 & -(uint)(BVar1 != 0);\n    FreeSid(local_c);\n    bVar2 = local_8 == 0;\n  }\n  return !bVar2;\n}\n\n"
    },
    {
      "name": "FUN_0041081b",
      "entry": "0041081b",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041081b(int param_1)\n\n{\n  UINT UVar1;\n  WCHAR local_1004 [2046];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x410828;\n  UVar1 = GetSystemDirectoryW(local_1004,0x800);\n  if (UVar1 != 0) {\n    FUN_0040bdf3((ushort *)local_1004,param_1,local_1004,0x800);\n    LoadLibraryW(local_1004);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410863",
      "entry": "00410863",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_00410863(byte param_1)\n\n{\n  HMODULE hModule;\n  FARPROC pFVar1;\n  DWORD DVar2;\n  HANDLE pvVar3;\n  DWORD DVar4;\n  BOOL BVar5;\n  ushort *puVar6;\n  wchar_t *pwVar7;\n  uint uVar8;\n  LPCWSTR pWVar9;\n  size_t nNumberOfCharsToWrite;\n  uint uVar10;\n  wchar_t *pwVar11;\n  bool bVar12;\n  WCHAR *lpBuffer;\n  uint *lpNumberOfCharsWritten;\n  int iVar13;\n  UINT UVar14;\n  LPVOID lpReserved;\n  uint uStack_b3c8;\n  wchar_t *apwStack_b3c4 [8];\n  wchar_t *apwStack_b3a4 [53];\n  undefined1 auStack_b2d0 [520];\n  WCHAR aWStack_b0c8 [2048];\n  WCHAR aWStack_a0c8 [2148];\n  short asStack_9000 [2048];\n  ushort auStack_8000 [16382];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x41086d;\n  bVar12 = false;\n  hModule = GetModuleHandleW(L\"kernel32\");\n  if (hModule != (HMODULE)0x0) {\n    pFVar1 = GetProcAddress(hModule,\"SetDllDirectoryW\");\n    if (pFVar1 != (FARPROC)0x0) {\n      (*(code *)PTR_guard_check_icall_00433278)(-(uint)(param_1 != 0) & 0x4335f4);\n      (*pFVar1)();\n    }\n    pFVar1 = GetProcAddress(hModule,\"SetDefaultDllDirectories\");\n    bVar12 = pFVar1 != (FARPROC)0x0;\n    if (bVar12) {\n      (*(code *)PTR_guard_check_icall_00433278)(((param_1 ^ 1) + 1) * 0x800);\n      (*pFVar1)();\n    }\n  }\n  uVar10 = 0;\n  apwStack_b3c4[0] = L\"version.dll\";\n  apwStack_b3c4[1] = L\"DXGIDebug.dll\";\n  apwStack_b3c4[2] = L\"sfc_os.dll\";\n  apwStack_b3c4[3] = L\"SSPICLI.DLL\";\n  apwStack_b3c4[4] = L\"rsaenh.dll\";\n  apwStack_b3c4[5] = L\"UXTheme.dll\";\n  apwStack_b3c4[6] = L\"dwmapi.dll\";\n  apwStack_b3c4[7] = L\"cryptbase.dll\";\n  apwStack_b3a4[0] = L\"lpk.dll\";\n  apwStack_b3a4[1] = L\"usp10.dll\";\n  apwStack_b3a4[2] = L\"clbcatq.dll\";\n  apwStack_b3a4[3] = L\"comres.dll\";\n  apwStack_b3a4[4] = L\"ws2_32.dll\";\n  apwStack_b3a4[5] = L\"ws2help.dll\";\n  apwStack_b3a4[6] = L\"psapi.dll\";\n  apwStack_b3a4[7] = L\"ieframe.dll\";\n  apwStack_b3a4[8] = L\"ntshrui.dll\";\n  apwStack_b3a4[9] = L\"atl.dll\";\n  apwStack_b3a4[10] = L\"setupapi.dll\";\n  apwStack_b3a4[0xb] = L\"apphelp.dll\";\n  apwStack_b3a4[0xc] = L\"userenv.dll\";\n  apwStack_b3a4[0xd] = L\"netapi32.dll\";\n  apwStack_b3a4[0xe] = L\"shdocvw.dll\";\n  apwStack_b3a4[0xf] = L\"crypt32.dll\";\n  apwStack_b3a4[0x10] = L\"msasn1.dll\";\n  apwStack_b3a4[0x11] = L\"cryptui.dll\";\n  apwStack_b3a4[0x12] = L\"wintrust.dll\";\n  apwStack_b3a4[0x13] = L\"shell32.dll\";\n  apwStack_b3a4[0x14] = L\"secur32.dll\";\n  apwStack_b3a4[0x15] = L\"cabinet.dll\";\n  apwStack_b3a4[0x16] = L\"oleaccrc.dll\";\n  apwStack_b3a4[0x17] = L\"ntmarta.dll\";\n  apwStack_b3a4[0x18] = L\"profapi.dll\";\n  apwStack_b3a4[0x19] = L\"WindowsCodecs.dll\";\n  apwStack_b3a4[0x1a] = L\"srvcli.dll\";\n  apwStack_b3a4[0x1b] = L\"cscapi.dll\";\n  apwStack_b3a4[0x1c] = L\"slc.dll\";\n  apwStack_b3a4[0x1d] = L\"imageres.dll\";\n  apwStack_b3a4[0x1e] = L\"dnsapi.DLL\";\n  apwStack_b3a4[0x1f] = L\"iphlpapi.DLL\";\n  apwStack_b3a4[0x20] = L\"WINNSI.DLL\";\n  apwStack_b3a4[0x21] = L\"netutils.dll\";\n  apwStack_b3a4[0x22] = L\"mpr.dll\";\n  apwStack_b3a4[0x23] = L\"devrtl.dll\";\n  apwStack_b3a4[0x24] = L\"propsys.dll\";\n  apwStack_b3a4[0x25] = L\"mlang.dll\";\n  apwStack_b3a4[0x26] = L\"samcli.dll\";\n  apwStack_b3a4[0x27] = L\"samlib.dll\";\n  apwStack_b3a4[0x28] = L\"wkscli.dll\";\n  apwStack_b3a4[0x29] = L\"dfscli.dll\";\n  apwStack_b3a4[0x2a] = L\"browcli.dll\";\n  apwStack_b3a4[0x2b] = L\"rasadhlp.dll\";\n  apwStack_b3a4[0x2c] = L\"dhcpcsvc6.dll\";\n  apwStack_b3a4[0x2d] = L\"dhcpcsvc.dll\";\n  apwStack_b3a4[0x2e] = L\"XmlLite.dll\";\n  apwStack_b3a4[0x2f] = L\"linkinfo.dll\";\n  apwStack_b3a4[0x30] = L\"cryptsp.dll\";\n  apwStack_b3a4[0x31] = L\"RpcRtRemote.dll\";\n  apwStack_b3a4[0x32] = L\"aclui.dll\";\n  apwStack_b3a4[0x33] = L\"dsrole.dll\";\n  apwStack_b3a4[0x34] = L\"peerdist.dll\";\n  if ((*PTR_s_xlistpos_0043e1a4 != 'x') &&\n     (DVar2 = FID_conflict__atoi(PTR_s_xlistpos_0043e1a4), DVar2 != 0)) {\n    GetModuleFileNameW((HMODULE)0x0,aWStack_a0c8,0x800);\n    pvVar3 = CreateFileW(aWStack_a0c8,0x80000000,1,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);\n    if ((pvVar3 != (HANDLE)0xffffffff) &&\n       ((DVar4 = SetFilePointer(pvVar3,DVar2,(PLONG)0x0,0), DVar4 == DVar2 &&\n        (BVar5 = ReadFile(pvVar3,auStack_8000,0x7ffe,&uStack_b3c8,(LPOVERLAPPED)0x0), BVar5 != 0))))\n    {\n      *(undefined2 *)((int)auStack_8000 + (uStack_b3c8 & 0xfffffffe)) = 0;\n      puVar6 = auStack_8000;\n      while (puVar6 = FUN_00410371(puVar6,(int)auStack_b2d0,0x104), puVar6 != (ushort *)0x0) {\n        FUN_0041081b((int)auStack_b2d0);\n      }\n    }\n    CloseHandle(pvVar3);\n  }\n  GetModuleFileNameW((HMODULE)0x0,aWStack_b0c8,0x800);\n  iVar13 = 0x800;\n  pwVar7 = FUN_0040c29a(aWStack_b0c8);\n  FUN_00410602(asStack_9000,(int)pwVar7,iVar13);\n  do {\n    uVar8 = FUN_0040b146();\n    if (((uVar8 < 0x600) || (iVar13 = FUN_0041081b((int)apwStack_b3c4[uVar10]), iVar13 == 0)) ||\n       (iVar13 = CompareStringW(0x400,0x1001,apwStack_b3c4[uVar10],-1,L\"DXGIDebug.dll\",-1),\n       iVar13 == 2)) {\n      pwVar7 = apwStack_b3c4[uVar10];\n      FUN_0040c310(aWStack_b0c8,(int)pwVar7,0x800);\n      DVar2 = GetFileAttributesW(aWStack_b0c8);\n      if (DVar2 != 0xffffffff) break;\n    }\n    uVar10 = uVar10 + 1;\n    pwVar7 = (wchar_t *)0x0;\n  } while (uVar10 < 8);\n  pwVar11 = pwVar7;\n  if (!bVar12) {\n    uVar10 = 0;\n    do {\n      pwVar11 = apwStack_b3a4[uVar10];\n      FUN_0040c310(aWStack_b0c8,(int)pwVar11,0x800);\n      DVar2 = GetFileAttributesW(aWStack_b0c8);\n      if (DVar2 != 0xffffffff) break;\n      uVar10 = uVar10 + 1;\n      pwVar11 = pwVar7;\n    } while (uVar10 < 0x35);\n  }\n  if (pwVar11 == (wchar_t *)0x0) {\n    return;\n  }\n  FUN_0040c2e4(aWStack_b0c8);\n  uVar10 = FUN_0040b146();\n  if (uVar10 < 0x600) {\n    FUN_00404092(aWStack_a0c8,0x864,\n                 L\"Please remove %s from %s folder. It is unsecure to run %s until it is done.\");\n    BVar5 = AllocConsole();\n    if (BVar5 != 0) {\n      DVar2 = GetCurrentProcessId();\n      AttachConsole(DVar2);\n      lpReserved = (LPVOID)0x0;\n      lpNumberOfCharsWritten = &uStack_b3c8;\n      nNumberOfCharsToWrite = _wcslen(aWStack_a0c8);\n      lpBuffer = aWStack_a0c8;\n      pvVar3 = GetStdHandle(0xfffffff4);\n      WriteConsoleW(pvVar3,lpBuffer,nNumberOfCharsToWrite,lpNumberOfCharsWritten,lpReserved);\n      Sleep(10000);\n      FreeConsole();\n    }\n  }\n  else {\n    FUN_0041081b(0x433d10);\n    FUN_0041081b(0x434250);\n    pwVar7 = (wchar_t *)FUN_0040e617(0xf1);\n    FUN_00404092(aWStack_a0c8,0x864,pwVar7);\n    UVar14 = 0x30;\n    pWVar9 = (LPCWSTR)FUN_0040e617(0xf0);\n    FUN_0041a7e4((HWND)0x0,aWStack_a0c8,pWVar9,UVar14);\n  }\n                    /* WARNING: Subroutine does not return */\n  ExitProcess(0);\n}\n\n"
    },
    {
      "name": "FUN_00410e08",
      "entry": "00410e08",
      "c": "\nvoid FUN_00410e08(void)\n\n{\n  char cVar1;\n  \n  thunk_FUN_0041b568();\n  cVar1 = FUN_00411b5d();\n  if (cVar1 != '\\0') {\n    thunk_FUN_00406e47(&DAT_00441098,(void *)0xff);\n  }\n  if (DAT_004410a4 != '\\0') {\n    thunk_FUN_00406e47(&DAT_00441098,(void *)0xff);\n  }\n  SetThreadExecutionState(1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410e46",
      "entry": "00410e46",
      "c": "\nuint * __thiscall FUN_00410e46(void *this,uint param_1)\n\n{\n  HANDLE pvVar1;\n  \n  *(uint *)this = param_1;\n  if (param_1 < 0x41) {\n    if (param_1 == 0) {\n      *(undefined4 *)this = 1;\n      param_1 = 1;\n    }\n  }\n  else {\n    *(undefined4 *)this = 0x40;\n    param_1 = 0x40;\n  }\n  *(undefined4 *)((int)this + 0x104) = 0;\n  if (0x40 < param_1) {\n    *(undefined4 *)this = 0x40;\n  }\n  *(undefined1 *)((int)this + 0x314) = 0;\n  InitializeCriticalSection((LPCRITICAL_SECTION)((int)this + 800));\n  pvVar1 = CreateSemaphoreW((LPSECURITY_ATTRIBUTES)0x0,0,0x40,(LPCWSTR)0x0);\n  *(HANDLE *)((int)this + 0x318) = pvVar1;\n  pvVar1 = CreateEventW((LPSECURITY_ATTRIBUTES)0x0,1,1,(LPCWSTR)0x0);\n  *(HANDLE *)((int)this + 0x31c) = pvVar1;\n  if ((*(int *)((int)this + 0x318) == 0) || (pvVar1 == (HANDLE)0x0)) {\n    FUN_00406c36(&DAT_00441098,L\"\\nThread pool initialization failed.\");\n    thunk_FUN_00406e47(&DAT_00441098,(void *)0x2);\n  }\n  *(undefined4 *)((int)this + 0x30c) = 0;\n  *(undefined4 *)((int)this + 0x310) = 0;\n  *(undefined4 *)((int)this + 0x108) = 0;\n  return (uint *)this;\n}\n\n"
    },
    {
      "name": "FUN_00410eed",
      "entry": "00410eed",
      "c": "\nvoid __fastcall FUN_00410eed(int param_1)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  ExceptionList = &local_10;\n  FUN_004111cf(param_1);\n  uVar1 = 0;\n  *(undefined1 *)(param_1 + 0x314) = 1;\n  ReleaseSemaphore(*(HANDLE *)(param_1 + 0x318),0x40,(LPLONG)0x0);\n  if (*(int *)(param_1 + 0x104) != 0) {\n    puVar2 = (undefined4 *)(param_1 + 4);\n    do {\n      FUN_00410fe4((HANDLE)*puVar2);\n      CloseHandle((HANDLE)*puVar2);\n      uVar1 = uVar1 + 1;\n      puVar2 = puVar2 + 1;\n    } while (uVar1 < *(uint *)(param_1 + 0x104));\n  }\n  DeleteCriticalSection((LPCRITICAL_SECTION)(param_1 + 800));\n  CloseHandle(*(HANDLE *)(param_1 + 0x318));\n  CloseHandle(*(HANDLE *)(param_1 + 0x31c));\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410f86",
      "entry": "00410f86",
      "c": "\nvoid __thiscall FUN_00410f86(void *this,uint param_1,uint param_2)\n\n{\n  if (*(int *)((int)this + 0x104) == 0) {\n    FUN_0041101f((uint *)this);\n  }\n  if (0x3f < *(uint *)((int)this + 0x108)) {\n    FUN_004111cf((int)this);\n  }\n  *(uint *)((int)this + *(int *)((int)this + 0x30c) * 8 + 0x10c) = param_1;\n  *(uint *)((int)this + *(int *)((int)this + 0x30c) * 8 + 0x110) = param_2;\n  *(int *)((int)this + 0x108) = *(int *)((int)this + 0x108) + 1;\n  *(uint *)((int)this + 0x30c) = *(int *)((int)this + 0x30c) + 1U & 0x3f;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00410fe4",
      "entry": "00410fe4",
      "c": "\nvoid FUN_00410fe4(HANDLE param_1)\n\n{\n  DWORD DVar1;\n  \n  DVar1 = WaitForSingleObject(param_1,0xffffffff);\n  if (DVar1 == 0xffffffff) {\n    GetLastError();\n    FUN_00406c36(&DAT_00441098,L\"\\nWaitForMultipleObjects error %d, GetLastError %d\");\n    thunk_FUN_00406e47(&DAT_00441098,(void *)0x2);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041101f",
      "entry": "0041101f",
      "c": "\nvoid __fastcall FUN_0041101f(uint *param_1)\n\n{\n  HANDLE pvVar1;\n  uint uVar2;\n  uint *puVar3;\n  uint *local_4;\n  \n  uVar2 = 0;\n  if (*param_1 != 0) {\n    puVar3 = param_1 + 1;\n    local_4 = param_1;\n    do {\n      pvVar1 = CreateThread((LPSECURITY_ATTRIBUTES)0x0,0x10000,FUN_00411160,param_1,0,\n                            (LPDWORD)&local_4);\n      if (pvVar1 == (HANDLE)0x0) {\n        FUN_00406c36(&DAT_00441098,L\"CreateThread failed\");\n        FUN_00406dcb();\n        thunk_FUN_00406e47(&DAT_00441098,(void *)0x2);\n      }\n      *puVar3 = (uint)pvVar1;\n      param_1[0x41] = param_1[0x41] + 1;\n      if (DAT_004481e0 != 0) {\n        SetThreadPriority((HANDLE)*puVar3,DAT_004481e0);\n      }\n      uVar2 = uVar2 + 1;\n      puVar3 = puVar3 + 1;\n    } while (uVar2 < *param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041109e",
      "entry": "0041109e",
      "c": "\nuint FUN_0041109e(void)\n\n{\n  HANDLE hProcess;\n  BOOL BVar1;\n  uint uVar2;\n  uint uVar3;\n  uint *lpProcessAffinityMask;\n  ULONG_PTR *lpSystemAffinityMask;\n  ULONG_PTR local_c;\n  uint local_8;\n  \n  lpSystemAffinityMask = &local_c;\n  lpProcessAffinityMask = &local_8;\n  hProcess = GetCurrentProcess();\n  BVar1 = GetProcessAffinityMask(hProcess,lpProcessAffinityMask,lpSystemAffinityMask);\n  if (BVar1 == 0) {\n    return 1;\n  }\n  uVar3 = 0;\n  uVar2 = 1;\n  do {\n    if ((local_8 & uVar2) != 0) {\n      uVar3 = uVar3 + 1;\n    }\n    uVar2 = uVar2 * 2;\n  } while (uVar2 != 0);\n  uVar2 = 1;\n  if (uVar3 != 0) {\n    uVar2 = uVar3;\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_004110dc",
      "entry": "004110dc",
      "c": "\nuint FUN_004110dc(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_0041109e();\n  if (uVar1 == 0) {\n    return 1;\n  }\n  if (0x40 < uVar1) {\n    uVar1 = 0x40;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_004110f3",
      "entry": "004110f3",
      "c": "\nbool __thiscall FUN_004110f3(void *this,undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  bool bVar2;\n  \n  FUN_00410fe4(*(HANDLE *)((int)this + 0x318));\n  bVar2 = *(char *)((int)this + 0x314) == '\\0';\n  if (bVar2) {\n    EnterCriticalSection((LPCRITICAL_SECTION)((int)this + 800));\n    uVar1 = *(undefined4 *)((int)this + *(int *)((int)this + 0x310) * 8 + 0x110);\n    *param_1 = *(undefined4 *)((int)this + *(int *)((int)this + 0x310) * 8 + 0x10c);\n    param_1[1] = uVar1;\n    *(uint *)((int)this + 0x310) = *(int *)((int)this + 0x310) + 1U & 0x3f;\n    LeaveCriticalSection((LPCRITICAL_SECTION)((int)this + 800));\n  }\n  return bVar2;\n}\n\n"
    },
    {
      "name": "FUN_00411160",
      "entry": "00411160",
      "c": "\nundefined4 FUN_00411160(undefined *param_1)\n\n{\n  FUN_0041116e(param_1);\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0041116e",
      "entry": "0041116e",
      "c": "\nvoid __fastcall FUN_0041116e(undefined *param_1)\n\n{\n  int *piVar1;\n  bool bVar2;\n  code *local_c;\n  undefined *local_8;\n  \n  local_c = (code *)param_1;\n  local_8 = param_1;\n  bVar2 = FUN_004110f3(param_1,&local_c);\n  if (bVar2) {\n    do {\n      (*(code *)PTR_guard_check_icall_00433278)(local_8);\n      (*local_c)();\n      EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 800));\n      piVar1 = (int *)(param_1 + 0x108);\n      *piVar1 = *piVar1 + -1;\n      if (*piVar1 == 0) {\n        SetEvent(*(HANDLE *)(param_1 + 0x31c));\n      }\n      LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 800));\n      bVar2 = FUN_004110f3(param_1,&local_c);\n    } while (bVar2);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004111cf",
      "entry": "004111cf",
      "c": "\nvoid __fastcall FUN_004111cf(int param_1)\n\n{\n  if (*(int *)(param_1 + 0x108) != 0) {\n    ResetEvent(*(HANDLE *)(param_1 + 0x31c));\n    ReleaseSemaphore(*(HANDLE *)(param_1 + 0x318),*(LONG *)(param_1 + 0x108),(LPLONG)0x0);\n    FUN_00410fe4(*(HANDLE *)(param_1 + 0x31c));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00411208",
      "entry": "00411208",
      "c": "\nvoid __thiscall FUN_00411208(void *this,uint param_1,int param_2)\n\n{\n  uint uVar1;\n  \n                    /* WARNING: Load size is inaccurate */\n  uVar1 = *this;\n  *(uint *)this = *this + param_1;\n  *(int *)((int)this + 4) = *(int *)((int)this + 4) + param_2 + (uint)CARRY4(uVar1,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00411218",
      "entry": "00411218",
      "c": "\nvoid __thiscall FUN_00411218(void *this,uint *param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int *piVar4;\n  bool bVar5;\n  undefined8 uVar6;\n  _FILETIME local_4c;\n  uint *local_44;\n  FILETIME local_40;\n  _FILETIME _Stack_38;\n  _SYSTEMTIME _Stack_30;\n  _SYSTEMTIME local_20;\n  _SYSTEMTIME _Stack_10;\n  \n                    /* WARNING: Load size is inaccurate */\n  local_44 = (uint *)this;\n  local_40 = (FILETIME)__aulldiv(*this,*(uint *)((int)this + 4),100,0);\n  uVar1 = FUN_0040b146();\n  if (uVar1 < 0x600) {\n    FileTimeToLocalFileTime(&local_40,&local_4c);\n  }\n  else {\n    FileTimeToSystemTime(&local_40,&local_20);\n    SystemTimeToTzSpecificLocalTime((TIME_ZONE_INFORMATION *)0x0,&local_20,&_Stack_10);\n    SystemTimeToFileTime(&_Stack_10,&local_4c);\n    SystemTimeToFileTime(&local_20,&_Stack_38);\n    bVar5 = CARRY4(-_Stack_38.dwLowDateTime,local_4c.dwLowDateTime);\n    uVar1 = -_Stack_38.dwLowDateTime + local_4c.dwLowDateTime;\n    local_4c.dwLowDateTime = uVar1 + local_40.dwLowDateTime;\n    local_4c.dwHighDateTime =\n         (((local_4c.dwHighDateTime + local_40.dwHighDateTime) - _Stack_38.dwHighDateTime) -\n         (uint)(_Stack_38.dwLowDateTime != 0)) + (uint)bVar5 +\n         (uint)CARRY4(uVar1,local_40.dwLowDateTime);\n  }\n  FileTimeToSystemTime(&local_4c,&_Stack_30);\n  uVar3 = (uint)_Stack_30.wMonth;\n  param_1[3] = (uint)_Stack_30.wHour;\n  uVar1 = _Stack_30.wDay - 1;\n  param_1[4] = (uint)_Stack_30.wMinute;\n  param_1[5] = (uint)_Stack_30.wSecond;\n  param_1[7] = (uint)_Stack_30.wDayOfWeek;\n  *param_1 = (uint)_Stack_30.wYear;\n  param_1[1] = uVar3;\n  param_1[2] = (uint)_Stack_30.wDay;\n  param_1[8] = uVar1;\n  local_4c.dwLowDateTime = 1;\n  if (1 < uVar3) {\n    piVar4 = &DAT_0043e1a8;\n    uVar2 = 4;\n    do {\n      this = local_44;\n      if (0x30 < uVar2) break;\n      uVar2 = uVar2 + 4;\n      uVar1 = *piVar4 + uVar1;\n      local_4c.dwLowDateTime = local_4c.dwLowDateTime + 1;\n      param_1[8] = uVar1;\n      piVar4 = piVar4 + 1;\n    } while (local_4c.dwLowDateTime < uVar3);\n  }\n  if ((2 < uVar3) && (uVar3 = FUN_004113a4((uint)_Stack_30.wYear), (char)uVar3 != '\\0')) {\n    param_1[8] = uVar1 + 1;\n  }\n                    /* WARNING: Load size is inaccurate */\n  uVar6 = __aullrem(*this,*(uint *)((int)this + 4),1000000000,0);\n  param_1[6] = (uint)uVar6;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041138a",
      "entry": "0041138a",
      "c": "\nvoid __thiscall FUN_0041138a(void *this,undefined8 *param_1)\n\n{\n  undefined8 uVar1;\n  \n                    /* WARNING: Load size is inaccurate */\n  uVar1 = __aulldiv(*this,*(uint *)((int)this + 4),100,0);\n  *param_1 = uVar1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004113a4",
      "entry": "004113a4",
      "c": "\nuint FUN_004113a4(uint param_1)\n\n{\n  uint in_EAX;\n  \n  if (((param_1 & 3) == 0) &&\n     ((in_EAX = (int)param_1 / 100, (int)param_1 % 100 != 0 ||\n      (in_EAX = (int)param_1 / 400, (int)param_1 % 400 == 0)))) {\n    return CONCAT31((int3)(in_EAX >> 8),1);\n  }\n  return in_EAX & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_004113d2",
      "entry": "004113d2",
      "c": "\nvoid __fastcall FUN_004113d2(undefined4 *param_1)\n\n{\n  _SYSTEMTIME local_1c;\n  _FILETIME local_c;\n  \n  GetSystemTime(&local_1c);\n  SystemTimeToFileTime(&local_1c,&local_c);\n  *param_1 = (int)((ulonglong)local_c.dwLowDateTime * 100);\n  param_1[1] = local_c.dwHighDateTime * 100 + (int)((ulonglong)local_c.dwLowDateTime * 100 >> 0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041140e",
      "entry": "0041140e",
      "c": "\nvoid __thiscall FUN_0041140e(void *this,uint param_1)\n\n{\n  int local_28;\n  uint local_24;\n  uint local_20;\n  uint local_1c;\n  uint local_18;\n  int local_14;\n  undefined4 local_10;\n  \n  local_10 = 0;\n  local_14 = (param_1 & 0x1f) * 2;\n  local_18 = param_1 >> 5 & 0x3f;\n  local_1c = param_1 >> 0xb & 0x1f;\n  local_20 = param_1 >> 0x10 & 0x1f;\n  local_24 = param_1 >> 0x15 & 0xf;\n  local_28 = (param_1 >> 0x19) + 0x7bc;\n  FUN_0041146a(this,(WORD *)&local_28);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041146a",
      "entry": "0041146a",
      "c": "\nvoid __thiscall FUN_0041146a(void *this,WORD *param_1)\n\n{\n  uint uVar1;\n  BOOL BVar2;\n  uint uVar3;\n  int iVar4;\n  bool bVar5;\n  _FILETIME _Stack_48;\n  _FILETIME local_40;\n  _FILETIME _Stack_38;\n  SYSTEMTIME local_30;\n  _SYSTEMTIME _Stack_20;\n  _SYSTEMTIME _Stack_10;\n  \n  local_30.wYear = *param_1;\n  local_30.wMonth = param_1[2];\n  local_30.wDay = param_1[4];\n  local_30.wHour = param_1[6];\n  local_30.wMinute = param_1[8];\n  local_30.wSecond = param_1[10];\n  local_30.wMilliseconds = 0;\n  local_30.wDayOfWeek = 0;\n  BVar2 = SystemTimeToFileTime(&local_30,&local_40);\n  if (BVar2 == 0) {\n    uVar3 = 0;\n    iVar4 = 0;\n  }\n  else {\n    uVar3 = FUN_0040b146();\n    if (uVar3 < 0x600) {\n      LocalFileTimeToFileTime(&local_40,&_Stack_48);\n    }\n    else {\n      FileTimeToSystemTime(&local_40,&_Stack_20);\n      TzSpecificLocalTimeToSystemTime((TIME_ZONE_INFORMATION *)0x0,&_Stack_20,&_Stack_10);\n      SystemTimeToFileTime(&_Stack_10,&_Stack_48);\n      SystemTimeToFileTime(&_Stack_20,&_Stack_38);\n      bVar5 = CARRY4(-_Stack_38.dwLowDateTime,_Stack_48.dwLowDateTime);\n      uVar3 = -_Stack_38.dwLowDateTime + _Stack_48.dwLowDateTime;\n      _Stack_48.dwLowDateTime = uVar3 + local_40.dwLowDateTime;\n      _Stack_48.dwHighDateTime =\n           (((_Stack_48.dwHighDateTime + local_40.dwHighDateTime) - _Stack_38.dwHighDateTime) -\n           (uint)(_Stack_38.dwLowDateTime != 0)) + (uint)bVar5 +\n           (uint)CARRY4(uVar3,local_40.dwLowDateTime);\n    }\n    uVar3 = (uint)((ulonglong)_Stack_48.dwLowDateTime * 100);\n    iVar4 = _Stack_48.dwHighDateTime * 100 + (int)((ulonglong)_Stack_48.dwLowDateTime * 100 >> 0x20)\n    ;\n  }\n  *(uint *)this = uVar3;\n  *(int *)((int)this + 4) = iVar4;\n  uVar1 = *(uint *)(param_1 + 0xc);\n  *(uint *)this = uVar1 + uVar3;\n  *(uint *)((int)this + 4) = iVar4 + (uint)CARRY4(uVar1,uVar3);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041158f",
      "entry": "0041158f",
      "c": "\nvoid __thiscall FUN_0041158f(void *this,uint param_1,int param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = (uint)((ulonglong)param_1 * 1000000000);\n  *(uint *)this = uVar1 + 0x4c6a0000;\n  *(uint *)((int)this + 4) =\n       param_2 * 1000000000 + (int)((ulonglong)param_1 * 1000000000 >> 0x20) + -0x5e6684f5 +\n       (uint)(0xb395ffff < uVar1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004115bb",
      "entry": "004115bb",
      "c": "\nvoid __thiscall FUN_004115bb(void *this,uint param_1,int param_2)\n\n{\n  *(int *)this = (int)((ulonglong)param_1 * 100);\n  *(int *)((int)this + 4) = param_2 * 100 + (int)((ulonglong)param_1 * 100 >> 0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004115da",
      "entry": "004115da",
      "c": "\nvoid __thiscall FUN_004115da(void *this,uint *param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar1 = *param_1;\n  uVar2 = param_1[1];\n  *(int *)this = (int)((ulonglong)uVar1 * 100);\n  *(uint *)((int)this + 4) = uVar2 * 100 + (int)((ulonglong)uVar1 * 100 >> 0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004115fe",
      "entry": "004115fe",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid __fastcall FUN_004115fe(undefined4 *param_1)\n\n{\n  wchar_t *pwVar1;\n  int iVar2;\n  LPCWSTR pWVar3;\n  undefined *puVar4;\n  undefined4 uVar5;\n  UINT UVar6;\n  int iVar7;\n  wchar_t local_1404 [2304];\n  wchar_t local_204 [254];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x41160b;\n  iVar2 = param_1[0x12];\n  if (0x74 < iVar2) {\n    if (iVar2 != 0x83) {\n      return;\n    }\n    FUN_0041d694();\n    if (param_1[1] == 0) {\n      iVar7 = 0xa00;\n      iVar2 = FUN_0040e617(0xc9);\n      FUN_00410602(local_1404,iVar2,iVar7);\n    }\n    else {\n      pwVar1 = (wchar_t *)FUN_0040e617(0xca);\n      FUN_00404092(local_1404,0xa00,pwVar1);\n    }\n    UVar6 = 0;\n    pWVar3 = (LPCWSTR)FUN_0040e617(0x96);\n    FUN_0041a7e4(DAT_00448450,local_1404,pWVar3,UVar6);\n    return;\n  }\n  if (iVar2 == 0x74) {\n    UVar6 = 0x456;\n    goto LAB_0041175e;\n  }\n  if (iVar2 < 0x17) {\n    if (iVar2 == 0x16) {\n      UVar6 = 0xdd;\n      goto LAB_004116be;\n    }\n    switch(iVar2) {\n    case 0:\n      pwVar1 = L\"%ls\";\n      puVar4 = &DAT_004343e0;\n      goto LAB_00411648;\n    case 1:\n      pwVar1 = L\"%ls\";\n      goto LAB_00411646;\n    case 2:\n      FUN_0041aecd((LPCWSTR)0x0);\n      return;\n    case 3:\n      UVar6 = 0x7b;\n      break;\n    case 4:\n      UVar6 = 0x7a;\n      break;\n    case 5:\n      UVar6 = 0x7c;\n      break;\n    case 6:\n      UVar6 = 0xca;\n      break;\n    case 7:\n      UVar6 = 0x70;\n      goto LAB_00411699;\n    case 8:\n      UVar6 = 0x72;\n      break;\n    case 9:\n      UVar6 = 0x78;\n      break;\n    case 10:\n      UVar6 = 0x85;\n      goto LAB_004116be;\n    case 0xb:\n      UVar6 = 0x204;\nLAB_004116be:\n      pwVar1 = (wchar_t *)FUN_0040e617(UVar6);\nLAB_00411646:\n      puVar4 = (undefined *)0x0;\n      goto LAB_00411648;\n    case 0xc:\n      UVar6 = 0x84;\n      break;\n    case 0xd:\n      UVar6 = 0x83;\n      break;\n    default:\n      goto switchD_00411638_caseD_e;\n    case 0x12:\n      pwVar1 = (wchar_t *)FUN_0040e617(0xd2);\n      FUN_0041b776(*param_1,pwVar1);\n      return;\n    case 0x14:\n      UVar6 = 0x79;\n      break;\n    case 0x15:\n      UVar6 = 0xdc;\n    }\n    goto LAB_00411675;\n  }\n  if (0x38 < iVar2) {\n    if (iVar2 == 0x39) {\n      UVar6 = 0x8c;\n    }\n    else if (iVar2 == 0x3a) {\n      UVar6 = 0x6f;\n    }\n    else {\n      if (iVar2 == 0x3b) {\n        UVar6 = 0x406;\n        goto LAB_00411675;\n      }\n      if (iVar2 == 0x44) {\n        UVar6 = 0x343;\n      }\n      else {\n        if (iVar2 != 0x45) {\n          return;\n        }\n        UVar6 = 0x86;\n      }\n    }\n    goto LAB_0041175e;\n  }\n  if (iVar2 == 0x38) {\n    UVar6 = 0x67;\n    goto LAB_0041175e;\n  }\n  switch(iVar2) {\n  case 0x17:\n    UVar6 = 0xde;\n    goto LAB_00411699;\n  case 0x18:\n    UVar6 = 0xe1;\nLAB_00411699:\n    pwVar1 = (wchar_t *)FUN_0040e617(UVar6);\n    uVar5 = 0;\n    goto LAB_004116a1;\n  case 0x19:\n    UVar6 = 0xb4;\n    break;\n  case 0x1a:\n    UVar6 = 0x69;\n    break;\n  case 0x1b:\n    UVar6 = 0x6a;\n    break;\n  case 0x1c:\n    UVar6 = 0x68;\n    goto LAB_00411675;\n  case 0x1d:\n    UVar6 = 0x46f;\n    break;\n  case 0x1e:\n    UVar6 = 0x470;\n    break;\n  case 0x1f:\n    UVar6 = 0x471;\n    goto LAB_00411675;\n  default:\n    goto switchD_00411638_caseD_e;\n  case 0x21:\n    UVar6 = 0x71;\nLAB_00411675:\n    pwVar1 = (wchar_t *)FUN_0040e617(UVar6);\n    puVar4 = (undefined *)*param_1;\nLAB_00411648:\n    FUN_0041b776(puVar4,pwVar1);\n    return;\n  case 0x22:\n    pwVar1 = (wchar_t *)FUN_0040e617(200);\n    FUN_00404092(local_204,0x100,pwVar1);\n    FUN_0041b776(*param_1,L\"%s: %s\");\n    goto switchD_00411638_caseD_e;\n  }\nLAB_0041175e:\n  pwVar1 = (wchar_t *)FUN_0040e617(UVar6);\n  uVar5 = *param_1;\nLAB_004116a1:\n  FUN_0041b776(uVar5,pwVar1);\nswitchD_00411638_caseD_e:\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_0041dca1",
      "entry": "0041193e",
      "c": "\nundefined4 thunk_FUN_0041dca1(undefined4 param_1,undefined4 param_2)\n\n{\n  INT_PTR IVar1;\n  undefined4 uStack_c;\n  undefined4 uStack_8;\n  \n  uStack_c = param_1;\n  uStack_8 = param_2;\n  IVar1 = DialogBoxParamW(DAT_00441028,L\"ASKNEXTVOL\",DAT_00448458,FUN_0041ad10,(LPARAM)&uStack_c);\n  return CONCAT31((int3)((uint)-(IVar1 + -1) >> 8),'\\x01' - (IVar1 + -1 != 0));\n}\n\n"
    },
    {
      "name": "FUN_00411943",
      "entry": "00411943",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool FUN_00411943(void)\n\n{\n  bool bVar1;\n  wchar_t *pwVar2;\n  DWORD dwErrCode;\n  LPCWSTR pWVar3;\n  int iVar4;\n  UINT UVar5;\n  wchar_t local_1604 [2304];\n  WCHAR local_404 [510];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x411950;\n  pwVar2 = (wchar_t *)FUN_0040e617(0x83);\n  FUN_00404092(local_1604,0x900,pwVar2);\n  bVar1 = FUN_00406c74(local_404,0x200);\n  if (bVar1) {\n    FUN_004105da(local_1604,0x4343f4,0x900);\n    FUN_004105da(local_1604,(int)local_404,0x900);\n  }\n  dwErrCode = GetLastError();\n  UVar5 = 0x35;\n  pWVar3 = (LPCWSTR)FUN_0040e617(0x96);\n  iVar4 = FUN_0041a7e4(DAT_00448450,local_1604,pWVar3,UVar5);\n  SetLastError(dwErrCode);\n  return iVar4 == 4;\n}\n\n"
    },
    {
      "name": "FUN_004119f1",
      "entry": "004119f1",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nINT_PTR FUN_004119f1(int param_1,LPCWSTR param_2,int param_3,undefined4 param_4,undefined4 param_5,\n                    undefined4 param_6,undefined4 param_7)\n\n{\n  bool bVar1;\n  INT_PTR IVar2;\n  wchar_t *pwVar3;\n  wchar_t local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x4119fb;\n  if (*(int *)(param_1 + 0x7134) == 2) {\nLAB_00411a13:\n    IVar2 = 1;\n  }\n  else {\n    if ((*(char *)(param_1 + 0x7188) == '\\0') && (*(int *)(param_1 + 0x7134) != 1)) {\n      FUN_00410602(local_1000,(int)param_2,0x800);\n      IVar2 = FUN_0041dcdd((LPARAM)local_1000,0x800,param_4,param_5,param_6);\n      if (((IVar2 == 0) || (IVar2 == 2)) && (FUN_0040a346(param_2), IVar2 == 2)) {\n        *(undefined4 *)(param_1 + 0x7134) = 1;\n      }\n      else {\n        if (IVar2 == 3) {\n          *(undefined4 *)(param_1 + 0x7134) = 2;\n          goto LAB_00411a13;\n        }\n        if (IVar2 != 4) {\n          return IVar2;\n        }\n        pwVar3 = FUN_0040c29a(local_1000);\n        if (pwVar3 == local_1000) {\n          FUN_0040c310(param_2,(int)local_1000,param_3);\n        }\n        else {\n          FUN_00410602(param_2,(int)local_1000,param_3);\n        }\n        bVar1 = FUN_0040a231(param_2);\n        if (bVar1) {\n          IVar2 = FUN_004119f1(param_1,param_2,param_3,param_4,param_5,param_6,param_7);\n          return IVar2;\n        }\n      }\n    }\n    else {\n      FUN_0040a346(param_2);\n    }\n    IVar2 = 0;\n  }\n  return IVar2;\n}\n\n"
    },
    {
      "name": "FUN_00411b1e",
      "entry": "00411b1e",
      "c": "\nvoid __fastcall FUN_00411b1e(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0041dd6d(param_1,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00411b42",
      "entry": "00411b42",
      "c": "\nvoid FUN_00411b42(int param_1,wchar_t *param_2,undefined4 *param_3)\n\n{\n  FUN_0041dda0(param_1,(LPCSTR)0x0,param_2,param_3);\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_0041b568",
      "entry": "00411b58",
      "c": "\nvoid thunk_FUN_0041b568(void)\n\n{\n  BOOL BVar1;\n  tagMSG tStack_20;\n  \n  BVar1 = PeekMessageW(&tStack_20,(HWND)0x0,0,0,0);\n  if (BVar1 != 0) {\n    GetMessageW(&tStack_20,(HWND)0x0,0,0);\n    if ((DAT_00448458 != (HWND)0x0) &&\n       (BVar1 = IsDialogMessageW(DAT_00448458,&tStack_20), BVar1 != 0)) {\n      return;\n    }\n    TranslateMessage(&tStack_20);\n    DispatchMessageW(&tStack_20);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00411b5d",
      "entry": "00411b5d",
      "c": "\nundefined1 FUN_00411b5d(void)\n\n{\n  return DAT_00448454;\n}\n\n"
    },
    {
      "name": "FUN_00411b63",
      "entry": "00411b63",
      "c": "\nundefined1 FUN_00411b63(void)\n\n{\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00411b66",
      "entry": "00411b66",
      "c": "\nvoid FUN_00411b66(char param_1,wchar_t *param_2)\n\n{\n  FUN_0041de6b((param_1 + '\\x15') * '\\x04',param_2);\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_0041dec2",
      "entry": "00411b7f",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool thunk_FUN_0041dec2(void)\n\n{\n  wchar_t *pwVar1;\n  byte in_stack_00000010;\n  wchar_t awStack_1404 [2558];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x41decf;\n  pwVar1 = (wchar_t *)FUN_0040e617(in_stack_00000010 + 0x65);\n  FUN_00404092(awStack_1404,0xa00,pwVar1);\n  SetDlgItemTextW(DAT_00448458,0x65,awStack_1404);\n  FUN_0041b568();\n  return DAT_00448454 == '\\0';\n}\n\n"
    },
    {
      "name": "FUN_00411b84",
      "entry": "00411b84",
      "c": "\nuint FUN_00411b84(LPCSTR param_1,LPWSTR param_2,int param_3)\n\n{\n  int iVar1;\n  \n  *param_2 = L'\\0';\n  iVar1 = MultiByteToWideChar(0,0,param_1,-1,param_2,param_3);\n  if (param_3 != 0) {\n    param_2[param_3 + -1] = L'\\0';\n  }\n  return CONCAT31((int3)((uint)-iVar1 >> 8),-(iVar1 != 0)) & 0xffffff01;\n}\n\n"
    },
    {
      "name": "FUN_00411bbd",
      "entry": "00411bbd",
      "c": "\nvoid __fastcall FUN_00411bbd(int param_1)\n\n{\n  BOOL BVar1;\n  uint uVar2;\n  _cpinfo local_18;\n  \n  uVar2 = 0;\n  GetCPInfo(0,&local_18);\n  *(bool *)(param_1 + 0x100) = 1 < local_18.MaxCharSize;\n  do {\n    BVar1 = IsDBCSLeadByte((BYTE)uVar2);\n    *(bool *)(uVar2 + param_1) = BVar1 != 0;\n    uVar2 = uVar2 + 1;\n  } while (uVar2 < 0x100);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00411bfd",
      "entry": "00411bfd",
      "c": "\nint FUN_00411bfd(byte *param_1,int param_2,uint param_3)\n\n{\n  short sVar1;\n  uint uVar2;\n  int iVar3;\n  \n  uVar2 = 0;\n  if (param_3 != 0) {\n    iVar3 = param_2 - (int)param_1;\n    do {\n      sVar1 = (ushort)param_1[1] * 0x100 + (ushort)*param_1;\n      *(short *)(param_1 + iVar3) = sVar1;\n      if (sVar1 == 0) {\n        return param_2;\n      }\n      uVar2 = uVar2 + 1;\n      param_1 = param_1 + 2;\n    } while (uVar2 < param_3);\n  }\n  return param_2;\n}\n\n"
    },
    {
      "name": "FUN_00411c3b",
      "entry": "00411c3b",
      "c": "\nundefined1 FUN_00411c3b(byte *param_1,ushort *param_2,int param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  undefined1 uVar4;\n  undefined1 uVar5;\n  undefined1 uVar6;\n  byte *pbVar7;\n  \n  uVar5 = 1;\n  uVar4 = 1;\n  do {\n    uVar6 = uVar5;\n    if (*param_1 == 0) {\nLAB_00411d99:\n      *param_2 = 0;\n      return uVar6;\n    }\n    uVar3 = (uint)*param_1;\n    pbVar7 = param_1 + 1;\n    if (0x7f < uVar3) {\n      if ((uVar3 & 0xe0) == 0xc0) {\n        if ((*pbVar7 & 0xc0) == 0x80) {\n          uVar3 = (uVar3 & 0x1f) << 6 | (int)(char)*pbVar7 & 0x3fU;\n          pbVar7 = param_1 + 2;\n          goto LAB_00411d3b;\n        }\n      }\n      else if ((uVar3 & 0xf0) == 0xe0) {\n        if (((*pbVar7 & 0xc0) == 0x80) &&\n           (uVar2 = CONCAT11(param_1[2],param_1[2]) & 0xffffffc0, (char)uVar2 == -0x80)) {\n          uVar3 = ((uVar3 & 0xf) << 6 | (int)(char)*pbVar7 & 0x3fU) << 6 |\n                  (int)(char)(uVar2 >> 8) & 0x3fU;\n          pbVar7 = param_1 + 3;\n          goto LAB_00411d3b;\n        }\n      }\n      else if ((((uVar3 & 0xf8) == 0xf0) && ((*pbVar7 & 0xc0) == 0x80)) &&\n              (uVar2 = CONCAT11(param_1[2],param_1[2]) & 0xffffffc0, (char)uVar2 == -0x80)) {\n        uVar2 = CONCAT31((int3)(uVar2 >> 8),param_1[3]) & 0xffffffc0;\n        if ((char)uVar2 == -0x80) {\n          uVar3 = (((uVar3 & 7) << 6 | (int)(char)*pbVar7 & 0x3fU) << 6 |\n                  (int)(char)(uVar2 >> 8) & 0x3fU) << 6 | (int)(char)param_1[3] & 0x3fU;\n          pbVar7 = param_1 + 4;\n          uVar4 = uVar5;\n          goto LAB_00411d3b;\n        }\n      }\n      uVar6 = 0;\n      goto LAB_00411d99;\n    }\nLAB_00411d3b:\n    iVar1 = param_3 + -2;\n    uVar6 = uVar4;\n    if (iVar1 < 0) goto LAB_00411d99;\n    param_1 = pbVar7;\n    if (uVar3 < 0x10000) {\n      *param_2 = (ushort)uVar3;\n      param_2 = param_2 + 1;\n      param_3 = param_3 + -1;\n    }\n    else {\n      if (iVar1 < 1) goto LAB_00411d99;\n      param_3 = iVar1;\n      if (uVar3 < 0x110000) {\n        *param_2 = (short)(uVar3 - 0x10000 >> 10) + 0xd800;\n        param_2[1] = ((ushort)uVar3 & 0x3ff) + 0xdc00;\n        param_2 = param_2 + 2;\n      }\n      else {\n        uVar5 = 0;\n        uVar4 = 0;\n      }\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00411da7",
      "entry": "00411da7",
      "c": "\nuint FUN_00411da7(LPCWSTR param_1,LPSTR param_2,int param_3)\n\n{\n  int iVar1;\n  \n  *param_2 = '\\0';\n  iVar1 = WideCharToMultiByte(0,0,param_1,-1,param_2,param_3,(LPCSTR)0x0,(LPBOOL)0x0);\n  if (param_3 != 0) {\n    param_2[param_3 + -1] = '\\0';\n  }\n  return CONCAT31((int3)((uint)-iVar1 >> 8),-(iVar1 != 0)) & 0xffffff01;\n}\n\n"
    },
    {
      "name": "FUN_00411ddf",
      "entry": "00411ddf",
      "c": "\nint FUN_00411ddf(short *param_1,int param_2,uint param_3)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if (param_3 != 0) {\n    do {\n      *(char *)(param_2 + uVar1 * 2) = (char)*param_1;\n      *(undefined1 *)(param_2 + 1 + uVar1 * 2) = *(undefined1 *)((int)param_1 + 1);\n      if (*param_1 == 0) {\n        return param_2;\n      }\n      uVar1 = uVar1 + 1;\n      param_1 = param_1 + 1;\n    } while (uVar1 < param_3);\n  }\n  return param_2;\n}\n\n"
    },
    {
      "name": "FUN_00411e15",
      "entry": "00411e15",
      "c": "\nvoid FUN_00411e15(ushort *param_1,byte *param_2,int param_3)\n\n{\n  ushort uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  ushort *puVar5;\n  \n  uVar1 = *param_1;\n  iVar2 = param_3 + -1;\n  do {\n    if ((uVar1 == 0) || (iVar4 = iVar2 + -1, iVar4 < 0)) {\n      *param_2 = 0;\n      return;\n    }\n    uVar1 = *param_1;\n    uVar3 = (uint)uVar1;\n    puVar5 = param_1 + 1;\n    if (uVar3 < 0x80) {\n      *param_2 = (byte)uVar1;\n      param_2 = param_2 + 1;\n    }\n    else if ((uVar3 < 0x800) && (iVar4 = iVar2 + -2, -1 < iVar4)) {\n      *param_2 = (byte)(uVar1 >> 6) | 0xc0;\n      param_2[1] = (byte)uVar1 & 0x3f | 0x80;\n      param_2 = param_2 + 2;\n    }\n    else {\n      if ((uVar3 - 0xd800 < 0x400) && ((ushort)(*puVar5 + 0x2400) < 0x400)) {\n        uVar3 = uVar3 * 0x400 + -0x35fdc00 + (uint)*puVar5;\n        puVar5 = param_1 + 2;\n      }\n      if (uVar3 < 0x10000) {\n        iVar4 = iVar4 + -2;\n        if (iVar4 < 0) {\nLAB_00411edf:\n          iVar4 = iVar4 + -3;\n          if (-1 < iVar4) {\n            *param_2 = (byte)(uVar3 >> 0x12) | 0xf0;\n            param_2[1] = (byte)(uVar3 >> 0xc) & 0x3f | 0x80;\n            param_2[3] = (byte)uVar3 & 0x3f | 0x80;\n            param_2[2] = (byte)(uVar3 >> 6) & 0x3f | 0x80;\n            param_2 = param_2 + 4;\n          }\n        }\n        else {\n          *param_2 = (byte)(uVar3 >> 0xc) | 0xe0;\n          param_2[2] = (byte)uVar3 & 0x3f | 0x80;\n          param_2[1] = (byte)(uVar3 >> 6) & 0x3f | 0x80;\n          param_2 = param_2 + 3;\n        }\n      }\n      else if (uVar3 < 0x200000) goto LAB_00411edf;\n    }\n    uVar1 = *puVar5;\n    iVar2 = iVar4;\n    param_1 = puVar5;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00411f24",
      "entry": "00411f24",
      "c": "\nulonglong FUN_00411f24(ushort *param_1)\n\n{\n  ulonglong uVar1;\n  int iVar2;\n  ushort uVar3;\n  bool bVar4;\n  \n  uVar3 = *param_1;\n  bVar4 = uVar3 == 0x2d;\n  if (bVar4) {\n    param_1 = param_1 + 1;\n    uVar3 = *param_1;\n  }\n  uVar1 = 0;\n  while ((iVar2 = (int)(uVar1 >> 0x20), 0x2f < uVar3 && (uVar3 < 0x3a))) {\n    uVar1 = ((uVar1 & 0xffffffff) * 10 + CONCAT44(iVar2 * 10,(uint)uVar3)) - 0x30;\n    param_1 = param_1 + 1;\n    uVar3 = *param_1;\n  }\n  if ((bVar4) && (-1 < (longlong)uVar1)) {\n    uVar1 = CONCAT44(-(iVar2 + (uint)((int)uVar1 != 0)),-(int)uVar1);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "thunk_FUN_00411f24",
      "entry": "00411fa7",
      "c": "\nulonglong thunk_FUN_00411f24(ushort *param_1)\n\n{\n  ulonglong uVar1;\n  int iVar2;\n  ushort uVar3;\n  bool bVar4;\n  \n  uVar3 = *param_1;\n  bVar4 = uVar3 == 0x2d;\n  if (bVar4) {\n    param_1 = param_1 + 1;\n    uVar3 = *param_1;\n  }\n  uVar1 = 0;\n  while ((iVar2 = (int)(uVar1 >> 0x20), 0x2f < uVar3 && (uVar3 < 0x3a))) {\n    uVar1 = ((uVar1 & 0xffffffff) * 10 + CONCAT44(iVar2 * 10,(uint)uVar3)) - 0x30;\n    param_1 = param_1 + 1;\n    uVar3 = *param_1;\n  }\n  if ((bVar4) && (-1 < (longlong)uVar1)) {\n    uVar1 = CONCAT44(-(iVar2 + (uint)((int)uVar1 != 0)),-(int)uVar1);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00411fac",
      "entry": "00411fac",
      "c": "\nvoid FUN_00411fac(ushort param_1)\n\n{\n  CharUpperW((LPWSTR)(uint)param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00411fbb",
      "entry": "00411fbb",
      "c": "\nint FUN_00411fbb(PCNZWCH param_1,PCNZWCH param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = CompareStringW(0x400,0x1001,param_1,-1,param_2,-1);\n  return iVar1 + -2;\n}\n\n"
    },
    {
      "name": "FUN_00411fdd",
      "entry": "00411fdd",
      "c": "\nint FUN_00411fdd(wchar_t *param_1,wchar_t *param_2,uint param_3)\n\n{\n  size_t sVar1;\n  int iVar2;\n  uint cchCount1;\n  \n  sVar1 = _wcslen(param_1);\n  cchCount1 = param_3;\n  if (sVar1 + 1 < param_3) {\n    sVar1 = _wcslen(param_1);\n    cchCount1 = sVar1 + 1;\n  }\n  sVar1 = _wcslen(param_2);\n  if (sVar1 + 1 < param_3) {\n    sVar1 = _wcslen(param_2);\n    param_3 = sVar1 + 1;\n  }\n  iVar2 = CompareStringW(0x400,0x1001,param_1,cchCount1,param_2,param_3);\n  return iVar2 + -2;\n}\n\n"
    },
    {
      "name": "FUN_0041203e",
      "entry": "0041203e",
      "c": "\nvoid * __fastcall FUN_0041203e(void *param_1)\n\n{\n  _memset(param_1,0,0x80);\n  _memset((void *)((int)param_1 + 0x80),0,0x80);\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00412067",
      "entry": "00412067",
      "c": "\nint __fastcall FUN_00412067(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x4a8c) = 0;\n  *(undefined4 *)(param_1 + 0x644) = 0;\n  *(undefined4 *)(param_1 + 0x64c) = 0;\n  *(undefined4 *)(param_1 + 0x648) = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00412089",
      "entry": "00412089",
      "c": "\nundefined4 * FUN_00412089(void)\n\n{\n  undefined4 uVar1;\n  undefined4 *this;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  *(undefined4 **)(unaff_EBP + -0x10) = this;\n  FUN_0040a814(this + 1,'\\x01');\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  this[9] = 0;\n  this[10] = 0;\n  this[0xb] = 0;\n  this[0xc] = 0;\n  *(undefined1 *)(this + 0xd) = 0;\n  this[0xe] = 0;\n  this[0xf] = 0;\n  this[0x10] = 0;\n  this[0x11] = 0;\n  *(undefined1 *)(this + 0x12) = 0;\n  this[0x13] = 0;\n  this[0x14] = 0;\n  this[0x15] = 0;\n  this[0x16] = 0;\n  *(undefined1 *)(this + 0x17) = 0;\n  FUN_0041203e(this + 0x12d1);\n  FUN_00412067((int)(this + 0x2636));\n  *(undefined1 *)(unaff_EBP + -4) = 5;\n  FUN_0040c3b0(this + 0x3999);\n  *(undefined1 *)(unaff_EBP + -4) = 6;\n  FUN_0040a814(this + 0x39a2,'\\x01');\n  uVar1 = *(undefined4 *)(unaff_EBP + 8);\n  this[0x39a6] = 0;\n  this[0x39a7] = 0;\n  this[0x39a8] = 0;\n  this[0x39a9] = 0;\n  *(undefined1 *)(this + 0x39aa) = 0;\n  this[0x39ab] = 0;\n  this[0x39ac] = 0;\n  this[0x39ad] = 0;\n  this[0x39ae] = 0;\n  *(undefined1 *)(this + 0x39af) = 0;\n  this[0x39b0] = 0;\n  this[0x39b1] = 0;\n  this[0x39b2] = 0;\n  this[0x39b3] = 0;\n  *(undefined1 *)(this + 0x39b4) = 0;\n  *this = uVar1;\n  this[0x12d0] = 0;\n  *(undefined1 *)(this + 0x1311) = 0;\n  *(undefined2 *)(this + 0x1314) = 0;\n  *(undefined1 *)((int)this + 0x4c52) = 0;\n  this[7] = 1;\n  this[5] = 0;\n  this[8] = 0;\n  this[6] = 0;\n  this[0x39b6] = 0;\n  this[0x39b7] = 0;\n  FUN_00414d0a(this,'\\0');\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return this;\n}\n\n"
    },
    {
      "name": "FUN_004121c0",
      "entry": "004121c0",
      "c": "\nint __fastcall FUN_004121c0(int param_1)\n\n{\n  FUN_0040a814((void *)(param_1 + 4),'\\0');\n  *(undefined4 *)(param_1 + 0x4ad4) = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_004121e0",
      "entry": "004121e0",
      "c": "\nundefined4 * __thiscall FUN_004121e0(void *this,int param_1)\n\n{\n  FUN_00412210(this,param_1);\n  *(undefined ***)this = std::bad_alloc::vftable;\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_004121f8",
      "entry": "004121f8",
      "c": "\nundefined4 * __fastcall FUN_004121f8(undefined4 *param_1)\n\n{\n  param_1[1] = 0;\n  param_1[2] = 0;\n  param_1[1] = \"bad allocation\";\n  *param_1 = std::bad_alloc::vftable;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00412210",
      "entry": "00412210",
      "c": "\nundefined4 * __thiscall FUN_00412210(void *this,int param_1)\n\n{\n  *(undefined ***)this = std::exception::vftable;\n  *(undefined4 *)((int)this + 4) = 0;\n  *(undefined4 *)((int)this + 8) = 0;\n  ___std_exception_copy((undefined4 *)(param_1 + 4),(undefined4 *)((int)this + 4));\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_00412239",
      "entry": "00412239",
      "c": "\nvoid __fastcall FUN_00412239(int *param_1)\n\n{\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  if (*param_1 != 0) {\n    ExceptionList = &local_10;\n    if ((char)param_1[4] != '\\0') {\n      ExceptionList = &local_10;\n      FUN_0040f445((undefined1 *)*param_1,param_1[2] << 4);\n    }\n    FID_conflict__free((void *)*param_1);\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_00414872",
      "entry": "00412287",
      "c": "\nvoid __fastcall thunk_FUN_00414872(int param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  do {\n    if (*(int *)(param_1 + uVar1 * 4) != 0) {\n      FID_conflict__free(*(void **)(param_1 + uVar1 * 4));\n      *(undefined4 *)(param_1 + uVar1 * 4) = 0;\n    }\n    uVar1 = uVar1 + 1;\n  } while (uVar1 < 0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041228c",
      "entry": "0041228c",
      "c": "\nvoid __fastcall FUN_0041228c(int param_1)\n\n{\n  FUN_00414ca8((int *)(param_1 + 0x4a8c));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412297",
      "entry": "00412297",
      "c": "\nvoid __fastcall FUN_00412297(void *param_1)\n\n{\n  void *pvVar1;\n  \n  FUN_00413529(param_1,'\\0');\n  if (*(void **)((int)param_1 + 0x4b40) != (void *)0x0) {\n    FID_conflict__free(*(void **)((int)param_1 + 0x4b40));\n  }\n  pvVar1 = *(void **)((int)param_1 + 0x14);\n  if (pvVar1 != (void *)0x0) {\n    FUN_00410eed((int)pvVar1);\n    FUN_0041eb68(pvVar1);\n  }\n  FID_conflict__free(*(void **)((int)param_1 + 0x20));\n  if (*(void **)((int)param_1 + 0x18) != (void *)0x0) {\n    FUN_004123c9(*(void **)((int)param_1 + 0x18),3);\n  }\n  FUN_0040d3bf((int *)((int)param_1 + 0xe6c0));\n  FUN_0040d3bf((int *)((int)param_1 + 0xe6ac));\n  FUN_0040d3bf((int *)((int)param_1 + 0xe698));\n  FUN_0040a84a((int)param_1 + 0xe688);\n  FUN_0040c3b6((undefined4 *)((int)param_1 + 0xe664));\n  FUN_00414ca8((int *)((int)param_1 + 0xe364));\n  FUN_00414872((int)param_1 + 0x4b44);\n  FUN_00412239((int *)((int)param_1 + 0x4c));\n  FUN_004015fb((int *)((int)param_1 + 0x38));\n  FUN_004015fb((int *)((int)param_1 + 0x24));\n  FUN_0040a84a((int)param_1 + 4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412360",
      "entry": "00412360",
      "c": "\nvoid __fastcall FUN_00412360(int param_1)\n\n{\n  if (*(void **)(param_1 + 0x4ad4) != (void *)0x0) {\n    FID_conflict__free(*(void **)(param_1 + 0x4ad4));\n  }\n  FUN_0040a84a(param_1 + 4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412380",
      "entry": "00412380",
      "c": "\nvoid __fastcall FUN_00412380(undefined4 *param_1)\n\n{\n  *param_1 = std::exception::vftable;\n  ___std_exception_destroy(param_1 + 1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412391",
      "entry": "00412391",
      "c": "\nint __thiscall FUN_00412391(void *this,uint param_1)\n\n{\n  uint *puVar1;\n  int iVar2;\n  uint uVar3;\n  \n  if (param_1 < *(uint *)((int)this + 0x80)) {\n                    /* WARNING: Load size is inaccurate */\n    iVar2 = *this;\nLAB_004123c3:\n    iVar2 = iVar2 + param_1;\n  }\n  else {\n    puVar1 = (uint *)((int)this + 0x84);\n    uVar3 = 1;\n    do {\n      if (param_1 < *puVar1) {\n        iVar2 = *(int *)((int)this + uVar3 * 4) - *(int *)((int)this + uVar3 * 4 + 0x7c);\n        goto LAB_004123c3;\n      }\n      uVar3 = uVar3 + 1;\n      puVar1 = puVar1 + 1;\n    } while (uVar3 < 0x20);\n                    /* WARNING: Load size is inaccurate */\n    iVar2 = *this;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "FUN_004123c9",
      "entry": "004123c9",
      "c": "\nuint * __thiscall FUN_004123c9(void *this,uint param_1)\n\n{\n  uint *puVar1;\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  if ((param_1 & 2) == 0) {\n    ExceptionList = &local_10;\n    FUN_00412360((int)this);\n    puVar1 = (uint *)this;\n    if ((param_1 & 1) != 0) {\n      FUN_0041eb68(this);\n    }\n  }\n  else {\n    puVar1 = (uint *)((int)this + -4);\n    ExceptionList = &local_10;\n    _eh_vector_destructor_iterator_(this,0x4ae4,*puVar1,FUN_00412360);\n    if ((param_1 & 1) != 0) {\n      FUN_0041f2c5(puVar1);\n    }\n  }\n  ExceptionList = local_10;\n  return puVar1;\n}\n\n"
    },
    {
      "name": "FUN_00412450",
      "entry": "00412450",
      "c": "\nundefined4 * __thiscall FUN_00412450(void *this,byte param_1)\n\n{\n  *(undefined ***)this = std::exception::vftable;\n  ___std_exception_destroy((undefined4 *)((int)this + 4));\n  if ((param_1 & 1) != 0) {\n    FUN_0041eb68(this);\n  }\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_0041247a",
      "entry": "0041247a",
      "c": "\nvoid __thiscall FUN_0041247a(void *this,int param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint uVar3;\n  \n  uVar3 = param_1 + *(int *)((int)this + 4);\n  *(uint *)((int)this + 4) = uVar3;\n  if (*(uint *)((int)this + 8) < uVar3) {\n    if ((*(uint *)((int)this + 0xc) != 0) && (*(uint *)((int)this + 0xc) < uVar3)) {\n      FUN_00406c36(&DAT_00441098,L\"Maximum allowed array size (%u) is exceeded\");\n      FUN_00406ca7(&DAT_00441098);\n    }\n    uVar1 = (*(uint *)((int)this + 8) >> 2) + 0x20 + *(int *)((int)this + 8);\n    uVar3 = *(uint *)((int)this + 4);\n    if (*(uint *)((int)this + 4) <= uVar1) {\n      uVar3 = uVar1;\n    }\n    if (*(char *)((int)this + 0x10) == '\\0') {\n                    /* WARNING: Load size is inaccurate */\n      puVar2 = (uint *)FUN_00423e3e(*this,uVar3 << 4);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n    }\n    else {\n      puVar2 = (uint *)FUN_00423e33(uVar3 << 4);\n      if (puVar2 == (uint *)0x0) {\n        FUN_00406ca7(&DAT_00441098);\n      }\n                    /* WARNING: Load size is inaccurate */\n      if (*this != 0) {\n                    /* WARNING: Load size is inaccurate */\n        FUN_00420320(puVar2,*this,*(int *)((int)this + 8) << 4);\n                    /* WARNING: Load size is inaccurate */\n        FUN_0040f445(*this,*(int *)((int)this + 8) << 4);\n                    /* WARNING: Load size is inaccurate */\n        FID_conflict__free(*this);\n      }\n    }\n    *(uint **)this = puVar2;\n    *(uint *)((int)this + 8) = uVar3;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041253e",
      "entry": "0041253e",
      "c": "\nundefined4 __thiscall FUN_0041253e(void *this,undefined4 *param_1)\n\n{\n  uint *puVar1;\n  undefined1 uVar2;\n  undefined4 uVar3;\n  \n  if (0x1fff < *(uint *)((int)this + 0x50)) {\n    FUN_00415202((undefined4 *)this);\n    if (0x1fff < *(uint *)((int)this + 0x50)) {\n      *(undefined4 *)((int)this + 0x50) = 0;\n    }\n  }\n  puVar1 = param_1 + 1;\n  if ((*(int *)((int)this + 0x80) == *(int *)((int)this + 0x7c)) ||\n     (*puVar1 < (*(int *)((int)this + 0x80) - *(int *)((int)this + 0x7c) &\n                *(uint *)((int)this + 0xe6dc)))) {\n    uVar2 = 0;\n  }\n  else {\n    uVar2 = 1;\n  }\n  *(undefined1 *)((int)param_1 + 0xd) = uVar2;\n  *puVar1 = *puVar1 + *(int *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc);\n  uVar3 = FUN_00413de6((void *)((int)this + 0x4c),*param_1,param_1[1],param_1[2],param_1[3]);\n  return CONCAT31((int3)((uint)uVar3 >> 8),1);\n}\n\n"
    },
    {
      "name": "FUN_004125a7",
      "entry": "004125a7",
      "c": "\nuint FUN_004125a7(void)\n\n{\n  byte bVar1;\n  int iVar2;\n  undefined1 uVar3;\n  uint3 uVar4;\n  uint uVar5;\n  int iVar6;\n  int *piVar7;\n  uint uVar8;\n  undefined1 extraout_var;\n  int *piVar9;\n  void *this;\n  uint uVar10;\n  uint *puVar11;\n  int *piVar12;\n  undefined4 *puVar13;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  uVar5 = 0x8000;\n  piVar9 = (int *)((int)this + 0xe688);\n  *(int **)(unaff_EBP + -0x14) = piVar9;\n  *(undefined4 *)((int)this + 0xe68c) = 0;\n  *piVar9 = 0;\n  if (*(uint *)(unaff_EBP + 0x10) < 0x8001) {\n    uVar5 = *(uint *)(unaff_EBP + 0x10);\n  }\n  FUN_00420320(*(uint **)((int)this + 0xe694),*(uint **)(unaff_EBP + 0xc),uVar5);\n  *(int **)(unaff_EBP + -0x2c) = (int *)((int)this + 0xe664);\n  FUN_0040ca1f((int *)((int)this + 0xe664));\n  if ((*(byte *)(unaff_EBP + 8) & 0x80) == 0) {\n    piVar9 = *(int **)((int)this + 0xe6d4);\nLAB_00412620:\n    *(int **)(unaff_EBP + -0x1c) = piVar9;\n  }\n  else {\n    uVar5 = FUN_0040ca93(piVar9);\n    *(uint *)(unaff_EBP + -0x1c) = uVar5;\n    if (uVar5 != 0) {\n      piVar9 = (int *)(uVar5 - 1);\n      goto LAB_00412620;\n    }\n    FUN_00413529(this,'\\0');\n    piVar9 = (int *)0x0;\n  }\n  piVar7 = *(int **)((int)this + 0xe69c);\n  *(int **)(unaff_EBP + -0x24) = piVar7;\n  if ((piVar9 <= piVar7) && (piVar9 <= *(int **)((int)this + 0xe6c4))) {\n    *(int **)((int)this + 0xe6d4) = piVar9;\n    iVar6 = FUN_0041eb38(0x38);\n    *(int *)(unaff_EBP + -0x10) = iVar6;\n    if (iVar6 == 0) {\n      iVar6 = 0;\n      *(undefined4 *)(unaff_EBP + -0x10) = 0;\n    }\n    else {\n      *(undefined4 *)(iVar6 + 0x34) = 0;\n      *(undefined4 *)(iVar6 + 0x10) = 0;\n    }\n    if (piVar9 != *(int **)(unaff_EBP + -0x24)) {\n      *(undefined4 *)(unaff_EBP + -0x18) =\n           *(undefined4 *)(*(int *)((int)this + 0xe698) + (int)piVar9 * 4);\n      *(int **)(iVar6 + 0xc) = piVar9;\nLAB_004126da:\n      uVar5 = 0;\n      *(undefined4 *)(unaff_EBP + -0x20) = 0;\n      if (*(int *)((int)this + 0xe6b0) == 0) {\nLAB_00412752:\n        FUN_0040d4b8((void *)((int)this + 0xe6ac),1);\n        iVar6 = 1;\n      }\n      else {\n        iVar6 = 0;\n        do {\n          *(undefined4 *)(*(int *)((int)this + 0xe6ac) + (uVar5 - iVar6) * 4) =\n               *(undefined4 *)(*(int *)((int)this + 0xe6ac) + uVar5 * 4);\n          iVar2 = *(int *)(unaff_EBP + -0x20);\n          if (*(int *)(*(int *)((int)this + 0xe6ac) + iVar2 * 4) == 0) {\n            iVar6 = iVar6 + 1;\n          }\n          if (iVar6 != 0) {\n            *(undefined4 *)(*(int *)((int)this + 0xe6ac) + iVar2 * 4) = 0;\n          }\n          uVar8 = *(uint *)((int)this + 0xe6b0);\n          uVar5 = iVar2 + 1;\n          *(uint *)(unaff_EBP + -0x20) = uVar5;\n        } while (uVar5 < uVar8);\n        *(int *)(unaff_EBP + -0x20) = iVar6;\n        piVar9 = *(int **)(unaff_EBP + -0x1c);\n        if (iVar6 == 0) {\n          if (0x2000 < uVar8) goto LAB_00412733;\n          goto LAB_00412752;\n        }\n        iVar6 = *(int *)(unaff_EBP + -0x20);\n      }\n      *(undefined4 *)(*(int *)((int)this + 0xe6ac) + (*(int *)((int)this + 0xe6b0) - iVar6) * 4) =\n           *(undefined4 *)(unaff_EBP + -0x10);\n      uVar5 = FUN_0040ca93((int *)((int)this + 0xe688));\n      *(uint *)(unaff_EBP + -0x20) = uVar5;\n      if ((*(byte *)(unaff_EBP + 8) & 0x40) != 0) {\n        uVar5 = uVar5 + 0x102;\n        *(uint *)(unaff_EBP + -0x20) = uVar5;\n      }\n      puVar11 = *(uint **)(unaff_EBP + -0x10);\n      bVar1 = *(byte *)(unaff_EBP + 8);\n      *puVar11 = *(int *)((int)this + 0x7c) + uVar5 & *(uint *)((int)this + 0xe6dc);\n      if ((bVar1 & 0x20) == 0) {\n        if (piVar9 < *(int **)((int)this + 0xe6c4)) {\n          uVar8 = *(uint *)(*(int *)((int)this + 0xe6c0) + (int)piVar9 * 4);\n        }\n        else {\n          uVar8 = 0;\n        }\n        puVar11[1] = uVar8;\n      }\n      else {\n        uVar8 = FUN_0040ca93((int *)((int)this + 0xe688));\n        uVar5 = *(uint *)(unaff_EBP + -0x20);\n        *(uint *)(*(int *)(unaff_EBP + -0x10) + 4) = uVar8;\n        *(uint *)(*(int *)((int)this + 0xe6c0) + (int)piVar9 * 4) = uVar8;\n      }\n      if ((*(int *)((int)this + 0x80) == *(int *)((int)this + 0x7c)) ||\n         (uVar3 = 1,\n         uVar5 < (*(int *)((int)this + 0x80) - *(int *)((int)this + 0x7c) &\n                 *(uint *)((int)this + 0xe6dc)))) {\n        uVar3 = 0;\n      }\n      iVar6 = *(int *)(unaff_EBP + -0x10);\n      *(undefined1 *)(iVar6 + 8) = uVar3;\n      *(void **)(unaff_EBP + -0x28) = (void *)(iVar6 + 0x14);\n      _memset((void *)(iVar6 + 0x14),0,0x1c);\n      uVar5 = *(uint *)(iVar6 + 4);\n      bVar1 = *(byte *)(unaff_EBP + 8);\n      *(uint *)(iVar6 + 0x24) = uVar5;\n      if ((bVar1 & 0x10) != 0) {\n        piVar7 = *(int **)(unaff_EBP + -0x14);\n        uVar4 = thunk_FUN_0040a89d(piVar7);\n        *(uint *)(unaff_EBP + -0x20) = CONCAT13(extraout_var,uVar4) >> 9;\n        FUN_0040a881(piVar7,7);\n        uVar10 = *(uint *)(unaff_EBP + -0x20);\n        uVar8 = 0;\n        puVar11 = *(uint **)(unaff_EBP + -0x28);\n        *(undefined4 *)(unaff_EBP + -0x1c) = 0;\n        do {\n          uVar5 = 1 << ((byte)uVar8 & 0x1f);\n          if ((uVar10 & uVar5) != 0) {\n            uVar5 = FUN_0040ca93(piVar7);\n            uVar8 = *(uint *)(unaff_EBP + -0x1c);\n            uVar10 = *(uint *)(unaff_EBP + -0x20);\n            *puVar11 = uVar5;\n          }\n          uVar8 = uVar8 + 1;\n          puVar11 = puVar11 + 1;\n          *(uint *)(unaff_EBP + -0x1c) = uVar8;\n        } while (uVar8 < 7);\n        iVar6 = *(int *)(unaff_EBP + -0x10);\n      }\n      piVar12 = (int *)0x0;\n      if (piVar9 == *(int **)(unaff_EBP + -0x24)) {\n        piVar9 = (int *)FUN_0040ca93(*(int **)(unaff_EBP + -0x14));\n        piVar7 = piVar9;\n        if ((((int *)0xffff < piVar9) || (piVar9 == (int *)0x0)) ||\n           (piVar7 = *(int **)(unaff_EBP + -0x14),\n           *(uint *)(unaff_EBP + 0x10) < (uint)(*piVar7 + (int)piVar9))) goto LAB_0041273f;\n        FUN_004013ba((void *)(unaff_EBP + -0x40),(int)piVar9);\n        *(undefined4 *)(unaff_EBP + -4) = 0;\n        if (piVar9 != (int *)0x0) {\n          do {\n            if (0x7fff < **(int **)(unaff_EBP + -0x14) + 3U) {\n              piVar7 = (int *)FUN_004015fb((int *)(unaff_EBP + -0x40));\n              goto LAB_0041273f;\n            }\n            uVar4 = thunk_FUN_0040a89d(*(int **)(unaff_EBP + -0x14));\n            *(char *)(*(int *)(unaff_EBP + -0x40) + (int)piVar12) = (char)(uVar4 >> 8);\n            FUN_0040a881(*(void **)(unaff_EBP + -0x14),8);\n            piVar12 = (int *)((int)piVar12 + 1);\n          } while (piVar12 < piVar9);\n        }\n        puVar13 = (undefined4 *)(*(int *)(unaff_EBP + -0x18) + 0x10);\n        FUN_0040ca36(*(byte **)(unaff_EBP + -0x40),(uint)piVar9,puVar13);\n        uVar5 = FUN_004015fb((int *)(unaff_EBP + -0x40));\n      }\n      else {\n        puVar13 = (undefined4 *)(*(int *)(unaff_EBP + -0x18) + 0x10);\n      }\n      uVar5 = CONCAT31((int3)(uVar5 >> 8),1);\n      *(undefined4 *)(iVar6 + 0x10) = *puVar13;\n      goto LAB_00412741;\n    }\n    if (piVar9 < (int *)0x2001) {\n      FUN_0040d4b8((void *)((int)this + 0xe698),1);\n      iVar6 = FUN_0041eb38(0x38);\n      *(int *)(unaff_EBP + -0x18) = iVar6;\n      if (iVar6 == 0) {\n        iVar6 = 0;\n        *(undefined4 *)(unaff_EBP + -0x18) = 0;\n      }\n      else {\n        *(undefined4 *)(iVar6 + 0x34) = 0;\n        *(undefined4 *)(iVar6 + 0x10) = 0;\n      }\n      *(int *)(*(int *)((int)this + 0xe698) + -4 + *(int *)((int)this + 0xe69c) * 4) = iVar6;\n      *(int *)(*(int *)(unaff_EBP + -0x10) + 0xc) = *(int *)((int)this + 0xe69c) + -1;\n      FUN_0040e261((void *)((int)this + 0xe6c0),0);\n      goto LAB_004126da;\n    }\nLAB_00412733:\n    piVar7 = (int *)FUN_0041eb68(*(void **)(unaff_EBP + -0x10));\n  }\nLAB_0041273f:\n  uVar5 = (uint)piVar7 & 0xffffff00;\nLAB_00412741:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar5;\n}\n\n"
    },
    {
      "name": "FUN_00412922",
      "entry": "00412922",
      "c": "\nvoid __thiscall FUN_00412922(void *this,uint param_1)\n\n{\n  if (*(uint *)((int)this + 8) < param_1) {\n    FUN_0041247a(this,param_1 - *(int *)((int)this + 4));\n  }\n  else {\n    *(uint *)((int)this + 4) = param_1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041293c",
      "entry": "0041293c",
      "c": "\nvoid __fastcall FUN_0041293c(void *param_1)\n\n{\n  if (*(int *)((int)param_1 + 0xb4) != *(int *)((int)param_1 + 0xb0)) {\n    *(int *)((int)param_1 + 0xb4) = *(int *)((int)param_1 + 0xb4) + -0xc;\n    return;\n  }\n  if (*(undefined4 **)((int)param_1 + 0xb8) != (undefined4 *)0x0) {\n    *(undefined4 *)((int)param_1 + 0xb8) = **(undefined4 **)((int)param_1 + 0xb8);\n    return;\n  }\n  FUN_004129cd(param_1,0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412971",
      "entry": "00412971",
      "c": "\nvoid __thiscall FUN_00412971(void *this,int param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = (uint)*(byte *)(param_1 + 0x29 + (int)this);\n  puVar1 = *(undefined4 **)((int)this + uVar3 * 4 + 0xb8);\n  if (puVar1 == (undefined4 *)0x0) {\n    uVar2 = (uint)*(byte *)(uVar3 + 4 + (int)this) * 0xc + *(int *)((int)this + 0xb0);\n    *(uint *)((int)this + 0xb0) = uVar2;\n    if (*(uint *)((int)this + 0xb4) < uVar2) {\n      *(uint *)((int)this + 0xb0) = uVar2 + (uint)*(byte *)(uVar3 + 4 + (int)this) * -0xc;\n      FUN_004129cd(this,uVar3);\n    }\n  }\n  else {\n    *(undefined4 *)((int)this + uVar3 * 4 + 0xb8) = *puVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004129cd",
      "entry": "004129cd",
      "c": "\nundefined4 * __thiscall FUN_004129cd(void *this,int param_1)\n\n{\n  int *piVar1;\n  uint uVar2;\n  undefined4 *puVar3;\n  int iVar4;\n  \n  if (*(char *)((int)this + 0xaa) == '\\0') {\n    *(undefined1 *)((int)this + 0xaa) = 0xff;\n    FUN_00413137((int)this);\n    puVar3 = *(undefined4 **)((int)this + param_1 * 4 + 0xb8);\n    if (puVar3 != (undefined4 *)0x0) {\n      *(undefined4 *)((int)this + param_1 * 4 + 0xb8) = *puVar3;\n      return puVar3;\n    }\n  }\n  piVar1 = (int *)((int)this + (param_1 + 0x2e) * 4);\n  iVar4 = param_1;\n  do {\n    iVar4 = iVar4 + 1;\n    piVar1 = piVar1 + 1;\n    if (iVar4 == 0x26) {\n      *(char *)((int)this + 0xaa) = *(char *)((int)this + 0xaa) + -1;\n      uVar2 = (uint)*(byte *)(param_1 + 4 + (int)this);\n      if ((int)(uVar2 * 0xc) < *(int *)((int)this + 0x15c) - *(int *)((int)this + 0x150)) {\n        puVar3 = (undefined4 *)(*(int *)((int)this + 0x154) + uVar2 * -0xc);\n        *(uint *)((int)this + 0x15c) = *(int *)((int)this + 0x15c) + uVar2 * -0xc;\n        *(undefined4 **)((int)this + 0x154) = puVar3;\n        return puVar3;\n      }\n      return (undefined4 *)0x0;\n    }\n    puVar3 = (undefined4 *)*piVar1;\n  } while (puVar3 == (undefined4 *)0x0);\n  *(undefined4 *)((int)this + iVar4 * 4 + 0xb8) = *puVar3;\n  FUN_00414b3a(this,(int)puVar3,iVar4,param_1);\n  return puVar3;\n}\n\n"
    },
    {
      "name": "FUN_00412a71",
      "entry": "00412a71",
      "c": "\nint * __thiscall FUN_00412a71(void *this,int *param_1,uint param_2,char *param_3)\n\n{\n  int *piVar1;\n  int iVar2;\n  char cVar3;\n  ushort *puVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  int *piVar9;\n  int *piVar10;\n  \n  cVar3 = *param_3;\n  if (cVar3 == '\\0') {\n    uVar8 = (uint)(byte)param_3[0xc];\n    iVar2 = 0;\n    FUN_004020bd((int *)((int)this + 0x38),param_2);\n    piVar1 = *(int **)((int)this + 0x38);\n    uVar7 = 0;\n    if (uVar8 != 0) {\n      do {\n        cVar3 = '\\0';\n        for (uVar5 = uVar7; uVar5 < param_2; uVar5 = uVar5 + uVar8) {\n          cVar3 = cVar3 - *(char *)(iVar2 + (int)param_1);\n          iVar2 = iVar2 + 1;\n          *(char *)(uVar5 + (int)piVar1) = cVar3;\n        }\n        uVar7 = uVar7 + 1;\n      } while (uVar7 < uVar8);\n    }\n  }\n  else {\n    piVar1 = param_1;\n    if ((cVar3 == '\\x01') || (cVar3 == '\\x02')) {\n      uVar7 = *(uint *)((int)this + 0x4c58);\n      uVar8 = 4;\n      piVar9 = param_1;\n      if (4 < param_2) {\n        do {\n          piVar10 = (int *)((int)piVar9 + 1);\n          uVar6 = uVar7 + 1;\n          uVar5 = uVar8 + 1;\n          if (((char)*piVar9 == -0x18) || ((char)*piVar9 == (char)((cVar3 == '\\x02') + -0x18))) {\n            iVar2 = *piVar10;\n            if (iVar2 < 0) {\n              if (-1 < (int)(iVar2 + (uVar6 & 0xffffff))) {\n                *piVar10 = iVar2 + 0x1000000;\n              }\n            }\n            else if (iVar2 + -0x1000000 < 0) {\n              *piVar10 = iVar2 - (uVar6 & 0xffffff);\n            }\n            piVar10 = (int *)((int)piVar9 + 5);\n            uVar6 = uVar7 + 5;\n            uVar5 = uVar8 + 5;\n          }\n          uVar8 = uVar5;\n          uVar7 = uVar6;\n          piVar9 = piVar10;\n        } while (uVar5 < param_2);\n      }\n    }\n    else if (cVar3 == '\\x03') {\n      uVar7 = *(uint *)((int)this + 0x4c58);\n      if (3 < param_2) {\n        puVar4 = (ushort *)((int)param_1 + 1);\n        do {\n          if ((char)puVar4[1] == -0x15) {\n            iVar2 = ((uint)*puVar4 * 0x100 - (uVar7 >> 2)) + (uint)*(byte *)((int)puVar4 + -1);\n            *(char *)((int)puVar4 + -1) = (char)iVar2;\n            *(char *)puVar4 = (char)((uint)iVar2 >> 8);\n            *(char *)((int)puVar4 + 1) = (char)((uint)iVar2 >> 0x10);\n          }\n          puVar4 = puVar4 + 2;\n          uVar7 = uVar7 + 4;\n        } while ((uint)((2 - (int)param_1) + (int)puVar4) < param_2);\n      }\n    }\n    else {\n      piVar1 = (int *)0x0;\n    }\n  }\n  return piVar1;\n}\n\n"
    },
    {
      "name": "FUN_00412bb8",
      "entry": "00412bb8",
      "c": "\nvoid __fastcall FUN_00412bb8(void *param_1)\n\n{\n  FUN_00414ca8((int *)((int)param_1 + 0x4a8c));\n  FUN_00414c4c((int *)((int)param_1 + 0x4a8c),1);\n  FUN_00414b9d(param_1,2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412bde",
      "entry": "00412bde",
      "c": "\nvoid __fastcall FUN_00412bde(int param_1)\n\n{\n  *(undefined1 *)(param_1 + 0xa6c) = 1;\n  _memset((void *)(param_1 + 0x66c),0,0x100);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412bfc",
      "entry": "00412bfc",
      "c": "\nvoid __thiscall FUN_00412bfc(void *this,undefined1 *param_1,int param_2,int param_3)\n\n{\n  undefined1 *puVar1;\n  int iVar2;\n  \n  if (param_3 != 0) {\n    iVar2 = param_2 - (int)param_1;\n    do {\n      puVar1 = (undefined1 *)FUN_00412391(this,(uint)(param_1 + iVar2));\n      *param_1 = *puVar1;\n      param_1 = param_1 + 1;\n      param_3 = param_3 + -1;\n    } while (param_3 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412c30",
      "entry": "00412c30",
      "c": "\nvoid __thiscall FUN_00412c30(void *this,int param_1,int param_2,uint *param_3,uint param_4)\n\n{\n  undefined1 *puVar1;\n  undefined1 *puVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar3 = *param_3;\n  uVar4 = uVar3 - param_2;\n  if (param_1 != 0) {\n    do {\n      puVar1 = (undefined1 *)FUN_00412391(this,uVar4 & param_4);\n      puVar2 = (undefined1 *)FUN_00412391(this,uVar3);\n      uVar4 = uVar4 + 1;\n      *puVar2 = *puVar1;\n      uVar3 = *param_3 + 1 & param_4;\n      *param_3 = uVar3;\n      param_1 = param_1 + -1;\n    } while (param_1 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00412c88",
      "entry": "00412c88",
      "c": "\nushort * __thiscall FUN_00412c88(void *this,char param_1,ushort *param_2)\n\n{\n  ushort *puVar1;\n  char *pcVar2;\n  ushort *this_00;\n  uint uVar3;\n  int iVar4;\n  ushort *puVar5;\n  int *piVar6;\n  char local_108;\n  char local_107;\n  char *local_106;\n  int local_100;\n  int local_fc [63];\n  \n  piVar6 = &local_100;\n  this_00 = *(ushort **)((int)this + 0x644);\n  puVar1 = *(ushort **)(*(int *)((int)this + 0x650) + 2);\n  if (param_1 == '\\0') {\n    piVar6 = local_fc;\n    local_100 = *(int *)((int)this + 0x650);\n    if (*(int *)(this_00 + 4) == 0) goto LAB_00412d2a;\n  }\n  puVar5 = this_00;\n  if (param_2 == (ushort *)0x0) goto LAB_00412cd2;\n  puVar5 = *(ushort **)(this_00 + 4);\n  while (this_00 = *(ushort **)(param_2 + 1), this_00 == puVar1) {\n    if (&stack0x00000000 <= piVar6) {\n      return (ushort *)0x0;\n    }\n    *piVar6 = (int)param_2;\n    piVar6 = piVar6 + 1;\n    this_00 = puVar5;\n    if (*(int *)(puVar5 + 4) == 0) break;\nLAB_00412cd2:\n    puVar5 = *(ushort **)(puVar5 + 4);\n    if (*puVar5 == 1) {\n      param_2 = puVar5 + 1;\n    }\n    else {\n      for (param_2 = *(ushort **)(puVar5 + 2); (char)*param_2 != **(char **)((int)this + 0x650);\n          param_2 = param_2 + 3) {\n      }\n    }\n  }\n  if (piVar6 == &local_100) {\n    return this_00;\n  }\nLAB_00412d2a:\n  local_108 = (char)*puVar1;\n  local_106 = (char *)((int)puVar1 + 1);\n  if (*this_00 == 1) {\n    local_107 = *(char *)((int)this_00 + 3);\n  }\n  else {\n    if (this_00 <= *(ushort **)((int)this + 0x4bdc)) {\n      return (ushort *)0x0;\n    }\n    for (pcVar2 = *(char **)(this_00 + 2); *pcVar2 != local_108; pcVar2 = pcVar2 + 6) {\n    }\n    iVar4 = (byte)pcVar2[1] - 1;\n    uVar3 = ((uint)this_00[1] - (uint)*this_00) - iVar4;\n    if (uVar3 < (uint)(iVar4 * 2)) {\n      local_107 = (char)((uVar3 * 3 + -1 + iVar4 * 2) / (uVar3 * 2));\n    }\n    else {\n      local_107 = uVar3 < (uint)(iVar4 * 5);\n    }\n    local_107 = local_107 + '\\x01';\n  }\n  do {\n    piVar6 = piVar6 + -1;\n    this_00 = FUN_004184f1(this_00,(int)this,*piVar6,(undefined4 *)&local_108);\n    if (this_00 == (ushort *)0x0) {\n      return (ushort *)0x0;\n    }\n  } while (piVar6 != &local_100);\n  return this_00;\n}\n\n"
    },
    {
      "name": "FUN_00412dbd",
      "entry": "00412dbd",
      "c": "\nuint __fastcall FUN_00412dbd(void *param_1)\n\n{\n  byte bVar1;\n  short *this;\n  ushort *this_00;\n  byte *pbVar2;\n  uint uVar3;\n  char cVar4;\n  undefined1 uVar5;\n  undefined4 uVar6;\n  undefined3 extraout_var;\n  undefined3 extraout_var_00;\n  \n  this = *(short **)((int)param_1 + 0x644);\n  if ((*(short **)((int)param_1 + 0x4bdc) < this) && (this <= *(short **)((int)param_1 + 0x4be4))) {\n    if (*this == 1) {\n      FUN_00418532(this,(int)param_1);\n      goto LAB_00412ea8;\n    }\n    if ((*(short **)((int)param_1 + 0x4bdc) < *(short **)(this + 2)) &&\n       (*(short **)(this + 2) <= *(short **)((int)param_1 + 0x4be4))) {\n      uVar6 = FUN_00418661(this,(int)param_1);\n      cVar4 = (char)uVar6;\njoined_r0x00412df4:\n      if (cVar4 != '\\0') {\nLAB_00412ea8:\n        *(int *)((int)param_1 + 0x4a70) =\n             *(int *)((int)param_1 + 0x4a70) +\n             *(int *)((int)param_1 + 0x4a78) * *(int *)((int)param_1 + 0x4a7c);\n        *(int *)((int)param_1 + 0x4a78) =\n             (*(int *)((int)param_1 + 0x4a80) - *(int *)((int)param_1 + 0x4a7c)) *\n             *(int *)((int)param_1 + 0x4a78);\n        pbVar2 = *(byte **)((int)param_1 + 0x650);\n        if (pbVar2 != (byte *)0x0) {\n          bVar1 = *pbVar2;\n          if ((*(int *)((int)param_1 + 0x65c) == 0) &&\n             (uVar3 = *(uint *)(pbVar2 + 2), *(uint *)((int)param_1 + 0x4bdc) < uVar3)) {\n            *(uint *)((int)param_1 + 0x64c) = uVar3;\n            *(uint *)((int)param_1 + 0x644) = uVar3;\n          }\n          else {\n            FUN_004181ef(param_1);\n            if (*(char *)((int)param_1 + 0xa6c) == '\\0') {\n              FUN_00412bde((int)param_1);\n            }\n          }\n          do {\n            uVar3 = *(uint *)((int)param_1 + 0x4a70);\n            if (0xffffff < (uVar3 + *(uint *)((int)param_1 + 0x4a78) ^ uVar3)) {\n              if (0x7fff < *(uint *)((int)param_1 + 0x4a78)) {\n                return (uint)bVar1;\n              }\n              *(uint *)((int)param_1 + 0x4a78) = -uVar3 & 0x7fff;\n            }\n            uVar5 = FUN_00413106(*(undefined4 **)((int)param_1 + 0x4a88));\n            *(int *)((int)param_1 + 0x4a78) = *(int *)((int)param_1 + 0x4a78) << 8;\n            *(int *)((int)param_1 + 0x4a70) = *(int *)((int)param_1 + 0x4a70) << 8;\n            *(uint *)((int)param_1 + 0x4a74) =\n                 CONCAT31(extraout_var_00,uVar5) | *(int *)((int)param_1 + 0x4a74) << 8;\n          } while( true );\n        }\n        do {\n          uVar3 = *(uint *)((int)param_1 + 0x4a70);\n          if (0xffffff < (uVar3 + *(uint *)((int)param_1 + 0x4a78) ^ uVar3)) {\n            if (0x7fff < *(uint *)((int)param_1 + 0x4a78)) goto LAB_00412e62;\n            *(uint *)((int)param_1 + 0x4a78) = -uVar3 & 0x7fff;\n          }\n          uVar5 = FUN_00413106(*(undefined4 **)((int)param_1 + 0x4a88));\n          *(int *)((int)param_1 + 0x4a78) = *(int *)((int)param_1 + 0x4a78) << 8;\n          *(int *)((int)param_1 + 0x4a70) = *(int *)((int)param_1 + 0x4a70) << 8;\n          *(uint *)((int)param_1 + 0x4a74) =\n               CONCAT31(extraout_var,uVar5) | *(int *)((int)param_1 + 0x4a74) << 8;\n        } while( true );\n      }\n    }\n  }\n  return 0xffffffff;\nLAB_00412e62:\n  do {\n    *(int *)((int)param_1 + 0x65c) = *(int *)((int)param_1 + 0x65c) + 1;\n    this_00 = *(ushort **)(*(int *)((int)param_1 + 0x644) + 8);\n    *(ushort **)((int)param_1 + 0x644) = this_00;\n    if (this_00 <= *(ushort **)((int)param_1 + 0x4bdc)) {\n      return 0xffffffff;\n    }\n    if (*(ushort **)((int)param_1 + 0x4be4) < this_00) {\n      return 0xffffffff;\n    }\n  } while ((uint)*this_00 == *(uint *)((int)param_1 + 0x654));\n  uVar6 = FUN_004187ba(this_00,(int)param_1);\n  cVar4 = (char)uVar6;\n  goto joined_r0x00412df4;\n}\n\n"
    },
    {
      "name": "FUN_00412f75",
      "entry": "00412f75",
      "c": "\nbool __thiscall FUN_00412f75(void *this,undefined4 *param_1,undefined4 *param_2)\n\n{\n  int *this_00;\n  byte bVar1;\n  undefined1 uVar2;\n  uint3 extraout_var;\n  undefined3 extraout_var_00;\n  uint uVar3;\n  undefined3 extraout_var_01;\n  uint uVar4;\n  bool bVar5;\n  undefined1 local_4;\n  \n  bVar1 = FUN_00413106(param_1);\n  this_00 = (int *)((int)this + 0x4a8c);\n  uVar4 = CONCAT31(extraout_var >> 5,(char)(CONCAT31(extraout_var,bVar1) >> 5)) & 0xffffff01;\n  if ((bVar1 & 0x20) == 0) {\n    uVar3 = uVar4;\n    if (*this_00 != 0) goto LAB_00412fb2;\nLAB_00412faa:\n    bVar5 = false;\n  }\n  else {\n    uVar2 = FUN_00413106(param_1);\n    uVar3 = CONCAT31(extraout_var_00,uVar2);\nLAB_00412fb2:\n    if ((bVar1 & 0x40) != 0) {\n      uVar2 = FUN_00413106(param_1);\n      *param_2 = CONCAT31(extraout_var_01,uVar2);\n    }\n    FUN_004134f3((void *)((int)this + 0x4a70),param_1);\n    local_4 = (char)uVar4;\n    if (local_4 != '\\0') {\n      uVar4 = (bVar1 & 0x1f) + 1;\n      if (0x10 < uVar4) {\n        uVar4 = uVar4 * 3 - 0x20;\n      }\n      if (uVar4 == 1) {\n        FUN_00414ca8(this_00);\n        goto LAB_00412faa;\n      }\n      FUN_00414c4c(this_00,uVar3 + 1);\n      FUN_00414b9d(this,uVar4);\n    }\n    bVar5 = *(int *)((int)this + 0x644) != 0;\n  }\n  return bVar5;\n}\n\n"
    },
    {
      "name": "FUN_00413020",
      "entry": "00413020",
      "c": "\nvoid __thiscall FUN_00413020(void *this,int param_1,char param_2)\n\n{\n  if (param_1 == 0x1d) {\n    if (*(char *)((int)this + 0x4c44) == '\\0') {\n      FUN_0041552f(this,param_2);\n    }\n  }\n  else if (param_1 == 0x32) {\n    if ((*(uint *)((int)this + 0x1c) < 2) || (*(char *)((int)this + 0x4c44) != '\\0')) {\n      FUN_0041624a(this,param_2);\n    }\n    else {\n      FUN_00416cdc(this,param_2);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00413067",
      "entry": "00413067",
      "c": "\nulonglong __thiscall FUN_00413067(void *this,int *param_1)\n\n{\n  ulonglong uVar1;\n  \n  param_1[7] = *(int *)((int)this + 0x4c58);\n  uVar1 = FUN_0040c3bf((void *)((int)this + 0xe664),param_1);\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00413083",
      "entry": "00413083",
      "c": "\nuint * __thiscall FUN_00413083(void *this,uint *param_1,int param_2)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  \n  uVar2 = (uint)*(byte *)(param_2 + 0x29 + (int)this);\n  puVar1 = param_1;\n  if ((uVar2 != *(byte *)(param_2 + 0x2a + (int)this)) &&\n     (puVar1 = (uint *)FUN_00412971(this,param_2 + 1), puVar1 != (uint *)0x0)) {\n    FUN_00420320(puVar1,param_1,param_2 * 0xc);\n    *param_1 = *(uint *)((int)this + uVar2 * 4 + 0xb8);\n    *(uint **)((int)this + uVar2 * 4 + 0xb8) = param_1;\n  }\n  return puVar1;\n}\n\n"
    },
    {
      "name": "FUN_004130db",
      "entry": "004130db",
      "c": "\nuint __thiscall FUN_004130db(void *this,uint param_1,uint param_2)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  puVar1 = (uint *)((int)this + 0x80);\n  do {\n    if (param_1 < *puVar1) {\n      uVar2 = *puVar1 - param_1;\n      if (uVar2 < param_2) {\n        return uVar2;\n      }\n      return param_2;\n    }\n    uVar2 = uVar2 + 1;\n    puVar1 = puVar1 + 1;\n  } while (uVar2 < 0x20);\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00413106",
      "entry": "00413106",
      "c": "\nundefined1 __fastcall FUN_00413106(undefined4 *param_1)\n\n{\n  undefined1 uVar1;\n  int iVar2;\n  \n  iVar2 = param_1[1];\n  if (0x7fe2 < iVar2) {\n    FUN_00414e52(param_1);\n    iVar2 = param_1[1];\n    if (0x7fff < iVar2) {\n      return 0;\n    }\n  }\n  uVar1 = *(undefined1 *)(param_1[4] + iVar2);\n  param_1[1] = iVar2 + 1;\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00413137",
      "entry": "00413137",
      "c": "\nvoid __fastcall FUN_00413137(int param_1)\n\n{\n  short sVar1;\n  undefined4 *puVar2;\n  ushort uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  undefined4 *puVar7;\n  uint uVar8;\n  short *psVar9;\n  undefined4 local_10;\n  undefined4 *local_c;\n  \n  iVar5 = 0;\n  if (*(undefined1 **)(param_1 + 0xb0) != *(undefined1 **)(param_1 + 0xb4)) {\n    **(undefined1 **)(param_1 + 0xb0) = 0;\n  }\n  puVar7 = (undefined4 *)(param_1 + 0xb8);\n  local_c = &local_10;\n  do {\n    while (puVar2 = (undefined4 *)*puVar7, puVar2 != (undefined4 *)0x0) {\n      *puVar7 = *puVar2;\n      puVar2[2] = &local_10;\n      puVar2[1] = local_c;\n      local_c[2] = puVar2;\n      *(undefined2 *)puVar2 = 0xffff;\n      *(ushort *)((int)puVar2 + 2) = (ushort)*(byte *)(param_1 + 4 + iVar5);\n      local_c = puVar2;\n    }\n    iVar5 = iVar5 + 1;\n    puVar7 = puVar7 + 1;\n  } while (iVar5 < 0x26);\n  puVar7 = local_c;\n  if (local_c != &local_10) {\n    do {\n      uVar6 = (uint)*(ushort *)((int)puVar7 + 2);\n      psVar9 = (short *)(puVar7 + uVar6 * 3);\n      sVar1 = *psVar9;\n      while ((sVar1 == -1 && ((ushort)psVar9[1] + uVar6 < 0x10000))) {\n        *(undefined4 *)(*(int *)(psVar9 + 4) + 4) = *(undefined4 *)(psVar9 + 2);\n        *(undefined4 *)(*(int *)(psVar9 + 2) + 8) = *(undefined4 *)(psVar9 + 4);\n        uVar3 = *(short *)((int)puVar7 + 2) + psVar9[1];\n        uVar6 = (uint)uVar3;\n        *(ushort *)((int)puVar7 + 2) = uVar3;\n        psVar9 = (short *)(puVar7 + uVar6 * 3);\n        sVar1 = *psVar9;\n      }\n      puVar7 = (undefined4 *)puVar7[1];\n    } while (puVar7 != &local_10);\n  }\n  while (local_c != &local_10) {\n    *(undefined4 *)(local_c[2] + 4) = local_c[1];\n    *(undefined4 *)(local_c[1] + 8) = local_c[2];\n    uVar6 = (uint)*(ushort *)((int)local_c + 2);\n    puVar7 = local_c;\n    if (0x80 < uVar6) {\n      iVar5 = (uVar6 - 0x81 >> 7) + 1;\n      uVar6 = uVar6 + iVar5 * -0x80;\n      do {\n        *puVar7 = *(undefined4 *)(param_1 + 0x14c);\n        *(undefined4 **)(param_1 + 0x14c) = puVar7;\n        puVar7 = puVar7 + 0x180;\n        iVar5 = iVar5 + -1;\n      } while (iVar5 != 0);\n    }\n    uVar8 = (uint)*(byte *)(uVar6 + 0x29 + param_1);\n    if (*(byte *)(uVar8 + 4 + param_1) != uVar6) {\n      uVar4 = (uint)*(byte *)(uVar8 + 3 + param_1);\n      uVar8 = uVar8 - 1;\n      iVar5 = uVar6 - uVar4;\n      puVar7[uVar4 * 3] = *(undefined4 *)(param_1 + 0xb4 + iVar5 * 4);\n      *(undefined4 **)(param_1 + 0xb4 + iVar5 * 4) = puVar7 + uVar4 * 3;\n    }\n    *puVar7 = *(undefined4 *)(param_1 + 0xb8 + uVar8 * 4);\n    *(undefined4 **)(param_1 + 0xb8 + uVar8 * 4) = puVar7;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004132aa",
      "entry": "004132aa",
      "c": "\nvoid __thiscall FUN_004132aa(void *this,uint param_1)\n\n{\n  code *pcVar1;\n  uint uVar2;\n  void *_Dst;\n  uint uVar3;\n  uint _Size;\n  uint uVar4;\n  uint uStack_14;\n  int aiStack_c [3];\n  \n  FUN_00414872((int)this);\n  uVar3 = 0;\n  uVar4 = 0;\n  if (param_1 != 0) {\n    do {\n      if (0x1f < uVar3) {\n        if (param_1 <= uVar4) {\n          return;\n        }\n        FUN_004121f8(aiStack_c);\nLAB_00413370:\n        __CxxThrowException_8(aiStack_c,&DAT_0043bef0);\n        pcVar1 = (code *)swi(3);\n        (*pcVar1)();\n        return;\n      }\n      _Size = param_1 - uVar4;\n      uVar2 = _Size / (0x20 - uVar3);\n      if (uVar2 < 0x400001) {\n        uVar2 = 0x400000;\n      }\n      if (_Size < uVar2) {\nLAB_0041335e:\n        FUN_004121f8(aiStack_c);\n        goto LAB_00413370;\n      }\n      while (_Dst = (void *)FUN_00423e33(_Size), _Dst == (void *)0x0) {\n        _Size = _Size - (_Size >> 5);\n        if (_Size < uStack_14) goto LAB_0041335e;\n      }\n      _memset(_Dst,0,_Size);\n      uVar4 = uVar4 + _Size;\n      *(void **)(aiStack_c[0] + uVar3 * 4) = _Dst;\n      *(uint *)(aiStack_c[0] + 0x80 + uVar3 * 4) = uVar4;\n      uVar3 = uVar3 + 1;\n    } while (uVar4 < param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00413377",
      "entry": "00413377",
      "c": "\nvoid __thiscall FUN_00413377(void *this,uint param_1,char param_2)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  void *_Dst;\n  uint uVar3;\n  uint uVar4;\n  uint local_10;\n  int local_c [3];\n  \n  if (param_1 == 0) {\n    FUN_00406ca7(&DAT_00441098);\nLAB_0041339c:\n    param_1 = 0x40000;\n  }\n  else if (param_1 < 0x40000) goto LAB_0041339c;\n  if (param_1 <= *(uint *)((int)this + 0xe6d8)) {\n    return;\n  }\n  local_10 = 1;\n  if ((param_2 == '\\0') ||\n     ((*(int *)((int)this + 0x4b40) == 0 && (*(char *)((int)this + 0x4c44) == '\\0')))) {\n    bVar2 = false;\n    if (*(char *)((int)this + 0x4c44) == '\\0') goto LAB_004133f8;\n    _Dst = (void *)0x0;\n  }\n  else {\n    bVar2 = true;\n    if (*(char *)((int)this + 0x4c44) != '\\0') {\n      FUN_004121f8(local_c);\n      goto LAB_004134ec;\n    }\nLAB_004133f8:\n    _Dst = (void *)FUN_00423e33(param_1);\n    if (_Dst != (void *)0x0) goto LAB_00413444;\n  }\n  if ((bVar2) || (param_1 < 0x1000000)) {\n    FUN_004121f8(local_c);\nLAB_004134ec:\n    __CxxThrowException_8(local_c,&DAT_0043bef0);\n    pcVar1 = (code *)swi(3);\n    (*pcVar1)();\n    return;\n  }\n  if (*(void **)((int)this + 0x4b40) != (void *)0x0) {\n    FID_conflict__free(*(void **)((int)this + 0x4b40));\n    *(undefined4 *)((int)this + 0x4b40) = 0;\n  }\n  FUN_004132aa((void *)((int)this + 0x4b44),param_1);\n  *(undefined1 *)((int)this + 0x4c44) = 1;\nLAB_00413444:\n  if (*(char *)((int)this + 0x4c44) == '\\0') {\n    _memset(_Dst,0,param_1);\n    if ((bVar2) && (uVar3 = *(uint *)((int)this + 0xe6d8), uVar3 != 0)) {\n      do {\n        uVar4 = *(int *)((int)this + 0x7c) - local_10;\n        *(undefined1 *)((uVar4 & param_1 - 1) + (int)_Dst) =\n             *(undefined1 *)((uVar3 - 1 & uVar4) + *(int *)((int)this + 0x4b40));\n        uVar3 = *(uint *)((int)this + 0xe6d8);\n        local_10 = local_10 + 1;\n      } while (local_10 <= uVar3);\n    }\n    if (*(void **)((int)this + 0x4b40) != (void *)0x0) {\n      FID_conflict__free(*(void **)((int)this + 0x4b40));\n    }\n    *(void **)((int)this + 0x4b40) = _Dst;\n  }\n  *(uint *)((int)this + 0xe6d8) = param_1;\n  *(uint *)((int)this + 0xe6dc) = param_1 - 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004134f3",
      "entry": "004134f3",
      "c": "\nvoid __thiscall FUN_004134f3(void *this,undefined4 param_1)\n\n{\n  undefined1 uVar1;\n  undefined3 extraout_var;\n  int iVar2;\n  \n  iVar2 = 4;\n  *(undefined4 *)((int)this + 4) = 0;\n  *(undefined4 *)this = 0;\n  *(undefined4 *)((int)this + 8) = 0xffffffff;\n  *(undefined4 *)((int)this + 0x18) = param_1;\n  do {\n    uVar1 = FUN_00413106(*(undefined4 **)((int)this + 0x18));\n    *(uint *)((int)this + 4) = *(int *)((int)this + 4) << 8 | CONCAT31(extraout_var,uVar1);\n    iVar2 = iVar2 + -1;\n  } while (iVar2 != 0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00413529",
      "entry": "00413529",
      "c": "\nvoid __thiscall FUN_00413529(void *this,char param_1)\n\n{\n  uint uVar1;\n  \n  if (param_1 == '\\0') {\n    uVar1 = 0;\n    *(undefined4 *)((int)this + 0xe6c4) = 0;\n    *(undefined4 *)((int)this + 0xe6d4) = 0;\n    if (*(int *)((int)this + 0xe69c) != 0) {\n      do {\n        FUN_0041eb68(*(void **)(*(int *)((int)this + 0xe698) + uVar1 * 4));\n        uVar1 = uVar1 + 1;\n      } while (uVar1 < *(uint *)((int)this + 0xe69c));\n    }\n    *(undefined4 *)((int)this + 0xe69c) = 0;\n  }\n  uVar1 = 0;\n  if (*(int *)((int)this + 0xe6b0) != 0) {\n    do {\n      FUN_0041eb68(*(void **)(*(int *)((int)this + 0xe6ac) + uVar1 * 4));\n      uVar1 = uVar1 + 1;\n    } while (uVar1 < *(uint *)((int)this + 0xe6b0));\n  }\n  *(undefined4 *)((int)this + 0xe6b0) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041359e",
      "entry": "0041359e",
      "c": "\nvoid FUN_0041359e(void)\n\n{\n  void *_Dst;\n  uint *puVar1;\n  int iVar2;\n  int extraout_ECX;\n  uint uVar3;\n  uint *_Dst_00;\n  int iVar4;\n  int unaff_EBP;\n  uint uVar5;\n  \n  FUN_0041eb78();\n  _Dst_00 = (uint *)0x0;\n  if (*(int *)(extraout_ECX + 0x20) == 0) {\n    _Dst = (void *)FUN_0041ee53(0x400400);\n    *(void **)(extraout_ECX + 0x20) = _Dst;\n    _memset(_Dst,0,0x400400);\n  }\n  if (*(int *)(extraout_ECX + 0x18) == 0) {\n    iVar2 = *(int *)(extraout_ECX + 0x1c);\n    uVar5 = iVar2 * 2;\n    *(uint *)(unaff_EBP + -0x10) = uVar5;\n    uVar3 = -(uint)((int)((ulonglong)uVar5 * 0x4ae4 >> 0x20) != 0) |\n            (uint)((ulonglong)uVar5 * 0x4ae4);\n    puVar1 = (uint *)FUN_0041ee53(-(uint)(0xfffffffb < uVar3) | uVar3 + 4);\n    *(uint **)(unaff_EBP + -0x14) = puVar1;\n    *(undefined4 *)(unaff_EBP + -4) = 0;\n    if (puVar1 != (uint *)0x0) {\n      _Dst_00 = puVar1 + 1;\n      *puVar1 = uVar5;\n      _eh_vector_constructor_iterator_(_Dst_00,0x4ae4,uVar5,FUN_004121c0,FUN_00412360);\n    }\n    *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n    *(uint **)(extraout_ECX + 0x18) = _Dst_00;\n    _memset(_Dst_00,0,iVar2 * 0x95c8);\n    if (uVar5 != 0) {\n      iVar2 = 0;\n      *(undefined4 *)(unaff_EBP + -0x10) = 0;\n      do {\n        iVar4 = *(int *)(extraout_ECX + 0x18) + iVar2;\n        if (*(int *)(iVar4 + 0x4ad4) == 0) {\n          *(undefined4 *)(iVar4 + 0x4adc) = 0x4100;\n          iVar2 = FUN_00423e33(0x30c00);\n          *(int *)(iVar4 + 0x4ad4) = iVar2;\n          if (iVar2 == 0) {\n            FUN_00406ca7(&DAT_00441098);\n          }\n          iVar2 = *(int *)(unaff_EBP + -0x10);\n        }\n        iVar2 = iVar2 + 0x4ae4;\n        *(int *)(unaff_EBP + -0x10) = iVar2;\n        uVar5 = uVar5 - 1;\n      } while (uVar5 != 0);\n    }\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004136a2",
      "entry": "004136a2",
      "c": "\nvoid __fastcall FUN_004136a2(int *param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  undefined1 *puVar9;\n  \n  _memset(param_1 + 0x2e,0,0x98);\n  iVar5 = param_1[0x2b];\n  param_1[0x54] = iVar5;\n  iVar7 = *param_1;\n  uVar1 = (uint)((int)(iVar7 + (iVar7 >> 0x1f & 7U)) >> 3) / 0xc;\n  uVar6 = iVar7 + uVar1 * -0x54;\n  iVar7 = (uVar6 / 0xc + 1) * 0xc + iVar5;\n  param_1[0x57] = uVar6 + iVar5;\n  param_1[0x55] = iVar7;\n  param_1[0x2c] = iVar7;\n  iVar5 = 4;\n  iVar8 = 1;\n  param_1[0x2d] = ((uVar1 * 0x54) / 0xc) * 0xc + iVar7;\n  iVar7 = iVar8;\n  do {\n    iVar4 = iVar7;\n    *(char *)((int)param_1 + iVar4 + 3) = (char)iVar4;\n    iVar5 = iVar5 + -1;\n    iVar2 = 4;\n    iVar7 = iVar4 + 1;\n  } while (iVar5 != 0);\n  do {\n    iVar7 = iVar4;\n    iVar5 = iVar2;\n    iVar4 = iVar7 + 2;\n    *(char *)((int)param_1 + iVar5 + 4) = (char)iVar4;\n    iVar2 = iVar5 + 1;\n  } while (iVar2 < 8);\n  puVar9 = (undefined1 *)((int)param_1 + iVar5 + 5);\n  iVar2 = 0xc - iVar2;\n  iVar5 = iVar7 + 5;\n  do {\n    iVar7 = iVar5;\n    *puVar9 = (char)iVar7;\n    puVar9 = puVar9 + 1;\n    iVar2 = iVar2 + -1;\n    iVar5 = iVar7 + 3;\n  } while (iVar2 != 0);\n  piVar3 = param_1 + 4;\n  iVar5 = 0x1a;\n  do {\n    iVar7 = iVar7 + 4;\n    *(char *)piVar3 = (char)iVar7;\n    piVar3 = (int *)((int)piVar3 + 1);\n    iVar5 = iVar5 + -1;\n  } while (iVar5 != 0);\n  *(undefined1 *)((int)param_1 + 0xaa) = 0;\n  iVar7 = 0x80;\n  iVar5 = 0;\n  do {\n    iVar5 = iVar5 + (uint)((int)(uint)*(byte *)(iVar5 + 4 + (int)param_1) < iVar8);\n    *(char *)((int)param_1 + iVar8 + 0x29) = (char)iVar5;\n    iVar8 = iVar8 + 1;\n    iVar7 = iVar7 + -1;\n  } while (iVar7 != 0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00413797",
      "entry": "00413797",
      "c": "\n/* WARNING: Type propagation algorithm not settling */\n\nvoid FUN_00413797(int param_1,uint *param_2,uint param_3)\n\n{\n  byte bVar1;\n  undefined2 uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint *puVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  uint *puVar9;\n  uint uVar10;\n  int local_84 [17];\n  uint local_40 [16];\n  \n  *param_2 = param_3;\n  _memset(local_84 + 1,0,0x40);\n  uVar4 = 0;\n  if (param_3 != 0) {\n    do {\n      local_84[(*(byte *)(uVar4 + param_1) & 0xf) + 1] =\n           local_84[(*(byte *)(uVar4 + param_1) & 0xf) + 1] + 1;\n      uVar4 = uVar4 + 1;\n    } while (uVar4 < param_3);\n  }\n  local_84[1] = 0;\n  _memset(param_2 + 0x322,0,param_3 * 2);\n  param_2[0x11] = 0;\n  param_2[1] = 0;\n  uVar10 = 0;\n  iVar6 = 0;\n  uVar4 = 1;\n  puVar9 = param_2 + 0x11;\n  do {\n    iVar7 = iVar6 + local_84[uVar4 + 1];\n    uVar10 = uVar10 + local_84[uVar4];\n    puVar9[1] = uVar10;\n    iVar6 = iVar7 * 2;\n    puVar9[-0xf] = iVar7 << (0x10U - (char)uVar4 & 0x1f);\n    uVar4 = uVar4 + 1;\n    puVar9 = puVar9 + 1;\n  } while (uVar4 < 0x10);\n  FUN_00420320(local_40,param_2 + 0x11,0x40);\n  uVar10 = 0;\n  uVar4 = 1;\n  if (param_3 != 0) {\n    do {\n      bVar1 = *(byte *)(uVar10 + param_1) & 0xf;\n      if (bVar1 != 0) {\n        uVar8 = local_40[bVar1];\n        *(short *)((int)param_2 + uVar8 * 2 + 0xc88) = (short)uVar10;\n        local_40[bVar1] = uVar8 + 1;\n      }\n      uVar10 = uVar10 + 1;\n    } while (uVar10 < param_3);\n  }\n  if ((param_3 != 0x12a) && (param_3 != 299)) {\n    uVar10 = 7;\n    if (param_3 != 0x132) goto LAB_0041388d;\n  }\n  uVar10 = 10;\nLAB_0041388d:\n  param_2[0x21] = uVar10;\n  puVar9 = param_2 + 0x122;\n  uVar8 = 0;\n  do {\n    uVar3 = uVar8 << (0x10U - (char)param_2[0x21] & 0x1f);\n    if (uVar4 < 0x10) {\n      puVar5 = param_2 + uVar4 + 1;\n      do {\n        if (uVar3 < *puVar5) break;\n        uVar4 = uVar4 + 1;\n        puVar5 = puVar5 + 1;\n      } while (uVar4 < 0x10);\n    }\n    *(char *)((int)param_2 + uVar8 + 0x88) = (char)uVar4;\n    if (uVar4 < 0x10) {\n      uVar3 = (uVar3 - param_2[uVar4] >> (0x10U - (char)uVar4 & 0x1f)) + param_2[uVar4 + 0x11];\n      if (param_3 <= uVar3) goto LAB_004138f0;\n      uVar2 = *(undefined2 *)((int)param_2 + uVar3 * 2 + 0xc88);\n    }\n    else {\nLAB_004138f0:\n      uVar2 = 0;\n    }\n    *(undefined2 *)puVar9 = uVar2;\n    uVar8 = uVar8 + 1;\n    puVar9 = (uint *)((int)puVar9 + 2);\n    if ((uint)(1 << (sbyte)uVar10) <= uVar8) {\n      return;\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_0041390d",
      "entry": "0041390d",
      "c": "\nuint __thiscall FUN_0041390d(void *this,int param_1)\n\n{\n  undefined1 *puVar1;\n  ushort uVar2;\n  int *piVar3;\n  int *piVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint *puVar9;\n  uint *puVar10;\n  uint uVar11;\n  int iVar12;\n  int *local_20;\n  undefined1 local_10 [4];\n  int local_c;\n  int local_8;\n  undefined1 local_4;\n  \n  local_20 = *(int **)(param_1 + 0x4ad4);\n  piVar4 = local_20 + *(int *)(param_1 + 0x4ad8) * 3;\n  piVar3 = piVar4;\n  do {\n    if (piVar4 <= local_20) {\n      return CONCAT31((int3)((uint)piVar3 >> 8),1);\n    }\n    uVar7 = *(uint *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc);\n    *(uint *)((int)this + 0x7c) = uVar7;\n    if (((*(uint *)((int)this + 0x4b3c) - uVar7 & *(uint *)((int)this + 0xe6dc)) < 0x1004) &&\n       (*(uint *)((int)this + 0x4b3c) != uVar7)) {\n      FUN_00415202((undefined4 *)this);\n      uVar7 = *(uint *)((int)this + 0x4c5c);\n      if ((*(int *)((int)this + 0x4c4c) < (int)uVar7) ||\n         ((*(int *)((int)this + 0x4c4c) <= (int)uVar7 &&\n          (uVar7 = *(uint *)((int)this + 0x4c58), *(uint *)((int)this + 0x4c48) < uVar7)))) {\n        return uVar7 & 0xffffff00;\n      }\n    }\n    if (*local_20 == 0) {\n      if (((short)local_20[1] == 3) &&\n         (*(uint *)((int)this + 0x7c) < *(int *)((int)this + 0xe6d8) - 4U)) {\n        *(int *)(*(uint *)((int)this + 0x7c) + *(int *)((int)this + 0x4b40)) = local_20[2];\n        *(int *)((int)this + 0x7c) = *(int *)((int)this + 0x7c) + 4;\n      }\n      else {\n        uVar7 = 0;\n        do {\n          *(undefined1 *)\n           ((*(uint *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc)) +\n           *(int *)((int)this + 0x4b40)) = *(undefined1 *)((int)local_20 + uVar7 + 8);\n          *(int *)((int)this + 0x7c) = *(int *)((int)this + 0x7c) + 1;\n          uVar7 = uVar7 + 1;\n        } while (uVar7 <= *(ushort *)(local_20 + 1));\n      }\n    }\n    else if (*local_20 == 1) {\n      iVar12 = local_20[2];\n      *(undefined4 *)((int)this + 0x6c) = *(undefined4 *)((int)this + 0x68);\n      *(undefined4 *)((int)this + 0x68) = *(undefined4 *)((int)this + 100);\n      *(undefined4 *)((int)this + 100) = *(undefined4 *)((int)this + 0x60);\n      *(int *)((int)this + 0x60) = iVar12;\n      uVar7 = *(uint *)((int)this + 0x7c);\n      *(uint *)((int)this + 0x74) = (uint)*(ushort *)(local_20 + 1);\n      uVar6 = local_20[2];\n      uVar8 = uVar7 - uVar6;\n      uVar2 = *(ushort *)(local_20 + 1);\n      uVar11 = (uint)uVar2;\n      uVar5 = *(int *)((int)this + 0xe6d8) - 0x1004;\n      if ((uVar8 < uVar5) && (uVar7 < uVar5)) {\n        puVar9 = (uint *)(uVar8 + *(int *)((int)this + 0x4b40));\n        puVar10 = (uint *)(*(int *)((int)this + 0x4b40) + uVar7);\n        *(uint *)((int)this + 0x7c) = uVar7 + uVar11;\n        if (7 < uVar11) {\n          if (uVar6 < uVar11) {\n            uVar7 = (uint)(uVar2 >> 3);\n            do {\n              uVar11 = uVar11 - 8;\n              *(char *)puVar10 = (char)*puVar9;\n              *(undefined1 *)((int)puVar10 + 1) = *(undefined1 *)((int)puVar9 + 1);\n              *(undefined1 *)((int)puVar10 + 2) = *(undefined1 *)((int)puVar9 + 2);\n              *(undefined1 *)((int)puVar10 + 3) = *(undefined1 *)((int)puVar9 + 3);\n              *(char *)(puVar10 + 1) = (char)puVar9[1];\n              *(undefined1 *)((int)puVar10 + 5) = *(undefined1 *)((int)puVar9 + 5);\n              *(undefined1 *)((int)puVar10 + 6) = *(undefined1 *)((int)puVar9 + 6);\n              puVar1 = (undefined1 *)((int)puVar9 + 7);\n              puVar9 = puVar9 + 2;\n              *(undefined1 *)((int)puVar10 + 7) = *puVar1;\n              puVar10 = puVar10 + 2;\n              uVar7 = uVar7 - 1;\n            } while (uVar7 != 0);\n          }\n          else {\n            uVar7 = (uint)(uVar2 >> 3);\n            do {\n              FUN_00420320(puVar10,puVar9,8);\n              puVar9 = puVar9 + 2;\n              puVar10 = puVar10 + 2;\n              uVar11 = uVar11 - 8;\n              uVar7 = uVar7 - 1;\n            } while (uVar7 != 0);\n          }\n        }\nLAB_00413aed:\n        if ((((uVar11 != 0) && (*(char *)puVar10 = (char)*puVar9, 1 < uVar11)) &&\n            (*(undefined1 *)((int)puVar10 + 1) = *(undefined1 *)((int)puVar9 + 1), 2 < uVar11)) &&\n           (((*(undefined1 *)((int)puVar10 + 2) = *(undefined1 *)((int)puVar9 + 2), 3 < uVar11 &&\n             (*(undefined1 *)((int)puVar10 + 3) = *(undefined1 *)((int)puVar9 + 3), 4 < uVar11)) &&\n            ((*(char *)(puVar10 + 1) = (char)puVar9[1], 5 < uVar11 &&\n             (*(undefined1 *)((int)puVar10 + 5) = *(undefined1 *)((int)puVar9 + 5), 6 < uVar11))))))\n        {\n          *(undefined1 *)((int)puVar10 + 6) = *(undefined1 *)((int)puVar9 + 6);\n        }\n      }\n      else if (uVar11 != 0) {\n        uVar6 = *(uint *)((int)this + 0xe6dc);\n        do {\n          uVar6 = uVar6 & uVar8;\n          uVar8 = uVar8 + 1;\n          *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar7) =\n               *(undefined1 *)(uVar6 + *(int *)((int)this + 0x4b40));\n          uVar6 = *(uint *)((int)this + 0xe6dc);\n          uVar7 = *(int *)((int)this + 0x7c) + 1U & uVar6;\n          *(uint *)((int)this + 0x7c) = uVar7;\n          uVar11 = uVar11 - 1;\n        } while (uVar11 != 0);\n      }\n    }\n    else if (*local_20 == 3) {\n      iVar12 = local_20[2];\n      puVar10 = (uint *)((int)this + (iVar12 + 0x18) * 4);\n      uVar7 = *puVar10;\n      for (; iVar12 != 0; iVar12 = iVar12 + -1) {\n        *puVar10 = puVar10[-1];\n        puVar10 = puVar10 + -1;\n      }\n      *(uint *)((int)this + 0x60) = uVar7;\n      uVar6 = *(uint *)((int)this + 0x7c);\n      *(uint *)((int)this + 0x74) = (uint)*(ushort *)(local_20 + 1);\n      uVar8 = uVar6 - uVar7;\n      uVar2 = *(ushort *)(local_20 + 1);\n      uVar11 = (uint)uVar2;\n      uVar5 = *(int *)((int)this + 0xe6d8) - 0x1004;\n      if ((uVar8 < uVar5) && (uVar6 < uVar5)) {\n        puVar9 = (uint *)(uVar8 + *(int *)((int)this + 0x4b40));\n        puVar10 = (uint *)(*(int *)((int)this + 0x4b40) + uVar6);\n        *(uint *)((int)this + 0x7c) = uVar6 + uVar11;\n        if (7 < uVar11) {\n          if (uVar7 < uVar11) {\n            uVar7 = (uint)(uVar2 >> 3);\n            do {\n              uVar11 = uVar11 - 8;\n              *(char *)puVar10 = (char)*puVar9;\n              *(undefined1 *)((int)puVar10 + 1) = *(undefined1 *)((int)puVar9 + 1);\n              *(undefined1 *)((int)puVar10 + 2) = *(undefined1 *)((int)puVar9 + 2);\n              *(undefined1 *)((int)puVar10 + 3) = *(undefined1 *)((int)puVar9 + 3);\n              *(char *)(puVar10 + 1) = (char)puVar9[1];\n              *(undefined1 *)((int)puVar10 + 5) = *(undefined1 *)((int)puVar9 + 5);\n              *(undefined1 *)((int)puVar10 + 6) = *(undefined1 *)((int)puVar9 + 6);\n              puVar1 = (undefined1 *)((int)puVar9 + 7);\n              puVar9 = puVar9 + 2;\n              *(undefined1 *)((int)puVar10 + 7) = *puVar1;\n              puVar10 = puVar10 + 2;\n              uVar7 = uVar7 - 1;\n            } while (uVar7 != 0);\n          }\n          else {\n            uVar7 = (uint)(uVar2 >> 3);\n            do {\n              FUN_00420320(puVar10,puVar9,8);\n              puVar9 = puVar9 + 2;\n              puVar10 = puVar10 + 2;\n              uVar11 = uVar11 - 8;\n              uVar7 = uVar7 - 1;\n            } while (uVar7 != 0);\n          }\n        }\n        goto LAB_00413aed;\n      }\n      if (uVar11 != 0) {\n        uVar7 = *(uint *)((int)this + 0xe6dc);\n        do {\n          uVar7 = uVar7 & uVar8;\n          uVar8 = uVar8 + 1;\n          *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar6) =\n               *(undefined1 *)(uVar7 + *(int *)((int)this + 0x4b40));\n          uVar7 = *(uint *)((int)this + 0xe6dc);\n          uVar6 = *(int *)((int)this + 0x7c) + 1U & uVar7;\n          *(uint *)((int)this + 0x7c) = uVar6;\n          uVar11 = uVar11 - 1;\n        } while (uVar11 != 0);\n      }\n    }\n    else if (*local_20 == 2) {\n      uVar11 = *(uint *)((int)this + 0x74);\n      if (uVar11 != 0) {\n        uVar7 = *(uint *)((int)this + 0x7c);\n        uVar6 = *(int *)((int)this + 0xe6d8) - 0x1004;\n        uVar5 = uVar7 - *(uint *)((int)this + 0x60);\n        if ((uVar5 < uVar6) && (uVar7 < uVar6)) {\n          puVar9 = (uint *)(uVar5 + *(int *)((int)this + 0x4b40));\n          puVar10 = (uint *)(*(int *)((int)this + 0x4b40) + uVar7);\n          *(uint *)((int)this + 0x7c) = uVar7 + uVar11;\n          if (7 < uVar11) {\n            if (*(uint *)((int)this + 0x60) < uVar11) {\n              uVar7 = uVar11 >> 3;\n              do {\n                uVar11 = uVar11 - 8;\n                *(char *)puVar10 = (char)*puVar9;\n                *(undefined1 *)((int)puVar10 + 1) = *(undefined1 *)((int)puVar9 + 1);\n                *(undefined1 *)((int)puVar10 + 2) = *(undefined1 *)((int)puVar9 + 2);\n                *(undefined1 *)((int)puVar10 + 3) = *(undefined1 *)((int)puVar9 + 3);\n                *(char *)(puVar10 + 1) = (char)puVar9[1];\n                *(undefined1 *)((int)puVar10 + 5) = *(undefined1 *)((int)puVar9 + 5);\n                *(undefined1 *)((int)puVar10 + 6) = *(undefined1 *)((int)puVar9 + 6);\n                puVar1 = (undefined1 *)((int)puVar9 + 7);\n                puVar9 = puVar9 + 2;\n                *(undefined1 *)((int)puVar10 + 7) = *puVar1;\n                puVar10 = puVar10 + 2;\n                uVar7 = uVar7 - 1;\n              } while (uVar7 != 0);\n            }\n            else {\n              uVar7 = uVar11 >> 3;\n              do {\n                FUN_00420320(puVar10,puVar9,8);\n                puVar9 = puVar9 + 2;\n                puVar10 = puVar10 + 2;\n                uVar11 = uVar11 - 8;\n                uVar7 = uVar7 - 1;\n              } while (uVar7 != 0);\n            }\n          }\n          goto LAB_00413aed;\n        }\n        uVar6 = *(uint *)((int)this + 0xe6dc);\n        do {\n          uVar6 = uVar6 & uVar5;\n          uVar5 = uVar5 + 1;\n          *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar7) =\n               *(undefined1 *)(uVar6 + *(int *)((int)this + 0x4b40));\n          uVar6 = *(uint *)((int)this + 0xe6dc);\n          uVar7 = *(int *)((int)this + 0x7c) + 1U & uVar6;\n          *(uint *)((int)this + 0x7c) = uVar7;\n          uVar11 = uVar11 - 1;\n        } while (uVar11 != 0);\n      }\n    }\n    else if (*local_20 == 4) {\n      local_10[0] = (undefined1)local_20[1];\n      local_c = local_20[2];\n      local_4 = (undefined1)local_20[4];\n      local_8 = local_20[5];\n      FUN_0041253e(this,(undefined4 *)local_10);\n      local_20 = local_20 + 3;\n    }\n    local_20 = local_20 + 3;\n    piVar3 = local_20;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00413de6",
      "entry": "00413de6",
      "c": "\nvoid __thiscall\nFUN_00413de6(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  \n  FUN_0041247a(this,1);\n                    /* WARNING: Load size is inaccurate */\n  puVar1 = (undefined4 *)(*this + -0x10 + *(int *)((int)this + 4) * 0x10);\n  *puVar1 = param_1;\n  puVar1[1] = param_2;\n  puVar1[2] = param_3;\n  puVar1[3] = param_4;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00413e0b",
      "entry": "00413e0b",
      "c": "\nuint __thiscall FUN_00413e0b(void *this,int *param_1,int *param_2)\n\n{\n  byte bVar1;\n  uint3 uVar2;\n  uint3 uVar3;\n  uint3 uVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined1 extraout_var;\n  int iVar7;\n  byte bVar8;\n  int iVar9;\n  byte local_4;\n  \n  iVar9 = 0;\n  param_2[3] = 0;\n  if ((((char)param_1[2] != '\\0') || (*param_1 <= *(int *)((int)this + 0x84) + -7)) ||\n     (uVar5 = FUN_00414e52((undefined4 *)this), (char)uVar5 != '\\0')) {\n    FUN_0040a881(param_1,-param_1[1] & 7);\n    uVar2 = thunk_FUN_0040a89d(param_1);\n    FUN_0040a881(param_1,8);\n    uVar6 = (uVar2 & 0xff00) >> 0xb & 3;\n    uVar5 = uVar6 + 1;\n    if (uVar5 != 4) {\n      param_2[3] = uVar6 + 3;\n      param_2[1] = ((uVar2 & 0x700) >> 8) + 1;\n      uVar3 = thunk_FUN_0040a89d(param_1);\n      FUN_0040a881(param_1,8);\n      if (uVar5 != 0) {\n        bVar8 = 0;\n        do {\n          uVar4 = thunk_FUN_0040a89d(param_1);\n          bVar1 = bVar8 & 0x1f;\n          bVar8 = bVar8 + 8;\n          iVar9 = iVar9 + ((CONCAT13(extraout_var,uVar4) >> 8) << bVar1);\n          *param_1 = *param_1 + (param_1[1] + 8U >> 3);\n          param_1[1] = param_1[1] + 8U & 7;\n          uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n      }\n      uVar5 = iVar9 >> 8;\n      *param_2 = iVar9;\n      bVar8 = (byte)(uVar2 >> 8);\n      local_4 = (byte)(uVar3 >> 8);\n      if ((byte)((byte)((uint)iVar9 >> 0x10) ^ (byte)((uint)iVar9 >> 8) ^ (byte)iVar9 ^ bVar8 ^ 0x5a\n                ) == local_4) {\n        iVar7 = *param_1;\n        param_2[2] = iVar7;\n        iVar9 = iVar7 + -1 + iVar9;\n        iVar7 = *(int *)((int)this + 0x88);\n        if (iVar9 <= *(int *)((int)this + 0x88)) {\n          iVar7 = iVar9;\n        }\n        *(int *)((int)this + 0x88) = iVar7;\n        uVar5 = CONCAT31((int3)((uint)iVar7 >> 8),bVar8 >> 6) & 0xffffff01;\n        *(char *)(param_2 + 4) = (char)uVar5;\n        *(byte *)((int)param_2 + 0x11) = (byte)(uVar2 >> 0xf) & 1;\n        return CONCAT31((int3)(uVar5 >> 8),1);\n      }\n    }\n  }\n  return uVar5 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_00413f46",
      "entry": "00413f46",
      "c": "\nbool __fastcall FUN_00413f46(undefined4 *param_1)\n\n{\n  int *piVar1;\n  uint3 uVar2;\n  uint uVar3;\n  byte bVar4;\n  bool bVar5;\n  \n  piVar1 = param_1 + 1;\n  uVar2 = FUN_0040a89d(piVar1);\n  bVar5 = (uVar2 & 0x8000) == 0;\n  if (bVar5) {\n    bVar4 = (byte)(uVar2 >> 0xe) & 1;\n    uVar3 = param_1[2] + 2;\n  }\n  else {\n    bVar4 = 1;\n    uVar3 = param_1[2] + 1;\n  }\n  *piVar1 = *piVar1 + (uVar3 >> 3);\n  param_1[2] = uVar3 & 7;\n  *(byte *)((int)param_1 + 0xe661) = bVar4 ^ 1;\n  if (bVar5) {\n    return false;\n  }\n  bVar5 = FUN_00414088(param_1);\n  return bVar5;\n}\n\n"
    },
    {
      "name": "FUN_00413f9d",
      "entry": "00413f9d",
      "c": "\nuint __thiscall FUN_00413f9d(void *this,int *param_1,char *param_2)\n\n{\n  uint3 uVar1;\n  uint uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  \n  if ((((char)param_1[2] == '\\0') && (*(int *)((int)this + 0x84) + -0x10 < *param_1)) &&\n     (uVar2 = FUN_00414e52((undefined4 *)this), (char)uVar2 == '\\0')) {\n    return uVar2;\n  }\n  iVar3 = FUN_00414024(param_1);\n  *(int *)(param_2 + 4) = iVar3;\n  uVar2 = FUN_00414024(param_1);\n  *(uint *)(param_2 + 8) = uVar2;\n  *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & ~-(uint)(0x400000 < uVar2);\n  uVar1 = thunk_FUN_0040a89d(param_1);\n  *param_2 = (char)(uVar1 >> 0xd);\n  uVar4 = FUN_0040a881(param_1,3);\n  if (*param_2 == '\\0') {\n    uVar1 = thunk_FUN_0040a89d(param_1);\n    param_2[0xc] = (char)(uVar1 >> 0xb) + '\\x01';\n    uVar4 = FUN_0040a881(param_1,5);\n  }\n  return CONCAT31((int3)((uint)uVar4 >> 8),1);\n}\n\n"
    },
    {
      "name": "FUN_00414024",
      "entry": "00414024",
      "c": "\nint FUN_00414024(int *param_1)\n\n{\n  byte bVar1;\n  uint3 uVar2;\n  undefined1 extraout_var;\n  undefined1 extraout_var_00;\n  int iVar3;\n  byte bVar4;\n  int iVar5;\n  \n  uVar2 = thunk_FUN_0040a89d(param_1);\n  iVar5 = 0;\n  *param_1 = *param_1 + (param_1[1] + 2U >> 3);\n  param_1[1] = param_1[1] + 2U & 7;\n  iVar3 = (CONCAT13(extraout_var,uVar2) >> 0xe) + 1;\n  if (iVar3 != 0) {\n    bVar4 = 0;\n    do {\n      uVar2 = thunk_FUN_0040a89d(param_1);\n      bVar1 = bVar4 & 0x1f;\n      bVar4 = bVar4 + 8;\n      iVar5 = iVar5 + ((CONCAT13(extraout_var_00,uVar2) >> 8) << bVar1);\n      *param_1 = *param_1 + (param_1[1] + 8U >> 3);\n      param_1[1] = param_1[1] + 8U & 7;\n      iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n  }\n  return iVar5;\n}\n\n"
    },
    {
      "name": "FUN_00414088",
      "entry": "00414088",
      "c": "\nbool __fastcall FUN_00414088(undefined4 *param_1)\n\n{\n  int *this;\n  bool bVar1;\n  char cVar2;\n  uint3 uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined1 extraout_var;\n  undefined1 extraout_var_00;\n  undefined1 extraout_var_01;\n  undefined1 extraout_var_02;\n  ushort uVar6;\n  uint uVar7;\n  uint *puVar8;\n  uint uVar9;\n  uint *puVar10;\n  int iVar11;\n  int iVar12;\n  uint local_1ac;\n  char local_1a8 [20];\n  uint local_194 [74];\n  char local_69 [60];\n  char local_2d [17];\n  char local_1c [28];\n  \n  this = param_1 + 1;\n  if ((*this <= param_1[0x21] + -0x19) || (uVar4 = FUN_00414dc4(param_1), (char)uVar4 != '\\0')) {\n    FUN_0040a881(this,-param_1[2] & 7);\n    uVar3 = thunk_FUN_0040a89d(this);\n    if ((uVar3 & 0x8000) != 0) {\n      param_1[0x3997] = 1;\n      bVar1 = FUN_00412f75(param_1 + 0x2636,param_1,param_1 + 0x3931);\n      return bVar1;\n    }\n    uVar4 = 0;\n    param_1[0x3997] = 0;\n    param_1[0x2634] = 0;\n    param_1[0x2635] = 0;\n    if ((uVar3 & 0x4000) == 0) {\n      _memset(param_1 + 0x3932,0,0x194);\n    }\n    FUN_0040a881(this,2);\n    do {\n      uVar3 = thunk_FUN_0040a89d(this);\n      FUN_0040a881(this,4);\n      cVar2 = (char)(uVar3 >> 0xc);\n      if (cVar2 == '\\x0f') {\n        uVar3 = thunk_FUN_0040a89d(this);\n        uVar9 = (uVar3 & 0xff000) >> 0xc;\n        FUN_0040a881(this,4);\n        if (uVar9 == 0) {\n          local_1a8[uVar4] = '\\x0f';\n        }\n        else {\n          iVar11 = uVar9 + 2;\n          do {\n            iVar11 = iVar11 + -1;\n            if (0x13 < uVar4) break;\n            local_1a8[uVar4] = '\\0';\n            uVar4 = uVar4 + 1;\n          } while (iVar11 != 0);\n          uVar4 = uVar4 - 1;\n        }\n      }\n      else {\n        local_1a8[uVar4] = cVar2;\n      }\n      uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x14);\n    FUN_00413797((int)local_1a8,param_1 + 0xf14,0x14);\n    uVar4 = 0;\n    do {\n      puVar10 = param_1 + 0xf14;\n      if ((param_1[0x21] + -5 < *this) && (uVar9 = FUN_00414dc4(param_1), (char)uVar9 == '\\0')) {\n        return false;\n      }\n      uVar3 = FUN_0040a89d(this);\n      iVar11 = param_1[0xf35];\n      uVar9 = uVar3 & 0xfffe;\n      if (uVar9 < (uint)param_1[iVar11 + 0xf15]) {\n        uVar9 = uVar9 >> (0x10U - (char)iVar11 & 0x1f);\n        uVar7 = (uint)*(byte *)(uVar9 + 0x88 + (int)puVar10) + param_1[2];\n        *this = *this + (uVar7 >> 3);\n        param_1[2] = uVar7 & 7;\n        uVar6 = *(ushort *)((int)param_1 + uVar9 * 2 + 0x40d8);\n      }\n      else {\n        uVar5 = iVar11 + 1;\n        local_1ac = 0xf;\n        uVar7 = local_1ac;\n        if (uVar5 < 0xf) {\n          puVar8 = puVar10 + iVar11 + 2;\n          do {\n            uVar7 = uVar5;\n            if (uVar9 < *puVar8) break;\n            uVar5 = uVar5 + 1;\n            puVar8 = puVar8 + 1;\n            uVar7 = local_1ac;\n          } while (uVar5 < 0xf);\n        }\n        local_1ac = uVar7;\n        *this = *this + (param_1[2] + local_1ac >> 3);\n        param_1[2] = param_1[2] + local_1ac & 7;\n        uVar9 = param_1[local_1ac + 0xf25] +\n                (uVar9 - puVar10[local_1ac] >> (0x10U - (char)local_1ac & 0x1f));\n        uVar6 = *(ushort *)((int)param_1 + (-(uint)(uVar9 < *puVar10) & uVar9) * 2 + 0x48d8);\n      }\n      if (uVar6 < 0x10) {\n        local_1a8[uVar4 + 0x14] = *(char *)(uVar4 + 0xe4c8 + (int)param_1) + (char)uVar6 & 0xf;\n        uVar4 = uVar4 + 1;\n      }\n      else if (uVar6 < 0x12) {\n        if (uVar6 == 0x10) {\n          uVar3 = thunk_FUN_0040a89d(this);\n          iVar11 = (CONCAT13(extraout_var,uVar3) >> 0xd) + 3;\n          iVar12 = 3;\n        }\n        else {\n          uVar3 = thunk_FUN_0040a89d(this);\n          iVar11 = (CONCAT13(extraout_var_00,uVar3) >> 9) + 0xb;\n          iVar12 = 7;\n        }\n        FUN_0040a881(this,iVar12);\n        if (uVar4 == 0) {\n          return false;\n        }\n        do {\n          iVar11 = iVar11 + -1;\n          if (0x193 < uVar4) goto LAB_00414324;\n          local_1a8[uVar4 + 0x14] = local_1a8[uVar4 + 0x13];\n          uVar4 = uVar4 + 1;\n        } while (iVar11 != 0);\n      }\n      else {\n        if (uVar6 == 0x12) {\n          uVar3 = thunk_FUN_0040a89d(this);\n          iVar11 = (CONCAT13(extraout_var_01,uVar3) >> 0xd) + 3;\n          iVar12 = 3;\n        }\n        else {\n          uVar3 = thunk_FUN_0040a89d(this);\n          iVar11 = (CONCAT13(extraout_var_02,uVar3) >> 9) + 0xb;\n          iVar12 = 7;\n        }\n        FUN_0040a881(this,iVar12);\n        do {\n          iVar11 = iVar11 + -1;\n          if (0x193 < uVar4) goto LAB_00414324;\n          local_1a8[uVar4 + 0x14] = '\\0';\n          uVar4 = uVar4 + 1;\n        } while (iVar11 != 0);\n      }\n    } while (uVar4 < 0x194);\nLAB_00414324:\n    *(undefined1 *)((int)param_1 + 0xe661) = 1;\n    if (*this <= (int)param_1[0x21]) {\n      FUN_00413797((int)(local_1a8 + 0x14),param_1 + 0x28,299);\n      FUN_00413797((int)(local_1a8 + 0x13f),param_1 + 0x3e3,0x3c);\n      FUN_00413797((int)(local_1a8 + 0x17b),param_1 + 0x79e,0x11);\n      FUN_00413797((int)(local_1a8 + 0x18c),param_1 + 0xb59,0x1c);\n      FUN_00420320(param_1 + 0x3932,(uint *)(local_1a8 + 0x14),0x194);\n      return true;\n    }\n  }\n  return false;\n}\n\n"
    },
    {
      "name": "FUN_004143bf",
      "entry": "004143bf",
      "c": "\nuint __thiscall FUN_004143bf(void *this,int *param_1,int param_2,uint *param_3)\n\n{\n  uint uVar1;\n  ushort uVar2;\n  uint3 uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined1 extraout_var;\n  undefined1 extraout_var_00;\n  undefined1 extraout_var_01;\n  undefined1 extraout_var_02;\n  undefined4 uVar6;\n  uint *puVar7;\n  uint uVar8;\n  char cVar9;\n  uint uVar10;\n  uint *puVar11;\n  int iVar12;\n  int iVar13;\n  uint local_1cc;\n  char local_1c4 [452];\n  \n  if (*(char *)(param_2 + 0x11) == '\\0') {\n    uVar4 = CONCAT31((int3)((uint)param_2 >> 8),1);\n  }\n  else {\n    if ((((char)param_1[2] != '\\0') || (*param_1 <= *(int *)((int)this + 0x84) + -0x19)) ||\n       (uVar4 = FUN_00414e52((undefined4 *)this), (char)uVar4 != '\\0')) {\n      uVar4 = 0;\n      do {\n        uVar3 = thunk_FUN_0040a89d(param_1);\n        FUN_0040a881(param_1,4);\n        cVar9 = (char)(uVar3 >> 0xc);\n        if (cVar9 == '\\x0f') {\n          uVar3 = thunk_FUN_0040a89d(param_1);\n          uVar10 = (uVar3 & 0xff000) >> 0xc;\n          FUN_0040a881(param_1,4);\n          if (uVar10 == 0) {\n            local_1c4[uVar4] = '\\x0f';\n          }\n          else {\n            iVar12 = uVar10 + 2;\n            do {\n              iVar12 = iVar12 + -1;\n              if (0x13 < uVar4) break;\n              local_1c4[uVar4] = '\\0';\n              uVar4 = uVar4 + 1;\n            } while (iVar12 != 0);\n            uVar4 = uVar4 - 1;\n          }\n        }\n        else {\n          local_1c4[uVar4] = cVar9;\n        }\n        uVar4 = uVar4 + 1;\n      } while (uVar4 < 0x14);\n      puVar11 = param_3 + 0xeec;\n      FUN_00413797((int)local_1c4,puVar11,0x14);\n      uVar10 = 0;\n      do {\n        if ((((char)param_1[2] == '\\0') && (*(int *)((int)this + 0x84) + -5 < *param_1)) &&\n           (uVar4 = FUN_00414e52((undefined4 *)this), (char)uVar4 == '\\0')) goto LAB_00414610;\n        uVar3 = FUN_0040a89d(param_1);\n        uVar4 = param_3[0xf0d];\n        uVar8 = uVar3 & 0xfffe;\n        if (uVar8 < param_3[uVar4 + 0xeed]) {\n          uVar8 = uVar8 >> (0x10U - (char)uVar4 & 0x1f);\n          uVar4 = (uint)*(byte *)(uVar8 + 0x88 + (int)puVar11) + param_1[1];\n          *param_1 = *param_1 + (uVar4 >> 3);\n          param_1[1] = uVar4 & 7;\n          uVar2 = *(ushort *)((int)param_3 + uVar8 * 2 + 0x4038);\n        }\n        else {\n          uVar5 = uVar4 + 1;\n          local_1cc = 0xf;\n          uVar1 = local_1cc;\n          if (uVar5 < 0xf) {\n            puVar7 = puVar11 + uVar4 + 2;\n            do {\n              uVar1 = uVar5;\n              if (uVar8 < *puVar7) break;\n              uVar5 = uVar5 + 1;\n              puVar7 = puVar7 + 1;\n              uVar1 = local_1cc;\n            } while (uVar5 < 0xf);\n          }\n          local_1cc = uVar1;\n          *param_1 = *param_1 + (param_1[1] + local_1cc >> 3);\n          param_1[1] = param_1[1] + local_1cc & 7;\n          uVar4 = param_3[local_1cc + 0xefd] +\n                  (uVar8 - puVar11[local_1cc] >> (0x10U - (char)local_1cc & 0x1f));\n          uVar2 = *(ushort *)((int)param_3 + (-(uint)(uVar4 < *puVar11) & uVar4) * 2 + 0x4838);\n        }\n        if (uVar2 < 0x10) {\n          local_1c4[uVar10 + 0x14] = (char)uVar2;\n          uVar10 = uVar10 + 1;\n        }\n        else if (uVar2 < 0x12) {\n          if (uVar2 == 0x10) {\n            uVar3 = thunk_FUN_0040a89d(param_1);\n            iVar12 = (CONCAT13(extraout_var,uVar3) >> 0xd) + 3;\n            iVar13 = 3;\n          }\n          else {\n            uVar3 = thunk_FUN_0040a89d(param_1);\n            iVar12 = (CONCAT13(extraout_var_00,uVar3) >> 9) + 0xb;\n            iVar13 = 7;\n          }\n          uVar4 = FUN_0040a881(param_1,iVar13);\n          if (uVar10 == 0) goto LAB_00414610;\n          do {\n            iVar12 = iVar12 + -1;\n            if (0x1ad < uVar10) goto LAB_004145f9;\n            local_1c4[uVar10 + 0x14] = local_1c4[uVar10 + 0x13];\n            uVar10 = uVar10 + 1;\n          } while (iVar12 != 0);\n        }\n        else {\n          if (uVar2 == 0x12) {\n            uVar3 = thunk_FUN_0040a89d(param_1);\n            iVar12 = (CONCAT13(extraout_var_01,uVar3) >> 0xd) + 3;\n            iVar13 = 3;\n          }\n          else {\n            uVar3 = thunk_FUN_0040a89d(param_1);\n            iVar12 = (CONCAT13(extraout_var_02,uVar3) >> 9) + 0xb;\n            iVar13 = 7;\n          }\n          FUN_0040a881(param_1,iVar13);\n          do {\n            iVar12 = iVar12 + -1;\n            if (0x1ad < uVar10) goto LAB_004145f9;\n            local_1c4[uVar10 + 0x14] = '\\0';\n            uVar10 = uVar10 + 1;\n          } while (iVar12 != 0);\n        }\n      } while (uVar10 < 0x1ae);\nLAB_004145f9:\n      *(undefined1 *)((int)this + 0xe662) = 1;\n      if (((char)param_1[2] != '\\0') || (uVar4 = *param_1, (int)uVar4 <= *(int *)((int)this + 0x84))\n         ) {\n        FUN_00413797((int)(local_1c4 + 0x14),param_3,0x132);\n        FUN_00413797((int)(local_1c4 + 0x146),param_3 + 0x3bb,0x40);\n        FUN_00413797((int)(local_1c4 + 0x186),param_3 + 0x776,0x10);\n        uVar6 = FUN_00413797((int)(local_1c4 + 0x196),param_3 + 0xb31,0x2c);\n        return CONCAT31((int3)((uint)uVar6 >> 8),1);\n      }\n    }\nLAB_00414610:\n    uVar4 = uVar4 & 0xffffff00;\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "FUN_00414686",
      "entry": "00414686",
      "c": "\nundefined1 FUN_00414686(void)\n\n{\n  int *piVar1;\n  undefined1 uVar2;\n  uint3 uVar3;\n  undefined1 extraout_var;\n  int iVar4;\n  undefined1 extraout_var_00;\n  undefined1 extraout_var_01;\n  undefined4 uVar5;\n  int extraout_ECX;\n  uint uVar6;\n  uint uVar7;\n  int unaff_EBP;\n  uint uVar8;\n  \n  FUN_0041eb78();\n  piVar1 = (int *)(extraout_ECX + 4);\n  *(int *)(unaff_EBP + -0x14) = extraout_ECX;\n  uVar3 = FUN_0040a89d(piVar1);\n  uVar7 = *(int *)(extraout_ECX + 8) + 8;\n  iVar4 = *piVar1 + (uVar7 >> 3);\n  *(uint *)(unaff_EBP + -0x18) = CONCAT13(extraout_var,uVar3) >> 8;\n  uVar7 = uVar7 & 7;\n  *(int *)(unaff_EBP + -0x10) = iVar4;\n  *piVar1 = iVar4;\n  uVar8 = ((uVar3 & 0x700) >> 8) + 1;\n  *(uint *)(extraout_ECX + 8) = uVar7;\n  if (uVar8 == 7) {\n    uVar3 = FUN_0040a89d(piVar1);\n    uVar8 = (CONCAT13(extraout_var_00,uVar3) >> 8) + 7;\n    *piVar1 = (uVar7 + 8 >> 3) + *(int *)(unaff_EBP + -0x10);\n    *(uint *)(extraout_ECX + 8) = uVar7 + 8 & 7;\n  }\n  else if (uVar8 == 8) {\n    uVar3 = FUN_0040a89d(piVar1);\n    uVar8 = CONCAT13(extraout_var_01,uVar3);\n    *piVar1 = (uVar7 + 0x10 >> 3) + *(int *)(unaff_EBP + -0x10);\n    *(uint *)(extraout_ECX + 8) = uVar7 + 0x10 & 7;\n  }\n  if (uVar8 == 0) {\n    uVar2 = 0;\n  }\n  else {\n    FUN_004013ba((void *)(unaff_EBP + -0x2c),uVar8);\n    uVar2 = 0;\n    *(undefined4 *)(unaff_EBP + -4) = 0;\n    *(undefined4 *)(unaff_EBP + -0x10) = 0;\n    if (uVar8 != 0) {\n      do {\n        if ((*(undefined4 **)(unaff_EBP + -0x14))[0x21] + -1 <= *piVar1) {\n          uVar7 = FUN_00414dc4(*(undefined4 **)(unaff_EBP + -0x14));\n          if (((char)uVar7 == '\\0') && (*(uint *)(unaff_EBP + -0x10) < uVar8 - 1))\n          goto LAB_00414792;\n        }\n        uVar3 = FUN_0040a89d(piVar1);\n        iVar4 = *(int *)(unaff_EBP + -0x10);\n        *(char *)(*(int *)(unaff_EBP + -0x2c) + iVar4) = (char)(uVar3 >> 8);\n        uVar7 = *(int *)(extraout_ECX + 8) + 8;\n        *piVar1 = *piVar1 + (uVar7 >> 3);\n        uVar6 = iVar4 + 1;\n        *(uint *)(extraout_ECX + 8) = uVar7 & 7;\n        *(uint *)(unaff_EBP + -0x10) = uVar6;\n      } while (uVar6 < uVar8);\n    }\n    uVar5 = FUN_004125a7();\n    uVar2 = (undefined1)uVar5;\nLAB_00414792:\n    FUN_004015fb((int *)(unaff_EBP + -0x2c));\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_004147ab",
      "entry": "004147ab",
      "c": "\nundefined1 FUN_004147ab(void)\n\n{\n  int iVar1;\n  undefined1 uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  int extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  uVar3 = FUN_00414a49(extraout_ECX);\n  *(uint *)(unaff_EBP + -0x14) = uVar3;\n  if (uVar3 != 0xffffffff) {\n    uVar3 = (uVar3 & 7) + 1;\n    if (uVar3 == 7) {\n      uVar3 = FUN_00414a49(extraout_ECX);\n      if (uVar3 != 0xffffffff) {\n        uVar3 = uVar3 + 7;\nLAB_0041480d:\n        if (uVar3 != 0) {\n          FUN_004013ba((void *)(unaff_EBP + -0x28),uVar3);\n          uVar2 = 0;\n          *(undefined4 *)(unaff_EBP + -4) = 0;\n          *(undefined4 *)(unaff_EBP + -0x10) = 0;\n          if (uVar3 != 0) {\n            do {\n              uVar4 = FUN_00414a49(extraout_ECX);\n              if (uVar4 == 0xffffffff) goto LAB_00414855;\n              iVar1 = *(int *)(unaff_EBP + -0x10);\n              *(char *)(*(int *)(unaff_EBP + -0x28) + iVar1) = (char)uVar4;\n              uVar4 = iVar1 + 1;\n              *(uint *)(unaff_EBP + -0x10) = uVar4;\n            } while (uVar4 < uVar3);\n          }\n          uVar5 = FUN_004125a7();\n          uVar2 = (undefined1)uVar5;\nLAB_00414855:\n          FUN_004015fb((int *)(unaff_EBP + -0x28));\n          goto LAB_00414863;\n        }\n      }\n    }\n    else {\n      if (uVar3 != 8) goto LAB_0041480d;\n      uVar4 = FUN_00414a49(extraout_ECX);\n      if (uVar4 != 0xffffffff) {\n        uVar3 = FUN_00414a49(extraout_ECX);\n        if (uVar3 != 0xffffffff) {\n          uVar3 = uVar4 * 0x100 + uVar3;\n          goto LAB_0041480d;\n        }\n      }\n    }\n  }\n  uVar2 = 0;\nLAB_00414863:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_00414872",
      "entry": "00414872",
      "c": "\nvoid __fastcall FUN_00414872(int param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  do {\n    if (*(int *)(param_1 + uVar1 * 4) != 0) {\n      FID_conflict__free(*(void **)(param_1 + uVar1 * 4));\n      *(undefined4 *)(param_1 + uVar1 * 4) = 0;\n    }\n    uVar1 = uVar1 + 1;\n  } while (uVar1 < 0x20);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414894",
      "entry": "00414894",
      "c": "\nvoid __fastcall FUN_00414894(int param_1)\n\n{\n  int *this;\n  ushort uVar1;\n  code *pcVar2;\n  uint uVar3;\n  int iVar4;\n  short *psVar5;\n  short *psVar6;\n  int iVar7;\n  int iVar8;\n  short *psVar9;\n  ushort *puVar10;\n  char cVar11;\n  int local_c [3];\n  \n  _memset((void *)(param_1 + 0x66c),0,0x100);\n  this = (int *)(param_1 + 0x4a8c);\n  FUN_004136a2(this);\n  uVar3 = *(uint *)(param_1 + 0x660);\n  if (0xb < (int)uVar3) {\n    uVar3 = 0xc;\n  }\n  *(uint *)(param_1 + 0x668) = ~uVar3;\n  iVar4 = FUN_0041293c(this);\n  *(int *)(param_1 + 0x64c) = iVar4;\n  *(int *)(param_1 + 0x644) = iVar4;\n  if (iVar4 == 0) {\n    FUN_004121f8(local_c);\n  }\n  else {\n    *(undefined4 *)(iVar4 + 8) = 0;\n    *(undefined4 *)(param_1 + 0x65c) = *(undefined4 *)(param_1 + 0x660);\n    **(undefined2 **)(param_1 + 0x644) = 0x100;\n    *(undefined2 *)(*(int *)(param_1 + 0x644) + 2) = 0x101;\n    iVar4 = FUN_00412971(this,0x80);\n    *(int *)(*(int *)(param_1 + 0x644) + 4) = iVar4;\n    *(int *)(param_1 + 0x650) = iVar4;\n    if (iVar4 != 0) {\n      iVar4 = 0;\n      *(undefined4 *)(param_1 + 0x664) = *(undefined4 *)(param_1 + 0x668);\n      *(undefined1 *)(param_1 + 0xa6d) = 0;\n      cVar11 = '\\0';\n      do {\n        *(char *)(iVar4 + *(int *)(*(int *)(param_1 + 0x644) + 4)) = cVar11;\n        cVar11 = cVar11 + '\\x01';\n        *(undefined1 *)(*(int *)(*(int *)(param_1 + 0x644) + 4) + 1 + iVar4) = 1;\n        *(undefined4 *)(*(int *)(*(int *)(param_1 + 0x644) + 4) + 2 + iVar4) = 0;\n        iVar4 = iVar4 + 6;\n      } while (iVar4 < 0x600);\n      psVar5 = (short *)(param_1 + 0xa70);\n      iVar4 = 0;\n      do {\n        puVar10 = &DAT_00434420;\n        psVar9 = psVar5;\n        do {\n          uVar1 = *puVar10;\n          iVar8 = 8;\n          psVar6 = psVar9;\n          do {\n            *psVar6 = 0x4000 - (short)((longlong)(ulonglong)uVar1 / (longlong)(iVar4 + 2));\n            psVar6 = psVar6 + 8;\n            iVar8 = iVar8 + -1;\n          } while (iVar8 != 0);\n          puVar10 = puVar10 + 1;\n          psVar9 = psVar9 + 1;\n        } while ((int)puVar10 < 0x434430);\n        iVar4 = iVar4 + 1;\n        psVar5 = psVar5 + 0x40;\n      } while (iVar4 < 0x80);\n      iVar4 = 0;\n      iVar8 = param_1 + 3;\n      do {\n        iVar7 = 0x10;\n        do {\n          *(undefined2 *)(iVar8 + -1) = 0x403;\n          *(short *)(iVar8 + -3) = ((short)iVar4 + 2) * 0x28;\n          iVar8 = iVar8 + 4;\n          iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        iVar4 = iVar4 + 1;\n      } while (iVar4 < 0x19);\n      return;\n    }\n    FUN_004121f8(local_c);\n  }\n  __CxxThrowException_8(local_c,&DAT_0043bef0);\n  pcVar2 = (code *)swi(3);\n  (*pcVar2)();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414a49",
      "entry": "00414a49",
      "c": "\nuint __fastcall FUN_00414a49(int param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_00412dbd((void *)(param_1 + 0x98d8));\n  if (uVar1 == 0xffffffff) {\n    FUN_00412bb8((void *)(param_1 + 0x98d8));\n    *(undefined4 *)(param_1 + 0xe65c) = 0;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00414a76",
      "entry": "00414a76",
      "c": "\nvoid FUN_00414a76(void)\n\n{\n  uint uVar1;\n  void *this;\n  uint *puVar2;\n  int extraout_ECX;\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  uVar1 = *(uint *)(unaff_EBP + 8);\n  if (7 < uVar1) {\n    uVar1 = 8;\n  }\n  *(uint *)(extraout_ECX + 0x1c) = uVar1;\n  this = (void *)FUN_0041eb38(0x338);\n  *(void **)(unaff_EBP + -0x10) = this;\n  puVar2 = (uint *)0x0;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  if (this != (void *)0x0) {\n    puVar2 = FUN_00410e46(this,*(uint *)(extraout_ECX + 0x1c));\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  *(uint **)(extraout_ECX + 0x14) = puVar2;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414ac5",
      "entry": "00414ac5",
      "c": "\nuint * __thiscall FUN_00414ac5(void *this,uint *param_1,int param_2,int param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = (uint)*(byte *)(param_2 + 0x29 + (int)this);\n  uVar2 = (uint)*(byte *)(param_3 + 0x29 + (int)this);\n  if (uVar3 != uVar2) {\n    puVar1 = *(uint **)((int)this + uVar2 * 4 + 0xb8);\n    if (puVar1 == (uint *)0x0) {\n      FUN_00414b3a(this,(int)param_1,uVar3,uVar2);\n    }\n    else {\n      *(uint *)((int)this + uVar2 * 4 + 0xb8) = *puVar1;\n      FUN_00420320(puVar1,param_1,param_3 * 0xc);\n      *param_1 = *(uint *)((int)this + uVar3 * 4 + 0xb8);\n      *(uint **)((int)this + uVar3 * 4 + 0xb8) = param_1;\n      param_1 = puVar1;\n    }\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00414b3a",
      "entry": "00414b3a",
      "c": "\nvoid __thiscall FUN_00414b3a(void *this,int param_1,int param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  undefined4 *puVar3;\n  uint uVar4;\n  \n  uVar2 = (uint)*(byte *)(param_3 + 4 + (int)this);\n  uVar4 = *(byte *)(param_2 + 4 + (int)this) - uVar2;\n  uVar1 = (uint)*(byte *)(uVar4 + 0x29 + (int)this);\n  puVar3 = (undefined4 *)(uVar2 * 0xc + param_1);\n  if (*(byte *)(uVar1 + 4 + (int)this) != uVar4) {\n    *puVar3 = *(undefined4 *)((int)this + uVar1 * 4 + 0xb4);\n    *(undefined4 **)((int)this + uVar1 * 4 + 0xb4) = puVar3;\n    uVar1 = (uint)*(byte *)(uVar1 + 3 + (int)this);\n    puVar3 = puVar3 + uVar1 * 3;\n    uVar4 = uVar4 - uVar1;\n  }\n  uVar1 = (uint)*(byte *)(uVar4 + 0x29 + (int)this);\n  *puVar3 = *(undefined4 *)((int)this + uVar1 * 4 + 0xb8);\n  *(undefined4 **)((int)this + uVar1 * 4 + 0xb8) = puVar3;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414b9d",
      "entry": "00414b9d",
      "c": "\nvoid __thiscall FUN_00414b9d(void *this,undefined4 param_1)\n\n{\n  int iVar1;\n  undefined1 *puVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  \n  iVar3 = 1;\n  *(undefined1 *)((int)this + 0xa6c) = 1;\n  *(undefined4 *)((int)this + 0x660) = param_1;\n  FUN_00414894((int)this);\n  *(undefined2 *)((int)this + 0x86c) = 0x200;\n  _memset((void *)((int)this + 0x86e),4,9);\n  _memset((void *)((int)this + 0x877),6,0xf5);\n  iVar1 = 0;\n  do {\n    iVar4 = iVar1;\n    *(char *)((int)this + iVar4 + 0x76c) = (char)iVar4;\n    iVar1 = iVar4 + 1;\n  } while (iVar1 < 3);\n  puVar2 = (undefined1 *)((int)this + iVar4 + 0x76d);\n  iVar5 = 0x100 - iVar1;\n  iVar4 = iVar3;\n  do {\n    *puVar2 = (char)iVar1;\n    iVar3 = iVar3 + -1;\n    if (iVar3 == 0) {\n      iVar3 = iVar4 + 1;\n      iVar1 = iVar1 + 1;\n      iVar4 = iVar3;\n    }\n    puVar2 = puVar2 + 1;\n    iVar5 = iVar5 + -1;\n  } while (iVar5 != 0);\n  _memset((void *)((int)this + 0x96c),0,0x40);\n  _memset((void *)((int)this + 0x9ac),8,0xc0);\n  *(undefined1 *)((int)this + 0x642) = 7;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414c4c",
      "entry": "00414c4c",
      "c": "\nbool __thiscall FUN_00414c4c(void *this,int param_1)\n\n{\n  int iVar1;\n  size_t sVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  uVar3 = param_1 << 0x14;\n                    /* WARNING: Load size is inaccurate */\n  if (*this == uVar3) {\n    bVar4 = true;\n  }\n  else {\n    FUN_00414ca8((int *)this);\n    sVar2 = (uVar3 / 0xc + 2) * 0xc;\n    iVar1 = FUN_00423e33(sVar2);\n    *(int *)((int)this + 0xac) = iVar1;\n    bVar4 = iVar1 != 0;\n    if (bVar4) {\n      *(uint *)this = uVar3;\n      *(size_t *)((int)this + 0x158) = iVar1 + -0xc + sVar2;\n    }\n    else {\n      FUN_00406ca7(&DAT_00441098);\n    }\n  }\n  return bVar4;\n}\n\n"
    },
    {
      "name": "FUN_00414ca8",
      "entry": "00414ca8",
      "c": "\nvoid __fastcall FUN_00414ca8(int *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = 0;\n    FID_conflict__free((void *)param_1[0x2b]);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414cbd",
      "entry": "00414cbd",
      "c": "\nvoid __thiscall FUN_00414cbd(void *this,char param_1)\n\n{\n  if (param_1 == '\\0') {\n    *(undefined1 *)((int)this + 0xe661) = 0;\n    _memset((void *)((int)this + 0xe4c8),0,0x194);\n    *(undefined4 *)((int)this + 0xe4c4) = 2;\n    *(undefined4 *)((int)this + 0xe65c) = 0;\n  }\n  FUN_00413529(this,param_1);\n  *(undefined1 *)((int)this + 0x4c45) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414d0a",
      "entry": "00414d0a",
      "c": "\nvoid __thiscall FUN_00414d0a(void *this,char param_1)\n\n{\n  uint uVar1;\n  \n  if (param_1 == '\\0') {\n    _memset((void *)((int)this + 0x60),0,0x10);\n    *(undefined4 *)((int)this + 0x70) = 0;\n    *(undefined4 *)((int)this + 0x74) = 0;\n    *(undefined4 *)((int)this + 0x78) = 0;\n    _memset((void *)((int)this + 0xa0),0,0x4a9c);\n    uVar1 = *(uint *)((int)this + 0xe6d8);\n    *(undefined4 *)((int)this + 0x80) = 0;\n    *(undefined4 *)((int)this + 0x7c) = 0;\n    if (0x3fffff < uVar1) {\n      uVar1 = 0x400000;\n    }\n    *(uint *)((int)this + 0x4b3c) = *(uint *)((int)this + 0xe6dc) & uVar1;\n  }\n  *(undefined4 *)((int)this + 0x50) = 0;\n  *(undefined4 *)((int)this + 8) = 0;\n  *(undefined4 *)((int)this + 4) = 0;\n  *(undefined4 *)((int)this + 0x4c58) = 0;\n  *(undefined4 *)((int)this + 0x4c5c) = 0;\n  *(undefined4 *)((int)this + 0x84) = 0;\n  *(undefined4 *)((int)this + 0x88) = 0;\n  _memset((undefined4 *)((int)this + 0x8c),0,0x14);\n  *(undefined4 *)((int)this + 0x8c) = 0xffffffff;\n  *(undefined1 *)((int)this + 0x4c45) = 0;\n  FUN_00414cbd(this,param_1);\n  if (param_1 == '\\0') {\n    *(undefined1 *)((int)this + 0xe662) = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414dc4",
      "entry": "00414dc4",
      "c": "\nuint __fastcall FUN_00414dc4(undefined4 *param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  uVar2 = param_1[0x21];\n  uVar1 = param_1[1];\n  uVar4 = uVar2 - uVar1;\n  if ((int)uVar4 < 0) {\n    uVar1 = uVar1 & 0xffffff00;\n  }\n  else {\n    if (0x4000 < (int)uVar1) {\n      if (0 < (int)uVar4) {\n        FUN_00420320((uint *)param_1[4],(uint *)(uVar1 + (int)param_1[4]),uVar4);\n      }\n      param_1[1] = 0;\n      param_1[0x21] = uVar4;\n      uVar2 = uVar4;\n    }\n    uVar2 = FUN_0040d114((void *)*param_1,(undefined1 (*) [16])(param_1[4] + uVar2),0x8000 - uVar2);\n    if (0 < (int)uVar2) {\n      param_1[0x21] = param_1[0x21] + uVar2;\n    }\n    iVar3 = param_1[0x21] + -0x1e;\n    param_1[0x22] = iVar3;\n    if (*(char *)((int)param_1 + 0x4c45) != '\\0') {\n      iVar3 = param_1[0x21] + -500;\n      param_1[0x22] = iVar3;\n    }\n    uVar1 = CONCAT31((int3)((uint)iVar3 >> 8),uVar2 != 0xffffffff);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00414e52",
      "entry": "00414e52",
      "c": "\nuint __fastcall FUN_00414e52(undefined4 *param_1)\n\n{\n  uint in_EAX;\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  uVar1 = param_1[0x21];\n  iVar3 = param_1[1];\n  uVar5 = uVar1 - iVar3;\n  if ((int)uVar5 < 0) {\n    uVar1 = in_EAX & 0xffffff00;\n  }\n  else {\n    param_1[0x23] = param_1[0x23] + (param_1[0x25] - iVar3);\n    uVar4 = 0;\n    if (0x4000 < iVar3) {\n      if (0 < (int)uVar5) {\n        FUN_00420320((uint *)param_1[4],(uint *)((int)param_1[4] + iVar3),uVar5);\n      }\n      param_1[1] = 0;\n      iVar3 = 0;\n      param_1[0x21] = uVar5;\n      uVar1 = uVar5;\n    }\n    if (uVar1 != 0x8000) {\n      uVar4 = FUN_0040d114((void *)*param_1,(undefined1 (*) [16])(param_1[4] + uVar1),0x8000 - uVar1\n                          );\n      uVar1 = param_1[0x21];\n      iVar3 = param_1[1];\n    }\n    if (0 < (int)uVar4) {\n      uVar1 = uVar1 + uVar4;\n      param_1[0x21] = uVar1;\n    }\n    iVar2 = uVar1 - 0x1e;\n    param_1[0x22] = iVar2;\n    if (*(char *)((int)param_1 + 0x4c45) != '\\0') {\n      iVar2 = uVar1 - 500;\n      param_1[0x22] = iVar2;\n    }\n    param_1[0x25] = iVar3;\n    if (param_1[0x23] != -1) {\n      iVar3 = param_1[0x23] + -1 + iVar3;\n      if (iVar3 <= iVar2) {\n        iVar2 = iVar3;\n      }\n      param_1[0x22] = iVar2;\n    }\n    uVar1 = CONCAT31((int3)((uint)iVar2 >> 8),uVar4 != 0xffffffff);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00414f26",
      "entry": "00414f26",
      "c": "\nvoid __thiscall FUN_00414f26(void *this,int *param_1,int *param_2)\n\n{\n  int *piVar1;\n  uint *puVar2;\n  uint uVar3;\n  int *piVar4;\n  \n  if ((param_2 != param_1) && (*(undefined1 *)((int)this + 0x4c52) = 1, param_2 < param_1)) {\n    *(undefined1 *)((int)this + 0x4c51) = 1;\n  }\n  if (*(char *)((int)this + 0x4c44) == '\\0') {\n    puVar2 = (uint *)(*(int *)((int)this + 0x4b40) + (int)param_1);\n    if (param_2 < param_1) {\n      FUN_004154d2(this,puVar2,(int *)(*(int *)((int)this + 0xe6d8) - (int)param_1));\n      puVar2 = *(uint **)((int)this + 0x4b40);\n    }\n    else {\n      param_2 = (int *)((int)param_2 - (int)param_1);\n    }\n    FUN_004154d2(this,puVar2,param_2);\n  }\n  else {\n    for (uVar3 = (int)param_2 - (int)param_1 & *(uint *)((int)this + 0xe6dc); uVar3 != 0;\n        uVar3 = uVar3 - (int)piVar1) {\n      piVar1 = (int *)FUN_004130db((void *)((int)this + 0x4b44),(uint)param_1,uVar3);\n      piVar4 = piVar1;\n      puVar2 = (uint *)FUN_00412391((void *)((int)this + 0x4b44),(uint)param_1);\n      FUN_004154d2(this,puVar2,piVar4);\n      param_1 = (int *)((int)param_1 + (int)piVar1 & *(uint *)((int)this + 0xe6dc));\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00414fcd",
      "entry": "00414fcd",
      "c": "\nvoid __fastcall FUN_00414fcd(undefined4 *param_1)\n\n{\n  undefined4 *puVar1;\n  int *piVar2;\n  int iVar3;\n  uint uVar4;\n  int *piVar5;\n  uint *puVar6;\n  uint uVar7;\n  uint uVar8;\n  int *piVar9;\n  int *local_14;\n  uint *local_10;\n  \n  uVar7 = 0;\n  piVar9 = (int *)param_1[0x20];\n  piVar5 = (int *)(param_1[0x1f] - (int)piVar9 & param_1[0x39b7]);\n  if (param_1[0x39ac] != 0) {\n    do {\n      puVar1 = *(undefined4 **)(param_1[0x39ab] + uVar7 * 4);\n      uVar8 = uVar7;\n      if (puVar1 != (undefined4 *)0x0) {\n        if (*(char *)(puVar1 + 2) == '\\0') {\n          local_14 = (int *)puVar1[1];\n          piVar2 = (int *)*puVar1;\n          uVar4 = param_1[0x39b7];\n          if ((int *)((int)piVar2 - (int)piVar9 & uVar4) < piVar5) {\n            if (piVar9 != piVar2) {\n              FUN_00414f26(param_1,piVar9,piVar2);\n              uVar4 = param_1[0x39b7];\n              piVar5 = (int *)(param_1[0x1f] - (int)piVar2 & uVar4);\n              piVar9 = piVar2;\n            }\n            if (piVar5 < local_14) goto LAB_004151f8;\n            piVar9 = (int *)((int)local_14 + (int)piVar2 & uVar4);\n            if ((piVar2 < piVar9) || (piVar9 == (int *)0x0)) {\n              uVar4 = 0;\n              puVar6 = (uint *)(param_1[0x12d0] + (int)piVar2);\n            }\n            else {\n              uVar4 = param_1[0x39b6] - (int)piVar2;\n              FUN_0040cb49(param_1 + 0x3999,0,(uint *)(param_1[0x12d0] + (int)piVar2),uVar4);\n              puVar6 = (uint *)param_1[0x12d0];\n              local_14 = piVar9;\n            }\n            FUN_0040cb49(param_1 + 0x3999,uVar4,puVar6,(uint)local_14);\n            FUN_00413067(param_1,puVar1 + 4);\n            local_10 = (uint *)puVar1[0xc];\n            local_14 = (int *)puVar1[0xd];\n            FUN_0041eb68(*(void **)(param_1[0x39ab] + uVar7 * 4));\n            *(undefined4 *)(param_1[0x39ab] + uVar7 * 4) = 0;\n            if (uVar7 + 1 < (uint)param_1[0x39ac]) {\n              do {\n                puVar1 = *(undefined4 **)(param_1[0x39ab] + 4 + uVar7 * 4);\n                uVar8 = uVar7;\n                if ((((puVar1 == (undefined4 *)0x0) || ((int *)*puVar1 != piVar2)) ||\n                    ((int *)puVar1[1] != local_14)) || (*(char *)(puVar1 + 2) != '\\0')) break;\n                FUN_0040cb49(param_1 + 0x3999,0,local_10,(uint)local_14);\n                FUN_00413067(param_1,puVar1 + 4);\n                local_10 = (uint *)puVar1[0xc];\n                uVar8 = uVar7 + 1;\n                local_14 = (int *)puVar1[0xd];\n                FUN_0041eb68(*(void **)(param_1[0x39ab] + uVar8 * 4));\n                *(undefined4 *)(param_1[0x39ab] + uVar8 * 4) = 0;\n                uVar4 = uVar7 + 2;\n                uVar7 = uVar8;\n              } while (uVar4 < (uint)param_1[0x39ac]);\n            }\n            FUN_0040d300((void *)*param_1,local_10,local_14);\n            puVar6 = param_1 + 0x1316;\n            uVar7 = *puVar6;\n            *puVar6 = *puVar6 + (int)local_14;\n            param_1[0x1317] = param_1[0x1317] + (uint)CARRY4(uVar7,(uint)local_14);\n            piVar5 = (int *)(param_1[0x1f] - (int)piVar9 & param_1[0x39b7]);\n            *(undefined1 *)((int)param_1 + 0x4c52) = 1;\n          }\n        }\n        else {\n          *(undefined1 *)(puVar1 + 2) = 0;\n        }\n      }\n      uVar7 = uVar8 + 1;\n    } while (uVar7 < (uint)param_1[0x39ac]);\n  }\n  FUN_00414f26(param_1,piVar9,(int *)param_1[0x1f]);\n  piVar9 = (int *)param_1[0x1f];\nLAB_004151d2:\n  param_1[0x20] = piVar9;\n  return;\nLAB_004151f8:\n  for (; uVar7 < (uint)param_1[0x39ac]; uVar7 = uVar7 + 1) {\n    iVar3 = *(int *)(param_1[0x39ab] + uVar7 * 4);\n    if ((iVar3 != 0) && (*(char *)(iVar3 + 8) != '\\0')) {\n      *(undefined1 *)(iVar3 + 8) = 0;\n    }\n  }\n  goto LAB_004151d2;\n}\n\n"
    },
    {
      "name": "FUN_00415202",
      "entry": "00415202",
      "c": "\nvoid __fastcall FUN_00415202(undefined4 *param_1)\n\n{\n  int *piVar1;\n  int *piVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  char *pcVar6;\n  uint *puVar7;\n  uint uVar8;\n  int iVar9;\n  int *piVar10;\n  int iVar11;\n  int *piVar12;\n  int iVar13;\n  undefined4 *puVar14;\n  undefined4 *puVar15;\n  int *local_1c;\n  int local_18;\n  uint local_c;\n  \n  bVar5 = false;\n  local_1c = (int *)param_1[0x20];\n  piVar12 = (int *)(param_1[0x1f] - (int)local_1c & param_1[0x39b7]);\n  uVar8 = param_1[0x14];\n  local_c = 0;\n  if (uVar8 != 0) {\n    local_18 = 0;\n    piVar10 = piVar12;\n    do {\n      pcVar6 = (char *)(param_1[0x13] + local_18);\n      if (*pcVar6 != '\\b') {\n        piVar1 = *(int **)(pcVar6 + 4);\n        if (pcVar6[0xd] == '\\0') {\n          piVar2 = *(int **)(pcVar6 + 8);\n          if ((int *)((int)piVar1 - (int)local_1c & param_1[0x39b7]) < piVar10) {\n            if (local_1c != piVar1) {\n              FUN_00414f26(param_1,local_1c,piVar1);\n              piVar10 = (int *)(param_1[0x1f] - (int)piVar1 & param_1[0x39b7]);\n              local_1c = piVar1;\n            }\n            if (piVar10 < piVar2) {\n              param_1[0x20] = local_1c;\n              uVar8 = param_1[0x14];\n              if (local_c < uVar8) {\n                iVar9 = local_c << 4;\n                do {\n                  if (*(char *)(param_1[0x13] + iVar9) != '\\b') {\n                    *(undefined1 *)(param_1[0x13] + 0xd + iVar9) = 0;\n                  }\n                  uVar8 = param_1[0x14];\n                  local_c = local_c + 1;\n                  iVar9 = iVar9 + 0x10;\n                } while (local_c < uVar8);\n              }\n              bVar5 = true;\n              break;\n            }\n            if (piVar2 != (int *)0x0) {\n              local_1c = (int *)((int)piVar1 + (int)piVar2 & param_1[0x39b7]);\n              FUN_004020bd(param_1 + 9,(uint)piVar2);\n              puVar7 = (uint *)param_1[9];\n              if ((piVar1 < local_1c) || (local_1c == (int *)0x0)) {\n                if (*(char *)(param_1 + 0x1311) == '\\0') {\n                  FUN_00420320(puVar7,(uint *)(param_1[0x12d0] + (int)piVar1),(uint)piVar2);\n                }\n                else {\n                  FUN_00412bfc(param_1 + 0x12d1,(undefined1 *)puVar7,(int)piVar1,(int)piVar2);\n                }\n              }\n              else {\n                uVar8 = param_1[0x39b6] - (int)piVar1;\n                if (*(char *)(param_1 + 0x1311) == '\\0') {\n                  FUN_00420320(puVar7,(uint *)(param_1[0x12d0] + (int)piVar1),uVar8);\n                  FUN_00420320((uint *)(uVar8 + (int)puVar7),(uint *)param_1[0x12d0],(uint)local_1c)\n                  ;\n                }\n                else {\n                  FUN_00412bfc(param_1 + 0x12d1,(undefined1 *)puVar7,(int)piVar1,uVar8);\n                  FUN_00412bfc(param_1 + 0x12d1,(undefined1 *)(uVar8 + (int)puVar7),0,(int)local_1c)\n                  ;\n                }\n              }\n              puVar7 = (uint *)FUN_00412a71(param_1,(int *)puVar7,(uint)piVar2,pcVar6);\n              *(undefined1 *)(local_18 + param_1[0x13]) = 8;\n              if (puVar7 != (uint *)0x0) {\n                FUN_0040d300((void *)*param_1,puVar7,piVar2);\n              }\n              puVar7 = param_1 + 0x1316;\n              uVar8 = *puVar7;\n              *puVar7 = *puVar7 + (int)piVar2;\n              param_1[0x1317] = param_1[0x1317] + (uint)CARRY4(uVar8,(uint)piVar2);\n              piVar10 = (int *)(param_1[0x1f] - (int)local_1c & param_1[0x39b7]);\n              *(undefined1 *)((int)param_1 + 0x4c52) = 1;\n            }\n          }\n        }\n        else if ((int *)((int)piVar1 - param_1[0x20] & param_1[0x39b7]) <= piVar12) {\n          pcVar6[0xd] = '\\0';\n        }\n      }\n      local_18 = local_18 + 0x10;\n      local_c = local_c + 1;\n      uVar8 = param_1[0x14];\n    } while (local_c < uVar8);\n  }\n  iVar9 = 0;\n  piVar12 = param_1 + 0x13;\n  local_c = 0;\n  if (uVar8 != 0) {\n    iVar13 = *piVar12;\n    iVar11 = iVar9;\n    do {\n      if (iVar9 != 0) {\n        puVar14 = (undefined4 *)(iVar13 + iVar11);\n        puVar15 = (undefined4 *)((local_c - iVar9) * 0x10 + *piVar12);\n        *puVar15 = *puVar14;\n        puVar15[1] = puVar14[1];\n        puVar15[2] = puVar14[2];\n        puVar15[3] = puVar14[3];\n        uVar8 = param_1[0x14];\n      }\n      iVar13 = *piVar12;\n      if (*(char *)(iVar11 + iVar13) == '\\b') {\n        iVar9 = iVar9 + 1;\n      }\n      local_c = local_c + 1;\n      iVar11 = iVar11 + 0x10;\n    } while (local_c < uVar8);\n    if (iVar9 != 0) {\n      FUN_00412922(piVar12,uVar8 - iVar9);\n    }\n  }\n  if (!bVar5) {\n    FUN_00414f26(param_1,local_1c,(int *)param_1[0x1f]);\n    param_1[0x20] = param_1[0x1f];\n  }\n  uVar8 = param_1[0x39b6];\n  if (0x3fffff < uVar8) {\n    uVar8 = 0x400000;\n  }\n  uVar3 = param_1[0x1f];\n  uVar4 = param_1[0x39b7];\n  uVar8 = uVar8 + uVar3 & uVar4;\n  param_1[0x12cf] = uVar8;\n  if ((uVar8 == uVar3) ||\n     ((param_1[0x20] != uVar3 && ((param_1[0x20] - uVar3 & uVar4) < (uVar8 - uVar3 & uVar4))))) {\n    param_1[0x12cf] = param_1[0x20];\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004154d2",
      "entry": "004154d2",
      "c": "\nvoid __thiscall FUN_004154d2(void *this,uint *param_1,int *param_2)\n\n{\n  uint *puVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  int *piVar6;\n  uint uVar7;\n  \n  iVar2 = *(int *)((int)this + 0x4c5c);\n  iVar3 = *(int *)((int)this + 0x4c4c);\n  uVar4 = *(uint *)((int)this + 0x4c58);\n  uVar5 = *(uint *)((int)this + 0x4c48);\n  if ((iVar2 <= iVar3) && ((iVar2 < iVar3 || (uVar4 < uVar5)))) {\n    uVar7 = (iVar3 - iVar2) - (uint)(uVar5 < uVar4);\n    piVar6 = param_2;\n    if (((int)uVar7 < 1) && ((0x7fffffff < uVar7 || ((int *)(uVar5 - uVar4) < param_2)))) {\n      piVar6 = (int *)(uVar5 - uVar4);\n    }\n                    /* WARNING: Load size is inaccurate */\n    FUN_0040d300(*this,param_1,piVar6);\n    puVar1 = (uint *)((int)this + 0x4c58);\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + (int)param_2;\n    *(int *)((int)this + 0x4c5c) = *(int *)((int)this + 0x4c5c) + (uint)CARRY4(uVar4,(uint)param_2);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041552f",
      "entry": "0041552f",
      "c": "\nvoid __thiscall FUN_0041552f(void *this,char param_1)\n\n{\n  undefined1 *puVar1;\n  int *piVar2;\n  byte bVar3;\n  bool bVar4;\n  char cVar5;\n  ushort uVar6;\n  uint3 uVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined1 extraout_var;\n  undefined1 extraout_var_00;\n  undefined1 extraout_var_01;\n  undefined1 extraout_var_02;\n  undefined1 extraout_var_03;\n  undefined1 *puVar10;\n  uint *puVar11;\n  int iVar12;\n  uint uVar13;\n  uint *puVar14;\n  uint uVar15;\n  size_t _Size;\n  uint uVar16;\n  int iVar17;\n  undefined1 *puVar18;\n  int local_14;\n  int local_c;\n  uint local_4;\n  \n  if (DAT_004482f4 == 0) {\n    local_c = 0;\n    uVar16 = 0;\n    iVar12 = 0;\n    do {\n      _Size = (&DAT_0043e210)[uVar16];\n      if (0 < (int)_Size) {\n        _memset(&DAT_004483f0 + iVar12,uVar16,_Size);\n        do {\n          (&DAT_004482f0)[iVar12] = local_c;\n          iVar12 = iVar12 + 1;\n          local_c = local_c + (1 << ((byte)uVar16 & 0x1f));\n          _Size = _Size - 1;\n        } while (_Size != 0);\n      }\n      uVar16 = uVar16 + 1;\n    } while (uVar16 < 0x13);\n  }\n  *(undefined1 *)((int)this + 0x4c60) = 1;\n  if (*(char *)((int)this + 0x4c50) == '\\0') {\n    FUN_00414d0a(this,param_1);\n    uVar16 = FUN_00414dc4((undefined4 *)this);\n    if ((char)uVar16 == '\\0') {\n      return;\n    }\n    if (((param_1 == '\\0') || (*(char *)((int)this + 0xe661) == '\\0')) &&\n       (bVar4 = FUN_00414088((undefined4 *)this), !bVar4)) {\n      return;\n    }\n  }\nLAB_004155e2:\n  *(uint *)((int)this + 0x7c) = *(uint *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc);\n  if ((*(int *)((int)this + 0x88) < *(int *)((int)this + 4)) &&\n     (uVar16 = FUN_00414dc4((undefined4 *)this), (char)uVar16 == '\\0')) goto LAB_00416239;\n  if (((*(int *)((int)this + 0x80) - *(int *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc)) <\n       0x104) && (*(int *)((int)this + 0x80) != *(int *)((int)this + 0x7c))) {\n    FUN_00414fcd((undefined4 *)this);\n    if (*(int *)((int)this + 0x4c4c) < *(int *)((int)this + 0x4c5c)) {\n      return;\n    }\n    if ((*(int *)((int)this + 0x4c4c) <= *(int *)((int)this + 0x4c5c)) &&\n       (*(uint *)((int)this + 0x4c48) < *(uint *)((int)this + 0x4c58))) {\n      return;\n    }\n    if (*(char *)((int)this + 0x4c50) != '\\0') {\n      *(undefined1 *)((int)this + 0x4c60) = 0;\n      return;\n    }\n  }\n  if (*(int *)((int)this + 0xe65c) == 1) {\n    uVar16 = FUN_00412dbd((void *)((int)this + 0x98d8));\n    if (uVar16 == 0xffffffff) {\n      FUN_00412bb8((void *)((int)this + 0x98d8));\n      *(undefined4 *)((int)this + 0xe65c) = 0;\n      goto LAB_00416239;\n    }\n    if (uVar16 != *(uint *)((int)this + 0xe4c4)) {\nLAB_004159c8:\n      *(char *)(*(int *)((int)this + 0x4b40) + *(int *)((int)this + 0x7c)) = (char)uVar16;\n      goto LAB_00415aa6;\n    }\n    uVar8 = FUN_00414a49((int)this);\n    if (uVar8 == 0) {\n      cVar5 = FUN_00414088((undefined4 *)this);\n      goto LAB_0041569e;\n    }\n    if ((uVar8 == 0xffffffff) || (uVar8 == 2)) goto LAB_00416239;\n    if (uVar8 != 3) {\n      if (uVar8 == 4) {\n        iVar17 = 0;\n        bVar4 = false;\n        iVar12 = 0;\n        do {\n          if (bVar4) goto LAB_00416239;\n          uVar16 = FUN_00414a49((int)this);\n          if (uVar16 == 0xffffffff) {\n            bVar4 = true;\n          }\n          else {\n            uVar8 = uVar16 & 0xff;\n            if (iVar12 == 3) goto LAB_00415723;\n            iVar17 = iVar17 * 0x100 + (uVar16 & 0xff);\n          }\n          iVar12 = iVar12 + 1;\n        } while (iVar12 < 4);\n        uVar8 = local_4;\n        if (bVar4) goto LAB_00416239;\nLAB_00415723:\n        local_4 = uVar8;\n        uVar8 = *(uint *)((int)this + 0x7c);\n        uVar16 = local_4 + 0x20;\n        uVar13 = uVar8 - (iVar17 + 2U);\n        uVar9 = *(int *)((int)this + 0xe6d8) - 0x1004;\n        if ((uVar13 < uVar9) && (uVar8 < uVar9)) {\n          puVar14 = (uint *)(uVar13 + *(int *)((int)this + 0x4b40));\n          puVar11 = (uint *)(*(int *)((int)this + 0x4b40) + uVar8);\n          *(uint *)((int)this + 0x7c) = uVar8 + uVar16;\n          if (7 < uVar16) {\n            if (iVar17 + 2U < uVar16) {\n              uVar8 = uVar16 >> 3;\n              do {\n                uVar16 = uVar16 - 8;\n                *(char *)puVar11 = (char)*puVar14;\n                *(undefined1 *)((int)puVar11 + 1) = *(undefined1 *)((int)puVar14 + 1);\n                *(undefined1 *)((int)puVar11 + 2) = *(undefined1 *)((int)puVar14 + 2);\n                *(undefined1 *)((int)puVar11 + 3) = *(undefined1 *)((int)puVar14 + 3);\n                *(char *)(puVar11 + 1) = (char)puVar14[1];\n                *(undefined1 *)((int)puVar11 + 5) = *(undefined1 *)((int)puVar14 + 5);\n                *(undefined1 *)((int)puVar11 + 6) = *(undefined1 *)((int)puVar14 + 6);\n                puVar10 = (undefined1 *)((int)puVar14 + 7);\n                puVar14 = puVar14 + 2;\n                *(undefined1 *)((int)puVar11 + 7) = *puVar10;\n                puVar11 = puVar11 + 2;\n                uVar8 = uVar8 - 1;\n              } while (uVar8 != 0);\n            }\n            else {\n              uVar8 = uVar16 >> 3;\n              do {\n                FUN_00420320(puVar11,puVar14,8);\n                puVar14 = puVar14 + 2;\n                puVar11 = puVar11 + 2;\n                uVar16 = uVar16 - 8;\n                uVar8 = uVar8 - 1;\n              } while (uVar8 != 0);\n            }\n          }\n          goto LAB_004157d0;\n        }\n        if (uVar16 != 0) {\n          uVar9 = *(uint *)((int)this + 0xe6dc);\n          do {\n            uVar9 = uVar9 & uVar13;\n            uVar13 = uVar13 + 1;\n            *(undefined1 *)(uVar8 + *(int *)((int)this + 0x4b40)) =\n                 *(undefined1 *)(uVar9 + *(int *)((int)this + 0x4b40));\n            uVar9 = *(uint *)((int)this + 0xe6dc);\n            uVar8 = *(int *)((int)this + 0x7c) + 1U & uVar9;\n            *(uint *)((int)this + 0x7c) = uVar8;\n            uVar16 = uVar16 - 1;\n          } while (uVar16 != 0);\n        }\n        goto LAB_004155e2;\n      }\n      if (uVar8 != 5) goto LAB_004159c8;\n      uVar16 = FUN_00414a49((int)this);\n      if (uVar16 == 0xffffffff) goto LAB_00416239;\n      uVar9 = *(uint *)((int)this + 0x7c);\n      uVar16 = uVar16 + 4;\n      uVar13 = *(int *)((int)this + 0xe6d8) - 0x1004;\n      uVar8 = uVar9 - 1;\n      if ((uVar8 < uVar13) && (uVar9 < uVar13)) {\n        puVar10 = (undefined1 *)(*(int *)((int)this + 0x4b40) + uVar8);\n        puVar18 = (undefined1 *)(*(int *)((int)this + 0x4b40) + uVar9);\n        *(uint *)((int)this + 0x7c) = uVar9 + uVar16;\n        if (uVar16 < 2) {\nLAB_00415924:\n          if (uVar16 == 0) goto LAB_004155e2;\n        }\n        else if (7 < uVar16) {\n          uVar8 = uVar16 >> 3;\n          do {\n            uVar16 = uVar16 - 8;\n            *puVar18 = *puVar10;\n            puVar18[1] = puVar10[1];\n            puVar18[2] = puVar10[2];\n            puVar18[3] = puVar10[3];\n            puVar18[4] = puVar10[4];\n            puVar18[5] = puVar10[5];\n            puVar18[6] = puVar10[6];\n            puVar1 = puVar10 + 7;\n            puVar10 = puVar10 + 8;\n            puVar18[7] = *puVar1;\n            puVar18 = puVar18 + 8;\n            uVar8 = uVar8 - 1;\n          } while (uVar8 != 0);\n          goto LAB_00415924;\n        }\n        *puVar18 = *puVar10;\n        if (((((1 < uVar16) && (puVar18[1] = puVar10[1], 2 < uVar16)) &&\n             (puVar18[2] = puVar10[2], 3 < uVar16)) &&\n            ((puVar18[3] = puVar10[3], 4 < uVar16 && (puVar18[4] = puVar10[4], 5 < uVar16)))) &&\n           (puVar18[5] = puVar10[5], 6 < uVar16)) {\n          puVar18[6] = puVar10[6];\n        }\n        goto LAB_004155e2;\n      }\n      if (uVar16 != 0) {\n        uVar13 = *(uint *)((int)this + 0xe6dc);\n        do {\n          uVar13 = uVar13 & uVar8;\n          uVar8 = uVar8 + 1;\n          *(undefined1 *)(uVar9 + *(int *)((int)this + 0x4b40)) =\n               *(undefined1 *)(uVar13 + *(int *)((int)this + 0x4b40));\n          uVar13 = *(uint *)((int)this + 0xe6dc);\n          uVar9 = *(int *)((int)this + 0x7c) + 1U & uVar13;\n          *(uint *)((int)this + 0x7c) = uVar9;\n          uVar16 = uVar16 - 1;\n        } while (uVar16 != 0);\n      }\n      goto LAB_004155e2;\n    }\n    cVar5 = FUN_004147ab();\n  }\n  else {\n    uVar7 = FUN_0040a89d((int *)((int)this + 4));\n    iVar12 = *(int *)((int)this + 0x124);\n    uVar16 = uVar7 & 0xfffe;\n    if (uVar16 < *(uint *)((int)this + iVar12 * 4 + 0xa4)) {\n      uVar16 = uVar16 >> (0x10U - (char)iVar12 & 0x1f);\n      piVar2 = (int *)((int)this + 4);\n      uVar9 = (uint)*(byte *)(uVar16 + 0x128 + (int)this) + *(int *)((int)this + 8);\n      *piVar2 = *piVar2 + (uVar9 >> 3);\n      uVar9 = uVar9 & 7;\n      local_14 = *piVar2;\n      *(uint *)((int)this + 8) = uVar9;\n      uVar6 = *(ushort *)((int)this + uVar16 * 2 + 0x528);\n    }\n    else {\n      uVar9 = iVar12 + 1;\n      uVar8 = 0xf;\n      if (uVar9 < 0xf) {\n        puVar11 = (uint *)((int)this + (iVar12 + 0x2a) * 4);\n        do {\n          uVar8 = uVar9;\n          if (uVar16 < *puVar11) break;\n          uVar9 = uVar9 + 1;\n          puVar11 = puVar11 + 1;\n          uVar8 = 0xf;\n        } while (uVar9 < 0xf);\n      }\n      uVar13 = *(int *)((int)this + 8) + uVar8;\n      uVar9 = uVar13 & 7;\n      *(int *)((int)this + 4) = *(int *)((int)this + 4) + (uVar13 >> 3);\n      local_14 = *(int *)((int)this + 4);\n      *(uint *)((int)this + 8) = uVar9;\n      uVar16 = *(int *)((int)this + uVar8 * 4 + 0xe4) +\n               (uVar16 - *(int *)((int)this + uVar8 * 4 + 0xa0) >> (0x10U - (char)uVar8 & 0x1f));\n      uVar6 = *(ushort *)\n               ((int)this + (-(uint)(uVar16 < *(uint *)((int)this + 0xa0)) & uVar16) * 2 + 0xd28);\n    }\n    uVar16 = (uint)uVar6;\n    if (uVar16 < 0x100) {\n      *(char *)(*(int *)((int)this + 0x4b40) + *(int *)((int)this + 0x7c)) = (char)uVar6;\nLAB_00415aa6:\n      *(int *)((int)this + 0x7c) = *(int *)((int)this + 0x7c) + 1;\n      goto LAB_004155e2;\n    }\n    if (0x10e < uVar16) {\n      bVar3 = (&DAT_0043e0e5)[uVar16];\n      uVar8 = (byte)(&DAT_0043e0c9)[uVar16] + 3;\n      if (bVar3 != 0) {\n        uVar7 = FUN_0040a89d((int *)((int)this + 4));\n        uVar9 = uVar9 + bVar3;\n        uVar8 = uVar8 + (CONCAT13(extraout_var,uVar7) >> (0x10 - bVar3 & 0x1f));\n        local_14 = local_14 + (uVar9 >> 3);\n        uVar9 = uVar9 & 7;\n        *(int *)((int)this + 4) = local_14;\n        *(uint *)((int)this + 8) = uVar9;\n      }\n      uVar7 = FUN_0040a89d((int *)((int)this + 4));\n      iVar12 = *(int *)((int)this + 0x1010);\n      uVar16 = uVar7 & 0xfffe;\n      if (uVar16 < *(uint *)((int)this + iVar12 * 4 + 0xf90)) {\n        uVar16 = uVar16 >> (0x10U - (char)iVar12 & 0x1f);\n        uVar9 = *(byte *)(uVar16 + 0x1014 + (int)this) + uVar9;\n        local_14 = (uVar9 >> 3) + local_14;\n        uVar9 = uVar9 & 7;\n        *(int *)((int)this + 4) = local_14;\n        *(uint *)((int)this + 8) = uVar9;\n        uVar6 = *(ushort *)((int)this + uVar16 * 2 + 0x1414);\n      }\n      else {\n        uVar9 = iVar12 + 1;\n        uVar13 = 0xf;\n        if (uVar9 < 0xf) {\n          puVar11 = (uint *)((int)this + (iVar12 + 0x3e5) * 4);\n          do {\n            uVar13 = uVar9;\n            if (uVar16 < *puVar11) break;\n            uVar9 = uVar9 + 1;\n            puVar11 = puVar11 + 1;\n            uVar13 = 0xf;\n          } while (uVar9 < 0xf);\n        }\n        uVar15 = *(int *)((int)this + 8) + uVar13;\n        uVar9 = uVar15 & 7;\n        *(int *)((int)this + 4) = *(int *)((int)this + 4) + (uVar15 >> 3);\n        local_14 = *(int *)((int)this + 4);\n        *(uint *)((int)this + 8) = uVar9;\n        uVar16 = *(int *)((int)this + uVar13 * 4 + 0xfd0) +\n                 (uVar16 - *(int *)((int)this + uVar13 * 4 + 0xf8c) >> (0x10U - (char)uVar13 & 0x1f)\n                 );\n        uVar6 = *(ushort *)\n                 ((int)this + (-(uint)(uVar16 < *(uint *)((int)this + 0xf8c)) & uVar16) * 2 + 0x1c14\n                 );\n      }\n      uVar13 = (uint)uVar6;\n      bVar3 = (&DAT_004483f0)[uVar13];\n      uVar16 = (uint)bVar3;\n      uVar15 = (&DAT_004482f0)[uVar13] + 1;\n      if (uVar16 != 0) {\n        if (uVar13 < 10) {\n          uVar7 = FUN_0040a89d((int *)((int)this + 4));\n          uVar15 = uVar15 + (CONCAT13(extraout_var_01,uVar7) >> (0x10 - bVar3 & 0x1f));\n          *(uint *)((int)this + 4) = (uVar16 + uVar9 >> 3) + local_14;\n          *(uint *)((int)this + 8) = uVar16 + uVar9 & 7;\n        }\n        else {\n          if (4 < uVar16) {\n            uVar7 = FUN_0040a89d((int *)((int)this + 4));\n            uVar9 = uVar9 + (uVar16 - 4);\n            uVar15 = uVar15 + (CONCAT13(extraout_var_00,uVar7) >> (0x14 - bVar3 & 0x1f)) * 0x10;\n            local_14 = local_14 + (uVar9 >> 3);\n            uVar9 = uVar9 & 7;\n            *(int *)((int)this + 4) = local_14;\n            *(uint *)((int)this + 8) = uVar9;\n          }\n          if (*(int *)((int)this + 0x98d4) < 1) {\n            uVar7 = FUN_0040a89d((int *)((int)this + 4));\n            iVar12 = *(int *)((int)this + 0x1efc);\n            uVar16 = uVar7 & 0xfffe;\n            if (uVar16 < *(uint *)((int)this + iVar12 * 4 + 0x1e7c)) {\n              uVar16 = uVar16 >> (0x10U - (char)iVar12 & 0x1f);\n              uVar9 = *(byte *)(uVar16 + 0x1f00 + (int)this) + uVar9;\n              *(uint *)((int)this + 4) = (uVar9 >> 3) + local_14;\n              *(uint *)((int)this + 8) = uVar9 & 7;\n              uVar6 = *(ushort *)((int)this + uVar16 * 2 + 0x2300);\n            }\n            else {\n              uVar13 = iVar12 + 1;\n              uVar9 = 0xf;\n              if (uVar13 < 0xf) {\n                puVar11 = (uint *)((int)this + (iVar12 + 0x7a0) * 4);\n                do {\n                  uVar9 = uVar13;\n                  if (uVar16 < *puVar11) break;\n                  uVar13 = uVar13 + 1;\n                  puVar11 = puVar11 + 1;\n                  uVar9 = 0xf;\n                } while (uVar13 < 0xf);\n              }\n              uVar13 = *(int *)((int)this + 8) + uVar9;\n              *(uint *)((int)this + 8) = uVar13 & 7;\n              *(int *)((int)this + 4) = *(int *)((int)this + 4) + (uVar13 >> 3);\n              uVar16 = *(int *)((int)this + uVar9 * 4 + 0x1ebc) +\n                       (uVar16 - *(int *)((int)this + uVar9 * 4 + 0x1e78) >>\n                       (0x10U - (char)uVar9 & 0x1f));\n              uVar6 = *(ushort *)\n                       ((int)this +\n                       (-(uint)(uVar16 < *(uint *)((int)this + 0x1e78)) & uVar16) * 2 + 0x2b00);\n            }\n            uVar16 = (uint)uVar6;\n            if (uVar16 == 0x10) {\n              *(undefined4 *)((int)this + 0x98d4) = 0xf;\n              goto LAB_00415ce9;\n            }\n            *(uint *)((int)this + 0x98d0) = uVar16;\n          }\n          else {\n            *(int *)((int)this + 0x98d4) = *(int *)((int)this + 0x98d4) + -1;\nLAB_00415ce9:\n            uVar16 = *(uint *)((int)this + 0x98d0);\n          }\n          uVar15 = uVar15 + uVar16;\n        }\n      }\n      uVar16 = uVar8;\n      if ((0x1fff < uVar15) && (uVar16 = uVar8 + 1, 0x3ffff < uVar15)) {\n        uVar16 = uVar8 + 2;\n      }\n      *(undefined4 *)((int)this + 0x6c) = *(undefined4 *)((int)this + 0x68);\n      *(undefined4 *)((int)this + 0x68) = *(undefined4 *)((int)this + 100);\n      *(undefined4 *)((int)this + 100) = *(undefined4 *)((int)this + 0x60);\n      *(uint *)((int)this + 0x60) = uVar15;\n      uVar8 = *(uint *)((int)this + 0x7c);\n      uVar13 = uVar8 - uVar15;\n      uVar9 = *(int *)((int)this + 0xe6d8) - 0x1004;\n      *(uint *)((int)this + 0x74) = uVar16;\n      if ((uVar9 <= uVar13) || (uVar9 <= uVar8)) {\n        if (uVar16 != 0) {\n          uVar9 = *(uint *)((int)this + 0xe6dc);\n          do {\n            uVar9 = uVar13 & uVar9;\n            uVar13 = uVar13 + 1;\n            *(undefined1 *)(uVar8 + *(int *)((int)this + 0x4b40)) =\n                 *(undefined1 *)(uVar9 + *(int *)((int)this + 0x4b40));\n            uVar9 = *(uint *)((int)this + 0xe6dc);\n            uVar8 = *(int *)((int)this + 0x7c) + 1U & uVar9;\n            *(uint *)((int)this + 0x7c) = uVar8;\n            uVar16 = uVar16 - 1;\n          } while (uVar16 != 0);\n        }\n        goto LAB_004155e2;\n      }\n      puVar14 = (uint *)(*(int *)((int)this + 0x4b40) + uVar13);\n      puVar11 = (uint *)(*(int *)((int)this + 0x4b40) + uVar8);\n      *(uint *)((int)this + 0x7c) = uVar8 + uVar16;\n      if (7 < uVar16) {\n        if (uVar15 < uVar16) {\n          uVar8 = uVar16 >> 3;\n          do {\n            uVar16 = uVar16 - 8;\n            *(char *)puVar11 = (char)*puVar14;\n            *(undefined1 *)((int)puVar11 + 1) = *(undefined1 *)((int)puVar14 + 1);\n            *(undefined1 *)((int)puVar11 + 2) = *(undefined1 *)((int)puVar14 + 2);\n            *(undefined1 *)((int)puVar11 + 3) = *(undefined1 *)((int)puVar14 + 3);\n            *(char *)(puVar11 + 1) = (char)puVar14[1];\n            *(undefined1 *)((int)puVar11 + 5) = *(undefined1 *)((int)puVar14 + 5);\n            *(undefined1 *)((int)puVar11 + 6) = *(undefined1 *)((int)puVar14 + 6);\n            puVar10 = (undefined1 *)((int)puVar14 + 7);\n            puVar14 = puVar14 + 2;\n            *(undefined1 *)((int)puVar11 + 7) = *puVar10;\n            puVar11 = puVar11 + 2;\n            uVar8 = uVar8 - 1;\n          } while (uVar8 != 0);\n        }\n        else {\n          uVar8 = uVar16 >> 3;\n          do {\n            FUN_00420320(puVar11,puVar14,8);\n            puVar14 = puVar14 + 2;\n            puVar11 = puVar11 + 2;\n            uVar16 = uVar16 - 8;\n            uVar8 = uVar8 - 1;\n          } while (uVar8 != 0);\n        }\n      }\nLAB_004157d0:\n      if ((((uVar16 != 0) && (*(char *)puVar11 = (char)*puVar14, 1 < uVar16)) &&\n          (*(undefined1 *)((int)puVar11 + 1) = *(undefined1 *)((int)puVar14 + 1), 2 < uVar16)) &&\n         (((*(undefined1 *)((int)puVar11 + 2) = *(undefined1 *)((int)puVar14 + 2), 3 < uVar16 &&\n           (*(undefined1 *)((int)puVar11 + 3) = *(undefined1 *)((int)puVar14 + 3), 4 < uVar16)) &&\n          ((*(char *)(puVar11 + 1) = (char)puVar14[1], 5 < uVar16 &&\n           (*(undefined1 *)((int)puVar11 + 5) = *(undefined1 *)((int)puVar14 + 5), 6 < uVar16))))))\n      {\n        *(undefined1 *)((int)puVar11 + 6) = *(undefined1 *)((int)puVar14 + 6);\n      }\n      goto LAB_004155e2;\n    }\n    if (uVar16 == 0x100) {\n      cVar5 = FUN_00413f46((undefined4 *)this);\n    }\n    else {\n      if (uVar16 != 0x101) {\n        if (uVar16 != 0x102) {\n          if (uVar16 < 0x107) {\n            puVar11 = (uint *)((int)this + (uVar16 - 0xeb) * 4);\n            uVar8 = *puVar11;\n            for (iVar12 = uVar16 - 0x103; iVar12 != 0; iVar12 = iVar12 + -1) {\n              *puVar11 = puVar11[-1];\n              puVar11 = puVar11 + -1;\n            }\n            piVar2 = (int *)((int)this + 4);\n            *(uint *)((int)this + 0x60) = uVar8;\n            uVar7 = FUN_0040a89d(piVar2);\n            iVar12 = *(int *)((int)this + 0x2de8);\n            uVar16 = uVar7 & 0xfffe;\n            if (uVar16 < *(uint *)((int)this + iVar12 * 4 + 0x2d68)) {\n              uVar16 = uVar16 >> (0x10U - (char)iVar12 & 0x1f);\n              uVar13 = (uint)*(byte *)(uVar16 + 0x2dec + (int)this) + *(int *)((int)this + 8);\n              *piVar2 = *piVar2 + (uVar13 >> 3);\n              uVar13 = uVar13 & 7;\n              *(uint *)((int)this + 8) = uVar13;\n              uVar6 = *(ushort *)((int)this + uVar16 * 2 + 0x31ec);\n            }\n            else {\n              uVar13 = iVar12 + 1;\n              uVar9 = 0xf;\n              if (uVar13 < 0xf) {\n                puVar11 = (uint *)((int)this + (iVar12 + 0xb5b) * 4);\n                do {\n                  uVar9 = uVar13;\n                  if (uVar16 < *puVar11) break;\n                  uVar13 = uVar13 + 1;\n                  puVar11 = puVar11 + 1;\n                  uVar9 = 0xf;\n                } while (uVar13 < 0xf);\n              }\n              uVar15 = *(int *)((int)this + 8) + uVar9;\n              uVar13 = uVar15 & 7;\n              *piVar2 = *piVar2 + (uVar15 >> 3);\n              *(uint *)((int)this + 8) = uVar13;\n              uVar16 = *(int *)((int)this + uVar9 * 4 + 0x2da8) +\n                       (uVar16 - *(int *)((int)this + uVar9 * 4 + 0x2d64) >>\n                       (0x10U - (char)uVar9 & 0x1f));\n              uVar6 = *(ushort *)\n                       ((int)this +\n                       (-(uint)(uVar16 < *(uint *)((int)this + 0x2d64)) & uVar16) * 2 + 0x39ec);\n            }\n            bVar3 = (&DAT_0043e1f4)[uVar6];\n            uVar16 = (byte)(&DAT_0043e1d8)[uVar6] + 2;\n            if (bVar3 != 0) {\n              uVar7 = FUN_0040a89d((int *)((int)this + 4));\n              uVar13 = uVar13 + bVar3;\n              uVar16 = uVar16 + (CONCAT13(extraout_var_02,uVar7) >> (0x10 - bVar3 & 0x1f));\n              *(int *)((int)this + 4) = *(int *)((int)this + 4) + (uVar13 >> 3);\n              *(uint *)((int)this + 8) = uVar13 & 7;\n            }\n            uVar9 = *(uint *)((int)this + 0x7c);\n            uVar13 = *(int *)((int)this + 0xe6d8) - 0x1004;\n            uVar15 = uVar9 - uVar8;\n            *(uint *)((int)this + 0x74) = uVar16;\n            if ((uVar15 < uVar13) && (uVar9 < uVar13)) {\n              puVar14 = (uint *)(uVar15 + *(int *)((int)this + 0x4b40));\n              puVar11 = (uint *)(*(int *)((int)this + 0x4b40) + uVar9);\n              *(uint *)((int)this + 0x7c) = uVar9 + uVar16;\n              if (7 < uVar16) {\n                if (uVar8 < uVar16) {\n                  uVar8 = uVar16 >> 3;\n                  do {\n                    uVar16 = uVar16 - 8;\n                    *(char *)puVar11 = (char)*puVar14;\n                    *(undefined1 *)((int)puVar11 + 1) = *(undefined1 *)((int)puVar14 + 1);\n                    *(undefined1 *)((int)puVar11 + 2) = *(undefined1 *)((int)puVar14 + 2);\n                    *(undefined1 *)((int)puVar11 + 3) = *(undefined1 *)((int)puVar14 + 3);\n                    *(char *)(puVar11 + 1) = (char)puVar14[1];\n                    *(undefined1 *)((int)puVar11 + 5) = *(undefined1 *)((int)puVar14 + 5);\n                    *(undefined1 *)((int)puVar11 + 6) = *(undefined1 *)((int)puVar14 + 6);\n                    puVar10 = (undefined1 *)((int)puVar14 + 7);\n                    puVar14 = puVar14 + 2;\n                    *(undefined1 *)((int)puVar11 + 7) = *puVar10;\n                    puVar11 = puVar11 + 2;\n                    uVar8 = uVar8 - 1;\n                  } while (uVar8 != 0);\n                }\n                else {\n                  uVar8 = uVar16 >> 3;\n                  do {\n                    FUN_00420320(puVar11,puVar14,8);\n                    puVar14 = puVar14 + 2;\n                    puVar11 = puVar11 + 2;\n                    uVar16 = uVar16 - 8;\n                    uVar8 = uVar8 - 1;\n                  } while (uVar8 != 0);\n                }\n              }\n              goto LAB_004157d0;\n            }\n            if (uVar16 != 0) {\n              uVar8 = *(uint *)((int)this + 0xe6dc);\n              do {\n                uVar8 = uVar15 & uVar8;\n                uVar15 = uVar15 + 1;\n                *(undefined1 *)(uVar9 + *(int *)((int)this + 0x4b40)) =\n                     *(undefined1 *)(uVar8 + *(int *)((int)this + 0x4b40));\n                uVar8 = *(uint *)((int)this + 0xe6dc);\n                uVar9 = *(int *)((int)this + 0x7c) + 1U & uVar8;\n                *(uint *)((int)this + 0x7c) = uVar9;\n                uVar16 = uVar16 - 1;\n              } while (uVar16 != 0);\n            }\n          }\n          else {\n            bVar3 = (&DAT_0043e15d)[uVar16];\n            iVar12 = (byte)(&DAT_0043e155)[uVar16] + 1;\n            if (bVar3 != 0) {\n              uVar7 = FUN_0040a89d((int *)((int)this + 4));\n              iVar12 = iVar12 + (CONCAT13(extraout_var_03,uVar7) >> (0x10 - bVar3 & 0x1f));\n              uVar9 = uVar9 + bVar3;\n              *(uint *)((int)this + 4) = (uVar9 >> 3) + local_14;\n              *(uint *)((int)this + 8) = uVar9 & 7;\n            }\n            *(undefined4 *)((int)this + 0x6c) = *(undefined4 *)((int)this + 0x68);\n            *(undefined4 *)((int)this + 0x68) = *(undefined4 *)((int)this + 100);\n            *(undefined4 *)((int)this + 100) = *(undefined4 *)((int)this + 0x60);\n            iVar17 = 2;\n            *(int *)((int)this + 0x60) = iVar12;\n            uVar16 = *(uint *)((int)this + 0x7c);\n            *(undefined4 *)((int)this + 0x74) = 2;\n            uVar9 = uVar16 - iVar12;\n            uVar8 = *(int *)((int)this + 0xe6d8) - 0x1004;\n            if ((uVar9 < uVar8) && (uVar16 < uVar8)) {\n              iVar12 = *(int *)((int)this + 0x4b40);\n              *(uint *)((int)this + 0x7c) = uVar16 + 2;\n              *(undefined1 *)(iVar12 + uVar16) = *(undefined1 *)(uVar9 + iVar12);\n              *(undefined1 *)(iVar12 + 1 + uVar16) = *(undefined1 *)(uVar9 + 1 + iVar12);\n            }\n            else {\n              uVar8 = *(uint *)((int)this + 0xe6dc);\n              do {\n                uVar8 = uVar9 & uVar8;\n                uVar9 = uVar9 + 1;\n                *(undefined1 *)(uVar16 + *(int *)((int)this + 0x4b40)) =\n                     *(undefined1 *)(uVar8 + *(int *)((int)this + 0x4b40));\n                uVar8 = *(uint *)((int)this + 0xe6dc);\n                uVar16 = *(int *)((int)this + 0x7c) + 1U & uVar8;\n                *(uint *)((int)this + 0x7c) = uVar16;\n                iVar17 = iVar17 + -1;\n              } while (iVar17 != 0);\n            }\n          }\n          goto LAB_004155e2;\n        }\n        uVar16 = *(uint *)((int)this + 0x74);\n        if (uVar16 == 0) goto LAB_004155e2;\n        uVar8 = *(uint *)((int)this + 0x7c);\n        uVar9 = *(int *)((int)this + 0xe6d8) - 0x1004;\n        uVar13 = uVar8 - *(uint *)((int)this + 0x60);\n        if ((uVar9 <= uVar13) || (uVar9 <= uVar8)) {\n          uVar9 = *(uint *)((int)this + 0xe6dc);\n          do {\n            uVar9 = uVar13 & uVar9;\n            uVar13 = uVar13 + 1;\n            *(undefined1 *)(uVar8 + *(int *)((int)this + 0x4b40)) =\n                 *(undefined1 *)(uVar9 + *(int *)((int)this + 0x4b40));\n            uVar9 = *(uint *)((int)this + 0xe6dc);\n            uVar8 = *(int *)((int)this + 0x7c) + 1U & uVar9;\n            *(uint *)((int)this + 0x7c) = uVar8;\n            uVar16 = uVar16 - 1;\n          } while (uVar16 != 0);\n          goto LAB_004155e2;\n        }\n        puVar14 = (uint *)(uVar13 + *(int *)((int)this + 0x4b40));\n        puVar11 = (uint *)(*(int *)((int)this + 0x4b40) + uVar8);\n        *(uint *)((int)this + 0x7c) = uVar16 + uVar8;\n        if (7 < uVar16) {\n          if (*(uint *)((int)this + 0x60) < uVar16) {\n            uVar8 = uVar16 >> 3;\n            do {\n              uVar16 = uVar16 - 8;\n              *(char *)puVar11 = (char)*puVar14;\n              *(undefined1 *)((int)puVar11 + 1) = *(undefined1 *)((int)puVar14 + 1);\n              *(undefined1 *)((int)puVar11 + 2) = *(undefined1 *)((int)puVar14 + 2);\n              *(undefined1 *)((int)puVar11 + 3) = *(undefined1 *)((int)puVar14 + 3);\n              *(char *)(puVar11 + 1) = (char)puVar14[1];\n              *(undefined1 *)((int)puVar11 + 5) = *(undefined1 *)((int)puVar14 + 5);\n              *(undefined1 *)((int)puVar11 + 6) = *(undefined1 *)((int)puVar14 + 6);\n              puVar10 = (undefined1 *)((int)puVar14 + 7);\n              puVar14 = puVar14 + 2;\n              *(undefined1 *)((int)puVar11 + 7) = *puVar10;\n              puVar11 = puVar11 + 2;\n              uVar8 = uVar8 - 1;\n            } while (uVar8 != 0);\n          }\n          else {\n            uVar8 = uVar16 >> 3;\n            do {\n              FUN_00420320(puVar11,puVar14,8);\n              puVar14 = puVar14 + 2;\n              puVar11 = puVar11 + 2;\n              uVar16 = uVar16 - 8;\n              uVar8 = uVar8 - 1;\n            } while (uVar8 != 0);\n          }\n        }\n        goto LAB_004157d0;\n      }\n      cVar5 = FUN_00414686();\n    }\n  }\nLAB_0041569e:\n  if (cVar5 == '\\0') {\nLAB_00416239:\n    FUN_00414fcd((undefined4 *)this);\n    return;\n  }\n  goto LAB_004155e2;\n}\n\n"
    },
    {
      "name": "FUN_0041624a",
      "entry": "0041624a",
      "c": "\nvoid __thiscall FUN_0041624a(void *this,char param_1)\n\n{\n  int *piVar1;\n  uint3 uVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  undefined1 *puVar6;\n  undefined1 extraout_var;\n  uint uVar7;\n  undefined1 extraout_var_00;\n  byte bVar8;\n  uint *puVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int *piVar14;\n  ushort uVar15;\n  uint local_28;\n  int local_24;\n  uint local_20;\n  uint local_18;\n  char local_10 [16];\n  \n  *(undefined1 *)((int)this + 0x4c60) = 1;\n  if (*(char *)((int)this + 0x4c50) == '\\0') {\n    FUN_00414d0a(this,param_1);\n    uVar3 = FUN_00414e52((undefined4 *)this);\n    if ((char)uVar3 == '\\0') {\n      return;\n    }\n    uVar3 = FUN_00413e0b(this,(int *)((int)this + 4),(int *)((int)this + 0x8c));\n    if ((char)uVar3 == '\\0') {\n      return;\n    }\n    uVar4 = FUN_004143bf(this,(int *)((int)this + 4),(int)this + 0x8c,(uint *)((int)this + 0xa0));\n    if ((char)uVar4 == '\\0') {\n      return;\n    }\n    if (*(char *)((int)this + 0xe662) == '\\0') {\n      return;\n    }\n  }\nLAB_004162cd:\n  do {\n    piVar14 = (int *)((int)this + 4);\n    *(uint *)((int)this + 0x7c) = *(uint *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc);\n    if (*(int *)((int)this + 0x88) <= *piVar14) {\n      piVar1 = (int *)((int)this + 0x8c);\n      while ((iVar5 = *(int *)((int)this + 0x94) + -1 + *piVar1, iVar5 < *piVar14 ||\n             ((*piVar14 == iVar5 && (*(int *)((int)this + 0x90) <= *(int *)((int)this + 8)))))) {\n        if (*(char *)((int)this + 0x9c) != '\\0') goto LAB_0041690f;\n        uVar3 = FUN_00413e0b(this,piVar14,piVar1);\n        if ((char)uVar3 == '\\0') {\n          return;\n        }\n        uVar4 = FUN_004143bf(this,piVar14,(int)piVar1,(uint *)((int)this + 0xa0));\n        if ((char)uVar4 == '\\0') {\n          return;\n        }\n      }\n      uVar3 = FUN_00414e52((undefined4 *)this);\n      if ((char)uVar3 == '\\0') {\nLAB_0041690f:\n        FUN_00415202((undefined4 *)this);\n        return;\n      }\n    }\n    if (((*(int *)((int)this + 0x4b3c) - *(int *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc))\n         < 0x1004) && (*(int *)((int)this + 0x4b3c) != *(int *)((int)this + 0x7c))) {\n      FUN_00415202((undefined4 *)this);\n      if (*(int *)((int)this + 0x4c4c) < *(int *)((int)this + 0x4c5c)) {\n        return;\n      }\n      if ((*(int *)((int)this + 0x4c4c) <= *(int *)((int)this + 0x4c5c)) &&\n         (*(uint *)((int)this + 0x4c48) < *(uint *)((int)this + 0x4c58))) {\n        return;\n      }\n      if (*(char *)((int)this + 0x4c50) != '\\0') {\n        *(undefined1 *)((int)this + 0x4c60) = 0;\n        return;\n      }\n    }\n    uVar2 = FUN_0040a89d(piVar14);\n    iVar5 = *(int *)((int)this + 0x124);\n    uVar3 = uVar2 & 0xfffe;\n    if (uVar3 < *(uint *)((int)this + iVar5 * 4 + 0xa4)) {\n      uVar3 = uVar3 >> (0x10U - (char)iVar5 & 0x1f);\n      uVar12 = (uint)*(byte *)(uVar3 + 0x128 + (int)this) + *(int *)((int)this + 8);\n      *piVar14 = *piVar14 + (uVar12 >> 3);\n      uVar12 = uVar12 & 7;\n      local_28 = *piVar14;\n      *(uint *)((int)this + 8) = uVar12;\n      uVar15 = *(ushort *)((int)this + uVar3 * 2 + 0x528);\n    }\n    else {\n      uVar12 = iVar5 + 1;\n      uVar11 = 0xf;\n      if (uVar12 < 0xf) {\n        puVar9 = (uint *)((int)this + (iVar5 + 0x2a) * 4);\n        do {\n          uVar11 = uVar12;\n          if (uVar3 < *puVar9) break;\n          uVar12 = uVar12 + 1;\n          puVar9 = puVar9 + 1;\n          uVar11 = 0xf;\n        } while (uVar12 < 0xf);\n      }\n      uVar10 = *(int *)((int)this + 8) + uVar11;\n      uVar12 = uVar10 & 7;\n      *piVar14 = *piVar14 + (uVar10 >> 3);\n      local_28 = *piVar14;\n      *(uint *)((int)this + 8) = uVar12;\n      uVar3 = *(int *)((int)this + uVar11 * 4 + 0xe4) +\n              (uVar3 - *(int *)((int)this + uVar11 * 4 + 0xa0) >> (0x10U - (char)uVar11 & 0x1f));\n      uVar15 = *(ushort *)\n                ((int)this + (-(uint)(uVar3 < *(uint *)((int)this + 0xa0)) & uVar3) * 2 + 0xd28);\n    }\n    uVar3 = (uint)uVar15;\n    if (uVar3 < 0x100) {\n      if (*(char *)((int)this + 0x4c44) == '\\0') {\n        *(char *)(*(int *)((int)this + 0x4b40) + *(int *)((int)this + 0x7c)) = (char)uVar15;\n        *(int *)((int)this + 0x7c) = *(int *)((int)this + 0x7c) + 1;\n      }\n      else {\n        uVar3 = *(uint *)((int)this + 0x7c);\n        *(uint *)((int)this + 0x7c) = uVar3 + 1;\n        puVar6 = (undefined1 *)FUN_00412391((void *)((int)this + 0x4b44),uVar3);\n        *puVar6 = (char)uVar15;\n      }\n      goto LAB_004162cd;\n    }\n    if (0x105 < uVar3) {\n      uVar11 = uVar3 - 0x106;\n      if (uVar11 < 8) {\n        uVar3 = uVar3 - 0x104;\n      }\n      else {\n        iVar5 = (uVar11 >> 2) - 1;\n        uVar3 = ((uVar11 & 3 | 4) << ((byte)iVar5 & 0x1f)) + 2;\n        if (iVar5 != 0) {\n          uVar2 = FUN_0040a89d(piVar14);\n          uVar3 = uVar3 + (CONCAT13(extraout_var,uVar2) >> (0x10 - (byte)iVar5 & 0x1f));\n          local_28 = local_28 + (uVar12 + iVar5 >> 3);\n          uVar12 = uVar12 + iVar5 & 7;\n          *piVar14 = local_28;\n          *(uint *)((int)this + 8) = uVar12;\n        }\n      }\n      uVar2 = FUN_0040a89d(piVar14);\n      iVar5 = *(int *)((int)this + 0x1010);\n      uVar11 = uVar2 & 0xfffe;\n      if (uVar11 < *(uint *)((int)this + iVar5 * 4 + 0xf90)) {\n        uVar11 = uVar11 >> (0x10U - (char)iVar5 & 0x1f);\n        uVar12 = *(byte *)(uVar11 + 0x1014 + (int)this) + uVar12;\n        local_24 = (uVar12 >> 3) + local_28;\n        local_28 = uVar12 & 7;\n        *piVar14 = local_24;\n        *(uint *)((int)this + 8) = local_28;\n        uVar15 = *(ushort *)((int)this + uVar11 * 2 + 0x1414);\n      }\n      else {\n        uVar10 = iVar5 + 1;\n        uVar12 = 0xf;\n        if (uVar10 < 0xf) {\n          puVar9 = (uint *)((int)this + (iVar5 + 0x3e5) * 4);\n          do {\n            uVar12 = uVar10;\n            if (uVar11 < *puVar9) break;\n            uVar10 = uVar10 + 1;\n            puVar9 = puVar9 + 1;\n            uVar12 = 0xf;\n          } while (uVar10 < 0xf);\n        }\n        uVar10 = *(int *)((int)this + 8) + uVar12;\n        local_28 = uVar10 & 7;\n        *(uint *)((int)this + 8) = local_28;\n        *piVar14 = *piVar14 + (uVar10 >> 3);\n        local_24 = *piVar14;\n        uVar11 = *(int *)((int)this + uVar12 * 4 + 0xfd0) +\n                 (uVar11 - *(int *)((int)this + uVar12 * 4 + 0xf8c) >> (0x10U - (char)uVar12 & 0x1f)\n                 );\n        uVar15 = *(ushort *)\n                  ((int)this +\n                  (-(uint)(uVar11 < *(uint *)((int)this + 0xf8c)) & uVar11) * 2 + 0x1c14);\n      }\n      local_20 = (uint)uVar15;\n      if (local_20 < 4) {\n        local_20 = local_20 + 1;\n      }\n      else {\n        uVar12 = (uVar15 >> 1) - 1;\n        bVar8 = (byte)uVar12;\n        uVar11 = ((local_20 & 1 | 2) << (bVar8 & 0x1f)) + 1;\n        local_20 = uVar11;\n        if (uVar12 != 0) {\n          if (uVar12 < 4) {\n            uVar10 = FUN_00418934((int *)((int)this + 4));\n            *(uint *)((int)this + 4) = (local_28 + uVar12 >> 3) + local_24;\n            *(uint *)((int)this + 8) = local_28 + uVar12 & 7;\n            local_20 = (uVar10 >> (0x20 - bVar8 & 0x1f)) + uVar11;\n          }\n          else {\n            if (4 < uVar12) {\n              uVar10 = FUN_00418934((int *)((int)this + 4));\n              uVar11 = (uVar10 >> (0x24 - bVar8 & 0x1f)) * 0x10 + uVar11;\n              uVar12 = (local_28 - 4) + uVar12;\n              local_24 = local_24 + (uVar12 >> 3);\n              local_28 = uVar12 & 7;\n              *(int *)((int)this + 4) = local_24;\n              *(uint *)((int)this + 8) = local_28;\n            }\n            piVar14 = (int *)((int)this + 4);\n            uVar2 = FUN_0040a89d(piVar14);\n            iVar5 = *(int *)((int)this + 0x1efc);\n            uVar12 = uVar2 & 0xfffe;\n            if (uVar12 < *(uint *)((int)this + iVar5 * 4 + 0x1e7c)) {\n              uVar12 = uVar12 >> (0x10U - (char)iVar5 & 0x1f);\n              local_28 = *(byte *)(uVar12 + 0x1f00 + (int)this) + local_28;\n              *piVar14 = (local_28 >> 3) + local_24;\n              *(uint *)((int)this + 8) = local_28 & 7;\n              uVar15 = *(ushort *)((int)this + uVar12 * 2 + 0x2300);\n            }\n            else {\n              uVar7 = iVar5 + 1;\n              local_20 = 0xf;\n              uVar10 = local_20;\n              if (uVar7 < 0xf) {\n                puVar9 = (uint *)((int)this + (iVar5 + 0x7a0) * 4);\n                do {\n                  uVar10 = uVar7;\n                  if (uVar12 < *puVar9) break;\n                  uVar7 = uVar7 + 1;\n                  puVar9 = puVar9 + 1;\n                  uVar10 = local_20;\n                } while (uVar7 < 0xf);\n              }\n              local_20 = uVar10;\n              uVar10 = *(int *)((int)this + 8) + local_20;\n              *piVar14 = *piVar14 + (uVar10 >> 3);\n              *(uint *)((int)this + 8) = uVar10 & 7;\n              uVar12 = *(int *)((int)this + local_20 * 4 + 0x1ebc) +\n                       (uVar12 - *(int *)((int)this + local_20 * 4 + 0x1e78) >>\n                       (0x10U - (char)local_20 & 0x1f));\n              uVar15 = *(ushort *)\n                        ((int)this +\n                        (-(uint)(uVar12 < *(uint *)((int)this + 0x1e78)) & uVar12) * 2 + 0x2b00);\n            }\n            local_20 = uVar11 + uVar15;\n          }\n        }\n      }\n      uVar11 = uVar3;\n      if (((0x100 < local_20) && (uVar11 = uVar3 + 1, 0x2000 < local_20)) &&\n         (uVar11 = uVar3 + 2, 0x40000 < local_20)) {\n        uVar11 = uVar3 + 3;\n      }\n      *(undefined4 *)((int)this + 0x6c) = *(undefined4 *)((int)this + 0x68);\n      *(undefined4 *)((int)this + 0x68) = *(undefined4 *)((int)this + 100);\n      *(undefined4 *)((int)this + 100) = *(undefined4 *)((int)this + 0x60);\n      *(uint *)((int)this + 0x60) = local_20;\n      *(uint *)((int)this + 0x74) = uVar11;\n      if (*(char *)((int)this + 0x4c44) != '\\0') {\n        uVar3 = *(uint *)((int)this + 0xe6dc);\n        goto LAB_0041678e;\n      }\n      uVar3 = *(uint *)((int)this + 0x7c);\n      uVar10 = uVar3 - local_20;\n      uVar12 = *(int *)((int)this + 0xe6d8) - 0x1004;\n      if ((uVar10 < uVar12) && (uVar3 < uVar12)) {\n        puVar9 = (uint *)(*(int *)((int)this + 0x4b40) + uVar10);\n        puVar13 = (uint *)(uVar3 + *(int *)((int)this + 0x4b40));\n        *(uint *)((int)this + 0x7c) = uVar3 + uVar11;\n        if (7 < uVar11) {\n          if (local_20 < uVar11) {\n            uVar3 = uVar11 >> 3;\n            do {\n              uVar11 = uVar11 - 8;\n              *(char *)puVar13 = (char)*puVar9;\n              *(undefined1 *)((int)puVar13 + 1) = *(undefined1 *)((int)puVar9 + 1);\n              *(undefined1 *)((int)puVar13 + 2) = *(undefined1 *)((int)puVar9 + 2);\n              *(undefined1 *)((int)puVar13 + 3) = *(undefined1 *)((int)puVar9 + 3);\n              *(char *)(puVar13 + 1) = (char)puVar9[1];\n              *(undefined1 *)((int)puVar13 + 5) = *(undefined1 *)((int)puVar9 + 5);\n              *(undefined1 *)((int)puVar13 + 6) = *(undefined1 *)((int)puVar9 + 6);\n              puVar6 = (undefined1 *)((int)puVar9 + 7);\n              puVar9 = puVar9 + 2;\n              *(undefined1 *)((int)puVar13 + 7) = *puVar6;\n              puVar13 = puVar13 + 2;\n              uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n          }\n          else {\n            uVar3 = uVar11 >> 3;\n            do {\n              FUN_00420320(puVar13,puVar9,8);\n              puVar9 = puVar9 + 2;\n              puVar13 = puVar13 + 2;\n              uVar11 = uVar11 - 8;\n              uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n          }\n        }\n        if (((uVar11 != 0) && (*(char *)puVar13 = (char)*puVar9, 1 < uVar11)) &&\n           ((*(undefined1 *)((int)puVar13 + 1) = *(undefined1 *)((int)puVar9 + 1), 2 < uVar11 &&\n            ((((*(undefined1 *)((int)puVar13 + 2) = *(undefined1 *)((int)puVar9 + 2), 3 < uVar11 &&\n               (*(undefined1 *)((int)puVar13 + 3) = *(undefined1 *)((int)puVar9 + 3), 4 < uVar11))\n              && (*(char *)(puVar13 + 1) = (char)puVar9[1], 5 < uVar11)) &&\n             (*(undefined1 *)((int)puVar13 + 5) = *(undefined1 *)((int)puVar9 + 5), 6 < uVar11))))))\n        {\n          *(undefined1 *)((int)puVar13 + 6) = *(undefined1 *)((int)puVar9 + 6);\n        }\n      }\n      else if (uVar11 != 0) {\n        uVar12 = *(uint *)((int)this + 0xe6dc);\n        do {\n          uVar12 = uVar12 & uVar10;\n          uVar10 = uVar10 + 1;\n          *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar3) =\n               *(undefined1 *)(uVar12 + *(int *)((int)this + 0x4b40));\n          uVar12 = *(uint *)((int)this + 0xe6dc);\n          uVar3 = *(int *)((int)this + 0x7c) + 1U & uVar12;\n          *(uint *)((int)this + 0x7c) = uVar3;\n          uVar11 = uVar11 - 1;\n        } while (uVar11 != 0);\n      }\n      goto LAB_004162cd;\n    }\n    if (uVar3 != 0x100) {\n      if (uVar3 == 0x101) {\n        uVar11 = *(uint *)((int)this + 0x74);\n        if (uVar11 == 0) goto LAB_004162cd;\n        if (*(char *)((int)this + 0x4c44) == '\\0') {\n          uVar3 = *(uint *)((int)this + 0x7c);\n          uVar12 = *(int *)((int)this + 0xe6d8) - 0x1004;\n          uVar10 = uVar3 - *(uint *)((int)this + 0x60);\n          if ((uVar10 < uVar12) && (uVar3 < uVar12)) {\n            puVar13 = (uint *)(uVar10 + *(int *)((int)this + 0x4b40));\n            puVar9 = (uint *)(uVar3 + *(int *)((int)this + 0x4b40));\n            *(uint *)((int)this + 0x7c) = uVar3 + uVar11;\n            if (7 < uVar11) {\n              if (*(uint *)((int)this + 0x60) < uVar11) {\n                uVar3 = uVar11 >> 3;\n                do {\n                  uVar11 = uVar11 - 8;\n                  *(char *)puVar9 = (char)*puVar13;\n                  *(undefined1 *)((int)puVar9 + 1) = *(undefined1 *)((int)puVar13 + 1);\n                  *(undefined1 *)((int)puVar9 + 2) = *(undefined1 *)((int)puVar13 + 2);\n                  *(undefined1 *)((int)puVar9 + 3) = *(undefined1 *)((int)puVar13 + 3);\n                  *(char *)(puVar9 + 1) = (char)puVar13[1];\n                  *(undefined1 *)((int)puVar9 + 5) = *(undefined1 *)((int)puVar13 + 5);\n                  *(undefined1 *)((int)puVar9 + 6) = *(undefined1 *)((int)puVar13 + 6);\n                  puVar6 = (undefined1 *)((int)puVar13 + 7);\n                  puVar13 = puVar13 + 2;\n                  *(undefined1 *)((int)puVar9 + 7) = *puVar6;\n                  puVar9 = puVar9 + 2;\n                  uVar3 = uVar3 - 1;\n                } while (uVar3 != 0);\n              }\n              else {\n                uVar3 = uVar11 >> 3;\n                do {\n                  FUN_00420320(puVar9,puVar13,8);\n                  puVar13 = puVar13 + 2;\n                  puVar9 = puVar9 + 2;\n                  uVar11 = uVar11 - 8;\n                  uVar3 = uVar3 - 1;\n                } while (uVar3 != 0);\n              }\n            }\n            goto LAB_004169fc;\n          }\n          uVar12 = *(uint *)((int)this + 0xe6dc);\n          do {\n            uVar12 = uVar12 & uVar10;\n            uVar10 = uVar10 + 1;\n            *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar3) =\n                 *(undefined1 *)(uVar12 + *(int *)((int)this + 0x4b40));\n            uVar12 = *(uint *)((int)this + 0xe6dc);\n            uVar3 = *(int *)((int)this + 0x7c) + 1U & uVar12;\n            *(uint *)((int)this + 0x7c) = uVar3;\n            uVar11 = uVar11 - 1;\n          } while (uVar11 != 0);\n          goto LAB_004162cd;\n        }\n        uVar3 = *(uint *)((int)this + 0xe6dc);\n        local_20 = *(uint *)((int)this + 0x60);\n      }\n      else {\n        puVar9 = (uint *)((int)this + (uVar3 - 0xea) * 4);\n        local_20 = *puVar9;\n        for (iVar5 = uVar3 - 0x102; iVar5 != 0; iVar5 = iVar5 + -1) {\n          *puVar9 = puVar9[-1];\n          puVar9 = puVar9 + -1;\n        }\n        *(uint *)((int)this + 0x60) = local_20;\n        uVar2 = FUN_0040a89d(piVar14);\n        iVar5 = *(int *)((int)this + 0x2de8);\n        uVar3 = uVar2 & 0xfffe;\n        if (uVar3 < *(uint *)((int)this + iVar5 * 4 + 0x2d68)) {\n          uVar3 = uVar3 >> (0x10U - (char)iVar5 & 0x1f);\n          local_18 = (uint)*(byte *)(uVar3 + 0x2dec + (int)this) + *(int *)((int)this + 8);\n          *piVar14 = *piVar14 + (local_18 >> 3);\n          local_18 = local_18 & 7;\n          *(uint *)((int)this + 8) = local_18;\n          uVar15 = *(ushort *)((int)this + uVar3 * 2 + 0x31ec);\n        }\n        else {\n          uVar12 = iVar5 + 1;\n          uVar11 = 0xf;\n          if (uVar12 < 0xf) {\n            puVar9 = (uint *)((int)this + (iVar5 + 0xb5b) * 4);\n            do {\n              uVar11 = uVar12;\n              if (uVar3 < *puVar9) break;\n              uVar12 = uVar12 + 1;\n              puVar9 = puVar9 + 1;\n              uVar11 = 0xf;\n            } while (uVar12 < 0xf);\n          }\n          uVar12 = *(int *)((int)this + 8) + uVar11;\n          local_18 = uVar12 & 7;\n          *(uint *)((int)this + 8) = local_18;\n          *piVar14 = *piVar14 + (uVar12 >> 3);\n          uVar3 = *(int *)((int)this + uVar11 * 4 + 0x2da8) +\n                  (uVar3 - *(int *)((int)this + uVar11 * 4 + 0x2d64) >>\n                  (0x10U - (char)uVar11 & 0x1f));\n          uVar15 = *(ushort *)\n                    ((int)this +\n                    (-(uint)(uVar3 < *(uint *)((int)this + 0x2d64)) & uVar3) * 2 + 0x39ec);\n        }\n        uVar11 = (uint)uVar15;\n        if (uVar11 < 8) {\n          uVar11 = uVar11 + 2;\n        }\n        else {\n          iVar5 = (uVar15 >> 2) - 1;\n          uVar11 = ((uVar11 & 3 | 4) << ((byte)iVar5 & 0x1f)) + 2;\n          if (iVar5 != 0) {\n            uVar2 = FUN_0040a89d(piVar14);\n            uVar11 = uVar11 + (CONCAT13(extraout_var_00,uVar2) >> (0x10 - (byte)iVar5 & 0x1f));\n            *piVar14 = *piVar14 + (local_18 + iVar5 >> 3);\n            *(uint *)((int)this + 8) = local_18 + iVar5 & 7;\n          }\n        }\n        *(uint *)((int)this + 0x74) = uVar11;\n        if (*(char *)((int)this + 0x4c44) == '\\0') {\n          uVar3 = *(uint *)((int)this + 0x7c);\n          uVar10 = uVar3 - local_20;\n          uVar12 = *(int *)((int)this + 0xe6d8) - 0x1004;\n          if ((uVar10 < uVar12) && (uVar3 < uVar12)) {\n            puVar13 = (uint *)(uVar10 + *(int *)((int)this + 0x4b40));\n            puVar9 = (uint *)(uVar3 + *(int *)((int)this + 0x4b40));\n            *(uint *)((int)this + 0x7c) = uVar3 + uVar11;\n            if (7 < uVar11) {\n              if (local_20 < uVar11) {\n                uVar3 = uVar11 >> 3;\n                do {\n                  uVar11 = uVar11 - 8;\n                  *(char *)puVar9 = (char)*puVar13;\n                  *(undefined1 *)((int)puVar9 + 1) = *(undefined1 *)((int)puVar13 + 1);\n                  *(undefined1 *)((int)puVar9 + 2) = *(undefined1 *)((int)puVar13 + 2);\n                  *(undefined1 *)((int)puVar9 + 3) = *(undefined1 *)((int)puVar13 + 3);\n                  *(char *)(puVar9 + 1) = (char)puVar13[1];\n                  *(undefined1 *)((int)puVar9 + 5) = *(undefined1 *)((int)puVar13 + 5);\n                  *(undefined1 *)((int)puVar9 + 6) = *(undefined1 *)((int)puVar13 + 6);\n                  puVar6 = (undefined1 *)((int)puVar13 + 7);\n                  puVar13 = puVar13 + 2;\n                  *(undefined1 *)((int)puVar9 + 7) = *puVar6;\n                  puVar9 = puVar9 + 2;\n                  uVar3 = uVar3 - 1;\n                } while (uVar3 != 0);\n              }\n              else {\n                uVar3 = uVar11 >> 3;\n                do {\n                  FUN_00420320(puVar9,puVar13,8);\n                  puVar13 = puVar13 + 2;\n                  puVar9 = puVar9 + 2;\n                  uVar11 = uVar11 - 8;\n                  uVar3 = uVar3 - 1;\n                } while (uVar3 != 0);\n              }\n            }\nLAB_004169fc:\n            if ((((uVar11 != 0) && (*(char *)puVar9 = (char)*puVar13, 1 < uVar11)) &&\n                (*(undefined1 *)((int)puVar9 + 1) = *(undefined1 *)((int)puVar13 + 1), 2 < uVar11))\n               && (((*(undefined1 *)((int)puVar9 + 2) = *(undefined1 *)((int)puVar13 + 2),\n                    3 < uVar11 &&\n                    (*(undefined1 *)((int)puVar9 + 3) = *(undefined1 *)((int)puVar13 + 3),\n                    4 < uVar11)) &&\n                   ((*(char *)(puVar9 + 1) = (char)puVar13[1], 5 < uVar11 &&\n                    (*(undefined1 *)((int)puVar9 + 5) = *(undefined1 *)((int)puVar13 + 5),\n                    6 < uVar11)))))) {\n              *(undefined1 *)((int)puVar9 + 6) = *(undefined1 *)((int)puVar13 + 6);\n            }\n          }\n          else if (uVar11 != 0) {\n            uVar12 = *(uint *)((int)this + 0xe6dc);\n            do {\n              uVar12 = uVar12 & uVar10;\n              uVar10 = uVar10 + 1;\n              *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar3) =\n                   *(undefined1 *)(uVar12 + *(int *)((int)this + 0x4b40));\n              uVar12 = *(uint *)((int)this + 0xe6dc);\n              uVar3 = *(int *)((int)this + 0x7c) + 1U & uVar12;\n              *(uint *)((int)this + 0x7c) = uVar3;\n              uVar11 = uVar11 - 1;\n            } while (uVar11 != 0);\n          }\n          goto LAB_004162cd;\n        }\n        uVar3 = *(uint *)((int)this + 0xe6dc);\n      }\nLAB_0041678e:\n      FUN_00412c30((void *)((int)this + 0x4b44),uVar11,local_20,(uint *)((int)this + 0x7c),uVar3);\n      goto LAB_004162cd;\n    }\n    uVar3 = FUN_00413f9d(this,piVar14,local_10);\n    if (((char)uVar3 == '\\0') ||\n       (uVar4 = FUN_0041253e(this,(undefined4 *)local_10), (char)uVar4 == '\\0')) goto LAB_0041690f;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00416cdc",
      "entry": "00416cdc",
      "c": "\nulonglong __thiscall FUN_00416cdc(void *this,char param_1)\n\n{\n  int *piVar1;\n  uint *puVar2;\n  bool bVar3;\n  bool bVar4;\n  uint uVar5;\n  int *piVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  int iVar10;\n  uint uVar11;\n  uint uVar12;\n  uint *puVar13;\n  undefined4 *puVar14;\n  uint uVar15;\n  undefined4 *puVar16;\n  ulonglong uVar17;\n  int local_224;\n  int local_220;\n  uint local_21c;\n  uint local_218;\n  uint local_210;\n  int local_200 [128];\n  \n  FUN_0041359e();\n  FUN_00414d0a(this,param_1);\n  piVar1 = (int *)((int)this + 0x18);\n  uVar11 = 0;\n  if ((*(uint *)((int)this + 0x1c) & 0x7fffffff) != 0) {\n    iVar9 = 0;\n    do {\n      iVar10 = *piVar1;\n      iVar9 = iVar9 + 0x4ae4;\n      uVar11 = uVar11 + 1;\n      *(undefined1 *)(iVar10 + -0x13 + iVar9) = 0;\n      *(undefined1 *)(iVar10 + -0x11 + iVar9) = 0;\n    } while (uVar11 < (uint)(*(int *)((int)this + 0x1c) * 2));\n  }\n  puVar14 = (undefined4 *)((int)this + 0x8c);\n  puVar16 = (undefined4 *)(*piVar1 + 0x18);\n  for (iVar9 = 5; iVar9 != 0; iVar9 = iVar9 + -1) {\n    *puVar16 = *puVar14;\n    puVar14 = puVar14 + 1;\n    puVar16 = puVar16 + 1;\n  }\n  FUN_00420320((uint *)(*piVar1 + 0x30),(uint *)((int)this + 0xa0),0x4a9c);\n  local_210 = 0;\n  uVar11 = 0;\n  bVar3 = false;\n  bVar4 = false;\nLAB_00416d6c:\n  local_224 = 0;\n  iVar9 = 0;\n  uVar15 = uVar11;\n  do {\n    while( true ) {\n                    /* WARNING: Load size is inaccurate */\n      uVar5 = FUN_0040d114(*this,(undefined1 (*) [16])(*(int *)((int)this + 0x20) + uVar15),\n                           0x400000 - uVar15 & 0xfffffff0);\n      if (((int)uVar5 < 0) || (uVar15 = uVar15 + uVar5, uVar15 == 0)) goto LAB_004170fe;\n      if (((0 < (int)uVar5) && ((int)uVar15 < 0x400)) || ((int)uVar15 <= iVar9)) break;\n      do {\n        local_218 = 0;\n        local_21c = 0;\n        if ((*(uint *)((int)this + 0x1c) & 0x7fffffff) != 0) {\n          local_220 = 0;\n          do {\n            puVar14 = (undefined4 *)(*piVar1 + local_220);\n            *puVar14 = this;\n            local_210 = local_21c;\n            if (*(char *)((int)puVar14 + 0x4ad3) == '\\0') {\n              FUN_0040a85a(puVar14 + 1,*(int *)((int)this + 0x20) + local_224);\n              puVar14[2] = 0;\n              puVar14[1] = 0;\n              puVar14[0x12b3] = uVar15 - local_224;\n              if (uVar15 - local_224 == 0) break;\n              *(undefined1 *)(puVar14 + 0x12b4) = 0;\n              *(undefined1 *)(puVar14 + 5) = 0;\n              *(undefined1 *)(puVar14 + 0xb) = 0;\n            }\n            else {\n              puVar14[0x12b3] = uVar15;\n            }\n            piVar6 = puVar14 + 6;\n            *(undefined1 *)((int)puVar14 + 0x4ad3) = 0;\n            puVar14[0x12b8] = local_21c;\n            *(bool *)((int)puVar14 + 0x4ad2) = uVar5 == 0;\n            if (*(char *)(puVar14 + 5) == '\\0') {\n              *(undefined1 *)(puVar14 + 5) = 1;\n              uVar11 = FUN_00413e0b(this,puVar14 + 1,piVar6);\n              if (((char)uVar11 == '\\0') ||\n                 ((*(char *)((int)puVar14 + 0x29) == '\\0' && (*(char *)((int)this + 0xe662) == '\\0')\n                  ))) {\n                bVar4 = true;\n                break;\n              }\n              *(undefined1 *)((int)this + 0xe662) = 1;\n            }\n            if ((bVar3) || (0x20000 < *piVar6)) {\n              *(undefined1 *)((int)puVar14 + 0x4ad1) = 1;\n              bVar3 = true;\n            }\n            else {\n              local_218 = local_218 + 1;\n            }\n            local_224 = local_224 + puVar14[9] + *piVar6;\n            local_21c = local_21c + 1;\n            local_220 = local_220 + 0x4ae4;\n            if ((((-1 < (int)(uVar15 - local_224)) && (*(char *)(puVar14 + 10) != '\\0')) ||\n                ((int)(uVar15 - local_224) < 0x400)) ||\n               ((uint)(*(int *)((int)this + 0x1c) * 2) <= local_21c)) break;\n          } while( true );\n        }\n        uVar11 = local_218 / *(uint *)((int)this + 0x1c);\n        if (local_218 % *(uint *)((int)this + 0x1c) != 0) {\n          uVar11 = uVar11 + 1;\n        }\n        uVar12 = 0;\n        if (local_218 != 0) {\n          local_220 = 0;\n          piVar6 = local_200;\n          do {\n            iVar9 = *piVar1;\n            *piVar6 = local_220 + iVar9;\n            uVar7 = local_218 - uVar12;\n            if (uVar11 < local_218 - uVar12) {\n              uVar7 = uVar11;\n            }\n            piVar6[1] = uVar7;\n            if (local_21c == 1) {\n              FUN_00417153(this,local_220 + iVar9);\n            }\n            else {\n              FUN_00410f86(*(void **)((int)this + 0x14),0x4177c0,(uint)piVar6);\n            }\n            uVar12 = uVar12 + uVar11;\n            local_220 = local_220 + uVar11 * 0x4ae4;\n            piVar6 = piVar6 + 2;\n          } while (uVar12 < local_218);\n        }\n        iVar9 = local_224;\n        if (local_21c == 0) goto LAB_004170f3;\n        FUN_004111cf(*(int *)((int)this + 0x14));\n        uVar11 = 0;\n        if (local_21c != 0) {\n          local_220 = 0;\n          do {\n            puVar13 = (uint *)(*piVar1 + local_220);\n            if (*(char *)((int)puVar13 + 0x4ad1) == '\\0') {\n              uVar12 = FUN_0041390d(this,(int)puVar13);\n              if ((char)uVar12 == '\\0') goto LAB_004170fe;\n              if (*(char *)((int)puVar13 + 0x4ad1) != '\\0') goto LAB_00416fc7;\n            }\n            else {\nLAB_00416fc7:\n              uVar8 = FUN_004177ef(this,(int)puVar13);\n              if ((char)uVar8 == '\\0') goto LAB_004170fe;\n            }\n            if ((char)puVar13[0x12b4] != '\\0') goto LAB_004170fe;\n            if (*(char *)((int)puVar13 + 0x4ad3) != '\\0') {\n              puVar2 = *(uint **)((int)this + 0x20);\n              iVar9 = (puVar13[4] - (int)puVar2) + puVar13[1];\n              if ((int)uVar15 <= iVar9) goto LAB_004170fe;\n              uVar15 = uVar15 - iVar9;\n              FUN_00420320(puVar2,(uint *)(iVar9 + (int)puVar2),uVar15);\n              puVar13[6] = puVar13[6] + (puVar13[8] - puVar13[1]);\n              puVar13[9] = 0;\n              puVar13[8] = 0;\n              uVar5 = *(uint *)((int)this + 0x20);\n              puVar13[1] = 0;\n              puVar13[4] = uVar5;\n              if (uVar11 != 0) {\n                puVar2 = (uint *)*piVar1;\n                uVar11 = puVar2[0x12b5];\n                uVar5 = puVar2[0x12b7];\n                FUN_00420320(puVar2,puVar13,0x4ae4);\n                *(uint *)(*piVar1 + 0x4ad4) = uVar11;\n                *(uint *)(*piVar1 + 0x4adc) = uVar5;\n                *(undefined1 *)((int)puVar13 + 0x4ad3) = 0;\n              }\n              local_224 = 0;\n              iVar9 = local_224;\n              goto LAB_004170f3;\n            }\n            if ((char)puVar13[10] != '\\0') goto LAB_004170fe;\n            uVar11 = uVar11 + 1;\n            local_220 = local_220 + 0x4ae4;\n          } while (uVar11 < local_21c);\n        }\n        if (bVar4) goto LAB_004170fe;\n        uVar11 = uVar15 - local_224;\n        if ((int)uVar11 < 0x400) {\n          if ((int)uVar11 < 0) goto LAB_004170fe;\n          if (0 < (int)uVar11) {\n            FUN_00420320(*(uint **)((int)this + 0x20),\n                         (uint *)(local_224 + (int)*(uint **)((int)this + 0x20)),uVar11);\n          }\n          goto LAB_00416d6c;\n        }\n      } while (local_224 < (int)uVar15);\n    }\nLAB_004170f3:\n  } while (!bVar4);\nLAB_004170fe:\n  *(uint *)((int)this + 0x7c) = *(uint *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc);\n  FUN_00415202((undefined4 *)this);\n  iVar9 = *piVar1;\n  puVar14 = (undefined4 *)(local_210 * 0x4ae4 + 0x18 + iVar9);\n  puVar16 = (undefined4 *)((int)this + 0x8c);\n  for (iVar10 = 5; iVar10 != 0; iVar10 = iVar10 + -1) {\n    *puVar16 = *puVar14;\n    puVar14 = puVar14 + 1;\n    puVar16 = puVar16 + 1;\n  }\n  uVar17 = FUN_00420320((uint *)((int)this + 0xa0),(uint *)(iVar9 + local_210 * 0x4ae4 + 0x30),\n                        0x4a9c);\n  return uVar17;\n}\n\n"
    },
    {
      "name": "FUN_00417153",
      "entry": "00417153",
      "c": "\nvoid __thiscall FUN_00417153(void *this,int param_1)\n\n{\n  int *piVar1;\n  ushort uVar2;\n  ushort uVar3;\n  short sVar4;\n  uint3 uVar5;\n  undefined4 uVar6;\n  int iVar7;\n  int iVar8;\n  undefined1 extraout_var;\n  uint uVar9;\n  uint uVar10;\n  undefined1 extraout_var_00;\n  byte bVar11;\n  uint *puVar12;\n  int iVar13;\n  uint uVar14;\n  int *piVar15;\n  uint uVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  uint uStack_30;\n  short sStack_24;\n  uint uStack_20;\n  uint uStack_18;\n  byte abStack_10 [4];\n  undefined4 uStack_c;\n  undefined4 uStack_8;\n  byte bStack_4;\n  \n  piVar1 = (int *)(param_1 + 4);\n  if (*(char *)(param_1 + 0x2c) == '\\0') {\n    *(undefined1 *)(param_1 + 0x2c) = 1;\n    uVar6 = FUN_004143bf(this,piVar1,param_1 + 0x18,(uint *)(param_1 + 0x30));\n    if ((char)uVar6 == '\\0') goto LAB_0041718b;\n  }\n  iVar7 = *(int *)(param_1 + 0x18);\n  if (*piVar1 <= *(int *)(param_1 + 0x24) + iVar7) {\n    *(undefined4 *)(param_1 + 0x4ad8) = 0;\n    iVar7 = *(int *)(param_1 + 0x20) + -1 + iVar7;\n    iVar13 = *(int *)(param_1 + 0x4acc) + -0x10;\n    iVar17 = iVar13;\n    if (iVar7 < iVar13) {\n      iVar17 = iVar7;\n    }\nLAB_004171ce:\n    do {\n      iVar8 = *piVar1;\n      if (iVar17 <= iVar8) {\n        if (iVar7 < iVar8) {\n          return;\n        }\n        if ((iVar8 == iVar7) && (*(int *)(param_1 + 0x1c) <= *(int *)(param_1 + 8))) {\n          return;\n        }\n        if (((iVar13 <= iVar8) && (*(char *)(param_1 + 0x4ad2) == '\\0')) ||\n           (*(int *)(param_1 + 0x4acc) <= iVar8)) {\n          *(undefined1 *)(param_1 + 0x4ad3) = 1;\n          return;\n        }\n      }\n      piVar15 = (int *)(param_1 + 0x4ad4);\n      iVar8 = *(int *)(param_1 + 0x4adc);\n      if (iVar8 - 8U < *(uint *)(param_1 + 0x4ad8)) {\n        *(int *)(param_1 + 0x4adc) = iVar8 * 2;\n        iVar8 = FUN_00423e3e((void *)*piVar15,iVar8 * 0x18);\n        if (iVar8 == 0) {\n          FUN_00406ca7(&DAT_00441098);\n        }\n        *piVar15 = iVar8;\n      }\n      puVar18 = (undefined4 *)(*(int *)(param_1 + 0x4ad8) * 0xc + *piVar15);\n      *(int *)(param_1 + 0x4ad8) = *(int *)(param_1 + 0x4ad8) + 1;\n      uVar5 = FUN_0040a89d(piVar1);\n      iVar8 = *(int *)(param_1 + 0xb4);\n      uVar14 = uVar5 & 0xfffe;\n      if (uVar14 < *(uint *)(param_1 + 0x34 + iVar8 * 4)) {\n        uVar14 = uVar14 >> (0x10U - (char)iVar8 & 0x1f);\n        uVar16 = (uint)*(byte *)(uVar14 + 0xb8 + param_1) + *(int *)(param_1 + 8);\n        *piVar1 = *piVar1 + (uVar16 >> 3);\n        uVar16 = uVar16 & 7;\n        uStack_30 = *piVar1;\n        *(uint *)(param_1 + 8) = uVar16;\n        uVar2 = *(ushort *)(param_1 + 0x4b8 + uVar14 * 2);\n      }\n      else {\n        uVar9 = iVar8 + 1;\n        uStack_20 = 0xf;\n        uVar16 = uStack_20;\n        if (uVar9 < 0xf) {\n          puVar12 = (uint *)(param_1 + 0x34 + uVar9 * 4);\n          do {\n            uVar16 = uVar9;\n            if (uVar14 < *puVar12) break;\n            uVar9 = uVar9 + 1;\n            puVar12 = puVar12 + 1;\n            uVar16 = uStack_20;\n          } while (uVar9 < 0xf);\n        }\n        uStack_20 = uVar16;\n        uVar9 = *(int *)(param_1 + 8) + uStack_20;\n        uVar16 = uVar9 & 7;\n        *piVar1 = *piVar1 + (uVar9 >> 3);\n        uStack_30 = *piVar1;\n        *(uint *)(param_1 + 8) = uVar16;\n        uVar14 = *(int *)(param_1 + 0x74 + uStack_20 * 4) +\n                 (uVar14 - *(int *)(param_1 + 0x30 + uStack_20 * 4) >>\n                 (0x10U - (char)uStack_20 & 0x1f));\n        uVar2 = *(ushort *)\n                 (param_1 + 0xcb8 + (-(uint)(uVar14 < *(uint *)(param_1 + 0x30)) & uVar14) * 2);\n      }\n      uVar14 = (uint)uVar2;\n      if (uVar14 < 0x100) {\n        if (((*(uint *)(param_1 + 0x4ad8) < 2) || (puVar18[-3] != 0)) ||\n           (2 < *(ushort *)(puVar18 + -2))) {\n          *puVar18 = 0;\n          *(char *)(puVar18 + 2) = (char)uVar2;\n          *(undefined2 *)(puVar18 + 1) = 0;\n        }\n        else {\n          uVar3 = *(ushort *)(puVar18 + -2) + 1;\n          *(ushort *)(puVar18 + -2) = uVar3;\n          *(char *)((uVar3 - 4) + (int)puVar18) = (char)uVar2;\n          *(int *)(param_1 + 0x4ad8) = *(int *)(param_1 + 0x4ad8) + -1;\n        }\n        goto LAB_004171ce;\n      }\n      if (uVar14 < 0x106) {\n        if (uVar14 == 0x100) {\n          FUN_00413f9d(this,piVar1,(char *)abStack_10);\n          *(ushort *)(puVar18 + 1) = (ushort)abStack_10[0];\n          puVar18[2] = uStack_c;\n          *puVar18 = 4;\n          puVar18 = (undefined4 *)(*(int *)(param_1 + 0x4ad8) * 0xc + *piVar15);\n          *(int *)(param_1 + 0x4ad8) = *(int *)(param_1 + 0x4ad8) + 1;\n          *(ushort *)(puVar18 + 1) = (ushort)bStack_4;\n          *puVar18 = 4;\n          puVar18[2] = uStack_8;\n        }\n        else if (uVar14 == 0x101) {\n          *puVar18 = 2;\n        }\n        else {\n          *puVar18 = 3;\n          puVar18[2] = uVar14 - 0x102;\n          uVar5 = FUN_0040a89d(piVar1);\n          iVar8 = *(int *)(param_1 + 0x2d78);\n          uVar14 = uVar5 & 0xfffe;\n          if (uVar14 < *(uint *)(param_1 + 0x2cf8 + iVar8 * 4)) {\n            uVar14 = uVar14 >> (0x10U - (char)iVar8 & 0x1f);\n            uStack_18 = (uint)*(byte *)(uVar14 + 0x2d7c + param_1) + *(int *)(param_1 + 8);\n            *piVar1 = *piVar1 + (uStack_18 >> 3);\n            uStack_18 = uStack_18 & 7;\n            *(uint *)(param_1 + 8) = uStack_18;\n            uVar2 = *(ushort *)(param_1 + 0x317c + uVar14 * 2);\n          }\n          else {\n            uVar9 = iVar8 + 1;\n            uVar16 = 0xf;\n            if (uVar9 < 0xf) {\n              puVar12 = (uint *)(param_1 + 0x2cf8 + uVar9 * 4);\n              do {\n                uVar16 = uVar9;\n                if (uVar14 < *puVar12) break;\n                uVar9 = uVar9 + 1;\n                puVar12 = puVar12 + 1;\n                uVar16 = 0xf;\n              } while (uVar9 < 0xf);\n            }\n            uVar9 = *(int *)(param_1 + 8) + uVar16;\n            uStack_18 = uVar9 & 7;\n            *(uint *)(param_1 + 8) = uStack_18;\n            *piVar1 = *piVar1 + (uVar9 >> 3);\n            uVar14 = *(int *)(param_1 + 0x2d38 + uVar16 * 4) +\n                     (uVar14 - *(int *)(param_1 + 0x2cf4 + uVar16 * 4) >>\n                     (0x10U - (char)uVar16 & 0x1f));\n            uVar2 = *(ushort *)\n                     (param_1 + 0x397c +\n                     (-(uint)(uVar14 < *(uint *)(param_1 + 0x2cf4)) & uVar14) * 2);\n          }\n          if (uVar2 < 8) {\n            sVar4 = uVar2 + 2;\n          }\n          else {\n            iVar8 = (uVar2 >> 2) - 1;\n            sVar4 = (short)((uVar2 & 3 | 4) << ((byte)iVar8 & 0x1f)) + 2;\n            if (iVar8 != 0) {\n              uVar5 = FUN_0040a89d(piVar1);\n              sVar4 = sVar4 + (short)(CONCAT13(extraout_var_00,uVar5) >> (0x10 - (byte)iVar8 & 0x1f)\n                                     );\n              *piVar1 = *piVar1 + (uStack_18 + iVar8 >> 3);\n              *(uint *)(param_1 + 8) = uStack_18 + iVar8 & 7;\n            }\n          }\n          *(short *)(puVar18 + 1) = sVar4;\n        }\n      }\n      else {\n        uVar14 = uVar14 - 0x106;\n        if (uVar14 < 8) {\n          sStack_24 = uVar2 - 0x104;\n        }\n        else {\n          iVar8 = (uVar14 >> 2) - 1;\n          sStack_24 = (short)((uVar14 & 3 | 4) << ((byte)iVar8 & 0x1f)) + 2;\n          if (iVar8 != 0) {\n            uVar5 = FUN_0040a89d(piVar1);\n            sStack_24 = sStack_24 +\n                        (short)(CONCAT13(extraout_var,uVar5) >> (0x10 - (byte)iVar8 & 0x1f));\n            uStack_30 = uStack_30 + (uVar16 + iVar8 >> 3);\n            uVar16 = uVar16 + iVar8 & 7;\n            *piVar1 = uStack_30;\n            *(uint *)(param_1 + 8) = uVar16;\n          }\n        }\n        uVar5 = FUN_0040a89d(piVar1);\n        iVar8 = *(int *)(param_1 + 4000);\n        uVar14 = uVar5 & 0xfffe;\n        if (uVar14 < *(uint *)(param_1 + 0xf20 + iVar8 * 4)) {\n          uVar14 = uVar14 >> (0x10U - (char)iVar8 & 0x1f);\n          uVar16 = *(byte *)(uVar14 + 0xfa4 + param_1) + uVar16;\n          uStack_20 = (uVar16 >> 3) + uStack_30;\n          uStack_30 = uVar16 & 7;\n          *piVar1 = uStack_20;\n          *(uint *)(param_1 + 8) = uStack_30;\n          uVar2 = *(ushort *)(param_1 + 0x13a4 + uVar14 * 2);\n        }\n        else {\n          uVar9 = iVar8 + 1;\n          uVar16 = 0xf;\n          if (uVar9 < 0xf) {\n            puVar12 = (uint *)(param_1 + 0xf20 + uVar9 * 4);\n            do {\n              uVar16 = uVar9;\n              if (uVar14 < *puVar12) break;\n              uVar9 = uVar9 + 1;\n              puVar12 = puVar12 + 1;\n              uVar16 = 0xf;\n            } while (uVar9 < 0xf);\n          }\n          uVar9 = *(int *)(param_1 + 8) + uVar16;\n          uStack_30 = uVar9 & 7;\n          *(uint *)(param_1 + 8) = uStack_30;\n          *piVar1 = *piVar1 + (uVar9 >> 3);\n          uStack_20 = *piVar1;\n          uVar14 = *(int *)(param_1 + 0xf60 + uVar16 * 4) +\n                   (uVar14 - *(int *)(param_1 + 0xf1c + uVar16 * 4) >> (0x10U - (char)uVar16 & 0x1f)\n                   );\n          uVar2 = *(ushort *)\n                   (param_1 + 0x1ba4 + (-(uint)(uVar14 < *(uint *)(param_1 + 0xf1c)) & uVar14) * 2);\n        }\n        uVar14 = (uint)uVar2;\n        if (uVar14 < 4) {\n          uVar14 = uVar14 + 1;\n        }\n        else {\n          uVar16 = (uVar2 >> 1) - 1;\n          bVar11 = (byte)uVar16;\n          uVar14 = ((uVar14 & 1 | 2) << (bVar11 & 0x1f)) + 1;\n          if (uVar16 != 0) {\n            if (uVar16 < 4) {\n              uVar9 = FUN_00418934(piVar1);\n              uVar14 = (uVar9 >> (0x20 - bVar11 & 0x1f)) + uVar14;\n              *piVar1 = (uStack_30 + uVar16 >> 3) + uStack_20;\n              *(uint *)(param_1 + 8) = uStack_30 + uVar16 & 7;\n            }\n            else {\n              if (4 < uVar16) {\n                uVar9 = FUN_00418934(piVar1);\n                uVar14 = (uVar9 >> (0x24 - bVar11 & 0x1f)) * 0x10 + uVar14;\n                uVar16 = (uStack_30 - 4) + uVar16;\n                uStack_20 = uStack_20 + (uVar16 >> 3);\n                uStack_30 = uVar16 & 7;\n                *piVar1 = uStack_20;\n                *(uint *)(param_1 + 8) = uStack_30;\n              }\n              uVar5 = FUN_0040a89d(piVar1);\n              iVar8 = *(int *)(param_1 + 0x1e8c);\n              uVar16 = uVar5 & 0xfffe;\n              if (uVar16 < *(uint *)(param_1 + 0x1e0c + iVar8 * 4)) {\n                uVar16 = uVar16 >> (0x10U - (char)iVar8 & 0x1f);\n                uStack_30 = *(byte *)(uVar16 + 0x1e90 + param_1) + uStack_30;\n                *piVar1 = (uStack_30 >> 3) + uStack_20;\n                *(uint *)(param_1 + 8) = uStack_30 & 7;\n                uVar2 = *(ushort *)(param_1 + 0x2290 + uVar16 * 2);\n              }\n              else {\n                uVar10 = iVar8 + 1;\n                uVar9 = 0xf;\n                if (uVar10 < 0xf) {\n                  puVar12 = (uint *)(param_1 + 0x1e0c + uVar10 * 4);\n                  do {\n                    uVar9 = uVar10;\n                    if (uVar16 < *puVar12) break;\n                    uVar10 = uVar10 + 1;\n                    puVar12 = puVar12 + 1;\n                    uVar9 = 0xf;\n                  } while (uVar10 < 0xf);\n                }\n                uVar10 = *(int *)(param_1 + 8) + uVar9;\n                *(uint *)(param_1 + 8) = uVar10 & 7;\n                *piVar1 = *piVar1 + (uVar10 >> 3);\n                uVar16 = *(int *)(param_1 + 0x1e4c + uVar9 * 4) +\n                         (uVar16 - *(int *)(param_1 + 0x1e08 + uVar9 * 4) >>\n                         (0x10U - (char)uVar9 & 0x1f));\n                uVar2 = *(ushort *)\n                         (param_1 + 0x2a90 +\n                         (-(uint)(uVar16 < *(uint *)(param_1 + 0x1e08)) & uVar16) * 2);\n              }\n              uVar14 = uVar14 + uVar2;\n            }\n          }\n        }\n        sVar4 = sStack_24;\n        if (((0x100 < uVar14) && (sVar4 = sStack_24 + 1, 0x2000 < uVar14)) &&\n           (sVar4 = sStack_24 + 2, 0x40000 < uVar14)) {\n          sVar4 = sStack_24 + 3;\n        }\n        *puVar18 = 1;\n        *(short *)(puVar18 + 1) = sVar4;\n        puVar18[2] = uVar14;\n      }\n    } while( true );\n  }\nLAB_0041718b:\n  *(undefined1 *)(param_1 + 0x4ad0) = 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004177c0",
      "entry": "004177c0",
      "c": "\nvoid FUN_004177c0(int *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  if (param_1[1] != 0) {\n    iVar1 = 0;\n    do {\n      FUN_00417153(*(void **)*param_1,iVar1 + *param_1);\n      uVar2 = uVar2 + 1;\n      iVar1 = iVar1 + 0x4ae4;\n    } while (uVar2 < (uint)param_1[1]);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004177ef",
      "entry": "004177ef",
      "c": "\nuint __thiscall FUN_004177ef(void *this,int param_1)\n\n{\n  uint *puVar1;\n  undefined1 *puVar2;\n  uint3 uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  undefined1 extraout_var;\n  uint uVar7;\n  undefined1 extraout_var_00;\n  byte bVar8;\n  uint *puVar9;\n  uint uVar10;\n  ushort uVar11;\n  uint uVar12;\n  uint uVar13;\n  uint *puVar14;\n  uint uVar15;\n  uint local_2c;\n  uint local_28;\n  uint local_20;\n  uint local_1c;\n  uint local_18;\n  uint local_14;\n  char local_10 [16];\n  \n  puVar1 = (uint *)(param_1 + 4);\n  if (*(char *)(param_1 + 0x2c) == '\\0') {\n    *(undefined1 *)(param_1 + 0x2c) = 1;\n    uVar4 = FUN_004143bf(this,(int *)puVar1,param_1 + 0x18,(uint *)(param_1 + 0x30));\n    if ((char)uVar4 == '\\0') goto LAB_00417835;\n  }\n  iVar6 = *(int *)(param_1 + 0x18);\n  uVar4 = *(int *)(param_1 + 0x24) + iVar6;\n  if ((int)*puVar1 <= (int)uVar4) {\n    uVar5 = *(int *)(param_1 + 0x20) + -1 + iVar6;\n    uVar15 = *(int *)(param_1 + 0x4acc) - 0x10;\n    local_1c = uVar5;\n    if ((int)uVar15 <= (int)uVar5) {\n      local_1c = uVar15;\n    }\nLAB_00417874:\n    uVar12 = *(uint *)((int)this + 0x7c) & *(uint *)((int)this + 0xe6dc);\n    *(uint *)((int)this + 0x7c) = uVar12;\n    uVar4 = *puVar1;\n    if ((int)local_1c <= (int)uVar4) {\n      uVar13 = uVar5;\n      if (((int)uVar5 < (int)uVar4) ||\n         ((uVar4 == uVar5 &&\n          (uVar13 = *(uint *)(param_1 + 8), *(int *)(param_1 + 0x1c) <= (int)uVar13))))\n      goto LAB_004181e3;\n      if ((((int)uVar15 <= (int)uVar4) && (*(char *)(param_1 + 0x4ad2) == '\\0')) ||\n         (*(int *)(param_1 + 0x4acc) <= (int)uVar4)) {\n        *(undefined1 *)(param_1 + 0x4ad3) = 1;\nLAB_004181e3:\n        return CONCAT31((int3)(uVar13 >> 8),1);\n      }\n    }\n    if (((*(uint *)((int)this + 0x4b3c) - uVar12 & *(uint *)((int)this + 0xe6dc)) < 0x1004) &&\n       (*(uint *)((int)this + 0x4b3c) != uVar12)) {\n      FUN_00415202((undefined4 *)this);\n      uVar4 = *(uint *)((int)this + 0x4c5c);\n      if ((*(int *)((int)this + 0x4c4c) < (int)uVar4) ||\n         ((*(int *)((int)this + 0x4c4c) <= (int)uVar4 &&\n          (uVar4 = *(uint *)((int)this + 0x4c58), *(uint *)((int)this + 0x4c48) < uVar4))))\n      goto LAB_0041783c;\n    }\n    uVar3 = FUN_0040a89d((int *)puVar1);\n    iVar6 = *(int *)(param_1 + 0xb4);\n    uVar4 = uVar3 & 0xfffe;\n    if (uVar4 < *(uint *)(param_1 + 0x34 + iVar6 * 4)) {\n      uVar4 = uVar4 >> (0x10U - (char)iVar6 & 0x1f);\n      uVar12 = (uint)*(byte *)(uVar4 + 0xb8 + param_1) + *(int *)(param_1 + 8);\n      *puVar1 = *puVar1 + (uVar12 >> 3);\n      uVar12 = uVar12 & 7;\n      local_2c = *puVar1;\n      *(uint *)(param_1 + 8) = uVar12;\n      uVar11 = *(ushort *)(param_1 + 0x4b8 + uVar4 * 2);\n    }\n    else {\n      uVar13 = iVar6 + 1;\n      local_20 = 0xf;\n      uVar12 = local_20;\n      if (uVar13 < 0xf) {\n        puVar9 = (uint *)(param_1 + (iVar6 + 0xe) * 4);\n        do {\n          uVar12 = uVar13;\n          if (uVar4 < *puVar9) break;\n          uVar13 = uVar13 + 1;\n          puVar9 = puVar9 + 1;\n          uVar12 = local_20;\n        } while (uVar13 < 0xf);\n      }\n      local_20 = uVar12;\n      uVar13 = *(int *)(param_1 + 8) + local_20;\n      uVar12 = uVar13 & 7;\n      *puVar1 = *puVar1 + (uVar13 >> 3);\n      local_2c = *puVar1;\n      *(uint *)(param_1 + 8) = uVar12;\n      uVar4 = *(int *)(param_1 + 0x74 + local_20 * 4) +\n              (uVar4 - *(int *)(param_1 + 0x30 + local_20 * 4) >> (0x10U - (char)local_20 & 0x1f));\n      uVar11 = *(ushort *)\n                (param_1 + 0xcb8 + (-(uint)(uVar4 < *(uint *)(param_1 + 0x30)) & uVar4) * 2);\n    }\n    uVar4 = (uint)uVar11;\n    if (uVar4 < 0x100) {\n      *(char *)(*(int *)((int)this + 0x4b40) + *(int *)((int)this + 0x7c)) = (char)uVar11;\n      *(int *)((int)this + 0x7c) = *(int *)((int)this + 0x7c) + 1;\n      goto LAB_00417874;\n    }\n    if (uVar4 < 0x106) {\n      if (uVar4 == 0x100) {\n        uVar13 = FUN_00413f9d(this,(int *)puVar1,local_10);\n        if (((char)uVar13 == '\\0') ||\n           (uVar13 = FUN_0041253e(this,(undefined4 *)local_10), (char)uVar13 == '\\0'))\n        goto LAB_004181e3;\n        goto LAB_00417874;\n      }\n      if (uVar4 == 0x101) {\n        uVar13 = *(uint *)((int)this + 0x74);\n        if (uVar13 != 0) {\n          uVar4 = *(uint *)((int)this + 0x7c);\n          uVar12 = *(int *)((int)this + 0xe6d8) - 0x1004;\n          uVar7 = uVar4 - *(uint *)((int)this + 0x60);\n          if ((uVar7 < uVar12) && (uVar4 < uVar12)) {\n            puVar14 = (uint *)(*(int *)((int)this + 0x4b40) + uVar7);\n            puVar9 = (uint *)(*(int *)((int)this + 0x4b40) + uVar4);\n            *(uint *)((int)this + 0x7c) = uVar4 + uVar13;\n            if (7 < uVar13) {\n              if (*(uint *)((int)this + 0x60) < uVar13) {\n                uVar4 = uVar13 >> 3;\n                do {\n                  uVar13 = uVar13 - 8;\n                  *(char *)puVar9 = (char)*puVar14;\n                  *(undefined1 *)((int)puVar9 + 1) = *(undefined1 *)((int)puVar14 + 1);\n                  *(undefined1 *)((int)puVar9 + 2) = *(undefined1 *)((int)puVar14 + 2);\n                  *(undefined1 *)((int)puVar9 + 3) = *(undefined1 *)((int)puVar14 + 3);\n                  *(char *)(puVar9 + 1) = (char)puVar14[1];\n                  *(undefined1 *)((int)puVar9 + 5) = *(undefined1 *)((int)puVar14 + 5);\n                  *(undefined1 *)((int)puVar9 + 6) = *(undefined1 *)((int)puVar14 + 6);\n                  puVar2 = (undefined1 *)((int)puVar14 + 7);\n                  puVar14 = puVar14 + 2;\n                  *(undefined1 *)((int)puVar9 + 7) = *puVar2;\n                  puVar9 = puVar9 + 2;\n                  uVar4 = uVar4 - 1;\n                } while (uVar4 != 0);\n              }\n              else {\n                uVar4 = uVar13 >> 3;\n                do {\n                  FUN_00420320(puVar9,puVar14,8);\n                  puVar14 = puVar14 + 2;\n                  puVar9 = puVar9 + 2;\n                  uVar13 = uVar13 - 8;\n                  uVar4 = uVar4 - 1;\n                } while (uVar4 != 0);\n              }\n            }\n            goto LAB_00417daa;\n          }\n          uVar12 = *(uint *)((int)this + 0xe6dc);\n          do {\n            uVar12 = uVar12 & uVar7;\n            uVar7 = uVar7 + 1;\n            *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar4) =\n                 *(undefined1 *)(uVar12 + *(int *)((int)this + 0x4b40));\n            uVar12 = *(uint *)((int)this + 0xe6dc);\n            uVar4 = *(int *)((int)this + 0x7c) + 1U & uVar12;\n            *(uint *)((int)this + 0x7c) = uVar4;\n            uVar13 = uVar13 - 1;\n          } while (uVar13 != 0);\n        }\n        goto LAB_00417874;\n      }\n      puVar9 = (uint *)((int)this + (uVar4 - 0xea) * 4);\n      uVar12 = *puVar9;\n      for (iVar6 = uVar4 - 0x102; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar9 = puVar9[-1];\n        puVar9 = puVar9 + -1;\n      }\n      *(uint *)((int)this + 0x60) = uVar12;\n      uVar3 = FUN_0040a89d((int *)puVar1);\n      iVar6 = *(int *)(param_1 + 0x2d78);\n      uVar4 = uVar3 & 0xfffe;\n      if (uVar4 < *(uint *)(param_1 + 0x2cf8 + iVar6 * 4)) {\n        uVar4 = uVar4 >> (0x10U - (char)iVar6 & 0x1f);\n        local_14 = (uint)*(byte *)(uVar4 + 0x2d7c + param_1) + *(int *)(param_1 + 8);\n        *puVar1 = *puVar1 + (local_14 >> 3);\n        local_14 = local_14 & 7;\n        local_18 = *puVar1;\n        *(uint *)(param_1 + 8) = local_14;\n        uVar11 = *(ushort *)(param_1 + 0x317c + uVar4 * 2);\n      }\n      else {\n        uVar7 = iVar6 + 1;\n        uVar13 = 0xf;\n        if (uVar7 < 0xf) {\n          puVar9 = (uint *)(param_1 + (iVar6 + 0xb3f) * 4);\n          do {\n            uVar13 = uVar7;\n            if (uVar4 < *puVar9) break;\n            uVar7 = uVar7 + 1;\n            puVar9 = puVar9 + 1;\n            uVar13 = 0xf;\n          } while (uVar7 < 0xf);\n        }\n        uVar7 = *(int *)(param_1 + 8) + uVar13;\n        local_14 = uVar7 & 7;\n        *(uint *)(param_1 + 8) = local_14;\n        *puVar1 = *puVar1 + (uVar7 >> 3);\n        local_18 = *puVar1;\n        uVar4 = *(int *)(param_1 + 0x2d38 + uVar13 * 4) +\n                (uVar4 - *(int *)(param_1 + 0x2cf4 + uVar13 * 4) >> (0x10U - (char)uVar13 & 0x1f));\n        uVar11 = *(ushort *)\n                  (param_1 + 0x397c + (-(uint)(uVar4 < *(uint *)(param_1 + 0x2cf4)) & uVar4) * 2);\n      }\n      uVar13 = (uint)uVar11;\n      if (uVar13 < 8) {\n        uVar13 = uVar13 + 2;\n      }\n      else {\n        iVar6 = (uVar11 >> 2) - 1;\n        uVar13 = ((uVar13 & 3 | 4) << ((byte)iVar6 & 0x1f)) + 2;\n        if (iVar6 != 0) {\n          uVar3 = FUN_0040a89d((int *)puVar1);\n          uVar13 = uVar13 + (CONCAT13(extraout_var_00,uVar3) >> (0x10 - (byte)iVar6 & 0x1f));\n          *puVar1 = (local_14 + iVar6 >> 3) + local_18;\n          *(uint *)(param_1 + 8) = local_14 + iVar6 & 7;\n        }\n      }\n      uVar4 = *(uint *)((int)this + 0x7c);\n      uVar7 = *(int *)((int)this + 0xe6d8) - 0x1004;\n      uVar10 = uVar4 - uVar12;\n      *(uint *)((int)this + 0x74) = uVar13;\n      if ((uVar7 <= uVar10) || (uVar7 <= uVar4)) {\n        if (uVar13 != 0) {\n          uVar12 = *(uint *)((int)this + 0xe6dc);\n          do {\n            uVar12 = uVar12 & uVar10;\n            uVar10 = uVar10 + 1;\n            *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar4) =\n                 *(undefined1 *)(uVar12 + *(int *)((int)this + 0x4b40));\n            uVar12 = *(uint *)((int)this + 0xe6dc);\n            uVar4 = *(int *)((int)this + 0x7c) + 1U & uVar12;\n            *(uint *)((int)this + 0x7c) = uVar4;\n            uVar13 = uVar13 - 1;\n          } while (uVar13 != 0);\n        }\n        goto LAB_00417874;\n      }\n      puVar14 = (uint *)(*(int *)((int)this + 0x4b40) + uVar10);\n      puVar9 = (uint *)(*(int *)((int)this + 0x4b40) + uVar4);\n      *(uint *)((int)this + 0x7c) = uVar4 + uVar13;\n      if (7 < uVar13) {\n        if (uVar12 < uVar13) {\n          uVar4 = uVar13 >> 3;\n          do {\n            uVar13 = uVar13 - 8;\n            *(char *)puVar9 = (char)*puVar14;\n            *(undefined1 *)((int)puVar9 + 1) = *(undefined1 *)((int)puVar14 + 1);\n            *(undefined1 *)((int)puVar9 + 2) = *(undefined1 *)((int)puVar14 + 2);\n            *(undefined1 *)((int)puVar9 + 3) = *(undefined1 *)((int)puVar14 + 3);\n            *(char *)(puVar9 + 1) = (char)puVar14[1];\n            *(undefined1 *)((int)puVar9 + 5) = *(undefined1 *)((int)puVar14 + 5);\n            *(undefined1 *)((int)puVar9 + 6) = *(undefined1 *)((int)puVar14 + 6);\n            puVar2 = (undefined1 *)((int)puVar14 + 7);\n            puVar14 = puVar14 + 2;\n            *(undefined1 *)((int)puVar9 + 7) = *puVar2;\n            puVar9 = puVar9 + 2;\n            uVar4 = uVar4 - 1;\n          } while (uVar4 != 0);\n        }\n        else {\n          uVar4 = uVar13 >> 3;\n          do {\n            FUN_00420320(puVar9,puVar14,8);\n            puVar14 = puVar14 + 2;\n            puVar9 = puVar9 + 2;\n            uVar13 = uVar13 - 8;\n            uVar4 = uVar4 - 1;\n          } while (uVar4 != 0);\n        }\n      }\n    }\n    else {\n      uVar13 = uVar4 - 0x106;\n      if (uVar13 < 8) {\n        uVar4 = uVar4 - 0x104;\n      }\n      else {\n        iVar6 = (uVar13 >> 2) - 1;\n        uVar4 = ((uVar13 & 3 | 4) << ((byte)iVar6 & 0x1f)) + 2;\n        if (iVar6 != 0) {\n          uVar3 = FUN_0040a89d((int *)puVar1);\n          uVar4 = uVar4 + (CONCAT13(extraout_var,uVar3) >> (0x10 - (byte)iVar6 & 0x1f));\n          local_2c = local_2c + (uVar12 + iVar6 >> 3);\n          uVar12 = uVar12 + iVar6 & 7;\n          *puVar1 = local_2c;\n          *(uint *)(param_1 + 8) = uVar12;\n        }\n      }\n      uVar3 = FUN_0040a89d((int *)puVar1);\n      iVar6 = *(int *)(param_1 + 4000);\n      uVar13 = uVar3 & 0xfffe;\n      if (uVar13 < *(uint *)(param_1 + 0xf20 + iVar6 * 4)) {\n        uVar13 = uVar13 >> (0x10U - (char)iVar6 & 0x1f);\n        uVar12 = *(byte *)(uVar13 + 0xfa4 + param_1) + uVar12;\n        local_28 = local_2c + (uVar12 >> 3);\n        local_2c = uVar12 & 7;\n        *puVar1 = local_28;\n        *(uint *)(param_1 + 8) = local_2c;\n        uVar11 = *(ushort *)(param_1 + 0x13a4 + uVar13 * 2);\n      }\n      else {\n        uVar7 = iVar6 + 1;\n        local_20 = 0xf;\n        uVar12 = local_20;\n        if (uVar7 < 0xf) {\n          puVar9 = (uint *)(param_1 + (iVar6 + 0x3c9) * 4);\n          do {\n            uVar12 = uVar7;\n            if (uVar13 < *puVar9) break;\n            uVar7 = uVar7 + 1;\n            puVar9 = puVar9 + 1;\n            uVar12 = local_20;\n          } while (uVar7 < 0xf);\n        }\n        local_20 = uVar12;\n        uVar12 = *(int *)(param_1 + 8) + local_20;\n        local_2c = uVar12 & 7;\n        *puVar1 = *puVar1 + (uVar12 >> 3);\n        local_28 = *puVar1;\n        *(uint *)(param_1 + 8) = local_2c;\n        uVar12 = *(int *)(param_1 + 0xf60 + local_20 * 4) +\n                 (uVar13 - *(int *)(param_1 + 0xf1c + local_20 * 4) >>\n                 (0x10U - (char)local_20 & 0x1f));\n        uVar11 = *(ushort *)\n                  (param_1 + 0x1ba4 + (-(uint)(uVar12 < *(uint *)(param_1 + 0xf1c)) & uVar12) * 2);\n      }\n      uVar12 = (uint)uVar11;\n      if (uVar12 < 4) {\n        uVar12 = uVar12 + 1;\n      }\n      else {\n        uVar13 = (uVar11 >> 1) - 1;\n        bVar8 = (byte)uVar13;\n        uVar12 = ((uVar12 & 1 | 2) << (bVar8 & 0x1f)) + 1;\n        if (uVar13 != 0) {\n          if (uVar13 < 4) {\n            uVar7 = FUN_00418934((int *)puVar1);\n            uVar12 = (uVar7 >> (0x20 - bVar8 & 0x1f)) + uVar12;\n            *puVar1 = (local_2c + uVar13 >> 3) + local_28;\n            *(uint *)(param_1 + 8) = local_2c + uVar13 & 7;\n          }\n          else {\n            if (4 < uVar13) {\n              uVar13 = FUN_00418934((int *)puVar1);\n              local_2c = local_2c + ((uVar11 >> 1) - 5);\n              uVar12 = (uVar13 >> (0x24 - bVar8 & 0x1f)) * 0x10 + uVar12;\n              local_28 = local_28 + (local_2c >> 3);\n              local_2c = local_2c & 7;\n              *puVar1 = local_28;\n              *(uint *)(param_1 + 8) = local_2c;\n            }\n            uVar3 = FUN_0040a89d((int *)puVar1);\n            iVar6 = *(int *)(param_1 + 0x1e8c);\n            uVar13 = uVar3 & 0xfffe;\n            if (uVar13 < *(uint *)(param_1 + 0x1e0c + iVar6 * 4)) {\n              uVar13 = uVar13 >> (0x10U - (char)iVar6 & 0x1f);\n              local_2c = *(byte *)(uVar13 + 0x1e90 + param_1) + local_2c;\n              *puVar1 = (local_2c >> 3) + local_28;\n              *(uint *)(param_1 + 8) = local_2c & 7;\n              uVar11 = *(ushort *)(param_1 + 0x2290 + uVar13 * 2);\n            }\n            else {\n              uVar10 = iVar6 + 1;\n              local_20 = 0xf;\n              uVar7 = local_20;\n              if (uVar10 < 0xf) {\n                puVar9 = (uint *)(param_1 + (iVar6 + 0x784) * 4);\n                do {\n                  uVar7 = uVar10;\n                  if (uVar13 < *puVar9) break;\n                  uVar10 = uVar10 + 1;\n                  puVar9 = puVar9 + 1;\n                  uVar7 = local_20;\n                } while (uVar10 < 0xf);\n              }\n              local_20 = uVar7;\n              uVar7 = *(int *)(param_1 + 8) + local_20;\n              *puVar1 = *puVar1 + (uVar7 >> 3);\n              *(uint *)(param_1 + 8) = uVar7 & 7;\n              uVar13 = *(int *)(param_1 + 0x1e4c + local_20 * 4) +\n                       (uVar13 - *(int *)(param_1 + 0x1e08 + local_20 * 4) >>\n                       (0x10U - (char)local_20 & 0x1f));\n              uVar11 = *(ushort *)\n                        (param_1 + 0x2a90 +\n                        (-(uint)(uVar13 < *(uint *)(param_1 + 0x1e08)) & uVar13) * 2);\n            }\n            uVar12 = uVar12 + uVar11;\n          }\n        }\n      }\n      uVar13 = uVar4;\n      if (((0x100 < uVar12) && (uVar13 = uVar4 + 1, 0x2000 < uVar12)) &&\n         (uVar13 = uVar4 + 2, 0x40000 < uVar12)) {\n        uVar13 = uVar4 + 3;\n      }\n      *(undefined4 *)((int)this + 0x6c) = *(undefined4 *)((int)this + 0x68);\n      *(undefined4 *)((int)this + 0x68) = *(undefined4 *)((int)this + 100);\n      *(undefined4 *)((int)this + 100) = *(undefined4 *)((int)this + 0x60);\n      *(uint *)((int)this + 0x60) = uVar12;\n      uVar4 = *(uint *)((int)this + 0x7c);\n      uVar10 = uVar4 - uVar12;\n      uVar7 = *(int *)((int)this + 0xe6d8) - 0x1004;\n      *(uint *)((int)this + 0x74) = uVar13;\n      if ((uVar7 <= uVar10) || (uVar7 <= uVar4)) {\n        if (uVar13 != 0) {\n          uVar12 = *(uint *)((int)this + 0xe6dc);\n          do {\n            uVar12 = uVar12 & uVar10;\n            uVar10 = uVar10 + 1;\n            *(undefined1 *)(*(int *)((int)this + 0x4b40) + uVar4) =\n                 *(undefined1 *)(uVar12 + *(int *)((int)this + 0x4b40));\n            uVar12 = *(uint *)((int)this + 0xe6dc);\n            uVar4 = *(int *)((int)this + 0x7c) + 1U & uVar12;\n            *(uint *)((int)this + 0x7c) = uVar4;\n            uVar13 = uVar13 - 1;\n          } while (uVar13 != 0);\n        }\n        goto LAB_00417874;\n      }\n      puVar9 = (uint *)(*(int *)((int)this + 0x4b40) + uVar4);\n      puVar14 = (uint *)(*(int *)((int)this + 0x4b40) + uVar10);\n      *(uint *)((int)this + 0x7c) = uVar4 + uVar13;\n      if (7 < uVar13) {\n        if (uVar12 < uVar13) {\n          uVar4 = uVar13 >> 3;\n          do {\n            uVar13 = uVar13 - 8;\n            *(char *)puVar9 = (char)*puVar14;\n            *(undefined1 *)((int)puVar9 + 1) = *(undefined1 *)((int)puVar14 + 1);\n            *(undefined1 *)((int)puVar9 + 2) = *(undefined1 *)((int)puVar14 + 2);\n            *(undefined1 *)((int)puVar9 + 3) = *(undefined1 *)((int)puVar14 + 3);\n            *(char *)(puVar9 + 1) = (char)puVar14[1];\n            *(undefined1 *)((int)puVar9 + 5) = *(undefined1 *)((int)puVar14 + 5);\n            *(undefined1 *)((int)puVar9 + 6) = *(undefined1 *)((int)puVar14 + 6);\n            puVar2 = (undefined1 *)((int)puVar14 + 7);\n            puVar14 = puVar14 + 2;\n            *(undefined1 *)((int)puVar9 + 7) = *puVar2;\n            puVar9 = puVar9 + 2;\n            uVar4 = uVar4 - 1;\n          } while (uVar4 != 0);\n        }\n        else {\n          uVar4 = uVar13 >> 3;\n          do {\n            FUN_00420320(puVar9,puVar14,8);\n            puVar14 = puVar14 + 2;\n            puVar9 = puVar9 + 2;\n            uVar13 = uVar13 - 8;\n            uVar4 = uVar4 - 1;\n          } while (uVar4 != 0);\n        }\n      }\n    }\nLAB_00417daa:\n    if ((((uVar13 != 0) && (*(char *)puVar9 = (char)*puVar14, 1 < uVar13)) &&\n        ((*(undefined1 *)((int)puVar9 + 1) = *(undefined1 *)((int)puVar14 + 1), 2 < uVar13 &&\n         (((*(undefined1 *)((int)puVar9 + 2) = *(undefined1 *)((int)puVar14 + 2), 3 < uVar13 &&\n           (*(undefined1 *)((int)puVar9 + 3) = *(undefined1 *)((int)puVar14 + 3), 4 < uVar13)) &&\n          (*(char *)(puVar9 + 1) = (char)puVar14[1], 5 < uVar13)))))) &&\n       (*(undefined1 *)((int)puVar9 + 5) = *(undefined1 *)((int)puVar14 + 5), 6 < uVar13)) {\n      *(undefined1 *)((int)puVar9 + 6) = *(undefined1 *)((int)puVar14 + 6);\n    }\n    goto LAB_00417874;\n  }\nLAB_00417835:\n  *(undefined1 *)(param_1 + 0x4ad0) = 1;\nLAB_0041783c:\n  return uVar4 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_004181ef",
      "entry": "004181ef",
      "c": "\nvoid __fastcall FUN_004181ef(void *param_1)\n\n{\n  int *piVar1;\n  uint uVar2;\n  undefined2 uVar3;\n  ushort uVar4;\n  ushort uVar5;\n  undefined4 uVar6;\n  short *psVar7;\n  uint uVar8;\n  byte bVar9;\n  short sVar10;\n  ushort *puVar11;\n  uint uVar12;\n  uint uVar13;\n  uint *puVar14;\n  undefined4 *puVar15;\n  char *pcVar16;\n  ushort uVar17;\n  short sVar18;\n  ushort *puVar19;\n  ushort *puVar20;\n  ushort *local_20;\n  ushort *local_14;\n  char local_8;\n  byte bStack_7;\n  undefined2 uStack_6;\n  \n  puVar19 = (ushort *)0x0;\n  uVar6 = **(undefined4 **)((int)param_1 + 0x650);\n  uVar3 = *(undefined2 *)(*(undefined4 **)((int)param_1 + 0x650) + 1);\n  local_8 = (char)uVar6;\n  bStack_7 = (byte)((uint)uVar6 >> 8);\n  uStack_6 = (undefined2)((uint)uVar6 >> 0x10);\n  if ((bStack_7 < 0x1f) &&\n     (psVar7 = *(short **)(*(int *)((int)param_1 + 0x644) + 8), psVar7 != (short *)0x0)) {\n    if (*psVar7 == 1) {\n      puVar19 = (ushort *)(psVar7 + 1);\n      *(char *)((int)psVar7 + 3) = *(char *)((int)psVar7 + 3) + (*(byte *)((int)psVar7 + 3) < 0x20);\n    }\n    else {\n      puVar19 = *(ushort **)(psVar7 + 2);\n      if ((char)*puVar19 != local_8) {\n        do {\n          puVar11 = puVar19;\n          puVar19 = puVar11 + 3;\n        } while ((char)*puVar19 != local_8);\n        if (*(byte *)((int)puVar11 + 1) <= *(byte *)((int)puVar11 + 7)) {\n          uVar4 = puVar11[5];\n          uVar6 = *(undefined4 *)puVar19;\n          *(undefined4 *)puVar19 = *(undefined4 *)puVar11;\n          puVar11[5] = puVar11[2];\n          *(undefined4 *)puVar11 = uVar6;\n          puVar11[2] = uVar4;\n          puVar19 = puVar11;\n        }\n      }\n      if (*(byte *)((int)puVar19 + 1) < 0x73) {\n        *(byte *)((int)puVar19 + 1) = *(byte *)((int)puVar19 + 1) + 2;\n        psVar7[1] = psVar7[1] + 2;\n      }\n    }\n  }\n  if (*(int *)((int)param_1 + 0x65c) == 0) {\n    puVar19 = FUN_00412c88(param_1,'\\x01',puVar19);\n    *(ushort **)(*(int *)((int)param_1 + 0x650) + 2) = puVar19;\n    *(ushort **)((int)param_1 + 0x64c) = puVar19;\n    *(ushort **)((int)param_1 + 0x644) = puVar19;\n    if (puVar19 != (ushort *)0x0) {\n      return;\n    }\n  }\n  else {\n    **(char **)((int)param_1 + 0x4bdc) = local_8;\n    local_14 = (ushort *)(*(int *)((int)param_1 + 0x4bdc) + 1);\n    *(ushort **)((int)param_1 + 0x4bdc) = local_14;\n    if (local_14 < *(ushort **)((int)param_1 + 0x4be8)) {\n      puVar11 = (ushort *)CONCAT22(uVar3,uStack_6);\n      if (puVar11 == (ushort *)0x0) {\n        *(ushort **)(*(int *)((int)param_1 + 0x650) + 2) = local_14;\n        puVar19 = *(ushort **)((int)param_1 + 0x644);\n        puVar11 = puVar19;\n      }\n      else {\n        if ((puVar11 <= local_14) &&\n           (puVar11 = FUN_00412c88(param_1,'\\0',puVar19), puVar11 == (ushort *)0x0))\n        goto LAB_004182be;\n        piVar1 = (int *)((int)param_1 + 0x65c);\n        *piVar1 = *piVar1 + -1;\n        puVar19 = *(ushort **)((int)param_1 + 0x644);\n        if (*piVar1 == 0) {\n          *(int *)((int)param_1 + 0x4bdc) =\n               *(int *)((int)param_1 + 0x4bdc) -\n               (uint)(*(ushort **)((int)param_1 + 0x64c) != puVar19);\n          local_14 = puVar11;\n        }\n      }\n      uVar4 = puVar19[1];\n      uVar12 = (uint)*puVar19;\n      puVar20 = *(ushort **)((int)param_1 + 0x64c);\n      if (puVar20 != puVar19) {\n        do {\n          uVar5 = *puVar20;\n          uVar13 = (uint)uVar5;\n          if (uVar13 == 1) {\n            puVar15 = (undefined4 *)FUN_00412971((void *)((int)param_1 + 0x4a8c),1);\n            if (puVar15 == (undefined4 *)0x0) goto LAB_004182be;\n            *puVar15 = *(undefined4 *)(puVar20 + 1);\n            *(ushort *)(puVar15 + 1) = puVar20[3];\n            *(undefined4 **)(puVar20 + 2) = puVar15;\n            if (*(byte *)((int)puVar15 + 1) < 0x1e) {\n              bVar9 = *(byte *)((int)puVar15 + 1) * '\\x02';\n            }\n            else {\n              bVar9 = 0x78;\n            }\n            *(byte *)((int)puVar15 + 1) = bVar9;\n            uVar17 = (ushort)(3 < uVar12) + *(short *)((int)param_1 + 0x658) + (ushort)bVar9;\n          }\n          else {\n            if ((uVar5 & 1) == 0) {\n              puVar14 = FUN_00413083((void *)((int)param_1 + 0x4a8c),*(uint **)(puVar20 + 2),\n                                     (uint)(uVar5 >> 1));\n              *(uint **)(puVar20 + 2) = puVar14;\n              if (puVar14 == (uint *)0x0) goto LAB_004182be;\n            }\n            uVar17 = (ushort)((uint)puVar20[1] <= uVar13 << 3 && uVar13 << 2 <= uVar12) * 2 +\n                     (ushort)(uVar13 * 2 < uVar12) + puVar20[1];\n          }\n          local_20 = puVar20 + 2;\n          puVar20[1] = uVar17;\n          uVar2 = (uint)uVar17 + (((uint)uVar4 - (uint)bStack_7) - uVar12) + 1;\n          uVar8 = (uVar17 + 6) * (uint)bStack_7 * 2;\n          if (uVar8 < uVar2 * 6) {\n            sVar10 = 3;\n            sVar18 = ((uVar2 < uVar8) + 2) - (ushort)(uVar8 < uVar2 * 4);\n          }\n          else {\n            sVar10 = (-(ushort)(uVar8 < uVar2 * 9) - (ushort)(uVar8 < uVar2 * 0xf)) +\n                     (7 - (ushort)(uVar8 < uVar2 * 0xc));\n            sVar18 = sVar10;\n          }\n          puVar20[1] = sVar10 + uVar17;\n          pcVar16 = (char *)(uVar13 * 6 + *(int *)local_20);\n          *(ushort **)(pcVar16 + 2) = local_14;\n          *pcVar16 = local_8;\n          pcVar16[1] = (char)sVar18;\n          *puVar20 = uVar5 + 1;\n          puVar20 = *(ushort **)(puVar20 + 4);\n        } while (puVar20 != *(ushort **)((int)param_1 + 0x644));\n      }\n      *(ushort **)((int)param_1 + 0x644) = puVar11;\n      *(ushort **)((int)param_1 + 0x64c) = puVar11;\n      return;\n    }\n  }\nLAB_004182be:\n  FUN_00414894((int)param_1);\n  *(undefined1 *)((int)param_1 + 0xa6c) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004184f1",
      "entry": "004184f1",
      "c": "\nundefined2 * __thiscall FUN_004184f1(void *this,int param_1,int param_2,undefined4 *param_3)\n\n{\n  undefined2 *puVar1;\n  \n  puVar1 = (undefined2 *)FUN_0041293c((void *)(param_1 + 0x4a8c));\n  if (puVar1 != (undefined2 *)0x0) {\n    *puVar1 = 1;\n    *(undefined4 *)(puVar1 + 1) = *param_3;\n    puVar1[3] = *(undefined2 *)(param_3 + 1);\n    *(void **)(puVar1 + 4) = this;\n    *(undefined2 **)(param_2 + 2) = puVar1;\n  }\n  return puVar1;\n}\n\n"
    },
    {
      "name": "FUN_00418532",
      "entry": "00418532",
      "c": "\nvoid __thiscall FUN_00418532(void *this,int param_1)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  byte bVar3;\n  byte bVar4;\n  byte bVar5;\n  ushort uVar6;\n  uint uVar7;\n  int iVar8;\n  bool bVar9;\n  \n  pbVar1 = (byte *)((int)this + 2);\n  bVar2 = *(byte *)(**(byte **)(param_1 + 0x650) + 0x96c + param_1);\n  *(byte *)(param_1 + 0xa6e) = bVar2;\n  bVar3 = *(byte *)(*pbVar1 + 0x96c + param_1);\n  bVar4 = *(byte *)((int)this + 3);\n  bVar5 = *(byte *)(**(ushort **)((int)this + 8) + 0x86b + param_1);\n  *(uint *)(param_1 + 0x4a78) = *(uint *)(param_1 + 0x4a78) >> 0xe;\n  iVar8 = bVar5 + 0x4f8 + ((uint)bVar3 + (uint)bVar4 * 0x20) * 2 +\n          (*(int *)(param_1 + 0x664) >> 0x1a & 0x20U) + (uint)bVar2 +\n          (uint)*(byte *)(param_1 + 0xa6d);\n  uVar7 = (uint)*(ushort *)(param_1 + iVar8 * 2);\n  bVar9 = uVar7 <= (uint)(*(int *)(param_1 + 0x4a74) - *(int *)(param_1 + 0x4a70)) /\n                   *(uint *)(param_1 + 0x4a78);\n  if (bVar9) {\n    *(uint *)(param_1 + 0x4a7c) = uVar7;\n    uVar6 = *(ushort *)(param_1 + iVar8 * 2);\n    *(ushort *)(param_1 + iVar8 * 2) = uVar6 - (short)(uVar6 + 0x20 >> 7);\n    *(undefined4 *)(param_1 + 0x4a80) = 0x4000;\n    uVar6 = *(ushort *)(param_1 + iVar8 * 2);\n    *(undefined4 *)(param_1 + 0x654) = 1;\n    *(uint *)(param_1 + 0x658) = (uint)(byte)(&DAT_00434430)[uVar6 >> 10];\n    *(undefined1 *)(*pbVar1 + 0x66c + param_1) = *(undefined1 *)(param_1 + 0xa6c);\n    *(undefined4 *)(param_1 + 0x650) = 0;\n  }\n  else {\n    *(byte **)(param_1 + 0x650) = pbVar1;\n    *(char *)((int)this + 3) = *(char *)((int)this + 3) + (*(byte *)((int)this + 3) < 0x80);\n    *(undefined4 *)(param_1 + 0x4a7c) = 0;\n    *(uint *)(param_1 + 0x4a80) = (uint)*(ushort *)(param_1 + iVar8 * 2);\n    uVar6 = *(ushort *)(param_1 + iVar8 * 2);\n    *(ushort *)(param_1 + iVar8 * 2) = (uVar6 - (short)(uVar6 + 0x20 >> 7)) + 0x80;\n    *(int *)(param_1 + 0x664) = *(int *)(param_1 + 0x664) + 1;\n  }\n  *(bool *)(param_1 + 0xa6d) = !bVar9;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00418661",
      "entry": "00418661",
      "c": "\nuint __thiscall FUN_00418661(void *this,int param_1)\n\n{\n  ushort uVar1;\n  uint uVar2;\n  bool bVar3;\n  ulonglong uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  \n  *(uint *)(param_1 + 0x4a84) = (uint)*(ushort *)((int)this + 2);\n  uVar4 = (ulonglong)*(uint *)(param_1 + 0x4a78) / (ulonglong)*(uint *)(param_1 + 0x4a84);\n  pbVar9 = *(byte **)((int)this + 4);\n  uVar5 = (uint)((uint)(*(int *)(param_1 + 0x4a74) - *(int *)(param_1 + 0x4a70)) / uVar4);\n  *(int *)(param_1 + 0x4a78) = (int)uVar4;\n  uVar2 = *(uint *)(param_1 + 0x4a84);\n  uVar6 = uVar5;\n  if ((int)uVar5 < (int)uVar2) {\n    uVar7 = (uint)pbVar9[1];\n    if ((int)uVar5 < (int)uVar7) {\n      *(uint *)(param_1 + 0x4a80) = uVar7;\n      *(byte **)(param_1 + 0x650) = pbVar9;\n      bVar3 = uVar2 < uVar7 * 2;\n      *(bool *)(param_1 + 0xa6d) = bVar3;\n      *(int *)(param_1 + 0x664) = *(int *)(param_1 + 0x664) + (uint)bVar3;\n      uVar7 = uVar7 + 4;\n      pbVar9[1] = (byte)uVar7;\n      *(short *)((int)this + 2) = *(short *)((int)this + 2) + 4;\n      if (0x7c < uVar7) {\n        uVar7 = FUN_00418a0c(this,param_1);\n      }\n      *(undefined4 *)(param_1 + 0x4a7c) = 0;\n    }\n    else {\n      uVar6 = *(uint *)(param_1 + 0x650);\n      if (uVar6 == 0) goto LAB_004187b1;\n      *(undefined1 *)(param_1 + 0xa6d) = 0;\n                    /* WARNING: Load size is inaccurate */\n      iVar8 = *this - 1;\n      do {\n        pbVar10 = pbVar9 + 6;\n        uVar7 = uVar7 + pbVar9[7];\n        if ((int)uVar5 < (int)uVar7) {\n          *(uint *)(param_1 + 0x4a80) = uVar7;\n          *(uint *)(param_1 + 0x4a7c) = uVar7 - pbVar9[7];\n          uVar7 = FUN_00418bc9(this,param_1,(undefined4 *)pbVar10);\n          goto LAB_004186f8;\n        }\n        iVar8 = iVar8 + -1;\n        pbVar9 = pbVar10;\n      } while (iVar8 != 0);\n      *(undefined1 *)(param_1 + 0xa6e) =\n           *(undefined1 *)(**(byte **)(param_1 + 0x650) + 0x96c + param_1);\n      *(uint *)(param_1 + 0x4a7c) = uVar7;\n      *(undefined1 *)(*pbVar10 + 0x66c + param_1) = *(undefined1 *)(param_1 + 0xa6c);\n                    /* WARNING: Load size is inaccurate */\n      uVar1 = *this;\n      *(undefined4 *)(param_1 + 0x650) = 0;\n      *(uint *)(param_1 + 0x654) = (uint)uVar1;\n      iVar8 = uVar1 - 1;\n      do {\n        pbVar10 = pbVar10 + -6;\n        *(undefined1 *)(*pbVar10 + 0x66c + param_1) = *(undefined1 *)(param_1 + 0xa6c);\n        iVar8 = iVar8 + -1;\n      } while (iVar8 != 0);\n      uVar7 = *(uint *)(param_1 + 0x4a84);\n      *(uint *)(param_1 + 0x4a80) = uVar7;\n    }\nLAB_004186f8:\n    uVar6 = CONCAT31((int3)(uVar7 >> 8),1);\n  }\n  else {\nLAB_004187b1:\n    uVar6 = uVar6 & 0xffffff00;\n  }\n  return uVar6;\n}\n\n"
    },
    {
      "name": "FUN_004187ba",
      "entry": "004187ba",
      "c": "\nuint __thiscall FUN_004187ba(void *this,int param_1)\n\n{\n  ulonglong uVar1;\n  undefined1 *puVar2;\n  undefined1 *puVar3;\n  ushort *puVar4;\n  ushort *puVar5;\n  uint uVar6;\n  ushort **ppuVar7;\n  int iVar8;\n  int iVar9;\n  ushort **local_408;\n  ushort *local_404;\n  ushort *local_400 [256];\n  \n                    /* WARNING: Load size is inaccurate */\n  iVar9 = (uint)*this - *(int *)(param_1 + 0x654);\n  local_404 = FUN_00418978(this,param_1,iVar9);\n  local_408 = local_400;\n  puVar4 = (ushort *)(*(int *)((int)this + 4) + -6);\n  iVar8 = 0;\n  do {\n    do {\n      puVar5 = puVar4;\n      puVar4 = puVar5 + 3;\n    } while (*(char *)((byte)*puVar4 + 0x66c + param_1) == *(char *)(param_1 + 0xa6c));\n    iVar8 = iVar8 + (uint)*(byte *)((int)puVar5 + 7);\n    puVar3 = (undefined1 *)register0x00000010;\n    if (&stack0x00000000 <= local_408) goto LAB_00418925;\n    *local_408 = puVar4;\n    local_408 = local_408 + 1;\n    iVar9 = iVar9 + -1;\n  } while (iVar9 != 0);\n  *(int *)(param_1 + 0x4a84) = *(int *)(param_1 + 0x4a84) + iVar8;\n  uVar1 = (ulonglong)*(uint *)(param_1 + 0x4a78) / (ulonglong)*(uint *)(param_1 + 0x4a84);\n  puVar2 = (undefined1 *)((uint)(*(int *)(param_1 + 0x4a74) - *(int *)(param_1 + 0x4a70)) / uVar1);\n  *(int *)(param_1 + 0x4a78) = (int)uVar1;\n  puVar3 = puVar2;\n  if ((int)puVar2 < *(int *)(param_1 + 0x4a84)) {\n    ppuVar7 = local_400;\n    if ((int)puVar2 < iVar8) {\n      puVar4 = local_400[0];\n      for (uVar6 = (uint)*(byte *)((int)local_400[0] + 1); (int)uVar6 <= (int)puVar2;\n          uVar6 = uVar6 + *(byte *)((int)puVar4 + 1)) {\n        ppuVar7 = ppuVar7 + 1;\n        puVar3 = (undefined1 *)register0x00000010;\n        if (&stack0x00000000 <= ppuVar7) goto LAB_00418925;\n        puVar4 = *ppuVar7;\n      }\n      *(uint *)(param_1 + 0x4a80) = uVar6;\n      *(uint *)(param_1 + 0x4a7c) = uVar6 - *(byte *)((int)puVar4 + 1);\n      FUN_00418c5e((short *)local_404);\n      uVar6 = FUN_00418c24(this,param_1,(int)puVar4);\n    }\n    else {\n      *(int *)(param_1 + 0x4a7c) = iVar8;\n      *(int *)(param_1 + 0x4a80) = *(int *)(param_1 + 0x4a84);\n                    /* WARNING: Load size is inaccurate */\n      iVar8 = (uint)*this - *(int *)(param_1 + 0x654);\n      ppuVar7 = &local_404;\n      do {\n        ppuVar7 = ppuVar7 + 1;\n        puVar3 = (undefined1 *)register0x00000010;\n        if (&stack0x00000000 <= ppuVar7) goto LAB_00418925;\n        *(undefined1 *)((byte)**ppuVar7 + 0x66c + param_1) = *(undefined1 *)(param_1 + 0xa6c);\n        iVar8 = iVar8 + -1;\n      } while (iVar8 != 0);\n      *local_404 = *local_404 + *(short *)(param_1 + 0x4a84);\n                    /* WARNING: Load size is inaccurate */\n      uVar6 = (uint)*this;\n      *(uint *)(param_1 + 0x654) = uVar6;\n    }\n    uVar6 = CONCAT31((int3)(uVar6 >> 8),1);\n  }\n  else {\nLAB_00418925:\n    uVar6 = (uint)puVar3 & 0xffffff00;\n  }\n  return uVar6;\n}\n\n"
    },
    {
      "name": "FUN_00418934",
      "entry": "00418934",
      "c": "\nuint __fastcall FUN_00418934(int *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = param_1[3];\n  iVar2 = *param_1;\n  return CONCAT31(CONCAT21(CONCAT11(*(undefined1 *)(iVar1 + iVar2),\n                                    *(undefined1 *)(iVar1 + 1 + iVar2)),\n                           *(undefined1 *)(iVar1 + 2 + iVar2)),*(undefined1 *)(iVar1 + 3 + iVar2))\n         << ((byte)param_1[1] & 0x1f) |\n         (uint)(*(byte *)(iVar1 + 4 + iVar2) >> (8U - (char)param_1[1] & 0x1f));\n}\n\n"
    },
    {
      "name": "FUN_00418978",
      "entry": "00418978",
      "c": "\nushort * __thiscall FUN_00418978(void *this,int param_1,int param_2)\n\n{\n  ushort uVar1;\n  int iVar2;\n  ushort *puVar3;\n  \n                    /* WARNING: Load size is inaccurate */\n  uVar1 = *this;\n  if (uVar1 == 0x100) {\n    puVar3 = (ushort *)(param_1 + 0x640);\n    iVar2 = 1;\n  }\n  else {\n    puVar3 = (ushort *)\n             (param_1 +\n             ((uint)(param_2 < (int)((uint)**(ushort **)((int)this + 8) - (uint)uVar1)) +\n              ((uint)(param_2 < *(int *)(param_1 + 0x654)) +\n              (uint)*(byte *)(param_1 + 0x76b + param_2) * 4) * 4 +\n              (-(uint)((uint)*(ushort *)((int)this + 2) < (uint)uVar1 * 0xb) & 2) +\n             (uint)*(byte *)(param_1 + 0xa6e)) * 4);\n    uVar1 = *puVar3 >> ((byte)puVar3[1] & 0x1f);\n    *puVar3 = *puVar3 - uVar1;\n    iVar2 = (uint)(uVar1 == 0) + (uint)uVar1;\n  }\n  *(int *)(param_1 + 0x4a84) = iVar2;\n  return puVar3;\n}\n\n"
    },
    {
      "name": "FUN_00418a0c",
      "entry": "00418a0c",
      "c": "\nvoid __thiscall FUN_00418a0c(void *this,int param_1)\n\n{\n  ushort *puVar1;\n  byte *pbVar2;\n  undefined2 uVar3;\n  ushort uVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint *puVar8;\n  byte bVar9;\n  undefined4 *puVar10;\n  char *pcVar11;\n  uint uVar12;\n  int iVar13;\n  int iVar14;\n  undefined4 *puVar15;\n  undefined4 *puVar16;\n  undefined4 *puVar17;\n  undefined4 local_10;\n  \n  puVar16 = *(undefined4 **)(param_1 + 0x650);\n                    /* WARNING: Load size is inaccurate */\n  uVar6 = (uint)*this;\n  iVar14 = uVar6 - 1;\n  puVar17 = *(undefined4 **)((int)this + 4);\n  puVar10 = puVar16;\n  if (puVar16 != puVar17) {\n    do {\n      puVar15 = (undefined4 *)((int)puVar10 + -6);\n      uVar5 = *puVar16;\n      uVar3 = *(undefined2 *)(puVar16 + 1);\n      *puVar16 = *puVar15;\n      *(undefined2 *)(puVar16 + 1) = *(undefined2 *)((int)puVar10 + -2);\n      puVar16 = (undefined4 *)((int)puVar16 + -6);\n      *puVar15 = uVar5;\n      *(undefined2 *)((int)puVar10 + -2) = uVar3;\n      puVar17 = *(undefined4 **)((int)this + 4);\n      puVar10 = puVar15;\n    } while (puVar16 != puVar17);\n  }\n  *(char *)((int)puVar17 + 1) = *(char *)((int)puVar17 + 1) + '\\x04';\n  puVar1 = (ushort *)((int)this + 2);\n  uVar4 = *puVar1;\n  *puVar1 = uVar4 + 4;\n  iVar13 = (uint)(ushort)(uVar4 + 4) - (uint)*(byte *)((int)puVar16 + 1);\n  uVar12 = (uint)(*(int *)(param_1 + 0x65c) != 0);\n  uVar7 = uVar12 + *(byte *)((int)puVar16 + 1) >> 1;\n  *(char *)((int)puVar16 + 1) = (char)uVar7;\n  *(short *)((int)this + 2) = (short)uVar7;\n  do {\n    puVar17 = (undefined4 *)((int)puVar16 + 6);\n    pbVar2 = (byte *)((int)puVar16 + 7);\n    iVar13 = iVar13 - (uint)*pbVar2;\n    uVar7 = *pbVar2 + uVar12 >> 1;\n    *pbVar2 = (byte)uVar7;\n    *(short *)((int)this + 2) = *(short *)((int)this + 2) + (short)uVar7;\n    bVar9 = *pbVar2;\n    if (*(byte *)((int)puVar16 + 1) < bVar9) {\n      uVar5 = *puVar17;\n      uVar3 = *(undefined2 *)((int)puVar16 + 10);\n      puVar10 = puVar17;\n      do {\n        puVar15 = puVar10;\n        *puVar15 = *(undefined4 *)((int)puVar15 + -6);\n        *(undefined2 *)(puVar15 + 1) = *(undefined2 *)((int)puVar15 + -2);\n        puVar10 = (undefined4 *)((int)puVar15 + -6);\n        if (puVar10 == *(undefined4 **)((int)this + 4)) break;\n      } while (*(byte *)((int)puVar15 + -0xb) < (byte)((uint)uVar5 >> 8));\n      *puVar10 = uVar5;\n      *(undefined2 *)((int)puVar15 + -2) = uVar3;\n      bVar9 = *(byte *)((int)puVar16 + 7);\n    }\n    pcVar11 = (char *)((int)puVar16 + 7);\n    iVar14 = iVar14 + -1;\n    puVar16 = puVar17;\n    if (iVar14 == 0) {\n      iVar14 = 0;\n      if (bVar9 == 0) {\n        do {\n          pcVar11 = pcVar11 + -6;\n          iVar14 = iVar14 + 1;\n        } while (*pcVar11 == '\\0');\n                    /* WARNING: Load size is inaccurate */\n        *(short *)this = *this - (short)iVar14;\n        iVar13 = iVar13 + iVar14;\n                    /* WARNING: Load size is inaccurate */\n        if (*this == 1) {\n          puVar16 = *(undefined4 **)((int)this + 4);\n          local_10 = *puVar16;\n          uVar3 = *(undefined2 *)(puVar16 + 1);\n          do {\n            bVar9 = (byte)((uint)local_10 >> 8);\n            iVar13 = iVar13 >> 1;\n            local_10._0_2_ = CONCAT11(bVar9 - (bVar9 >> 1),(undefined1)local_10);\n          } while (1 < iVar13);\n          uVar6 = (uint)*(byte *)((uVar6 + 1 >> 1) + 0x4ab5 + param_1);\n          *puVar16 = *(undefined4 *)(param_1 + 0x4b44 + uVar6 * 4);\n          *(undefined4 **)(param_1 + 0x4b44 + uVar6 * 4) = puVar16;\n          *(ushort **)(param_1 + 0x650) = puVar1;\n          *(undefined4 *)puVar1 = local_10;\n          *(undefined2 *)((int)this + 6) = uVar3;\n          return;\n        }\n      }\n                    /* WARNING: Load size is inaccurate */\n      *(short *)((int)this + 2) = *(short *)((int)this + 2) + ((short)iVar13 - (short)(iVar13 >> 1))\n      ;\n      uVar12 = uVar6 + 1 >> 1;\n      uVar6 = *this + 1 >> 1;\n      if (uVar12 != uVar6) {\n        puVar8 = FUN_00414ac5((void *)(param_1 + 0x4a8c),*(uint **)((int)this + 4),uVar12,uVar6);\n        *(uint **)((int)this + 4) = puVar8;\n      }\n      *(undefined4 *)(param_1 + 0x650) = *(undefined4 *)((int)this + 4);\n      return;\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00418bc9",
      "entry": "00418bc9",
      "c": "\nvoid __thiscall FUN_00418bc9(void *this,int param_1,undefined4 *param_2)\n\n{\n  undefined4 *puVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  \n  *(undefined4 **)(param_1 + 0x650) = param_2;\n  *(char *)((int)param_2 + 1) = *(char *)((int)param_2 + 1) + '\\x04';\n  *(short *)((int)this + 2) = *(short *)((int)this + 2) + 4;\n  if (*(byte *)((int)param_2 + -5) < *(byte *)((int)param_2 + 1)) {\n    uVar3 = *param_2;\n    uVar2 = *(undefined2 *)(param_2 + 1);\n    puVar1 = (undefined4 *)((int)param_2 + -6);\n    *param_2 = *puVar1;\n    *(undefined2 *)(param_2 + 1) = *(undefined2 *)((int)param_2 + -2);\n    *puVar1 = uVar3;\n    *(undefined2 *)((int)param_2 + -2) = uVar2;\n    *(undefined4 **)(param_1 + 0x650) = puVar1;\n    if (0x7c < *(byte *)((int)param_2 + -5)) {\n      FUN_00418a0c(this,param_1);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00418c24",
      "entry": "00418c24",
      "c": "\nvoid __thiscall FUN_00418c24(void *this,int param_1,int param_2)\n\n{\n  *(int *)(param_1 + 0x650) = param_2;\n  *(char *)(param_2 + 1) = *(char *)(param_2 + 1) + '\\x04';\n  *(short *)((int)this + 2) = *(short *)((int)this + 2) + 4;\n  if (0x7c < *(byte *)(param_2 + 1)) {\n    FUN_00418a0c(this,param_1);\n  }\n  *(char *)(param_1 + 0xa6c) = *(char *)(param_1 + 0xa6c) + '\\x01';\n  *(undefined4 *)(param_1 + 0x664) = *(undefined4 *)(param_1 + 0x668);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00418c5e",
      "entry": "00418c5e",
      "c": "\nvoid __fastcall FUN_00418c5e(short *param_1)\n\n{\n  char *pcVar1;\n  byte bVar2;\n  \n  bVar2 = *(byte *)(param_1 + 1);\n  if (bVar2 < 7) {\n    pcVar1 = (char *)((int)param_1 + 3);\n    *pcVar1 = *pcVar1 + -1;\n    if (*pcVar1 == '\\0') {\n      *param_1 = *param_1 << 1;\n      *(char *)((int)param_1 + 3) = '\\x03' << (bVar2 & 0x1f);\n      *(byte *)(param_1 + 1) = bVar2 + 1;\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00418c80",
      "entry": "00418c80",
      "c": "\nchar * __fastcall FUN_00418c80(int param_1)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = *(char **)(param_1 + 4);\n  if (pcVar1 == (char *)0x0) {\n    pcVar1 = \"Unknown exception\";\n  }\n  return pcVar1;\n}\n\n"
    },
    {
      "name": "FUN_00418c8d",
      "entry": "00418c8d",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nuint FUN_00418c8d(int *param_1,void *param_2,undefined4 param_3,short param_4)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  code *pcVar5;\n  undefined4 uVar6;\n  bool bVar7;\n  bool bVar8;\n  char cVar9;\n  uint uVar10;\n  int iVar11;\n  undefined4 uVar12;\n  int iVar13;\n  byte bVar14;\n  undefined4 extraout_EDX;\n  int iVar15;\n  wchar_t awStack_2000 [2048];\n  wchar_t awStack_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x418c97;\n  iVar3 = param_1[0x87d];\n  iVar4 = param_1[0x875];\n  uVar10 = (iVar3 == 3) - 1 & 0xffffdcb0;\n  iVar11 = ((iVar3 == 3) - 1 & 0xffffdcb0) + 0x5658;\n  iVar15 = ((iVar3 == 3) - 1 & 0xffffdcb0) + 0x5681;\n  if (((iVar3 != 2) && (iVar3 != 3)) || (bVar7 = true, *(char *)(iVar15 + (int)param_1) == '\\0')) {\n    bVar7 = false;\n  }\n  if ((((param_2 != (void *)0x0) && (bVar7)) &&\n      ((param_1[0x1b32] == 3 ||\n       ((0x13 < *(uint *)(((iVar3 == 3) - 1 & 0xffffdcb0) + 0x4604 + (int)param_1) &&\n        (*(int *)(((iVar3 == 3) - 1 & 0xffffdcb0) + 0x565c + (int)param_1) != -1)))))) &&\n     (cVar9 = FUN_0040aaea((void *)((int)param_2 + 0x98),(int *)(iVar11 + (int)param_1),\n                           (ulong *)(-(uint)(*(char *)(((iVar3 == 3) - 1 & 0xffffdcb0) + 0x56b2 +\n                                                      (int)param_1) != '\\0') &\n                                    ((iVar3 == 3) - 1 & 0xffffdcb0) + 0x56b3 + (int)param_1)),\n     cVar9 == '\\0')) {\n    FUN_00402021(5,(int)param_1 + 0x32,((iVar3 == 3) - 1 & 0xffffdcb0) + 0x4610 + (int)param_1);\n  }\n  iVar13 = param_1[0x1b35];\n  pcVar5 = *(code **)(*param_1 + 0x14);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  (*pcVar5)();\n  if (param_2 != (void *)0x0) {\n    puVar1 = (uint *)((int)param_2 + 0x80);\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + *(uint *)((int)param_2 + 0x88);\n    *(int *)((int)param_2 + 0x84) =\n         *(int *)((int)param_2 + 0x84) + *(int *)((int)param_2 + 0x8c) +\n         (uint)CARRY4(uVar2,*(uint *)((int)param_2 + 0x88));\n  }\n  pcVar5 = *(code **)(*param_1 + 8);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  (*pcVar5)();\n  FUN_00410602(awStack_2000,(int)param_1 + 0x32,0x800);\n  FUN_0040c0c5(awStack_2000,0x800,*(char *)((int)param_1 + 0x6cd2) == '\\0');\n  bVar8 = false;\n  bVar14 = -(*(char *)(iVar4 + 0x71a1) != '\\0') & 4;\n  do {\n    pcVar5 = *(code **)(*param_1 + 4);\n    (*(code *)PTR_guard_check_icall_00433278)(awStack_2000,bVar14);\n    cVar9 = (*pcVar5)();\n    if (cVar9 != '\\0') {\nLAB_00418f11:\n      FUN_00411b66(param_4 != 0x54,(wchar_t *)((int)param_1 + 0x32));\n      FUN_004018c3((int)param_1);\n      if ((char)param_1[0x1b35] != (char)iVar13) {\n        FUN_0040138b(0x39,(wchar_t *)((int)param_1 + 0x32));\n        thunk_FUN_00406e47(&DAT_00441098,(void *)0x2);\n      }\n      if (bVar7) {\n        iVar13 = FUN_00403f4a(param_1,iVar3);\n      }\n      else {\n        iVar13 = FUN_00403b2d(param_1);\n      }\n      if (param_1[0x87d] == 2) {\n        FUN_00402112((int)param_1);\n        iVar13 = *param_1;\n        (*(code *)PTR_guard_check_icall_00433278)\n                  (param_1[0x1b30] - param_1[0xcbc],\n                   (param_1[0x1b31] - param_1[0xcbd]) -\n                   (uint)((uint)param_1[0x1b30] < (uint)param_1[0xcbc]),0);\n        iVar13 = (**(code **)(iVar13 + 0x10))();\n      }\n      if (param_2 != (void *)0x0) {\n        if (iVar3 == 5) {\n          *(undefined1 *)((int)param_2 + 0x57) = 0;\n        }\n        else {\n          *(undefined1 *)((int)param_2 + 0x57) = *(undefined1 *)(iVar15 + (int)param_1);\n          uVar12 = *(undefined4 *)(uVar10 + 0x5640 + (int)param_1);\n          uVar6 = *(undefined4 *)(uVar10 + 0x5644 + (int)param_1);\n          *(undefined4 *)((int)param_2 + 0x28) = uVar12;\n          *(undefined4 *)((int)param_2 + 0x2c) = uVar6;\n          *(undefined4 *)((int)param_2 + 0x20) = uVar12;\n          *(undefined4 *)((int)param_2 + 0x24) = uVar6;\n        }\n        FUN_0040cf3d(param_2,param_1);\n        *(undefined4 *)((int)param_2 + 0x70) = 0;\n        *(undefined4 *)((int)param_2 + 0x74) = 0;\n        iVar13 = FUN_0040ab1a((void *)((int)param_2 + 0x98),*(int *)(iVar11 + (int)param_1),\n                              *(uint *)(iVar4 + 0x92e0));\n      }\n      return CONCAT31((int3)((uint)iVar13 >> 8),1);\n    }\n    if (param_2 != (void *)0x0) {\n      *(undefined4 *)((int)param_2 + 0x90) = 0;\n      *(undefined4 *)((int)param_2 + 0x94) = 0;\n    }\n    if (!bVar8) {\n      FUN_00410602(awStack_1000,(int)param_1 + 0x32,0x800);\n      FUN_0040c0c5(awStack_1000,0x800,'\\x01');\n      bVar8 = true;\n      pcVar5 = *(code **)(*param_1 + 4);\n      (*(code *)PTR_guard_check_icall_00433278)(awStack_1000,bVar14);\n      cVar9 = (*pcVar5)();\n      if (cVar9 != '\\0') {\n        FUN_00410602(awStack_2000,(int)awStack_1000,0x800);\n        goto LAB_00418f11;\n      }\n    }\n    if ((*(char *)(iVar4 + 0x7188) != '\\0') ||\n       (uVar12 = thunk_FUN_0041dca1(awStack_2000,0x800), (char)uVar12 == '\\0')) {\n      FUN_0040138b(0x45,awStack_2000);\n      pcVar5 = *(code **)(*param_1 + 4);\n      (*(code *)PTR_guard_check_icall_00433278)((int)param_1 + 0x32,bVar14);\n      (*pcVar5)();\n      pcVar5 = *(code **)(*param_1 + 0x10);\n      (*(code *)PTR_guard_check_icall_00433278)(extraout_EDX,bVar14,0);\n      uVar10 = (*pcVar5)();\n      return uVar10 & 0xffffff00;\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_00419070",
      "entry": "00419070",
      "c": "\nundefined4 * __fastcall FUN_00419070(undefined4 *param_1)\n\n{\n  param_1[6] = 0;\n  param_1[7] = 0;\n  *param_1 = &PTR_FUN_00434440;\n  param_1[1] = &PTR_FUN_00434464;\n  param_1[2] = &PTR_FUN_004344a0;\n  param_1[3] = &PTR_FUN_004344dc;\n  param_1[4] = &PTR_FUN_004344f8;\n  param_1[5] = 1;\n  _memset(param_1 + 8,0,0x10);\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_004190b7",
      "entry": "004190b7",
      "c": "\nundefined4 * __fastcall FUN_004190b7(undefined4 *param_1)\n\n{\n  undefined4 *puVar1;\n  \n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  param_1[3] = 0;\n  param_1[4] = 0;\n  param_1[5] = 0;\n  puVar1 = (undefined4 *)FUN_0041eb38(0xc);\n  if (puVar1 == (undefined4 *)0x0) {\n    puVar1 = (undefined4 *)0x0;\n  }\n  else {\n    *puVar1 = &PTR_FUN_00434540;\n    puVar1[1] = 1;\n    puVar1[2] = param_1;\n  }\n  param_1[6] = puVar1;\n  param_1[7] = 0;\n  param_1[8] = 0;\n  *(undefined2 *)(param_1 + 9) = 0;\n  *(undefined1 *)((int)param_1 + 0x26) = 0;\n  param_1[10] = 0;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0041910c",
      "entry": "0041910c",
      "c": "\nvoid __fastcall FUN_0041910c(undefined4 *param_1)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  piVar1 = (int *)param_1[7];\n  ExceptionList = &local_10;\n  *param_1 = &PTR_FUN_00434440;\n  param_1[1] = &PTR_FUN_00434464;\n  param_1[2] = &PTR_FUN_004344a0;\n  param_1[3] = &PTR_FUN_004344dc;\n  param_1[4] = &PTR_FUN_004344f8;\n  if (piVar1 != (int *)0x0) {\n    pcVar2 = *(code **)(*piVar1 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar1);\n    (*pcVar2)();\n    param_1[7] = 0;\n  }\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419178",
      "entry": "00419178",
      "c": "\nvoid __fastcall FUN_00419178(void *param_1)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  piVar1 = *(int **)((int)param_1 + 0x10);\n  ExceptionList = &local_10;\n  if (piVar1 != (int *)0x0) {\n    pcVar2 = *(code **)(*piVar1 + 8);\n    ExceptionList = &local_10;\n    (*(code *)PTR_guard_check_icall_00433278)(piVar1);\n    (*pcVar2)();\n    *(undefined4 *)((int)param_1 + 0x10) = 0;\n  }\n  FUN_00419338(param_1);\n  piVar1 = *(int **)((int)param_1 + 0x18);\n  if (piVar1 != (int *)0x0) {\n    pcVar2 = *(code **)(*piVar1 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar1);\n    (*pcVar2)();\n  }\n  if (*(int **)((int)param_1 + 0xc) != (int *)0x0) {\n    FUN_0041a1d4(*(int **)((int)param_1 + 0xc));\n    pcVar2 = *(code **)(**(int **)((int)param_1 + 0xc) + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(*(int **)((int)param_1 + 0xc));\n    (*pcVar2)();\n    *(undefined4 *)((int)param_1 + 0xc) = 0;\n  }\n  FID_conflict__free(*(void **)((int)param_1 + 0x1c));\n  FID_conflict__free(*(void **)((int)param_1 + 0x20));\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419220",
      "entry": "00419220",
      "c": "\nvoid FUN_00419220(int param_1)\n\n{\n  *(int *)(param_1 + 0x14) = *(int *)(param_1 + 0x14) + 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419230",
      "entry": "00419230",
      "c": "\nvoid FUN_00419230(int param_1)\n\n{\n  FUN_00419220(param_1 + -4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419240",
      "entry": "00419240",
      "c": "\nvoid FUN_00419240(int param_1)\n\n{\n  FUN_00419220(param_1 + -8);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419250",
      "entry": "00419250",
      "c": "\nvoid FUN_00419250(int param_1)\n\n{\n  FUN_00419220(param_1 + -0x10);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419260",
      "entry": "00419260",
      "c": "\nvoid FUN_00419260(int param_1)\n\n{\n  FUN_00419220(param_1 + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419270",
      "entry": "00419270",
      "c": "\nvoid FUN_00419270(int param_1)\n\n{\n  *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419280",
      "entry": "00419280",
      "c": "\nundefined4 FUN_00419280(void)\n\n{\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00419285",
      "entry": "00419285",
      "c": "\nvoid __fastcall FUN_00419285(int param_1)\n\n{\n  if (*(int *)(param_1 + 4) != 0) {\n    DestroyWindow(*(HWND *)(param_1 + 4));\n    *(undefined4 *)(param_1 + 4) = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041929d",
      "entry": "0041929d",
      "c": "\nvoid __fastcall FUN_0041929d(void *param_1)\n\n{\n  int iVar1;\n  code *pcVar2;\n  int *piVar3;\n  int *piVar4;\n  \n  if ((((*(int *)((int)param_1 + 0xc) != 0) && (*(int *)((int)param_1 + 0x18) != 0)) &&\n      (piVar3 = (int *)FUN_0041a1af(*(int *)((int)param_1 + 0xc)), piVar3 != (int *)0x0)) &&\n     (piVar4 = (int *)FUN_0041939d(param_1,&DAT_0043551c), piVar4 != (int *)0x0)) {\n    iVar1 = *piVar4;\n    (*(code *)PTR_guard_check_icall_00433278)\n              (piVar4,*(undefined4 *)((int)param_1 + 0x18),(int)param_1 + 0x14);\n    (**(code **)(iVar1 + 0x14))();\n    pcVar2 = *(code **)(*piVar4 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar4);\n    (*pcVar2)();\n    pcVar2 = *(code **)(*piVar3 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar3);\n    (*pcVar2)();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419310",
      "entry": "00419310",
      "c": "\nundefined4 FUN_00419310(void)\n\n{\n  return 0x80004001;\n}\n\n"
    },
    {
      "name": "FUN_00419320",
      "entry": "00419320",
      "c": "\nvoid FUN_00419320(void)\n\n{\n  FUN_00419310();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419330",
      "entry": "00419330",
      "c": "\nundefined4 FUN_00419330(void)\n\n{\n  return 0x80004001;\n}\n\n"
    },
    {
      "name": "FUN_00419338",
      "entry": "00419338",
      "c": "\nvoid __fastcall FUN_00419338(void *param_1)\n\n{\n  code *pcVar1;\n  int *piVar2;\n  \n  piVar2 = (int *)FUN_0041939d(param_1,&DAT_0043551c);\n  if (piVar2 != (int *)0x0) {\n    pcVar1 = *(code **)(*piVar2 + 0x18);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar2,*(undefined4 *)((int)param_1 + 0x14));\n    (*pcVar1)();\n    pcVar1 = *(code **)(*piVar2 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar2);\n    (*pcVar1)();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419380",
      "entry": "00419380",
      "c": "\nvoid FUN_00419380(void)\n\n{\n  FUN_00419310();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419390",
      "entry": "00419390",
      "c": "\nundefined4 FUN_00419390(undefined4 param_1,undefined4 param_2,undefined4 *param_3)\n\n{\n  *param_3 = 0;\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041939d",
      "entry": "0041939d",
      "c": "\nundefined4 __thiscall FUN_0041939d(void *this,undefined4 param_1)\n\n{\n  undefined4 *puVar1;\n  code *pcVar2;\n  int *piVar3;\n  int iVar4;\n  void *local_c;\n  int *local_8;\n  \n  if ((*(int *)((int)this + 0xc) != 0) &&\n     (local_c = this, local_8 = (int *)this, piVar3 = (int *)FUN_0041a1af(*(int *)((int)this + 0xc))\n     , piVar3 != (int *)0x0)) {\n    local_c = (void *)0x0;\n    puVar1 = (undefined4 *)*piVar3;\n    (*(code *)PTR_guard_check_icall_00433278)(piVar3,&DAT_004354ec,&local_8);\n    iVar4 = (*(code *)*puVar1)();\n    if (-1 < iVar4) {\n      iVar4 = *local_8;\n      (*(code *)PTR_guard_check_icall_00433278)(local_8,param_1,&local_c);\n      (**(code **)(iVar4 + 0x10))();\n      pcVar2 = *(code **)(*local_8 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8);\n      (*pcVar2)();\n    }\n    pcVar2 = *(code **)(*piVar3 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar3);\n    (*pcVar2)();\n    return local_c;\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00419420",
      "entry": "00419420",
      "c": "\nundefined4 FUN_00419420(void)\n\n{\n  return 0x80004002;\n}\n\n"
    },
    {
      "name": "FUN_00419430",
      "entry": "00419430",
      "c": "\nundefined4 FUN_00419430(void)\n\n{\n  return 0x80004001;\n}\n\n"
    },
    {
      "name": "FUN_00419440",
      "entry": "00419440",
      "c": "\nundefined4 FUN_00419440(undefined4 param_1,undefined4 *param_2)\n\n{\n  *param_2 = 0;\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_00419450",
      "entry": "00419450",
      "c": "\nundefined4 FUN_00419450(undefined4 param_1,undefined4 *param_2)\n\n{\n  param_2[2] = 0;\n  *param_2 = 0x14;\n  param_2[1] = 0x44000000;\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00419470",
      "entry": "00419470",
      "c": "\nundefined4 FUN_00419470(void)\n\n{\n  undefined4 *in_stack_00000018;\n  \n  *in_stack_00000018 = 0xffffffff;\n  return 0x80020006;\n}\n\n"
    },
    {
      "name": "FUN_00419480",
      "entry": "00419480",
      "c": "\nundefined4 FUN_00419480(void)\n\n{\n  return 0x80004001;\n}\n\n"
    },
    {
      "name": "FUN_00419490",
      "entry": "00419490",
      "c": "\nundefined4 FUN_00419490(void)\n\n{\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_004194a0",
      "entry": "004194a0",
      "c": "\nbool FUN_004194a0(int param_1,undefined4 *param_2)\n\n{\n  BOOL BVar1;\n  \n  BVar1 = IsWindow(*(HWND *)(param_1 + 0x14));\n  if (BVar1 != 0) {\n    *param_2 = *(undefined4 *)(param_1 + 0x14);\n  }\n  return BVar1 == 0;\n}\n\n"
    },
    {
      "name": "FUN_004194d0",
      "entry": "004194d0",
      "c": "\nvoid FUN_004194d0(int param_1,undefined4 *param_2)\n\n{\n  FUN_004194a0(param_1 + -4,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004194e0",
      "entry": "004194e0",
      "c": "\nundefined4\nFUN_004194e0(int param_1,uint *param_2,undefined4 *param_3,RECT *param_4,LPRECT param_5,\n            undefined4 *param_6)\n\n{\n  code *pcVar1;\n  tagRECT local_14;\n  \n  *param_2 = -(uint)(param_1 != 4) & param_1 + 4U;\n  *param_3 = 0;\n  GetClientRect(*(HWND *)(param_1 + 0x14),&local_14);\n  param_4->right = local_14.right;\n  param_4->left = 0;\n  param_4->top = 0;\n  param_4->bottom = local_14.bottom;\n  CopyRect(param_5,param_4);\n  *param_6 = 0x14;\n  param_6[1] = 0;\n  param_6[2] = *(undefined4 *)(param_1 + 0x14);\n  param_6[3] = 0;\n  param_6[4] = 0;\n  pcVar1 = *(code **)(*(int *)*param_2 + 4);\n  (*(code *)PTR_guard_check_icall_00433278)((int *)*param_2);\n  (*pcVar1)();\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00419570",
      "entry": "00419570",
      "c": "\nundefined4 FUN_00419570(void)\n\n{\n  return 0x80020003;\n}\n\n"
    },
    {
      "name": "FUN_00419580",
      "entry": "00419580",
      "c": "\nundefined4 FUN_00419580(int param_1,int param_2)\n\n{\n  if ((((*(void **)(param_1 + 8) != (void *)0x0) && (param_2 != 0x71)) && (param_2 != 0xfa)) &&\n     (param_2 == 0x103)) {\n    FUN_0041a182(*(void **)(param_1 + 8));\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_004195aa",
      "entry": "004195aa",
      "c": "\nuint FUN_004195aa(ushort *param_1)\n\n{\n  ushort uVar1;\n  uint uVar2;\n  \n  uVar1 = *param_1;\n  do {\n    if (uVar1 == 0) {\n      return uVar1 & 0xffffff00;\n    }\n    if ((uVar1 == 0x3c) && (param_1[1] == 0x2f)) {\n      uVar2 = 2;\n      do {\n        if (param_1[uVar2] == 0x3e) {\n          return CONCAT31((int3)(uVar2 >> 8),1);\n        }\n        uVar2 = uVar2 + 1;\n      } while (uVar2 < 0x14);\n    }\n    param_1 = param_1 + 1;\n    uVar1 = *param_1;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_004195eb",
      "entry": "004195eb",
      "c": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint __thiscall FUN_004195eb(void *this,int *param_1)\n\n{\n  code *pcVar1;\n  undefined4 *puVar2;\n  wchar_t *pwVar3;\n  wchar_t *pwVar4;\n  wchar_t *extraout_EAX;\n  wchar_t *unaff_EBX;\n  undefined4 unaff_EBP;\n  int *unaff_EDI;\n  int local_4;\n  \n  local_4 = 0;\n  pcVar1 = *(code **)(*param_1 + 0x48);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  pwVar3 = (wchar_t *)(*pcVar1)();\n  pwVar4 = pwVar3;\n  if ((-1 < (int)pwVar3) && (pwVar4 = unaff_EBX, unaff_EBX != (wchar_t *)0x0)) {\n    puVar2 = *(undefined4 **)unaff_EBX;\n    (*(code *)PTR_guard_check_icall_00433278)(unaff_EBX,&DAT_004354fc,&stack0xfffffff0);\n    pwVar3 = (wchar_t *)(*(code *)*puVar2)();\n    if (-1 < (int)pwVar3) {\n      pcVar1 = *(code **)(local_4 + 0x20);\n      (*(code *)PTR_guard_check_icall_00433278)(&local_4);\n      pwVar3 = (wchar_t *)(*pcVar1)();\n      if (-1 < (int)pwVar3) {\n        pcVar1 = *(code **)(*param_1 + 0x14);\n        (*(code *)PTR_guard_check_icall_00433278)(param_1,unaff_EBP);\n        pwVar3 = (wchar_t *)(*pcVar1)();\n      }\n      pcVar1 = *(code **)(*param_1 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(param_1);\n      (*pcVar1)();\n    }\n    pcVar1 = *(code **)(*unaff_EDI + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(unaff_EDI);\n    pwVar4 = (wchar_t *)(*pcVar1)();\n    if ((-1 < (int)pwVar3) && (pwVar4 = unaff_EBX, unaff_EBX != (wchar_t *)0x0)) goto LAB_00419700;\n  }\n  unaff_EBX = pwVar4;\n  if ((*(int *)((int)this + 8) != 0) &&\n     ((*(int *)((int)this + 0x20) == 0 && (*(int *)((int)this + 0x1c) != 0)))) {\n    unaff_EBX = FUN_00419cfe(*(wchar_t **)((int)this + 0x1c));\n    if (unaff_EBX != (wchar_t *)0x0) {\n      SetWindowPos(*(HWND *)((int)this + 4),(HWND)0x1,0,0,0,0,0x204);\n      ShowWindow(*(HWND *)((int)this + 8),5);\n      SetWindowTextW(*(HWND *)((int)this + 8),unaff_EBX);\n      FID_conflict__free(unaff_EBX);\n      unaff_EBX = extraout_EAX;\n    }\n  }\nLAB_00419700:\n  return CONCAT31((int3)((uint)unaff_EBX >> 8),(byte)((uint)pwVar3 >> 0x1f)) ^ 1;\n}\n\n"
    },
    {
      "name": "FUN_00419711",
      "entry": "00419711",
      "c": "\nvoid __thiscall FUN_00419711(void *this,wchar_t *param_1)\n\n{\n  wchar_t wVar1;\n  _func_5234 *p_Var2;\n  size_t sVar3;\n  wchar_t *pwVar4;\n  int iVar5;\n  undefined2 *hGlobal;\n  HRESULT HVar6;\n  wchar_t *unaff_EBP;\n  wchar_t *pwVar7;\n  IStream *unaff_retaddr;\n  \n  if (*(int *)((int)this + 0x10) != 0) {\n    FUN_004195aa((ushort *)param_1);\n    sVar3 = _wcslen(param_1);\n    pwVar4 = (wchar_t *)FUN_00423e33(sVar3 * 2 + 0x200);\n    if (pwVar4 != (wchar_t *)0x0) {\n      _wcscpy(pwVar4,L\"<html>\");\n      _wcscat(pwVar4,L\"<head><meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=\");\n      _wcscat(pwVar4,L\"utf-8\\\"></head>\");\n      wVar1 = *param_1;\n      pwVar7 = param_1;\n      while (wVar1 == L' ') {\n        pwVar7 = pwVar7 + 1;\n        wVar1 = *pwVar7;\n      }\n      iVar5 = FUN_00411fdd(pwVar7,L\"<html>\",6);\n      if (iVar5 == 0) {\n        param_1 = pwVar7 + 6;\n      }\n      _wcscat(pwVar4,param_1);\n      if (iVar5 != 0) {\n        _wcscat(pwVar4,L\"</html>\");\n      }\n      pwVar4 = FUN_00419955(pwVar4,unaff_EBP);\n      sVar3 = _wcslen(pwVar4);\n      hGlobal = (undefined2 *)GlobalAlloc(0x40,sVar3 * 6 + 9);\n      if (hGlobal != (undefined2 *)0x0) {\n        iVar5 = WideCharToMultiByte(0xfde9,0,pwVar4,-1,(LPSTR)((int)hGlobal + 3),sVar3 * 6 + 6,\n                                    (LPCSTR)0x0,(LPBOOL)0x0);\n        if (iVar5 == 0) {\n          *(undefined1 *)hGlobal = 0;\n        }\n        else {\n          *hGlobal = 0xbbef;\n          *(undefined1 *)(hGlobal + 1) = 0xbf;\n        }\n      }\n      FID_conflict__free(pwVar4);\n      HVar6 = CreateStreamOnHGlobal(hGlobal,1,(LPSTREAM *)&stack0x00000000);\n      if (-1 < HVar6) {\n        FUN_004195eb(this,*(int **)((int)this + 0x10));\n        p_Var2 = unaff_retaddr->lpVtbl->Release;\n        (*(code *)PTR_guard_check_icall_00433278)();\n        (*p_Var2)(unaff_retaddr);\n      }\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419862",
      "entry": "00419862",
      "c": "\nvoid __thiscall FUN_00419862(void *this,undefined4 param_1)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  undefined4 *puVar3;\n  int iVar4;\n  int *unaff_EBP;\n  wchar_t *pwVar5;\n  \n  *(undefined4 *)((int)this + 4) = param_1;\n  puVar3 = (undefined4 *)FUN_0041eb38(0x30);\n  if (puVar3 == (undefined4 *)0x0) {\n    puVar3 = (undefined4 *)0x0;\n  }\n  else {\n    puVar3 = FUN_00419070(puVar3);\n  }\n  *(undefined4 **)((int)this + 0xc) = puVar3;\n  if (puVar3 != (undefined4 *)0x0) {\n    puVar3[6] = param_1;\n    FUN_0041a0bf(*(void **)((int)this + 0xc),L\"Shell.Explorer\");\n    FUN_0041a318(*(int *)((int)this + 0xc));\n    FUN_0041a2b0(*(void **)((int)this + 0xc),1);\n    puVar3 = (undefined4 *)FUN_0041a1af(*(int *)((int)this + 0xc));\n    piVar1 = (int *)((int)this + 0x10);\n    if (puVar3 != (undefined4 *)0x0) {\n      pcVar2 = *(code **)*puVar3;\n      (*(code *)PTR_guard_check_icall_00433278)(puVar3,&DAT_0043550c,piVar1);\n      iVar4 = (*pcVar2)();\n      pcVar2 = *(code **)(*unaff_EBP + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(unaff_EBP);\n      (*pcVar2)();\n      if (iVar4 < 0) {\n        *piVar1 = 0;\n        return;\n      }\n    }\n    if (*piVar1 != 0) {\n      FUN_0041929d(this);\n      *(undefined1 *)((int)this + 0x25) = 0;\n      iVar4 = *(int *)*piVar1;\n      if (*(int *)((int)this + 0x20) == 0) {\n        pwVar5 = L\"about:blank\";\n      }\n      else {\n        pwVar5 = *(wchar_t **)((int)this + 0x20);\n      }\n      (*(code *)PTR_guard_check_icall_00433278)((int *)*piVar1,pwVar5,0,0,0,0);\n      (**(code **)(iVar4 + 0x2c))();\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419950",
      "entry": "00419950",
      "c": "\nundefined4 FUN_00419950(void)\n\n{\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00419955",
      "entry": "00419955",
      "c": "\nwchar_t * FUN_00419955(wchar_t *param_1,wchar_t *param_2)\n\n{\n  wchar_t *pwVar1;\n  wchar_t wVar2;\n  size_t sVar3;\n  wchar_t *_Dest;\n  wchar_t *pwVar4;\n  wchar_t *pwVar5;\n  \n  sVar3 = _wcslen(param_1);\n  _Dest = (wchar_t *)FUN_00423e33(sVar3 * 0xc + 0x200);\n  if (_Dest != (wchar_t *)0x0) {\n    _wcscpy(_Dest,L\"<style>body{font-family:\\\"Arial\\\";font-size:12;}</style>\");\n    sVar3 = _wcslen(_Dest);\n    wVar2 = *param_1;\n    pwVar4 = param_1;\n    while (wVar2 != L'\\0') {\n      if ((((wVar2 == L'\\r') && (param_1[1] == L'\\n')) && (param_1[2] == L'\\r')) &&\n         (param_1[3] == L'\\n')) {\n        pwVar4 = _Dest + sVar3;\n        do {\n          pwVar5 = param_1;\n          if (param_1[3] != L'\\n') break;\n          _wcscpy(pwVar4,L\"<br>\");\n          pwVar5 = param_1 + 2;\n          sVar3 = sVar3 + 4;\n          pwVar4 = pwVar4 + 4;\n          pwVar1 = param_1 + 4;\n          param_1 = pwVar5;\n        } while (*pwVar1 == L'\\r');\n        param_1 = pwVar5 + 1;\n        pwVar4 = param_2;\n      }\n      else if (((pwVar4 < param_1) && (wVar2 == L' ')) && (param_1[-1] == L' ')) {\n        _wcscpy(_Dest + sVar3,L\"&nbsp;\");\n        sVar3 = sVar3 + 6;\n      }\n      else {\n        _Dest[sVar3] = wVar2;\n        sVar3 = sVar3 + 1;\n      }\n      param_1 = param_1 + 1;\n      wVar2 = *param_1;\n    }\n    _Dest[sVar3] = L'\\0';\n    FID_conflict__free(pwVar4);\n    param_1 = _Dest;\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_00419a70",
      "entry": "00419a70",
      "c": "\nundefined4 FUN_00419a70(int *param_1,uint *param_2,undefined4 *param_3)\n\n{\n  code *pcVar1;\n  int iVar2;\n  int *piVar3;\n  \n  if (param_3 == (undefined4 *)0x0) {\n    return 0x80004003;\n  }\n  iVar2 = FUN_00420c4a(param_2,(uint *)&DAT_0043549c,0x10);\n  piVar3 = param_1;\n  if (iVar2 != 0) {\n    iVar2 = FUN_00420c4a(param_2,(uint *)&DAT_004354dc,0x10);\n    if (iVar2 == 0) {\n      piVar3 = param_1 + 1;\n    }\n    else {\n      iVar2 = FUN_00420c4a(param_2,(uint *)&DAT_004354bc,0x10);\n      if (iVar2 == 0) {\n        piVar3 = param_1 + 2;\n      }\n      else {\n        iVar2 = FUN_00420c4a(param_2,(uint *)&DAT_0043548c,0x10);\n        if (iVar2 == 0) {\n          piVar3 = param_1 + 3;\n        }\n        else {\n          iVar2 = FUN_00420c4a(param_2,(uint *)&DAT_0043552c,0x10);\n          if (iVar2 != 0) {\n            iVar2 = FUN_00420c4a(param_2,(uint *)&DAT_0043547c,0x10);\n            if (iVar2 != 0) {\n              *param_3 = 0;\n              return 0x80004002;\n            }\n            goto LAB_00419b30;\n          }\n          piVar3 = param_1 + 4;\n        }\n      }\n    }\n    piVar3 = (int *)(-(uint)(param_1 != (int *)0x0) & (uint)piVar3);\n  }\nLAB_00419b30:\n  *param_3 = piVar3;\n  pcVar1 = *(code **)(*param_1 + 4);\n  (*(code *)PTR_guard_check_icall_00433278)(param_1);\n  (*pcVar1)();\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00419b60",
      "entry": "00419b60",
      "c": "\nvoid FUN_00419b60(int param_1,uint *param_2,undefined4 *param_3)\n\n{\n  FUN_00419a70((int *)(param_1 + -4),param_2,param_3);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419b70",
      "entry": "00419b70",
      "c": "\nvoid FUN_00419b70(int param_1,uint *param_2,undefined4 *param_3)\n\n{\n  FUN_00419a70((int *)(param_1 + -8),param_2,param_3);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419b80",
      "entry": "00419b80",
      "c": "\nvoid FUN_00419b80(int param_1,uint *param_2,undefined4 *param_3)\n\n{\n  FUN_00419a70((int *)(param_1 + -0x10),param_2,param_3);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419b90",
      "entry": "00419b90",
      "c": "\nvoid FUN_00419b90(int param_1,uint *param_2,undefined4 *param_3)\n\n{\n  FUN_00419a70((int *)(param_1 + -0xc),param_2,param_3);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419ba0",
      "entry": "00419ba0",
      "c": "\nundefined4 FUN_00419ba0(int *param_1,uint *param_2,undefined4 *param_3)\n\n{\n  code *pcVar1;\n  undefined4 uVar2;\n  int iVar3;\n  \n  if (param_3 == (undefined4 *)0x0) {\n    uVar2 = 0x80004003;\n  }\n  else {\n    iVar3 = FUN_00420c4a(param_2,(uint *)&DAT_0043548c,0x10);\n    if ((iVar3 != 0) && (iVar3 = FUN_00420c4a(param_2,(uint *)&DAT_0043547c,0x10), iVar3 != 0)) {\n      *param_3 = 0;\n      return 0x80004002;\n    }\n    *param_3 = param_1;\n    pcVar1 = *(code **)(*param_1 + 4);\n    (*(code *)PTR_guard_check_icall_00433278)(param_1);\n    (*pcVar1)();\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_00419c04",
      "entry": "00419c04",
      "c": "\nvoid __thiscall FUN_00419c04(void *this,HINSTANCE param_1)\n\n{\n  WNDCLASSEXW local_34;\n  \n  local_34.cbSize = 0x30;\n  local_34.style = 0x828;\n  local_34.lpfnWndProc = FUN_0041a070;\n  local_34.cbClsExtra = 0;\n  local_34.cbWndExtra = 0;\n  local_34.hInstance = param_1;\n  local_34.hIcon = (HICON)0x0;\n  local_34.hCursor = LoadCursorW((HINSTANCE)0x0,(LPCWSTR)0x7f00);\n  local_34.hbrBackground = (HBRUSH)0x6;\n  local_34.lpszMenuName = (LPCWSTR)0x0;\n  local_34.lpszClassName = L\"RarHtmlClassName\";\n  local_34.hIconSm = (HICON)0x0;\n  RegisterClassExW(&local_34);\n  *(HINSTANCE *)this = param_1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419c70",
      "entry": "00419c70",
      "c": "\nint FUN_00419c70(undefined4 *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = param_1[5] + -1;\n  param_1[5] = iVar1;\n  if (iVar1 == 0) {\n    FUN_0041910c(param_1);\n    FUN_0041eb68(param_1);\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "FUN_00419ca0",
      "entry": "00419ca0",
      "c": "\nvoid FUN_00419ca0(int param_1)\n\n{\n  FUN_00419c70((undefined4 *)(param_1 + -4));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419cb0",
      "entry": "00419cb0",
      "c": "\nvoid FUN_00419cb0(int param_1)\n\n{\n  FUN_00419c70((undefined4 *)(param_1 + -8));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419cc0",
      "entry": "00419cc0",
      "c": "\nvoid FUN_00419cc0(int param_1)\n\n{\n  FUN_00419c70((undefined4 *)(param_1 + -0x10));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419cd0",
      "entry": "00419cd0",
      "c": "\nvoid FUN_00419cd0(int param_1)\n\n{\n  FUN_00419c70((undefined4 *)(param_1 + -0xc));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00419ce0",
      "entry": "00419ce0",
      "c": "\nint FUN_00419ce0(void *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)((int)param_1 + 4) + -1;\n  *(int *)((int)param_1 + 4) = iVar1;\n  if (iVar1 == 0) {\n    FUN_0041eb68(param_1);\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "FUN_00419cfe",
      "entry": "00419cfe",
      "c": "\nwchar_t * FUN_00419cfe(wchar_t *param_1)\n\n{\n  wchar_t wVar1;\n  short sVar2;\n  bool bVar3;\n  size_t sVar4;\n  wchar_t *pwVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  int iVar9;\n  char cVar10;\n  wchar_t *pwVar11;\n  wchar_t *pwVar12;\n  \n  sVar4 = _wcslen(param_1);\n  pwVar5 = (wchar_t *)FUN_00423e33(sVar4 * 2 + 2);\n  if (pwVar5 != (wchar_t *)0x0) {\n    uVar6 = FUN_004195aa((ushort *)param_1);\n    wVar1 = *param_1;\n    uVar6 = (uVar6 & 0xff) << 8;\n    pwVar12 = pwVar5;\njoined_r0x00419d3f:\n    if (wVar1 != L'\\0') {\n      do {\n        if (wVar1 == L'<') break;\n        cVar10 = (char)(uVar6 >> 8);\n        if ((cVar10 == '\\0') || ((wVar1 != L'\\r' && (wVar1 != L'\\n')))) {\n          uVar6 = uVar6 & 0xffffff00;\n          bVar3 = false;\n          if ((cVar10 == '\\0') || (wVar1 != L'&')) {\nLAB_00419db2:\n            wVar1 = *param_1;\n            if (wVar1 != L'\\0') {\n              if (((wVar1 != L' ') || (pwVar12 == pwVar5)) || (pwVar12[-1] != L' ')) {\n                *pwVar12 = wVar1;\n                goto LAB_00419dcc;\n              }\n              goto LAB_00419dcf;\n            }\n          }\n          else {\n            uVar7 = 0;\n            do {\n              sVar2 = *(short *)(uVar7 + (int)param_1);\n              if (sVar2 == 0) break;\n              if (sVar2 == 0x3b) {\n                param_1 = (short *)(uVar7 + (int)param_1) + 1;\n                uVar6 = CONCAT31((int3)(uVar6 >> 8),1);\n                bVar3 = true;\n              }\n              uVar7 = uVar7 + 2;\n            } while (uVar7 < 0x28);\n            if (!bVar3) goto LAB_00419db2;\n          }\n        }\n        else {\n          if ((pwVar12 == pwVar5) || (pwVar12[-1] != L' ')) {\n            *pwVar12 = L' ';\nLAB_00419dcc:\n            pwVar12 = pwVar12 + 1;\n          }\nLAB_00419dcf:\n          param_1 = param_1 + 1;\n        }\n        wVar1 = *param_1;\n      } while (wVar1 != L'\\0');\n      iVar8 = FUN_00411fdd(param_1,L\"</p>\",4);\n      uVar6 = CONCAT31((int3)(uVar6 >> 8),iVar8 == 0);\n      if ((iVar8 == 0) || (iVar9 = FUN_00411fdd(param_1,L\"<br>\",4), pwVar11 = pwVar12, iVar9 == 0))\n      {\n        *pwVar12 = L'\\r';\n        pwVar12[1] = L'\\n';\n        pwVar11 = pwVar12 + 2;\n        if (iVar8 == 0) {\n          *pwVar11 = L'\\r';\n          pwVar12[3] = L'\\n';\n          pwVar11 = pwVar12 + 4;\n        }\n      }\n      *pwVar11 = L'\\0';\n      iVar8 = FUN_00411fdd(param_1,L\"<style>\",7);\n      wVar1 = *param_1;\n      pwVar12 = pwVar11;\n      if (iVar8 == 0) {\n        pwVar11 = param_1;\n        if (wVar1 != L'\\0') {\n          do {\n            iVar8 = FUN_00411fdd(pwVar11,L\"</style>\",8);\n            param_1 = pwVar11 + 1;\n            if (iVar8 == 0) {\n              param_1 = pwVar11 + 8;\n              wVar1 = *param_1;\n              goto joined_r0x00419d3f;\n            }\n            pwVar11 = param_1;\n          } while (*param_1 != L'\\0');\n          wVar1 = L'\\0';\n        }\n      }\n      else {\n        while ((wVar1 != L'\\0' && (wVar1 != L'>'))) {\n          param_1 = param_1 + 1;\n          wVar1 = *param_1;\n        }\n        if (wVar1 == L'>') {\n          param_1 = param_1 + 1;\n          wVar1 = *param_1;\n        }\n      }\n      goto joined_r0x00419d3f;\n    }\n  }\n  return pwVar5;\n}\n\n"
    },
    {
      "name": "FUN_00419ed0",
      "entry": "00419ed0",
      "c": "\nundefined4 FUN_00419ed0(void)\n\n{\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00419ed5",
      "entry": "00419ed5",
      "c": "\nvoid __thiscall\nFUN_00419ed5(void *this,HINSTANCE param_1,HWND param_2,wchar_t *param_3,wchar_t *param_4,\n            undefined1 param_5)\n\n{\n  wchar_t *pwVar1;\n  HWND pHVar2;\n  HMENU hMenu;\n  HINSTANCE hInstance;\n  tagRECT *lpPoints;\n  void *lpParam;\n  UINT cPoints;\n  tagRECT tStack_10;\n  \n  *(HWND *)((int)this + 8) = param_2;\n  *(undefined1 *)((int)this + 0x26) = param_5;\n  ShowWindow(param_2,0);\n  FUN_00419c04(this,param_1);\n  if (*(int *)((int)this + 0x1c) != 0) {\n    FID_conflict__free(*(void **)((int)this + 0x1c));\n  }\n  if (param_3 == (wchar_t *)0x0) {\n    pwVar1 = (wchar_t *)0x0;\n  }\n  else {\n    pwVar1 = __wcsdup(param_3);\n  }\n  *(wchar_t **)((int)this + 0x1c) = pwVar1;\n  if (param_4 == (wchar_t *)0x0) {\n    pwVar1 = (wchar_t *)0x0;\n  }\n  else {\n    pwVar1 = __wcsdup(param_4);\n  }\n  *(wchar_t **)((int)this + 0x20) = pwVar1;\n  GetWindowRect(param_2,&tStack_10);\n  cPoints = 2;\n  lpPoints = &tStack_10;\n  pHVar2 = GetParent(param_2);\n  MapWindowPoints((HWND)0x0,pHVar2,(LPPOINT)lpPoints,cPoints);\n  if (*(int *)((int)this + 4) != 0) {\n    DestroyWindow(*(HWND *)((int)this + 4));\n  }\n                    /* WARNING: Load size is inaccurate */\n  hInstance = *this;\n  hMenu = (HMENU)0x0;\n  lpParam = this;\n  pHVar2 = GetParent(param_2);\n  pHVar2 = CreateWindowExW(0,L\"RarHtmlClassName\",(LPCWSTR)0x0,0x40000000,tStack_10.left + 1,\n                           tStack_10.top,(tStack_10.right - tStack_10.left) + -2,\n                           tStack_10.bottom - tStack_10.top,pHVar2,hMenu,hInstance,lpParam);\n  *(HWND *)((int)this + 4) = pHVar2;\n  if (*(int *)((int)this + 0x10) == 0) {\n    if (((param_2 != (HWND)0x0) && (*(int *)((int)this + 0x20) == 0)) &&\n       (*(int *)((int)this + 0x1c) != 0)) {\n      pwVar1 = FUN_00419cfe(*(wchar_t **)((int)this + 0x1c));\n      if (pwVar1 != (wchar_t *)0x0) {\n        ShowWindow(param_2,5);\n        SetWindowTextW(param_2,pwVar1);\n        FID_conflict__free(pwVar1);\n      }\n    }\n  }\n  else if (pHVar2 != (HWND)0x0) {\n    ShowWindow(pHVar2,5);\n    UpdateWindow(*(HWND *)((int)this + 4));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a020",
      "entry": "0041a020",
      "c": "\nundefined4 FUN_0041a020(void)\n\n{\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041a030",
      "entry": "0041a030",
      "c": "\nundefined4 FUN_0041a030(void)\n\n{\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041a040",
      "entry": "0041a040",
      "c": "\nundefined4 FUN_0041a040(void)\n\n{\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0041a050",
      "entry": "0041a050",
      "c": "\nundefined4 FUN_0041a050(void)\n\n{\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041a060",
      "entry": "0041a060",
      "c": "\nundefined4 FUN_0041a060(void)\n\n{\n  undefined4 *in_stack_00000010;\n  \n  *in_stack_00000010 = 0;\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041a070",
      "entry": "0041a070",
      "c": "\nvoid FUN_0041a070(HWND param_1,UINT param_2,WPARAM param_3,LONG *param_4)\n\n{\n  void *this;\n  \n  if (param_2 == 1) {\n    this = (void *)GetWindowLongW(param_1,-0x15);\n    FUN_00419862(this,param_1);\n  }\n  else if (param_2 == 0x81) {\n    SetWindowLongW(param_1,-0x15,*param_4);\n  }\n  DefWindowProcW(param_1,param_2,param_3,(LPARAM)param_4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a0bf",
      "entry": "0041a0bf",
      "c": "\nvoid __thiscall FUN_0041a0bf(void *this,LPCOLESTR param_1)\n\n{\n  LPVOID *ppv;\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  code *pcVar3;\n  int iVar4;\n  CLSID local_1c;\n  int *local_c;\n  int *local_8;\n  \n  CLSIDFromString(param_1,&local_1c);\n  ppv = (LPVOID *)((int)this + 0x1c);\n  CoCreateInstance(&local_1c,(LPUNKNOWN)0x0,5,(IID *)&DAT_0043547c,ppv);\n  puVar1 = (undefined4 *)*ppv;\n  if (puVar1 != (undefined4 *)0x0) {\n    puVar2 = (undefined4 *)*puVar1;\n    (*(code *)PTR_guard_check_icall_00433278)(puVar1,&DAT_004354ac,&local_8);\n    iVar4 = (*(code *)*puVar2)();\n    if (-1 < iVar4) {\n      pcVar3 = *(code **)(*local_8 + 0xc);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8,this);\n      (*pcVar3)();\n      pcVar3 = *(code **)(*local_8 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8);\n      (*pcVar3)();\n                    /* WARNING: Load size is inaccurate */\n      puVar1 = **ppv;\n      (*(code *)PTR_guard_check_icall_00433278)(*ppv,&DAT_004354fc,&local_c);\n      iVar4 = (*(code *)*puVar1)();\n      if (-1 < iVar4) {\n        pcVar3 = *(code **)(*local_c + 0x20);\n        (*(code *)PTR_guard_check_icall_00433278)(local_c);\n        (*pcVar3)();\n        pcVar3 = *(code **)(*local_c + 8);\n        (*(code *)PTR_guard_check_icall_00433278)(local_c);\n        (*pcVar3)();\n      }\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a182",
      "entry": "0041a182",
      "c": "\nvoid __fastcall FUN_0041a182(void *param_1)\n\n{\n  if ((*(int *)((int)param_1 + 0x20) == 0) && (*(char *)((int)param_1 + 0x25) == '\\0')) {\n    FUN_00419711(param_1,*(wchar_t **)((int)param_1 + 0x1c));\n  }\n  *(undefined1 *)((int)param_1 + 0x25) = 1;\n  if (*(char *)((int)param_1 + 0x26) != '\\0') {\n    FUN_0041a2b0(*(void **)((int)param_1 + 0xc),1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a1af",
      "entry": "0041a1af",
      "c": "\nundefined4 __fastcall FUN_0041a1af(int param_1)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  \n  piVar1 = *(int **)(param_1 + 0x1c);\n  if (piVar1 == (int *)0x0) {\n    return 0;\n  }\n  pcVar2 = *(code **)(*piVar1 + 4);\n  (*(code *)PTR_guard_check_icall_00433278)(piVar1);\n  (*pcVar2)();\n  return *(undefined4 *)(param_1 + 0x1c);\n}\n\n"
    },
    {
      "name": "FUN_0041a1d4",
      "entry": "0041a1d4",
      "c": "\nvoid __fastcall FUN_0041a1d4(int *param_1)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  code *pcVar3;\n  int iVar4;\n  int *local_c;\n  int *local_8;\n  \n  puVar1 = (undefined4 *)param_1[7];\n  if (puVar1 != (undefined4 *)0x0) {\n    puVar2 = (undefined4 *)*puVar1;\n    local_c = param_1;\n    local_8 = param_1;\n    (*(code *)PTR_guard_check_icall_00433278)(puVar1,&DAT_004354ac,&local_8);\n    iVar4 = (*(code *)*puVar2)();\n    if (-1 < iVar4) {\n      pcVar3 = *(code **)(*local_8 + 0x18);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8,1);\n      (*pcVar3)();\n      pcVar3 = *(code **)(*local_8 + 0xc);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8,0);\n      (*pcVar3)();\n      pcVar3 = *(code **)(*local_8 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8);\n      (*pcVar3)();\n    }\n    puVar1 = *(undefined4 **)param_1[7];\n    (*(code *)PTR_guard_check_icall_00433278)((undefined4 *)param_1[7],&DAT_004354cc,&local_c);\n    iVar4 = (*(code *)*puVar1)();\n    if (-1 < iVar4) {\n      pcVar3 = *(code **)(*local_c + 0x18);\n      (*(code *)PTR_guard_check_icall_00433278)(local_c);\n      (*pcVar3)();\n      pcVar3 = *(code **)(*local_c + 0x14);\n      (*(code *)PTR_guard_check_icall_00433278)(local_c);\n      (*pcVar3)();\n      pcVar3 = *(code **)(*local_c + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(local_c);\n      (*pcVar3)();\n    }\n    pcVar3 = *(code **)(*(int *)param_1[7] + 8);\n    (*(code *)PTR_guard_check_icall_00433278)((int *)param_1[7]);\n    (*pcVar3)();\n    param_1[7] = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a2b0",
      "entry": "0041a2b0",
      "c": "\nvoid __thiscall FUN_0041a2b0(void *this,int param_1)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  code *pcVar3;\n  int iVar4;\n  int *local_8;\n  \n  puVar1 = *(undefined4 **)((int)this + 0x1c);\n  if ((puVar1 != (undefined4 *)0x0) && (param_1 != 0)) {\n    puVar2 = (undefined4 *)*puVar1;\n    local_8 = (int *)this;\n    (*(code *)PTR_guard_check_icall_00433278)(puVar1,&DAT_004354ac,&local_8);\n    iVar4 = (*(code *)*puVar2)();\n    if (-1 < iVar4) {\n      iVar4 = *local_8;\n      (*(code *)PTR_guard_check_icall_00433278)\n                (local_8,0xfffffffc,0,this,0,*(undefined4 *)((int)this + 0x18),(int)this + 0x20);\n      (**(code **)(iVar4 + 0x2c))();\n      pcVar3 = *(code **)(*local_8 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8);\n      (*pcVar3)();\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a318",
      "entry": "0041a318",
      "c": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nvoid __fastcall FUN_0041a318(int param_1)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  int iVar3;\n  code *pcVar4;\n  int iVar5;\n  int unaff_EBX;\n  int *in_stack_ffffffb8;\n  int *piVar6;\n  int local_4;\n  \n  puVar1 = *(undefined4 **)(param_1 + 0x1c);\n  if (puVar1 != (undefined4 *)0x0) {\n    puVar2 = (undefined4 *)*puVar1;\n    local_4 = param_1;\n    (*(code *)PTR_guard_check_icall_00433278)(puVar1,&DAT_004354ac);\n    iVar5 = (*(code *)*puVar2)();\n    iVar3 = local_4;\n    if (-1 < iVar5) {\n      if (unaff_EBX == 0) {\n        (*(code *)PTR_guard_check_icall_00433278)\n                  (&local_4,0xfffffffd,0,param_1,0,*(undefined4 *)(param_1 + 0x18),0);\n        (**(code **)(iVar3 + 0x2c))();\n      }\n      else {\n        piVar6 = (int *)0x0;\n        (*(code *)PTR_guard_check_icall_00433278)\n                  (&local_4,0xfffffffb,0,param_1,0,*(undefined4 *)(param_1 + 0x18),param_1 + 0x20);\n        (**(code **)(iVar3 + 0x2c))();\n        iVar3 = *piVar6;\n        in_stack_ffffffb8 = (int *)0x0;\n        (*(code *)PTR_guard_check_icall_00433278)\n                  (piVar6,0xffffffff,0,param_1,0,*(undefined4 *)(param_1 + 0x18),param_1 + 0x20);\n        (**(code **)(iVar3 + 0x2c))();\n      }\n      pcVar4 = *(code **)(*in_stack_ffffffb8 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(in_stack_ffffffb8);\n      (*pcVar4)();\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a3b9",
      "entry": "0041a3b9",
      "c": "\nundefined4 * __thiscall FUN_0041a3b9(void *this,undefined4 param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 local_8;\n  \n  local_8 = 0;\n  *(undefined ***)this = &PTR_FUN_00434740;\n  if (param_2 == 0) {\n    uVar1 = GdipCreateBitmapFromStream(param_1,&local_8);\n  }\n  else {\n    uVar1 = GdipCreateBitmapFromStreamICM();\n  }\n  *(undefined4 *)((int)this + 8) = uVar1;\n  *(undefined4 *)((int)this + 4) = local_8;\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_0041a400",
      "entry": "0041a400",
      "c": "\nundefined4 * __fastcall FUN_0041a400(undefined4 *param_1)\n\n{\n  byte unaff_retaddr;\n  \n  *param_1 = &PTR_FUN_00434740;\n  GdipDisposeImage(param_1[1]);\n  if ((unaff_retaddr & 1) != 0) {\n    if ((unaff_retaddr & 4) == 0) {\n      GdipFree(param_1);\n    }\n    else {\n      guard_check_icall();\n    }\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0041a440",
      "entry": "0041a440",
      "c": "\nundefined4 * __fastcall FUN_0041a440(int param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 local_8;\n  \n  local_8 = 0;\n  iVar2 = GdipCloneImage(*(undefined4 *)(param_1 + 4),&local_8);\n  if (iVar2 != 0) {\n    *(int *)(param_1 + 8) = iVar2;\n  }\n  puVar3 = (undefined4 *)GdipAlloc(0x10);\n  if (puVar3 == (undefined4 *)0x0) {\n    puVar3 = (undefined4 *)0x0;\n  }\n  else {\n    uVar1 = *(undefined4 *)(param_1 + 8);\n    *puVar3 = &PTR_FUN_00434740;\n    puVar3[1] = local_8;\n    puVar3[2] = uVar1;\n  }\n  return puVar3;\n}\n\n"
    },
    {
      "name": "FUN_0041a48a",
      "entry": "0041a48a",
      "c": "\nbool FUN_0041a48a(char param_1,undefined4 param_2,undefined4 param_3,int param_4,int param_5,\n                 undefined *param_6,int param_7)\n\n{\n  undefined4 *puVar1;\n  code *pcVar2;\n  HRESULT HVar3;\n  int iVar4;\n  bool bVar5;\n  int *local_c;\n  int *local_8;\n  \n  bVar5 = false;\n  HVar3 = CoCreateInstance((IID *)&DAT_0043554c,(LPUNKNOWN)0x0,1,(IID *)&DAT_0043545c,&local_8);\n  if (-1 < HVar3) {\n    puVar1 = (undefined4 *)*local_8;\n    (*(code *)PTR_guard_check_icall_00433278)(local_8,&DAT_0043553c,&local_c);\n    iVar4 = (*(code *)*puVar1)();\n    if (-1 < iVar4) {\n      if (param_1 != '\\0') {\n        pcVar2 = *(code **)(*local_c + 0x14);\n        (*(code *)PTR_guard_check_icall_00433278)(local_c,param_3,2);\n        (*pcVar2)();\n      }\n      pcVar2 = *(code **)(*local_8 + 0x50);\n      (*(code *)PTR_guard_check_icall_00433278)(local_8,param_2);\n      (*pcVar2)();\n      if (param_5 != 0) {\n        pcVar2 = *(code **)(*local_8 + 0x1c);\n        (*(code *)PTR_guard_check_icall_00433278)(local_8,param_5);\n        (*pcVar2)();\n      }\n      pcVar2 = *(code **)(*local_8 + 0x44);\n      if (param_6 == (undefined *)0x0) {\n        param_6 = &DAT_004335f4;\n      }\n      (*(code *)PTR_guard_check_icall_00433278)(local_8,param_6,0);\n      (*pcVar2)();\n      if (param_7 != 0) {\n        pcVar2 = *(code **)(*local_8 + 0x2c);\n        (*(code *)PTR_guard_check_icall_00433278)(local_8,param_7);\n        (*pcVar2)();\n      }\n      if (param_4 != 0) {\n        pcVar2 = *(code **)(*local_8 + 0x24);\n        (*(code *)PTR_guard_check_icall_00433278)(local_8,param_4);\n        (*pcVar2)();\n      }\n      pcVar2 = *(code **)(*local_c + 0x18);\n      (*(code *)PTR_guard_check_icall_00433278)(local_c,param_3,1);\n      iVar4 = (*pcVar2)();\n      bVar5 = -1 < iVar4;\n      pcVar2 = *(code **)(*local_c + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(local_c);\n      (*pcVar2)();\n    }\n    pcVar2 = *(code **)(*local_8 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(local_8);\n    (*pcVar2)();\n  }\n  return bVar5;\n}\n\n"
    },
    {
      "name": "FUN_0041a5c6",
      "entry": "0041a5c6",
      "c": "\nuint FUN_0041a5c6(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_0041a5e4(100);\n  if ((int)uVar1 < 0x7d) {\n    uVar1 = FUN_0041a605(100);\n    if ((int)uVar1 < 0x7d) {\n      return uVar1 & 0xffffff00;\n    }\n  }\n  return CONCAT31((int3)(uVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "FUN_0041a5e4",
      "entry": "0041a5e4",
      "c": "\nint FUN_0041a5e4(int param_1)\n\n{\n  if (DAT_00448430 == 0) {\n    FUN_0041a663();\n  }\n  return (DAT_00448430 * param_1) / 0x60;\n}\n\n"
    },
    {
      "name": "FUN_0041a605",
      "entry": "0041a605",
      "c": "\nint FUN_0041a605(int param_1)\n\n{\n  if (DAT_00448434 == 0) {\n    FUN_0041a663();\n  }\n  return (DAT_00448434 * param_1) / 0x60;\n}\n\n"
    },
    {
      "name": "FUN_0041a626",
      "entry": "0041a626",
      "c": "\nundefined4 * __thiscall FUN_0041a626(void *this,undefined4 param_1,int param_2)\n\n{\n  void *this_00;\n  undefined4 *puVar1;\n  \n  this_00 = (void *)GdipAlloc(0x10,this);\n  if (this_00 == (void *)0x0) {\n    puVar1 = (undefined4 *)0x0;\n  }\n  else {\n    puVar1 = FUN_0041a3b9(this_00,param_1,param_2);\n  }\n  return puVar1;\n}\n\n"
    },
    {
      "name": "FUN_0041a64d",
      "entry": "0041a64d",
      "c": "\nbool FUN_0041a64d(LPWSTR param_1,DWORD param_2)\n\n{\n  DWORD DVar1;\n  \n  DVar1 = GetCurrentDirectoryW(param_2,param_1);\n  return DVar1 != 0;\n}\n\n"
    },
    {
      "name": "FUN_0041a663",
      "entry": "0041a663",
      "c": "\nvoid FUN_0041a663(void)\n\n{\n  HDC hdc;\n  \n  hdc = GetDC((HWND)0x0);\n  if (hdc != (HDC)0x0) {\n    DAT_00448430 = GetDeviceCaps(hdc,0x58);\n    DAT_00448434 = GetDeviceCaps(hdc,0x5a);\n    ReleaseDC((HWND)0x0,hdc);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a699",
      "entry": "0041a699",
      "c": "\nbool FUN_0041a699(void)\n\n{\n  HDC hdc;\n  int iVar1;\n  \n  hdc = GetDC((HWND)0x0);\n  iVar1 = GetDeviceCaps(hdc,0xc);\n  ReleaseDC((HWND)0x0,hdc);\n  return 0x1f < iVar1;\n}\n\n"
    },
    {
      "name": "FUN_0041a6c2",
      "entry": "0041a6c2",
      "c": "\nundefined4 FUN_0041a6c2(LPCWSTR param_1)\n\n{\n  _func_5234 *p_Var1;\n  code *pcVar2;\n  HRSRC hResInfo;\n  DWORD dwBytes;\n  HGLOBAL pvVar3;\n  uint *puVar4;\n  uint *puVar5;\n  HRESULT HVar6;\n  undefined4 *puVar7;\n  int iVar8;\n  void *this;\n  LPSTREAM This;\n  LPSTREAM pIStack_8;\n  undefined4 uStack_4;\n  \n  hResInfo = FindResourceW(DAT_00441028,param_1,L\"PNG\");\n  if ((((hResInfo == (HRSRC)0x0) || (dwBytes = SizeofResource(DAT_00441028,hResInfo), dwBytes == 0))\n      || (pvVar3 = LoadResource(DAT_00441028,hResInfo), pvVar3 == (HGLOBAL)0x0)) ||\n     (puVar4 = (uint *)LockResource(pvVar3), puVar4 == (uint *)0x0)) {\n    uStack_4 = 0;\n  }\n  else {\n    uStack_4 = 0;\n    pvVar3 = GlobalAlloc(2,dwBytes);\n    if (pvVar3 != (HGLOBAL)0x0) {\n      puVar5 = (uint *)GlobalLock(pvVar3);\n      if (puVar5 != (uint *)0x0) {\n        FUN_00420320(puVar5,puVar4,dwBytes);\n        pIStack_8 = (IStream *)0x0;\n        HVar6 = CreateStreamOnHGlobal(pvVar3,0,&pIStack_8);\n        if (HVar6 == 0) {\n          puVar7 = FUN_0041a626(this,pIStack_8,0);\n          p_Var1 = pIStack_8->lpVtbl->Release;\n          This = pIStack_8;\n          (*(code *)PTR_guard_check_icall_00433278)();\n          (*p_Var1)(This);\n          if (puVar7 != (undefined4 *)0x0) {\n            iVar8 = puVar7[2];\n            puVar7[2] = 0;\n            if ((iVar8 == 0) &&\n               (iVar8 = GdipCreateHBITMAPFromBitmap(puVar7[1],&uStack_4,0xffffff), iVar8 != 0)) {\n              puVar7[2] = iVar8;\n            }\n            pcVar2 = *(code **)*puVar7;\n            (*(code *)PTR_guard_check_icall_00433278)(1);\n            (*pcVar2)();\n          }\n        }\n        GlobalUnlock(pvVar3);\n      }\n      GlobalFree(pvVar3);\n    }\n  }\n  return uStack_4;\n}\n\n"
    },
    {
      "name": "FUN_0041a7e4",
      "entry": "0041a7e4",
      "c": "\nvoid FUN_0041a7e4(HWND param_1,LPCWSTR param_2,LPCWSTR param_3,UINT param_4)\n\n{\n  if (DAT_00441094 != '\\0') {\n    param_4 = param_4 | 0x180000;\n  }\n  MessageBoxW(param_1,param_2,param_3,param_4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041a80c",
      "entry": "0041a80c",
      "c": "\nvoid FUN_0041a80c(HANDLE param_1,RGBQUAD param_2,int *param_3)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  int *piVar3;\n  HRESULT HVar4;\n  int iVar5;\n  HBITMAP pHVar6;\n  int unaff_EBX;\n  int *piVar7;\n  int *piVar8;\n  undefined4 uVar9;\n  int *piVar10;\n  undefined8 uVar11;\n  int *piStack_94;\n  int *piVar12;\n  int *piVar13;\n  int *piStack_70;\n  int iStack_6c;\n  BITMAPINFO BStack_68;\n  int *piStack_3c;\n  LONG LStack_34;\n  \n  bVar2 = FUN_0041a699();\n  if (!bVar2) {\n    FUN_0041aac9(param_1,(int)param_2,(int)param_3);\n    return;\n  }\n  GetObjectW(param_1,0x18,&BStack_68.bmiHeader.biClrImportant);\n  piVar3 = (int *)(((int)piStack_3c * (int)param_2) / (int)BStack_68.bmiColors[0]);\n  if ((int)param_3 <= (int)piVar3) {\n    piVar3 = param_3;\n  }\n  if ((param_2 == BStack_68.bmiColors[0]) && (piVar3 == piStack_3c)) {\nLAB_0041a898:\n    piStack_94 = (int *)0x41a8a3;\n    CopyImage(param_1,0,0,0,0);\n    return;\n  }\n  piStack_94 = (int *)0x41a894;\n  HVar4 = CoCreateInstance((IID *)&DAT_0043555c,(LPUNKNOWN)0x0,1,(IID *)&DAT_00434754,&piStack_70);\n  if (HVar4 < 0) goto LAB_0041a898;\n  piVar7 = &iStack_6c;\n  piVar12 = (int *)0x2;\n  iVar5 = *piStack_70;\n  piStack_94 = piStack_70;\n  (*(code *)PTR_guard_check_icall_00433278)();\n  iVar5 = (**(code **)(iVar5 + 0x54))();\n  piVar13 = piVar7;\n  if (-1 < iVar5) {\n    pcVar1 = *(code **)(*piVar7 + 0x28);\n    (*(code *)PTR_guard_check_icall_00433278)();\n    iVar5 = (*pcVar1)();\n    piVar13 = piVar7;\n    if (-1 < iVar5) {\n      iVar5 = *piVar7;\n      uVar11 = 0;\n      piVar10 = (int *)0x0;\n      uVar9 = 0;\n      piVar8 = (int *)&DAT_0043556c;\n      (*(code *)PTR_guard_check_icall_00433278)(piVar7,piVar12,&DAT_0043556c,0);\n      iVar5 = (**(code **)(iVar5 + 0x20))();\n      if (-1 < iVar5) {\n        BStack_68.bmiHeader.biWidth = LStack_34;\n        BStack_68.bmiHeader.biHeight = -(int)piVar3;\n        BStack_68.bmiHeader.biSizeImage = 0;\n        BStack_68.bmiHeader.biXPelsPerMeter = 0;\n        BStack_68.bmiHeader.biPlanes = 1;\n        BStack_68.bmiHeader.biBitCount = 0x20;\n        BStack_68.bmiHeader.biYPelsPerMeter = 0;\n        BStack_68.bmiHeader.biClrUsed = 0;\n        BStack_68.bmiHeader.biClrImportant = 0;\n        BStack_68.bmiColors[0].rgbBlue = '\\0';\n        BStack_68.bmiColors[0].rgbGreen = '\\0';\n        BStack_68.bmiColors[0].rgbRed = '\\0';\n        BStack_68.bmiColors[0].rgbReserved = '\\0';\n        BStack_68.bmiHeader.biSize = 0x28;\n        BStack_68.bmiHeader.biCompression = 0;\n        pHVar6 = CreateDIBSection((HDC)0x0,&BStack_68,0,&piStack_94,(HANDLE)0x0,0);\n        piVar13 = (int *)uVar11;\n        if (pHVar6 != (HBITMAP)0x0) {\n          pcVar1 = *(code **)(*piVar10 + 0x2c);\n          (*(code *)PTR_guard_check_icall_00433278)(piVar10,&stack0xffffff60);\n          (*pcVar1)();\n          iVar5 = *piVar13;\n          piVar12 = piVar3;\n          (*(code *)PTR_guard_check_icall_00433278)(piVar13,uVar9,piStack_3c,piVar3,3);\n          (**(code **)(iVar5 + 0x20))();\n          piVar13 = (int *)0x0;\n          iVar5 = *piVar7;\n          (*(code *)PTR_guard_check_icall_00433278)\n                    (piVar7,&stack0xffffff54,BStack_68.bmiHeader.biXPelsPerMeter << 2,\n                     (int)piVar3 * BStack_68.bmiHeader.biXPelsPerMeter * 4,uVar9);\n          iVar5 = (**(code **)(iVar5 + 0x1c))();\n          if (iVar5 < 0) {\n            DeleteObject(piVar12);\n          }\n          pcVar1 = *(code **)(*piStack_3c + 8);\n          (*(code *)PTR_guard_check_icall_00433278)(piStack_3c);\n          (*pcVar1)();\n        }\n        pcVar1 = *(code **)(*piVar13 + 8);\n        (*(code *)PTR_guard_check_icall_00433278)(piVar13);\n        (*pcVar1)();\n        pcVar1 = *(code **)(*piVar13 + 8);\n        (*(code *)PTR_guard_check_icall_00433278)(piVar13);\n        (*pcVar1)();\n        pcVar1 = *(code **)(*piVar8 + 8);\n        (*(code *)PTR_guard_check_icall_00433278)(piVar8);\n        (*pcVar1)();\n        if (unaff_EBX != 0) {\n          return;\n        }\n        goto LAB_0041aab4;\n      }\n      piVar3 = (int *)((ulonglong)uVar11 >> 0x20);\n      pcVar1 = *(code **)(*piVar3 + 8);\n      (*(code *)PTR_guard_check_icall_00433278)(piVar3);\n      (*pcVar1)();\n    }\n    pcVar1 = *(code **)(*piVar12 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n  pcVar1 = *(code **)(*piVar13 + 8);\n  (*(code *)PTR_guard_check_icall_00433278)();\n  (*pcVar1)();\nLAB_0041aab4:\n  CopyImage(param_1,0,0,0,0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041aac9",
      "entry": "0041aac9",
      "c": "\nHBITMAP FUN_0041aac9(HANDLE param_1,int param_2,int param_3)\n\n{\n  HDC hdc;\n  HDC hdc_00;\n  HDC hdc_01;\n  int iVar1;\n  HBITMAP h;\n  HGDIOBJ h_00;\n  HGDIOBJ h_01;\n  undefined1 auStack_18 [4];\n  int iStack_14;\n  int iStack_10;\n  \n  hdc = GetDC((HWND)0x0);\n  hdc_00 = CreateCompatibleDC(hdc);\n  hdc_01 = CreateCompatibleDC(hdc);\n  GetObjectW(param_1,0x18,auStack_18);\n  iVar1 = (iStack_10 * param_2) / iStack_14;\n  if (iVar1 < param_3) {\n    param_3 = iVar1;\n  }\n  h = CreateCompatibleBitmap(hdc,param_2,param_3);\n  h_00 = SelectObject(hdc_00,param_1);\n  h_01 = SelectObject(hdc_01,h);\n  StretchBlt(hdc_01,0,0,param_2,param_3,hdc_00,0,0,iStack_14,iStack_10,0xcc0020);\n  SelectObject(hdc_00,h_00);\n  SelectObject(hdc_01,h_01);\n  DeleteDC(hdc_00);\n  DeleteDC(hdc_01);\n  ReleaseDC((HWND)0x0,hdc);\n  return h;\n}\n\n"
    },
    {
      "name": "FUN_0041abab",
      "entry": "0041abab",
      "c": "\nvoid FUN_0041abab(HWND param_1)\n\n{\n  int iVar1;\n  WCHAR local_a4 [80];\n  \n  iVar1 = GetClassNameW(param_1,local_a4,0x50);\n  if ((iVar1 != 0) && (iVar1 = FUN_00411fbb(local_a4,L\"EDIT\"), iVar1 != 0)) {\n    param_1 = FindWindowExW(param_1,(HWND)0x0,L\"EDIT\",(LPCWSTR)0x0);\n  }\n  if (param_1 != (HWND)0x0) {\n    SHAutoComplete(param_1,0x10);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041ac04",
      "entry": "0041ac04",
      "c": "\nbool FUN_0041ac04(LPCWSTR param_1)\n\n{\n  BOOL BVar1;\n  \n  BVar1 = SetCurrentDirectoryW(param_1);\n  return BVar1 != 0;\n}\n\n"
    },
    {
      "name": "FUN_0041ac16",
      "entry": "0041ac16",
      "c": "\nundefined4 * __fastcall FUN_0041ac16(undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 local_20;\n  undefined4 local_1c;\n  undefined4 local_18;\n  undefined4 local_14;\n  INITCOMMONCONTROLSEX local_10;\n  undefined1 local_8 [4];\n  \n  uVar1 = FUN_0041081b(0x43476c);\n  *param_1 = uVar1;\n  OleInitialize((LPVOID)0x0);\n  local_10.dwSize = 8;\n  local_10.dwICC = 0x7ff;\n  InitCommonControlsEx(&local_10);\n  local_20 = 1;\n  local_1c = 0;\n  local_18 = 0;\n  local_14 = 0;\n  GdiplusStartup(local_8,&local_20,0);\n  SHGetMalloc((IMalloc **)&DAT_00448438);\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0041ac7c",
      "entry": "0041ac7c",
      "c": "\nvoid __fastcall FUN_0041ac7c(int param_1)\n\n{\n  code *pcVar1;\n  void *local_10;\n  undefined1 *puStack_c;\n  undefined4 uStack_8;\n  \n  uStack_8 = 0xffffffff;\n  puStack_c = &LAB_00432641;\n  local_10 = ExceptionList;\n  pcVar1 = *(code **)(*DAT_00448438 + 8);\n  ExceptionList = &local_10;\n  (*(code *)PTR_guard_check_icall_00433278)(DAT_00448438);\n  (*pcVar1)();\n  GdiplusShutdown(*(undefined4 *)(param_1 + 4));\n  OleUninitialize();\n  ExceptionList = local_10;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041acce",
      "entry": "0041acce",
      "c": "\nvoid __fastcall FUN_0041acce(void *param_1)\n\n{\n  FUN_00401645((int *)((int)param_1 + 0xb49c));\n  FUN_00401645((int *)((int)param_1 + 0xb43c));\n  FUN_00401645((int *)((int)param_1 + 0xb3dc));\n  FUN_00401645((int *)((int)param_1 + 0xb37c));\n  FUN_00401645((int *)((int)param_1 + 0xb31c));\n  FUN_0040b5f4(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041ad10",
      "entry": "0041ad10",
      "c": "\nundefined4 FUN_0041ad10(HWND param_1,int param_2,uint param_3,undefined4 *param_4)\n\n{\n  bool bVar1;\n  uint uVar2;\n  wchar_t *pwVar3;\n  LPCWSTR pWVar4;\n  LPWSTR pWVar5;\n  char cVar6;\n  INT_PTR nResult;\n  \n  uVar2 = FUN_00401316(param_1,param_2,param_3,param_4,L\"ASKNEXTVOL\",0,0);\n  if ((char)uVar2 != '\\0') {\n    return 1;\n  }\n  if (param_2 == 0x110) {\n    pWVar4 = (LPCWSTR)*param_4;\n    DAT_00461cb8 = param_4;\nLAB_0041adbf:\n    SetDlgItemTextW(param_1,0x66,pWVar4);\n  }\n  else {\n    if (param_2 != 0x111) {\n      return 0;\n    }\n    uVar2 = param_3 & 0xffff;\n    if (uVar2 == 1) {\n      GetDlgItemTextW(param_1,0x66,(LPWSTR)*DAT_00461cb8,DAT_00461cb8[1]);\n      nResult = 1;\n    }\n    else {\n      if (uVar2 != 2) {\n        if (uVar2 != 0x67) {\n          return 0;\n        }\n        cVar6 = '\\0';\n        pwVar3 = FUN_0040c29a((wchar_t *)*DAT_00461cb8);\n        pWVar5 = (LPWSTR)*DAT_00461cb8;\n        pWVar4 = (LPCWSTR)FUN_0040e617(0x8e);\n        bVar1 = FUN_00401100(param_1,pWVar4,pWVar5,(int)pwVar3,cVar6);\n        if (!bVar1) {\n          return 1;\n        }\n        pWVar4 = (LPCWSTR)*DAT_00461cb8;\n        goto LAB_0041adbf;\n      }\n      nResult = 0;\n    }\n    EndDialog(param_1,nResult);\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041add2",
      "entry": "0041add2",
      "c": "\nvoid FUN_0041add2(short *param_1)\n\n{\n  short sVar1;\n  short *psVar2;\n  \n  sVar1 = *param_1;\n  psVar2 = param_1;\n  do {\n    if (sVar1 == 0) {\n      *param_1 = 0;\n      return;\n    }\n    if (sVar1 == 0x5c) {\n      if (psVar2[1] == 0x5c) {\n        psVar2 = psVar2 + 2;\n        sVar1 = 0x5c;\n      }\n      else {\n        if (psVar2[1] != 0x6e) goto LAB_0041ae0c;\n        psVar2 = psVar2 + 2;\n        sVar1 = 10;\n      }\n    }\n    else {\nLAB_0041ae0c:\n      psVar2 = psVar2 + 1;\n    }\n    *param_1 = sVar1;\n    param_1 = param_1 + 1;\n    sVar1 = *psVar2;\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_0041ae2f",
      "entry": "0041ae2f",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041ae2f(void)\n\n{\n  wchar_t *pwVar1;\n  int iVar2;\n  size_t sVar3;\n  wchar_t *pwVar4;\n  uint uVar5;\n  wchar_t local_1028;\n  undefined2 auStack_1026 [2049];\n  undefined1 local_24 [32];\n  \n  local_24._28_4_ = 0x41ae3c;\n  if (DAT_0044946a != 0) {\n    uVar5 = 6;\n    pwVar4 = (wchar_t *)PTR_u_RarSFX_0043e724;\n    pwVar1 = FUN_0040c29a(&DAT_0044946a);\n    iVar2 = FUN_00411fdd(pwVar1,pwVar4,uVar5);\n    if (iVar2 == 0) {\n      FUN_0041ac04((LPCWSTR)&DAT_00448468);\n      FUN_00410602(&local_1028,0x44946a,0x800);\n      sVar3 = _wcslen(&local_1028);\n      auStack_1026[sVar3] = 0;\n      _memset(local_24,0,0x1e);\n      local_24._4_4_ = 3;\n      local_24._16_2_ = 0x14;\n      local_24._8_4_ = &local_1028;\n      SHFileOperationW((LPSHFILEOPSTRUCTW)local_24);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041aecd",
      "entry": "0041aecd",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid __cdecl FUN_0041aecd(LPCWSTR param_1)\n\n{\n  WCHAR local_2804 [5118];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x41aeda;\n  if (param_1 != (LPCWSTR)0x0) {\n    if (*param_1 == L'\\0') {\n      return;\n    }\n    wvsprintfW(local_2804,param_1,&stack0x00000008);\n    FUN_0041d4d4('\\x01',(LPARAM)local_2804);\n  }\n  DAT_0044845c = DAT_0044845c + 1;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041af0f",
      "entry": "0041af0f",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0041af0f(uint param_1,int param_2,LPWSTR param_3,int param_4)\n\n{\n  WCHAR local_130 [100];\n  WCHAR local_68 [50];\n  \n  if (DAT_0043e73c == (undefined *)0x0) {\n    GetLocaleInfoW(0x400,0xf,local_130,100);\n    _DAT_0045fcb0 = local_130[0];\n    _DAT_0045fcb2 = 0;\n    DAT_0043e73c = &DAT_0045fcb0;\n  }\n  FUN_004104bd(param_1,param_2,(int)local_68,0x32);\n  *param_3 = L'\\0';\n  GetNumberFormatW(0x400,0,local_68,(NUMBERFMTW *)&DAT_0043e72c,param_3,param_4);\n  param_3[param_4 + -1] = L'\\0';\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041af98",
      "entry": "0041af98",
      "c": "\nushort * FUN_0041af98(ushort *param_1,undefined2 *param_2,uint param_3)\n\n{\n  char cVar1;\n  ushort *puVar2;\n  ushort *puVar3;\n  uint uVar4;\n  int iVar5;\n  bool bVar6;\n  \n  if ((param_1 == (ushort *)0x0) || (bVar6 = false, *param_1 == 0)) {\n    *param_2 = 0;\n    puVar3 = (ushort *)0x0;\n  }\n  else {\n    iVar5 = 0;\n    uVar4 = 1;\n    puVar3 = param_1;\n    do {\n      if (param_3 <= uVar4) break;\n      if (*puVar3 == 0x22) {\n        puVar2 = puVar3 + 1;\n        if ((*puVar2 == 0x22) &&\n           (((bVar6 || (puVar3 != param_1)) || ((puVar3[2] != 0x2c && (puVar3[2] != 0)))))) {\n          param_2[iVar5] = 0x22;\n          puVar3 = puVar2;\n          goto LAB_0041b00f;\n        }\n        if (bVar6) {\n          bVar6 = false;\n        }\n        else {\n          puVar2 = FUN_004222c6(puVar2,0x22);\n          bVar6 = puVar2 != (ushort *)0x0;\n          if (!bVar6) goto LAB_0041b048;\n        }\n      }\n      else {\nLAB_0041b048:\n        if ((*puVar3 == 0x2c) && (!bVar6)) {\n          param_2[iVar5] = 0;\n          do {\n            puVar3 = puVar3 + 1;\n            cVar1 = FUN_0041048d((uint)*puVar3);\n          } while (cVar1 != '\\0');\n          return puVar3;\n        }\n        param_2[iVar5] = *puVar3;\nLAB_0041b00f:\n        iVar5 = iVar5 + 1;\n        uVar4 = uVar4 + 1;\n      }\n      puVar3 = puVar3 + 1;\n    } while (*puVar3 != 0);\n    param_2[iVar5] = 0;\n  }\n  return puVar3;\n}\n\n"
    },
    {
      "name": "FUN_0041b093",
      "entry": "0041b093",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nuint FUN_0041b093(void)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint *puVar3;\n  undefined4 uVar4;\n  undefined1 *_Memory;\n  int unaff_EBP;\n  int iVar5;\n  \n  FUN_0041eb78();\n  *(undefined1 **)(unaff_EBP + -0x10) = &stack0xffff82c4;\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  FUN_004013dc();\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  FUN_00401fdc((void *)(unaff_EBP + -0x7d3c),*(undefined4 *)(unaff_EBP + 0xc));\n  if (*(char *)(unaff_EBP + -0x105f) == '\\0') {\n    *(undefined4 *)(unaff_EBP + -0x24) = 0;\n    *(undefined4 *)(unaff_EBP + -0x20) = 0;\n    *(undefined4 *)(unaff_EBP + -0x1c) = 0;\n    *(undefined4 *)(unaff_EBP + -0x18) = 0;\n    *(undefined1 *)(unaff_EBP + -0x14) = 0;\n    *(undefined1 *)(unaff_EBP + -4) = 2;\n    bVar1 = FUN_004019af((int *)(unaff_EBP + -0x7d3c));\n    if (bVar1) {\n      iVar5 = *(int *)(unaff_EBP + -0x20);\n      puVar3 = (uint *)FUN_00423e33(iVar5 * 2 + 2);\n      **(undefined4 **)(unaff_EBP + 0x10) = puVar3;\n      if (puVar3 == (uint *)0x0) {\n        iVar5 = 0;\n      }\n      else {\n        *(undefined2 *)((int)puVar3 + iVar5 * 2) = 0;\n        FUN_00420320(puVar3,*(uint **)(unaff_EBP + -0x24),iVar5 * 2);\n      }\n      **(int **)(unaff_EBP + 0x14) = iVar5;\n    }\n    _Memory = *(undefined1 **)(unaff_EBP + -0x24);\n    *(undefined1 *)(unaff_EBP + -4) = 3;\n    if (_Memory != (undefined1 *)0x0) {\n      if (*(char *)(unaff_EBP + -0x14) != '\\0') {\n        FUN_0040f445(_Memory,*(int *)(unaff_EBP + -0x1c) * 2);\n        _Memory = *(undefined1 **)(unaff_EBP + -0x24);\n      }\n      FID_conflict__free(_Memory);\n    }\n    uVar4 = FUN_00401692((int *)(unaff_EBP + -0x7d3c));\n    uVar2 = CONCAT31((int3)((uint)uVar4 >> 8),1);\n  }\n  else {\n    uVar2 = FUN_00401692((int *)(unaff_EBP + -0x7d3c));\n    uVar2 = uVar2 & 0xffffff00;\n  }\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar2;\n}\n\n"
    },
    {
      "name": "Catch@0041b18d",
      "entry": "0041b18d",
      "c": "\nundefined4 Catch_0041b18d(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00406cba(&DAT_00441098);\n  FUN_00406d83(&DAT_00441098,8);\n  FUN_0041d9f3(*(HWND *)(unaff_EBP + 8));\n  return 0x41b17a;\n}\n\n"
    },
    {
      "name": "Catch_All@0041b1b0",
      "entry": "0041b1b0",
      "c": "\nundefined4 Catch_All_0041b1b0(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041d9f3(*(HWND *)(unaff_EBP + 8));\n  return 0x41b17a;\n}\n\n"
    },
    {
      "name": "FUN_0041b1be",
      "entry": "0041b1be",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041b1be(short *param_1,int param_2)\n\n{\n  LSTATUS LVar1;\n  uint uVar2;\n  WCHAR local_2010 [2048];\n  BYTE local_1010 [4096];\n  DWORD local_10;\n  HKEY local_c;\n  DWORD local_8;\n  \n  local_8 = 0x41b1cb;\n  if (DAT_0044a470 != '\\0') {\n    FUN_0041c6f0((int)param_1,local_2010,0x800);\n    LVar1 = RegOpenKeyExW((HKEY)0x80000001,L\"Software\\\\WinRAR SFX\",0,1,&local_c);\n    if (LVar1 == 0) {\n      local_8 = 0x1000;\n      LVar1 = RegQueryValueExW(local_c,local_2010,(LPDWORD)0x0,&local_10,local_1010,&local_8);\n      if (LVar1 == 0) {\n        local_8 = local_8 >> 1;\n        uVar2 = local_8;\n        if (0x7fe < local_8) {\n          uVar2 = 0x7ff;\n        }\n        (local_1010 + uVar2 * 2)[0] = '\\0';\n        (local_1010 + uVar2 * 2)[1] = '\\0';\n        FUN_00410602(param_1,(int)local_1010,param_2);\n      }\n      RegCloseKey(local_c);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041b270",
      "entry": "0041b270",
      "c": "\nundefined4 FUN_0041b270(HWND param_1,int param_2,uint param_3,LPCWSTR param_4)\n\n{\n  uint uVar1;\n  INT_PTR nResult;\n  WCHAR local_104 [128];\n  \n  uVar1 = FUN_00401316(param_1,param_2,param_3,param_4,L\"GETPASSWORD1\",0,0);\n  if ((char)uVar1 == '\\0') {\n    if (param_2 == 0x110) {\n      SetDlgItemTextW(param_1,0x67,param_4);\n    }\n    else {\n      if (param_2 != 0x111) {\n        return 0;\n      }\n      if ((param_3 & 0xffff) == 1) {\n        GetDlgItemTextW(param_1,0x66,local_104,0x80);\n        FUN_0040f3fa(&DAT_00457a78,local_104);\n        FUN_0040f445((undefined1 *)local_104,0x80);\n        nResult = 1;\n      }\n      else {\n        if ((param_3 & 0xffff) != 2) {\n          return 0;\n        }\n        nResult = 0;\n      }\n      EndDialog(param_1,nResult);\n    }\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041b314",
      "entry": "0041b314",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nWCHAR * FUN_0041b314(WCHAR *param_1,LPCWSTR param_2,short *param_3,undefined1 *param_4,\n                    undefined1 *param_5,int param_6)\n\n{\n  WCHAR WVar1;\n  WCHAR *pWVar2;\n  LPCWSTR lpSrc;\n  int local_2004;\n  WCHAR local_2000 [4094];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x41b31e;\n  lpSrc = (LPCWSTR)0x0;\n  if (param_4 != (undefined1 *)0x0) {\n    *param_4 = 0;\n  }\n  if (param_5 != (undefined1 *)0x0) {\n    *param_5 = 0;\n  }\n  if ((param_1 == (WCHAR *)0x0) || (WVar1 = *param_1, WVar1 == L'\\0')) {\n    pWVar2 = (WCHAR *)0x0;\n  }\n  else {\n    local_2004 = 0;\n    do {\n      pWVar2 = param_1 + 1;\n      if (WVar1 == L'=') {\n        if ((param_3 == (short *)0x0) || (lpSrc != (LPCWSTR)0x0)) goto LAB_0041b393;\n        lpSrc = param_2;\n        if (param_4 != (undefined1 *)0x0) {\n          *param_4 = 1;\n        }\n      }\n      else {\n        if (WVar1 == L'\\r') {\n          pWVar2 = param_1 + 2;\n          break;\n        }\n        if (WVar1 == L'\\n') break;\nLAB_0041b393:\n        *param_2 = WVar1;\n        param_2 = param_2 + 1;\n        if (param_6 + -2 <= local_2004) {\n          *param_5 = 1;\n          break;\n        }\n      }\n      WVar1 = *pWVar2;\n      local_2004 = local_2004 + 1;\n      param_1 = pWVar2;\n    } while (WVar1 != L'\\0');\n    *param_2 = L'\\0';\n    if ((param_3 != (short *)0x0) && (*param_3 = 0, lpSrc != (LPCWSTR)0x0)) {\n      ExpandEnvironmentStringsW(lpSrc,local_2000,0x1000);\n      FUN_00410602(param_3,(int)local_2000,param_6);\n      *lpSrc = L'\\0';\n    }\n  }\n  return pWVar2;\n}\n\n"
    },
    {
      "name": "FUN_0041b425",
      "entry": "0041b425",
      "c": "\nchar FUN_0041b425(LPWSTR param_1,undefined4 param_2)\n\n{\n  _func_5075 *p_Var1;\n  int iVar2;\n  BOOL BVar3;\n  char cVar4;\n  IMalloc *local_c;\n  LPCITEMIDLIST local_8;\n  \n  SHGetMalloc(&local_c);\n  iVar2 = SHGetFolderLocation(0,param_2,0,0,&local_8);\n  cVar4 = iVar2 == 0;\n  if (iVar2 == 0) {\n    BVar3 = SHGetPathFromIDListW(local_8,param_1);\n    cVar4 = '\\x01' - (BVar3 != 1);\n    p_Var1 = local_c->lpVtbl->Free;\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*p_Var1)(local_c,local_8);\n  }\n  else {\n    *param_1 = L'\\0';\n  }\n  return cVar4;\n}\n\n"
    },
    {
      "name": "FUN_0041b48e",
      "entry": "0041b48e",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nwchar_t * FUN_0041b48e(undefined4 param_1,undefined4 *param_2)\n\n{\n  wchar_t *_Dest;\n  size_t sVar1;\n  wchar_t *pwVar2;\n  WCHAR *pWVar3;\n  size_t sVar4;\n  char cStack_1ffd;\n  wchar_t awStack_1ffc [4092];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x41b498;\n  _Dest = (wchar_t *)FUN_00423e33(0x80000);\n  if (_Dest == (wchar_t *)0x0) {\n    FUN_00406ca7(&DAT_00441098);\n  }\n  *_Dest = L'\\0';\n  sVar4 = 0;\n  do {\n    do {\n      pWVar3 = FUN_0041b314((WCHAR *)*param_2,awStack_1ffc,(short *)0x0,(undefined1 *)0x0,\n                            &cStack_1ffd,0x1000);\n      *param_2 = pWVar3;\n      if (pWVar3 == (WCHAR *)0x0) {\n        return _Dest;\n      }\n    } while ((*_Dest == L'\\0') && (awStack_1ffc[0] == L'{'));\n    if (awStack_1ffc[0] == L'}') {\n      return _Dest;\n    }\n    sVar1 = _wcslen(awStack_1ffc);\n    if (0x3fffb < sVar1 + sVar4) {\n      return _Dest;\n    }\n    _wcscat(_Dest,awStack_1ffc);\n    sVar4 = _wcslen(_Dest);\n    if (sVar4 != 0) {\n      pwVar2 = _Dest + (sVar4 - 1);\n      do {\n        if (*pwVar2 != L' ') break;\n        pwVar2 = pwVar2 + -1;\n        sVar4 = sVar4 - 1;\n      } while (sVar4 != 0);\n    }\n    if (cStack_1ffd == '\\0') {\n      _wcscpy(_Dest + sVar4,L\"\\r\\n\");\n    }\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_0041b568",
      "entry": "0041b568",
      "c": "\nvoid FUN_0041b568(void)\n\n{\n  BOOL BVar1;\n  tagMSG local_20;\n  \n  BVar1 = PeekMessageW(&local_20,(HWND)0x0,0,0,0);\n  if (BVar1 != 0) {\n    GetMessageW(&local_20,(HWND)0x0,0,0);\n    if ((DAT_00448458 != (HWND)0x0) &&\n       (BVar1 = IsDialogMessageW(DAT_00448458,&local_20), BVar1 != 0)) {\n      return;\n    }\n    TranslateMessage(&local_20);\n    DispatchMessageW(&local_20);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041b5c0",
      "entry": "0041b5c0",
      "c": "\nundefined4 FUN_0041b5c0(HWND param_1,int param_2,uint param_3,undefined4 param_4)\n\n{\n  uint uVar1;\n  HWND hWnd;\n  DWORD lParam;\n  INT_PTR nResult;\n  \n  uVar1 = FUN_00401316(param_1,param_2,param_3,param_4,L\"LICENSEDLG\",0,0);\n  if ((char)uVar1 == '\\0') {\n    if (param_2 == 0x110) {\n      FUN_0041d69e(param_1);\n      if (DAT_00457b7c != 0) {\n        SendMessageW(param_1,0x80,1,DAT_00457b7c);\n      }\n      if (DAT_0045ec84 != 0) {\n        SendDlgItemMessageW(param_1,0x66,0x172,0,DAT_0045ec84);\n      }\n      if (DAT_0045fc9c != (LPCWSTR)0x0) {\n        SetWindowTextW(param_1,DAT_0045fc9c);\n      }\n      hWnd = GetDlgItem(param_1,0x65);\n      SendMessageW(hWnd,0x435,0,0x10000);\n      lParam = GetSysColor(0xf);\n      SendMessageW(hWnd,0x443,0,lParam);\n      SetForegroundWindow(param_1);\n      FUN_00419ed5(DAT_00448444,DAT_0044102c,hWnd,DAT_0045fc98,(wchar_t *)0x0,0);\n      FID_conflict__free(DAT_0045fc9c);\n      FID_conflict__free(DAT_0045fc98);\n    }\n    else {\n      if (param_2 != 0x111) {\n        return 0;\n      }\n      if ((param_3 & 0xffff) == 1) {\n        nResult = 1;\n      }\n      else {\n        if ((param_3 & 0xffff) != 2) {\n          return 0;\n        }\n        nResult = 0;\n      }\n      EndDialog(param_1,nResult);\n    }\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041b6dd",
      "entry": "0041b6dd",
      "c": "\nHBITMAP FUN_0041b6dd(void)\n\n{\n  HBITMAP h;\n  undefined4 uVar1;\n  HBITMAP pHVar2;\n  int *piVar3;\n  RGBQUAD RVar4;\n  HBITMAP ho;\n  bool bVar5;\n  undefined1 local_1c [4];\n  int local_18;\n  int local_14;\n  \n  h = LoadBitmapW(DAT_00441028,(LPCWSTR)0x65);\n  bVar5 = h == (HBITMAP)0x0;\n  if (h == (HBITMAP)0x0) {\n    h = (HBITMAP)FUN_0041a6c2((LPCWSTR)0x65);\n    if (h == (HBITMAP)0x0) {\n      local_18 = 0x5d;\n      local_14 = 0x12e;\n      goto LAB_0041b728;\n    }\n  }\n  GetObjectW(h,0x18,local_1c);\nLAB_0041b728:\n  uVar1 = FUN_0041a5c6();\n  if ((char)uVar1 != '\\0') {\n    ho = h;\n    if (bVar5) {\n      pHVar2 = (HBITMAP)FUN_0041a6c2((LPCWSTR)0x66);\n      if (pHVar2 != (HBITMAP)0x0) {\n        DeleteObject(h);\n        ho = pHVar2;\n      }\n    }\n    piVar3 = (int *)FUN_0041a605(local_14);\n    RVar4 = (RGBQUAD)FUN_0041a5e4(local_18);\n    h = (HBITMAP)FUN_0041a80c(ho,RVar4,piVar3);\n    DeleteObject(ho);\n  }\n  return h;\n}\n\n"
    },
    {
      "name": "FUN_0041b776",
      "entry": "0041b776",
      "c": "\nvoid __cdecl FUN_0041b776(undefined4 param_1,wchar_t *param_2)\n\n{\n  DWORD dwErrCode;\n  \n  if ((DAT_00448454 == '\\0') && (*param_2 != L'\\0')) {\n    dwErrCode = GetLastError();\n    FID_conflict___vsnprintf_c_l\n              ((wchar_t *)&DAT_0045fcb8,0x1000,param_2,(_locale_t)0x0,&stack0x0000000c);\n    FUN_0041aecd(L\"%s\");\n    if ((dwErrCode != 0) && ((SetLastError(dwErrCode), dwErrCode == 0x20 || (dwErrCode == 0x21)))) {\n      DAT_0044c574 = 1;\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041b7e0",
      "entry": "0041b7e0",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined4 FUN_0041b7e0(void)\n\n{\n  HWND hWnd;\n  bool bVar1;\n  char cVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  LPCWSTR pWVar5;\n  BOOL BVar6;\n  HWND pHVar7;\n  LPARAM LVar8;\n  wchar_t *pwVar9;\n  DWORD DVar10;\n  HANDLE hFileMappingObject;\n  LPWSTR pWVar11;\n  uint *puVar12;\n  UINT UVar13;\n  int iVar14;\n  size_t sVar15;\n  int unaff_EBP;\n  char *lpBaseAddress;\n  int iVar16;\n  INT_PTR IVar17;\n  int iVar18;\n  \n  FUN_0041eb78();\n  iVar16 = *(int *)(unaff_EBP + 0xc);\n  hWnd = *(HWND *)(unaff_EBP + 8);\n  uVar3 = FUN_00401316(hWnd,iVar16,*(undefined4 *)(unaff_EBP + 0x10),\n                       *(undefined4 *)(unaff_EBP + 0x14),L\"STARTDLG\",0,0);\n  if ((char)uVar3 != '\\0') goto LAB_0041c203;\n  if (iVar16 == 0x110) {\n    FUN_0041d69e(hWnd);\n    DAT_00448450 = hWnd;\n    DAT_00448458 = hWnd;\n    if (DAT_00457b7c != 0) {\n      SendMessageW(hWnd,0x80,1,DAT_00457b7c);\n    }\n    if (DAT_0045ec84 != 0) {\n      SendDlgItemMessageW(hWnd,0x6c,0x172,0,DAT_0045ec84);\n    }\n    pHVar7 = GetDlgItem(hWnd,0x68);\n    *(HWND *)(unaff_EBP + -0x14) = pHVar7;\n    SendMessageW(pHVar7,0x435,0,0x400000);\n    FUN_0041a64d((LPWSTR)(unaff_EBP + -0x3474),0x800);\n    pHVar7 = GetDlgItem(hWnd,0x66);\n    bVar1 = DAT_0044a472 == 0;\n    *(HWND *)(unaff_EBP + -0x18) = pHVar7;\n    pWVar5 = &DAT_0044a472;\n    if (bVar1) {\n      pWVar5 = (LPCWSTR)(unaff_EBP + -0x3474);\n    }\n    SetWindowTextW(pHVar7,pWVar5);\n    FUN_0041abab(pHVar7);\n    DAT_00448463 = '\\0';\n    uVar4 = FUN_0041b093();\n    if ((char)uVar4 == '\\0') {\n      DAT_00448456 = '\\x01';\n    }\n    if (DAT_0045fca0 != 0) {\n      FUN_0041c73f();\n    }\n    if (DAT_0044c577 == '\\0') {\n      pWVar5 = (LPCWSTR)FUN_0040e617(0xbf);\n      SetDlgItemTextW(hWnd,0x6b,pWVar5);\n      pWVar5 = (LPCWSTR)FUN_0040e617(0xbe);\n      SetDlgItemTextW(hWnd,1,pWVar5);\n    }\n    if (DAT_0045fca0 != 0) {\n      FUN_0041c73f();\n      if ((DAT_0045fc94 != (wchar_t *)0x0) && (DAT_0044a46c == 0)) {\n        FUN_00419ed5(DAT_00448440,DAT_0044102c,*(HWND *)(unaff_EBP + -0x14),DAT_0045fc94,\n                     (wchar_t *)0x0,0);\n        FID_conflict__free(DAT_0045fc94);\n      }\n      if ((((DAT_0044a46c != 1) && (SetForegroundWindow(hWnd), DAT_0044a46c != 1)) &&\n          (DAT_0044a471 == '\\0')) &&\n         ((FUN_0041c73f(), DAT_0045fc98 != 0 &&\n          (IVar17 = DialogBoxParamW(DAT_0044102c,L\"LICENSEDLG\",(HWND)0x0,FUN_0041b5c0,0),\n          IVar17 == 0)))) {\nLAB_0041b958:\n        DAT_00448454 = '\\x01';\nLAB_0041b95e:\n        IVar17 = 1;\nLAB_0041b95f:\n        EndDialog(hWnd,IVar17);\n        goto LAB_0041c203;\n      }\n      FUN_0041c73f();\n    }\n    if (((DAT_00448463 == '\\0') && (DAT_0045fc94 == (wchar_t *)0x0)) && (DAT_0044a46c == 0)) {\n      UVar13 = 0xaa;\n      *(undefined2 *)(unaff_EBP + -0x7874) = 0;\nLAB_0041c10d:\n      do {\n        if ((UVar13 != 0xaa) || (DAT_0044c577 != '\\0')) {\n          if ((UVar13 == 0xab) && (DAT_0044c577 != '\\0')) {\n            UVar13 = 0xac;\n            goto LAB_0041c10d;\n          }\n          FUN_004105da((wchar_t *)(unaff_EBP + -0x7874),0x43517c,0x2000);\n          uVar3 = 0x2000;\n          iVar16 = FUN_0040e617(UVar13);\n          FUN_004105da((wchar_t *)(unaff_EBP + -0x7874),iVar16,uVar3);\n        }\n        UVar13 = UVar13 + 1;\n      } while ((int)UVar13 < 0xb1);\n      FUN_00419ed5(DAT_00448440,DAT_0044102c,*(HWND *)(unaff_EBP + -0x14),\n                   (wchar_t *)(unaff_EBP + -0x7874),(wchar_t *)0x0,0);\n      pHVar7 = *(HWND *)(unaff_EBP + -0x18);\n    }\n    if (DAT_0044a46c == 2) {\n      EnableWindow(pHVar7,0);\n    }\n    if (DAT_00449468 != '\\0') {\n      FUN_004012d3(hWnd,0x67,0);\n      FUN_004012d3(hWnd,0x66,0);\n    }\n    if ((DAT_0044a46c != 0) && (DAT_00448454 == '\\0')) {\n      if (DAT_0044a46c == 1) {\n        SendMessageW(hWnd,0x111,1,0);\n      }\n      else {\n        PostMessageW(hWnd,0x111,1,0);\n      }\n    }\n    if (DAT_00448456 != '\\0') {\n      pWVar5 = (LPCWSTR)FUN_0040e617(0x90);\n      iVar16 = 1;\nLAB_0041c1fc:\n      SetDlgItemTextW(hWnd,iVar16,pWVar5);\n    }\n  }\n  else {\n    if (iVar16 != 0x111) {\nLAB_0041b841:\n      uVar4 = 0;\n      goto LAB_0041c205;\n    }\n    uVar3 = *(uint *)(unaff_EBP + 0x10) & 0xffff;\n    if (uVar3 != 1) {\n      if (uVar3 == 2) {\n        DAT_00448454 = '\\x01';\n        if ((DAT_0044844c != 0) && (DAT_0044845c != 0)) goto LAB_0041c203;\nLAB_0041b894:\n        IVar17 = 0;\n        goto LAB_0041b95f;\n      }\n      if (uVar3 != 0x67) goto LAB_0041b841;\n      pWVar11 = (LPWSTR)(unaff_EBP + -0x1474);\n      pWVar5 = (LPCWSTR)FUN_0040e617(100);\n      bVar1 = FUN_0040124f(hWnd,pWVar5,pWVar11);\n      if (!bVar1) goto LAB_0041c203;\n      pWVar5 = (LPCWSTR)(unaff_EBP + -0x1474);\n      iVar16 = 0x66;\n      goto LAB_0041c1fc;\n    }\n    if ((DAT_00448455 == '\\0') && (DAT_00461cbc != '\\0')) {\n      DAT_00461cbd = DAT_00461cbd == '\\0';\n      pWVar5 = (LPCWSTR)FUN_0040e617((byte)DAT_00461cbd + 0xe6);\n      SetDlgItemTextW(hWnd,1,pWVar5);\n      while (((DAT_00461cbd != '\\0' && (DAT_00448454 == '\\0')) &&\n             (BVar6 = GetMessageW((LPMSG)(unaff_EBP + -0x74),(HWND)0x0,0,0), BVar6 != 0))) {\n        BVar6 = IsDialogMessageW(hWnd,(LPMSG)(unaff_EBP + -0x74));\n        if (BVar6 == 0) {\n          TranslateMessage((MSG *)(unaff_EBP + -0x74));\n          DispatchMessageW((MSG *)(unaff_EBP + -0x74));\n        }\n      }\n    }\n    else {\n      GetDlgItemTextW(hWnd,0x66,(LPWSTR)(unaff_EBP + -0x2474),0x800);\n      if (DAT_00448455 != '\\0') {\n        if (DAT_00448456 != '\\0') goto LAB_0041b958;\n        goto LAB_0041b95e;\n      }\n      if (DAT_00448456 == '\\0') {\n        pHVar7 = GetDlgItem(hWnd,0x68);\n        if (DAT_0044845c == 0) {\n          SendMessageW(pHVar7,0xb1,0,-1);\n          SendMessageW(pHVar7,0xc2,0,0x4335f4);\n        }\n        SetFocus(pHVar7);\n        if (DAT_00449468 == '\\0') {\n          FUN_00410602((short *)(unaff_EBP + -0x1474),unaff_EBP + -0x2474,0x800);\n          FUN_0041d453((wchar_t *)(unaff_EBP + -0x1474),0x800);\n          pwVar9 = (wchar_t *)FUN_0040e617(0xb9);\n          FUN_00404092((wchar_t *)(unaff_EBP + -0x4974),0x880,pwVar9);\n          FUN_0041d4d4('\\0',unaff_EBP + -0x4974);\n        }\n        else {\n          LVar8 = FUN_0040e617(0xba);\n          FUN_0041d4d4('\\0',LVar8);\n        }\n        if (DAT_0044a471 == '\\0') {\n          FUN_0041db4b((wchar_t *)(unaff_EBP + -0x2474));\n        }\n        *(undefined1 *)(unaff_EBP + -0xd) = 0;\n        uVar3 = FUN_0040a0b1((wchar_t *)(unaff_EBP + -0x2474),'\\0');\n        if (((char)uVar3 == '\\0') && ((DVar10 = GetLastError(), DVar10 == 5 || (DVar10 == 3)))) {\n          *(undefined1 *)(unaff_EBP + -0xd) = 1;\n        }\n        cVar2 = FUN_0041ac04((LPCWSTR)(unaff_EBP + -0x2474));\n        *(char *)(unaff_EBP + -0xe) = cVar2;\n        if (!(bool)cVar2) {\n          DVar10 = GetLastError();\n          cVar2 = *(char *)(unaff_EBP + -0xe);\n          if (DVar10 == 5) {\n            *(undefined1 *)(unaff_EBP + -0xd) = 1;\n          }\n        }\n        if (DAT_0044a471 == '\\0') {\n          if (cVar2 != '\\0') {\n            GetTickCount();\n            FUN_00404092((wchar_t *)(unaff_EBP + -0x1474),0x800,L\"__tmp_rar_sfx_access_check_%u\");\n            FUN_00409556((undefined4 *)(unaff_EBP + -0x34ac));\n            *(undefined4 *)(unaff_EBP + -4) = 0;\n            bVar1 = FUN_0040966e((void *)(unaff_EBP + -0x34ac),(wchar_t *)(unaff_EBP + -0x1474),0x11\n                                );\n            *(bool *)(unaff_EBP + -0xe) = bVar1;\n            if ((!bVar1) && (DVar10 = GetLastError(), DVar10 == 5)) {\n              *(undefined1 *)(unaff_EBP + -0xd) = 1;\n            }\n            *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n            FUN_0040959a((int *)(unaff_EBP + -0x34ac));\n            goto LAB_0041bb16;\n          }\nLAB_0041bb28:\n          cVar2 = *(char *)(unaff_EBP + -0xd);\n          *(bool *)(unaff_EBP + -0xd) = cVar2 == '\\0';\n          if (cVar2 != '\\0') {\n            GetModuleFileNameW((HMODULE)0x0,(LPWSTR)(unaff_EBP + -0x3474),0x800);\n            FUN_0040f28c(&DAT_0044c472,(uint *)(unaff_EBP + -0x574),0x80);\n            FUN_00404092((wchar_t *)(unaff_EBP + -0xfe8c),0x430c,L\"-el -s2 \\\"-d%s\\\" \\\"-sp%s\\\"\");\n            *(undefined4 *)(unaff_EBP + -0x58) = 0x3c;\n            *(undefined4 *)(unaff_EBP + -0x54) = 0x40;\n            *(int *)(unaff_EBP + -0x48) = unaff_EBP + -0x3474;\n            *(int *)(unaff_EBP + -0x44) = unaff_EBP + -0xfe8c;\n            *(HWND *)(unaff_EBP + -0x50) = hWnd;\n            *(wchar_t **)(unaff_EBP + -0x4c) = L\"runas\";\n            *(undefined4 *)(unaff_EBP + -0x3c) = 1;\n            *(undefined4 *)(unaff_EBP + -0x38) = 0;\n            *(undefined **)(unaff_EBP + -0x40) = &DAT_00448468;\n            hFileMappingObject =\n                 CreateFileMappingW((HANDLE)0xffffffff,(LPSECURITY_ATTRIBUTES)0x0,0x8000004,0,0x7104\n                                    ,L\"winrarsfxmappingfile.tmp\");\n            *(HANDLE *)(unaff_EBP + -0x14) = hFileMappingObject;\n            if (hFileMappingObject == (HANDLE)0x0) {\n              *(undefined4 *)(unaff_EBP + -0x1c) = *(undefined4 *)(unaff_EBP + -0x14);\n            }\n            else {\n              DAT_00457b80 = 0;\n              pWVar11 = GetCommandLineW();\n              if (pWVar11 != (LPWSTR)0x0) {\n                FUN_00410602((short *)&DAT_00457b82,(int)pWVar11,0x2000);\n              }\n              FUN_0041b425((LPWSTR)&DAT_0045bb82,7);\n              FUN_0041b425((LPWSTR)&DAT_0045cb82,2);\n              FUN_0041b425((LPWSTR)&DAT_0045db82,0x10);\n              DAT_0045ec83 = 1;\n              FUN_0040f3fa(&DAT_0045eb82,(wchar_t *)(unaff_EBP + -0x574));\n              puVar12 = (uint *)MapViewOfFile(hFileMappingObject,2,0,0,0);\n              *(uint **)(unaff_EBP + -0x1c) = puVar12;\n              FUN_00420320(puVar12,(uint *)&DAT_00457b80,0x7104);\n            }\n            BVar6 = ShellExecuteExW((SHELLEXECUTEINFOW *)(unaff_EBP + -0x58));\n            FUN_0040f445((undefined1 *)(unaff_EBP + -0x574),0x80);\n            FUN_0040f445((undefined1 *)(unaff_EBP + -0xfe8c),0x430c);\n            if (BVar6 == 0) {\n              lpBaseAddress = *(char **)(unaff_EBP + -0x1c);\n              *(undefined1 *)(unaff_EBP + -0xd) = 1;\n            }\n            else {\n              WaitForInputIdle(*(HANDLE *)(unaff_EBP + -0x20),10000);\n              *(undefined4 *)(unaff_EBP + -0x18) = 0;\n              lpBaseAddress = *(char **)(unaff_EBP + -0x1c);\n              do {\n                if (*lpBaseAddress != '\\0') break;\n                Sleep(100);\n                iVar16 = *(int *)(unaff_EBP + -0x18) + 1;\n                *(int *)(unaff_EBP + -0x18) = iVar16;\n              } while (iVar16 < 100);\n              DAT_0045fcac = *(int *)(unaff_EBP + -0x20);\n            }\n            if (*(int *)(unaff_EBP + -0x14) != 0) {\n              UnmapViewOfFile(lpBaseAddress);\n              CloseHandle(*(HANDLE *)(unaff_EBP + -0x14));\n            }\n          }\n          if (*(char *)(unaff_EBP + -0xd) == '\\0') goto LAB_0041b894;\n        }\n        else {\nLAB_0041bb16:\n          if (*(char *)(unaff_EBP + -0xe) != '\\0') {\n            DAT_0044844c = 1;\n            FUN_004012f1(hWnd,0x67,'\\0');\n            FUN_004012f1(hWnd,0x66,'\\0');\n            pWVar5 = (LPCWSTR)FUN_0040e617(0xe6);\n            SetDlgItemTextW(hWnd,1,pWVar5);\n            FUN_004012f1(hWnd,0x69,'\\x01');\n            SetDlgItemTextW(hWnd,0x65,L\"\");\n            pHVar7 = GetDlgItem(hWnd,0x65);\n            if (pHVar7 != (HWND)0x0) {\n              uVar3 = GetWindowLongW(pHVar7,-0x10);\n              SetWindowLongW(pHVar7,-0x10,uVar3 | 0x80);\n            }\n            FUN_0041c73f();\n            FUN_0041c73f();\n            DAT_00461cbc = 1;\n            FUN_0041da52();\n            DAT_00461cbc = '\\0';\n            FUN_0041c73f();\n            if (((DAT_00448454 == '\\0') && (DAT_0044845c == 0)) && (DAT_0045fcac == 0)) {\n              FUN_0041c73f();\n            }\n            FUN_004012d3(hWnd,1,1);\n            DAT_0044844c = 0;\n            goto LAB_0041be40;\n          }\n          if (DAT_0044a471 == '\\0') goto LAB_0041bb28;\n        }\n        FUN_0040e617(0x9a);\n        FUN_00404092((wchar_t *)(unaff_EBP + -0x3874),0xa00,L\"\\\"%s\\\"\\n%s\");\n        FUN_00406d83(&DAT_00441098,1);\n        UVar13 = 0x30;\n        pWVar5 = (LPCWSTR)FUN_0040e617(0x96);\n        FUN_0041a7e4(hWnd,(LPCWSTR)(unaff_EBP + -0x3874),pWVar5,UVar13);\n        DAT_0044845c = DAT_0044845c + 1;\n        goto LAB_0041b894;\n      }\n      DAT_00448454 = '\\x01';\nLAB_0041be40:\n      if ((DAT_0044845c < 1) || (DAT_00448454 != '\\0')) goto LAB_0041b95e;\n      DAT_00448455 = '\\x01';\n      pWVar5 = (LPCWSTR)FUN_0040e617(0x90);\n      SetDlgItemTextW(hWnd,1,pWVar5);\n      iVar16 = DAT_00441098;\n      if (DAT_00441098 == 9) {\n        UVar13 = 0xa0;\n      }\n      else {\n        UVar13 = ((DAT_00441098 != 3) - 1 & 0xb) + 0x97;\n      }\n      iVar18 = 0x200;\n      iVar14 = FUN_0040e617(UVar13);\n      FUN_00410602((short *)(unaff_EBP + -0x474),iVar14,iVar18);\n      if ((iVar16 == 9) && (DAT_0044c574 != '\\0')) {\n        sVar15 = _wcslen((wchar_t *)(unaff_EBP + -0x474));\n        FUN_0040e617(0xa1);\n        FUN_00404092((wchar_t *)(unaff_EBP + -0x474 + sVar15 * 2),0x200 - sVar15,L\"\\n%s\");\n      }\n      UVar13 = 0x30;\n      pWVar5 = (LPCWSTR)FUN_0040e617(0x96);\n      FUN_0041a7e4(hWnd,(LPCWSTR)(unaff_EBP + -0x474),pWVar5,UVar13);\n    }\n  }\nLAB_0041c203:\n  uVar4 = 1;\nLAB_0041c205:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return uVar4;\n}\n\n"
    },
    {
      "name": "FUN_0041c220",
      "entry": "0041c220",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nundefined4 FUN_0041c220(HWND param_1,int param_2,uint param_3,int param_4)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  HICON hIcon;\n  HWND hWnd;\n  HANDLE hFindFile;\n  INT_PTR nResult;\n  _FILETIME _Stack_1a50;\n  _SYSTEMTIME _Stack_1a48;\n  FILETIME FStack_1a38;\n  WCHAR aWStack_1a30 [50];\n  WCHAR aWStack_19cc [50];\n  WCHAR aWStack_1968 [50];\n  _WIN32_FIND_DATAW _Stack_1904;\n  wchar_t awStack_16b4 [512];\n  SHFILEINFOW SStack_12b4;\n  WCHAR aWStack_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x41c22a;\n  uVar1 = FUN_00401316(param_1,param_2,param_3,param_4,L\"REPLACEFILEDLG\",0,0);\n  if ((char)uVar1 == '\\0') {\n    if (param_2 == 0x110) {\n      hWnd = GetDlgItem(param_1,0x6c);\n      SetFocus(hWnd);\n      FUN_00410602(aWStack_1000,param_4,0x800);\n      FUN_0040c36e((int)aWStack_1000,aWStack_1000,0x800);\n      SetDlgItemTextW(param_1,0x65,aWStack_1000);\n      SHGetFileInfoW(aWStack_1000,0,&SStack_12b4,0x2b4,0x100);\n      SendDlgItemMessageW(param_1,0x66,0x170,(WPARAM)SStack_12b4.hIcon,0);\n      hFindFile = FindFirstFileW(aWStack_1000,&_Stack_1904);\n      if (hFindFile != (HANDLE)0xffffffff) {\n        FileTimeToLocalFileTime(&_Stack_1904.ftLastWriteTime,&_Stack_1a50);\n        FileTimeToSystemTime(&_Stack_1a50,&_Stack_1a48);\n        GetTimeFormatW(0x400,2,&_Stack_1a48,(LPCWSTR)0x0,aWStack_1a30,0x32);\n        GetDateFormatW(0x400,0,&_Stack_1a48,(LPCWSTR)0x0,aWStack_19cc,0x32);\n        FUN_0040e617(0x99);\n        FUN_00404092(awStack_16b4,0x200,L\"%s %s %s\");\n        SetDlgItemTextW(param_1,0x6a,awStack_16b4);\n        FindClose(hFindFile);\n        if (((byte)_Stack_1904.dwFileAttributes & 0x10) == 0) {\n          FUN_0041af0f(_Stack_1904.nFileSizeLow,_Stack_1904.nFileSizeHigh,aWStack_1968,0x32);\n          FUN_0040e617(0x98);\n          FUN_00404092(awStack_16b4,0x200,L\"%s %s\");\n          SetDlgItemTextW(param_1,0x68,awStack_16b4);\n        }\n        SendDlgItemMessageW(param_1,0x67,0x170,(WPARAM)SStack_12b4.hIcon,0);\n        FUN_0041138a(DAT_00448464,&FStack_1a38);\n        FileTimeToLocalFileTime(&FStack_1a38,&_Stack_1a50);\n        FileTimeToSystemTime(&_Stack_1a50,&_Stack_1a48);\n        GetTimeFormatW(0x400,2,&_Stack_1a48,(LPCWSTR)0x0,aWStack_1a30,0x32);\n        GetDateFormatW(0x400,0,&_Stack_1a48,(LPCWSTR)0x0,aWStack_19cc,0x32);\n        FUN_0040e617(0x99);\n        FUN_00404092(awStack_16b4,0x200,L\"%s %s %s\");\n        SetDlgItemTextW(param_1,0x6b,awStack_16b4);\n        if ((((byte)_Stack_1904.dwFileAttributes & 0x10) == 0) ||\n           (DAT_0045ec88 != 0 || DAT_0045ec8c != 0)) {\n          FUN_0041af0f(DAT_0045ec88,DAT_0045ec8c,aWStack_1968,0x32);\n          FUN_0040e617(0x98);\n          FUN_00404092(awStack_16b4,0x200,L\"%s %s\");\n          SetDlgItemTextW(param_1,0x69,awStack_16b4);\n        }\n      }\n    }\n    else if (param_2 == 0x111) {\n      uVar1 = param_3 & 0xffff;\n      nResult = 2;\n      if (uVar1 == 2) {\nLAB_0041c2a4:\n        nResult = 6;\n      }\n      else if (uVar1 == 0x6c) {\n        nResult = 0;\n      }\n      else if (uVar1 == 0x6d) {\n        nResult = 1;\n      }\n      else if (uVar1 == 0x6e) {\n        nResult = 4;\n      }\n      else if (uVar1 != 0x6f) {\n        if (uVar1 != 0x70) {\n          if (uVar1 != 0x71) goto LAB_0041c5b5;\n          goto LAB_0041c2a4;\n        }\n        nResult = 3;\n      }\n      hIcon = (HICON)SendDlgItemMessageW(param_1,0x66,0x171,0,0);\n      if (hIcon != (HICON)0x0) {\n        DestroyIcon(hIcon);\n      }\n      EndDialog(param_1,nResult);\n      goto LAB_0041c25f;\n    }\nLAB_0041c5b5:\n    uVar2 = 0;\n  }\n  else {\nLAB_0041c25f:\n    uVar2 = 1;\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_0041c5c4",
      "entry": "0041c5c4",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041c5c4(ushort *param_1)\n\n{\n  ushort *puVar1;\n  int iVar2;\n  int iVar3;\n  short *psVar4;\n  wchar_t *pwVar5;\n  short local_2000;\n  ushort local_1ffe;\n  wchar_t local_1ffc;\n  wchar_t local_1ffa [4091];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x41c5ce;\n  iVar3 = 0;\n  puVar1 = FUN_00410371(param_1,(int)&local_2000,0x1000);\n  do {\n    if (puVar1 == (ushort *)0x0) {\n      return;\n    }\n    iVar3 = iVar3 + 1;\n    if ((iVar3 != 1) && ((local_2000 == 0x2f || (local_2000 == 0x2d)))) {\n      iVar2 = FUN_00411fac(local_1ffe);\n      if (iVar2 == 0x44) {\n        pwVar5 = &local_1ffc;\n        psVar4 = &DAT_0044a472;\nLAB_0041c6c5:\n        FUN_00410602(psVar4,(int)pwVar5,0x800);\n      }\n      else if (iVar2 == 0x45) {\n        iVar2 = FUN_00411fac(local_1ffc);\n        if ((iVar2 == 0x4c) && (local_1ffa[0] == L'\\0')) {\n          DAT_0044a471 = 1;\n        }\n      }\n      else if (iVar2 == 0x50) {\n        FUN_0040f3fa(&DAT_0044c472,&local_1ffc);\n      }\n      else if (iVar2 == 0x53) {\n        iVar2 = FUN_00411fac(local_1ffc);\n        if ((iVar2 == 0) || (iVar2 == 0x31)) {\n          DAT_0044a46c = 1;\n        }\n        else {\n          if (iVar2 != 0x32) {\n            if (iVar2 == 0x50) {\n              pwVar5 = local_1ffa;\n              psVar4 = &DAT_0044b472;\n              goto LAB_0041c6c5;\n            }\n            goto LAB_0041c6ca;\n          }\n          DAT_0044a46c = 2;\n        }\n        DAT_0044c575 = 1;\n      }\n    }\nLAB_0041c6ca:\n    puVar1 = FUN_00410371(puVar1,(int)&local_2000,0x1000);\n  } while( true );\n}\n\n"
    },
    {
      "name": "FUN_0041c6f0",
      "entry": "0041c6f0",
      "c": "\nvoid FUN_0041c6f0(int param_1,short *param_2,int param_3)\n\n{\n  short *psVar1;\n  short sVar2;\n  int iVar3;\n  \n  FUN_00410602(param_2,param_1,param_3);\n  iVar3 = 0;\n  sVar2 = *param_2;\n  psVar1 = param_2;\n  while (sVar2 != 0) {\n    if (((sVar2 == 0x3a) || (sVar2 == 0x5c)) || (sVar2 == 0x2f)) {\n      *psVar1 = 0x25;\n    }\n    iVar3 = iVar3 + 1;\n    psVar1 = param_2 + iVar3;\n    sVar2 = *psVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041c73f",
      "entry": "0041c73f",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n/* WARNING (jumptable): Unable to track spacebase fully for stack */\n\nvoid FUN_0041c73f(void)\n\n{\n  wchar_t wVar1;\n  bool bVar2;\n  char cVar3;\n  WCHAR *pWVar4;\n  ushort *puVar5;\n  BOOL BVar6;\n  wchar_t *_Dest;\n  size_t sVar7;\n  LSTATUS LVar8;\n  size_t sVar9;\n  HWND hWnd;\n  undefined4 uVar10;\n  int iVar11;\n  undefined *puVar12;\n  DWORD DVar13;\n  short *psVar14;\n  wchar_t *pwVar15;\n  undefined1 (*pauVar16) [16];\n  short *psVar17;\n  int unaff_EBP;\n  undefined2 *puVar18;\n  uint uVar19;\n  short *psVar20;\n  short *psVar21;\n  short sVar22;\n  wchar_t *unaff_EDI;\n  int iVar23;\n  uint uVar24;\n  ulonglong uVar25;\n  \n  FUN_0041eb78();\n  if (*(int *)(unaff_EBP + 0xc) != 0) {\n    pWVar4 = FUN_0041b314(*(WCHAR **)(unaff_EBP + 0xc),(LPCWSTR)(unaff_EBP + -0xf894),\n                          (short *)(unaff_EBP + -0x588c),(undefined1 *)(unaff_EBP + -0xd),\n                          (undefined1 *)(unaff_EBP + -0x15),0x1000);\n    *(WCHAR **)(unaff_EBP + 0xc) = pWVar4;\n    if (pWVar4 != (WCHAR *)0x0) {\n      iVar11 = *(int *)(unaff_EBP + 0x10);\nLAB_0041c793:\n      puVar5 = (ushort *)(unaff_EBP + -0x588c);\n      puVar18 = (undefined2 *)(unaff_EBP + -0x1b894);\n      iVar23 = 6;\n      do {\n        puVar5 = FUN_0041af98(puVar5,puVar18,0x1000);\n        puVar18 = puVar18 + 0x1000;\n        iVar23 = iVar23 + -1;\n      } while (iVar23 != 0);\n      uVar19 = 0;\nLAB_0041c7bb:\n      iVar23 = FUN_00411fbb((PCNZWCH)(unaff_EBP + -0xf894),(PCNZWCH)(&PTR_u_Delete_0043e744)[uVar19]\n                           );\n      if (iVar23 != 0) goto code_r0x0041c7d2;\n      switch(uVar19) {\n      case 0:\n        if (iVar11 == 2) {\n          FUN_0041a64d((LPWSTR)(unaff_EBP + -0x788c),0x800);\n          FUN_0040bdf3((ushort *)(unaff_EBP + -0x788c),unaff_EBP + -0x588c,\n                       (short *)(unaff_EBP + -0xd894),0x800);\n          FUN_0040a544((undefined2 *)(unaff_EBP + -0x8894));\n          *(undefined4 *)(unaff_EBP + -4) = 0;\n          FUN_0040a67e((void *)(unaff_EBP + -0x8894),unaff_EBP + -0xd894);\n          FUN_00406edb(unaff_EBP + -0x388c);\n          goto LAB_0041c98f;\n        }\n        goto switchD_0041c7e6_default;\n      case 1:\n        if (iVar11 == 0) {\n          bVar2 = DAT_0045fc94 != (wchar_t *)0x0;\n          if (DAT_0045fc94 != (wchar_t *)0x0) {\n            _wcscat(DAT_0045fc94,L\"<br>\");\n          }\n          cVar3 = *(char *)(unaff_EBP + -0xd);\n          if (cVar3 == '\\0') {\n            pwVar15 = FUN_0041b48e(unaff_EBP + 0xc,(undefined4 *)unaff_EDI);\n          }\n          else {\n            pwVar15 = (wchar_t *)(unaff_EBP + -0x588c);\n          }\n          sVar7 = 0;\n          if (bVar2) {\n            sVar7 = _wcslen(DAT_0045fc94);\n          }\n          sVar9 = _wcslen(pwVar15);\n          _Dest = (wchar_t *)FUN_00423e3e(DAT_0045fc94,(sVar9 + sVar7) * 2 + 10);\n          if (_Dest != (wchar_t *)0x0) {\n            DAT_0045fc94 = _Dest;\n            if (!bVar2) {\n              *_Dest = L'\\0';\n            }\n            _wcscat(_Dest,pwVar15);\n            unaff_EDI = _Dest;\n          }\n          if (cVar3 == '\\0') {\n            unaff_EDI = L\"\\xe959\u097a\";\n            FID_conflict__free(pwVar15);\n          }\n        }\n        goto switchD_0041c7e6_default;\n      case 2:\n        if (iVar11 == 0) {\n          SetWindowTextW(*(HWND *)(unaff_EBP + 8),(LPCWSTR)(unaff_EBP + -0x588c));\n        }\n        goto switchD_0041c7e6_default;\n      case 3:\n        if ((iVar11 != 0) || (DAT_0044a472 != 0)) goto switchD_0041c7e6_default;\n        pwVar15 = (wchar_t *)(unaff_EBP + -0x588c);\n        *(undefined2 *)(unaff_EBP + -0x1044) = 0;\n        if (*(short *)(unaff_EBP + -0x588c) == 0x22) {\n          pwVar15 = (wchar_t *)(unaff_EBP + -0x588a);\n        }\n        sVar7 = _wcslen(pwVar15);\n        if (0x7ff < sVar7) goto switchD_0041c7e6_default;\n        wVar1 = *pwVar15;\n        if (wVar1 == L'.') {\n          if (pwVar15[1] == L'\\\\') {\n            if (pwVar15[2] == L'\\0') goto switchD_0041c7e6_default;\n            FUN_00410602((short *)(unaff_EBP + -0x1044),(int)(pwVar15 + 2),0x800);\n          }\n          else {\nLAB_0041cb01:\n            if ((wVar1 != L'\\0') && (pwVar15[1] == L':')) goto LAB_0041cbe0;\n            LVar8 = RegOpenKeyExW((HKEY)0x80000002,L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\",0\n                                  ,1,(PHKEY)(unaff_EBP + -0x1c));\n            if (LVar8 == 0) {\n              *(undefined4 *)(unaff_EBP + -0x14) = 0x1000;\n              RegQueryValueExW(*(HKEY *)(unaff_EBP + -0x1c),L\"ProgramFilesDir\",(LPDWORD)0x0,\n                               (LPDWORD)(unaff_EBP + -0x24),(LPBYTE)(unaff_EBP + -0x1044),\n                               (LPDWORD)(unaff_EBP + -0x14));\n              RegCloseKey(*(HKEY *)(unaff_EBP + -0x1c));\n              uVar19 = *(uint *)(unaff_EBP + -0x14) >> 1;\n              if (0x7fe < uVar19) {\n                uVar19 = 0x7ff;\n              }\n              *(undefined2 *)(unaff_EBP + -0x1044 + uVar19 * 2) = 0;\n            }\n            if ((*(short *)(unaff_EBP + -0x1044) != 0) &&\n               (sVar7 = _wcslen((wchar_t *)(unaff_EBP + -0x1044)),\n               *(short *)(unaff_EBP + -0x1046 + sVar7 * 2) != 0x5c)) {\n              FUN_004105da((wchar_t *)(unaff_EBP + -0x1044),0x435384,0x800);\n            }\n            sVar7 = _wcslen(pwVar15);\n            sVar9 = _wcslen((wchar_t *)(unaff_EBP + -0x1044));\n            if (sVar7 + sVar9 < 0x7ff) {\n              FUN_004105da((wchar_t *)(unaff_EBP + -0x1044),(int)pwVar15,0x800);\n            }\n          }\n        }\n        else {\n          if (wVar1 != L'\\\\') goto LAB_0041cb01;\nLAB_0041cbe0:\n          FUN_00410602((short *)(unaff_EBP + -0x1044),(int)pwVar15,0x800);\n        }\n        pauVar16 = FUN_0042279b((undefined1 (*) [16])(unaff_EBP + -0x1044),0x22);\n        if ((pauVar16 != (undefined1 (*) [16])0x0) && (*(short *)(*pauVar16 + 2) == 0)) {\n          *(undefined2 *)*pauVar16 = 0;\n        }\n        FUN_00410602(&DAT_0044a472,unaff_EBP + -0x1044,0x800);\n        FUN_0041b1be((short *)(unaff_EBP + -0x1044),0x800);\n        hWnd = GetDlgItem(*(HWND *)(unaff_EBP + 8),0x66);\n        SetWindowTextW(hWnd,(LPCWSTR)(unaff_EBP + -0x1044));\n        SendMessageW(hWnd,0x143,0,0x44a472);\n        iVar11 = _wcscmp(&DAT_0044a472,(wchar_t *)(unaff_EBP + -0x1044));\n        if (iVar11 != 0) {\n          SendMessageW(hWnd,0x143,0,unaff_EBP + -0x1044);\n        }\n        goto switchD_0041c7e6_default;\n      case 4:\n        if (DAT_0044a46c != 1) {\n          uVar10 = FUN_0041047a((uint)*(ushort *)(unaff_EBP + -0x588c));\n          if ((char)uVar10 == '\\0') {\n            DAT_0044a46c = 2;\n          }\n          else {\n            DAT_0044a46c = *(ushort *)(unaff_EBP + -0x588c) - 0x30;\n          }\n        }\n        goto switchD_0041c7e6_default;\n      case 5:\n        sVar22 = *(short *)(unaff_EBP + -0x588c);\n        if (sVar22 == 0) {\nLAB_0041cd05:\n          DAT_00448457 = 0;\n          DAT_00448460 = 1;\n        }\n        else {\n          if (sVar22 == 0x30) {\n            DAT_00448457 = 0;\n          }\n          else {\n            if (sVar22 == 0x31) goto LAB_0041cd05;\n            if (sVar22 != 0x32) goto switchD_0041c7e6_default;\n            DAT_00448457 = 1;\n          }\n          DAT_00448460 = 0;\n        }\n        goto switchD_0041c7e6_default;\n      case 6:\n      case 9:\n        DAT_0044c577 = 1;\n        uVar24 = 1;\n        pwVar15 = (wchar_t *)(unaff_EBP + -0x588c);\n        *(wchar_t **)(unaff_EBP + -0x14) = pwVar15;\n        if (*(short *)(unaff_EBP + -0x588c) == 0x3c) {\n          puVar5 = FUN_004222c6((ushort *)(unaff_EBP + -0x588a),0x3e);\n          if (puVar5 != (ushort *)0x0) {\n            *(ushort **)(unaff_EBP + -0x14) = puVar5 + 1;\n            *puVar5 = 0;\n            puVar5 = FUN_0041af98((ushort *)(unaff_EBP + -0x588a),(undefined2 *)(unaff_EBP + -0x10c)\n                                  ,100);\n            *(ushort **)(unaff_EBP + -0x20) = puVar5;\n            while ((puVar5 != (ushort *)0x0 && (*(short *)(unaff_EBP + -0x10c) != 0))) {\n              iVar11 = FUN_00411fbb((PCNZWCH)(unaff_EBP + -0x10c),L\"HIDE\");\n              uVar24 = uVar24 & -(uint)(iVar11 != 0);\n              iVar11 = FUN_00411fbb((PCNZWCH)(unaff_EBP + -0x10c),L\"MAX\");\n              if (iVar11 == 0) {\n                uVar24 = 3;\n              }\n              iVar11 = FUN_00411fbb((PCNZWCH)(unaff_EBP + -0x10c),L\"MIN\");\n              if (iVar11 == 0) {\n                uVar24 = 6;\n              }\n              puVar5 = FUN_0041af98(puVar5,(undefined2 *)(unaff_EBP + -0x10c),100);\n            }\n          }\n          pwVar15 = *(wchar_t **)(unaff_EBP + -0x14);\n        }\n        if (*(int *)(unaff_EBP + 0x10) == 5) {\n          if (uVar19 == 9) {\n            cVar3 = '\\x01';\nLAB_0041ce4e:\n            FUN_0041d78f(*(HWND *)(unaff_EBP + 8),pwVar15,uVar24,cVar3);\n          }\n        }\n        else if ((*(int *)(unaff_EBP + 0x10) == 4) && (uVar19 == 6)) {\n          cVar3 = '\\0';\n          goto LAB_0041ce4e;\n        }\n        goto switchD_0041c7e6_default;\n      case 7:\n        goto switchD_0041c7e6_caseD_7;\n      case 8:\n        if (iVar11 == 3) {\n          if (*(short *)(unaff_EBP + -0x588c) != 0) {\n            DAT_0045fc9c = __wcsdup((wchar_t *)(unaff_EBP + -0x588c));\n          }\n          DAT_0045fc98 = FUN_0041b48e(unaff_EBP + 0xc,(undefined4 *)unaff_EDI);\n        }\n        DAT_0044c576 = 1;\n        goto switchD_0041c7e6_default;\n      case 10:\n        if (iVar11 == 6) {\n          *(undefined2 *)(unaff_EBP + -0x2844) = 0;\n          iVar11 = _toupper((uint)*(ushort *)(unaff_EBP + -0x1b894));\n          if (iVar11 == 0x50) {\n            *(undefined4 *)(unaff_EBP + -0x14) = 2;\n            puVar12 = &DAT_0045cb82;\n          }\n          else if (iVar11 == 0x54) {\n            *(undefined4 *)(unaff_EBP + -0x14) = 7;\n            puVar12 = &DAT_0045bb82;\n          }\n          else {\n            *(undefined4 *)(unaff_EBP + -0x14) = 0x10;\n            puVar12 = &DAT_0045db82;\n          }\n          FUN_00410602((short *)(unaff_EBP + -0x2844),(int)puVar12,0x800);\n          *(undefined2 *)(unaff_EBP + -0x9894) = 0;\n          *(undefined2 *)(unaff_EBP + -0x1844) = 0;\n          FUN_00410602((short *)(unaff_EBP + -0x688c),unaff_EBP + -0x19894,0x800);\n          if (*(short *)(unaff_EBP + -0x688c) == 0x22) {\n            FUN_00410602((short *)(unaff_EBP + -0x688c),unaff_EBP + -0x19892,0x800);\n            puVar5 = FUN_004222c6((ushort *)(unaff_EBP + -0x688a),0x22);\n            if (puVar5 != (ushort *)0x0) {\n              *puVar5 = 0;\n              FUN_00410602((short *)(unaff_EBP + -0x1844),(int)(puVar5 + 1),0x400);\n            }\n            goto LAB_0041d226;\n          }\n          bVar2 = FUN_0040a231((LPCWSTR)(unaff_EBP + -0x688c));\n          if (bVar2) goto LAB_0041d226;\n          sVar22 = *(short *)(unaff_EBP + -0x688c);\n          psVar21 = (short *)(unaff_EBP + -0x688c);\n          if (sVar22 == 0) goto LAB_0041d226;\n          psVar14 = (short *)0x0;\n          goto LAB_0041d178;\n        }\n        goto switchD_0041c7e6_default;\n      case 0xb:\n        if (iVar11 == 7) {\n          DAT_0044a470 = 1;\n        }\n        goto switchD_0041c7e6_default;\n      case 0xc:\n        iVar11 = _toupper((uint)*(ushort *)(unaff_EBP + -0x588c));\n        if (iVar11 == 0x46) {\n          DAT_00448461 = 1;\n        }\n        else if (iVar11 == 0x55) {\n          DAT_00448462 = 1;\n        }\n        else {\n          DAT_00448461 = 0;\n          DAT_00448462 = 0;\n        }\n        goto switchD_0041c7e6_default;\n      case 0xd:\n        DAT_00457b7a = 1;\n        if (*(short *)(unaff_EBP + -0x588c) != 0) {\n          uVar25 = thunk_FUN_00411f24((ushort *)(unaff_EBP + -0x588c));\n          DAT_0043e728 = (undefined4)uVar25;\n        }\n      default:\n        goto switchD_0041c7e6_default;\n      }\n    }\n  }\nLAB_0041d40d:\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\ncode_r0x0041c7d2:\n  uVar19 = uVar19 + 1;\n  if (0xd < uVar19) goto switchD_0041c7e6_default;\n  goto LAB_0041c7bb;\nLAB_0041d178:\n  do {\n    if ((sVar22 == 0x20) || (sVar22 == 0x2f)) {\n      *psVar21 = 0;\n      bVar2 = FUN_0040a231((LPCWSTR)(unaff_EBP + -0x688c));\n      if (bVar2) {\n        DVar13 = FUN_0040a243((LPCWSTR)(unaff_EBP + -0x688c));\n        cVar3 = FUN_0040a28f(DVar13);\n        if (cVar3 == '\\0') {\n          psVar14 = psVar21 + 1;\n          if (sVar22 == 0x2f) {\n            *(undefined2 *)(unaff_EBP + -0x1844) = 0x2f;\n            iVar11 = 0x3ff;\n            psVar17 = (short *)(unaff_EBP + -0x1842);\n            psVar20 = psVar21;\n          }\n          else {\n            for (; *psVar14 == 0x20; psVar14 = psVar14 + 1) {\n            }\n            psVar17 = (short *)(unaff_EBP + -0x1844);\n            iVar11 = 0x400;\n            psVar20 = psVar14;\n          }\n          FUN_00410602(psVar17,(int)psVar14,iVar11);\n          *psVar21 = sVar22;\n          psVar14 = psVar21;\n          psVar21 = psVar20;\n          goto LAB_0041d200;\n        }\n      }\n      *psVar21 = sVar22;\n    }\nLAB_0041d200:\n    psVar21 = psVar21 + 1;\n    sVar22 = *psVar21;\n  } while (sVar22 != 0);\n  if (psVar14 != (short *)0x0) {\n    *psVar14 = 0;\n  }\nLAB_0041d226:\n  if (*(short *)(unaff_EBP + -0x11894) != 0) {\n    FUN_0040b6c4((WCHAR *)(unaff_EBP + -0x11894),(LPCWSTR)(unaff_EBP + -0x9894),0x800);\n  }\n  FUN_0040b6c4((WCHAR *)(unaff_EBP + -0x688c),(LPCWSTR)(unaff_EBP + -0xb894),0x800);\n  if (*(short *)(unaff_EBP + -0x2844) == 0) {\n    FUN_0041b425((LPWSTR)(unaff_EBP + -0x2844),*(undefined4 *)(unaff_EBP + -0x14));\n  }\n  FUN_0040b690((wchar_t *)(unaff_EBP + -0x2844),0x800);\n  if (*(short *)(unaff_EBP + -0x17894) != 0) {\n    FUN_004105da((wchar_t *)(unaff_EBP + -0x2844),unaff_EBP + -0x17894,0x800);\n    FUN_0040b690((wchar_t *)(unaff_EBP + -0x2844),0x800);\n  }\n  FUN_00410602((short *)(unaff_EBP + -0xc894),unaff_EBP + -0x2844,0x800);\n  pwVar15 = (wchar_t *)(unaff_EBP + -0x13894);\n  if (*(short *)(unaff_EBP + -0x13894) == 0) {\n    pwVar15 = (wchar_t *)(unaff_EBP + -0x19894);\n  }\n  uVar19 = 0x800;\n  pwVar15 = FUN_0040c29a(pwVar15);\n  FUN_004105da((wchar_t *)(unaff_EBP + -0x2844),(int)pwVar15,uVar19);\n  pauVar16 = FUN_0040b92d((wchar_t *)(unaff_EBP + -0x2844));\n  if ((pauVar16 == (undefined1 (*) [16])0x0) ||\n     (iVar11 = FUN_00411fbb((PCNZWCH)pauVar16,L\".lnk\"), iVar11 != 0)) {\n    FUN_004105da((wchar_t *)(unaff_EBP + -0x2844),0x4353b4,0x800);\n  }\n  FUN_0040a0b1((wchar_t *)(unaff_EBP + -0x2844),'\\x01');\n  FUN_00410602((short *)(unaff_EBP + -0xa894),unaff_EBP + -0xb894,0x800);\n  FUN_0040c2e4((wchar_t *)(unaff_EBP + -0xa894));\n  FUN_0041a48a('\\0',unaff_EBP + -0xb894,unaff_EBP + -0x2844,\n               -(uint)(*(short *)(unaff_EBP + -0xa894) != 0) & unaff_EBP - 0xa894U,\n               -(uint)(*(short *)(unaff_EBP + -0x15894) != 0) & unaff_EBP - 0x15894U,\n               (undefined *)(-(uint)(*(short *)(unaff_EBP + -0x9894) != 0) & unaff_EBP - 0x9894U),\n               -(uint)(*(short *)(unaff_EBP + -0x1844) != 0) & unaff_EBP - 0x1844U);\n  if (*(short *)(unaff_EBP + -0xc894) != 0) {\n    SHChangeNotify(0x1000,5,(LPCVOID)(unaff_EBP + -0xc894),(LPCVOID)0x0);\n  }\n  goto switchD_0041c7e6_default;\nswitchD_0041c7e6_caseD_7:\n  if (iVar11 != 1) {\n    if (iVar11 == 7) {\n      if (DAT_0044a46c == 0) {\n        DAT_0044a46c = 2;\n      }\n      DAT_00449468 = 1;\n    }\n    goto switchD_0041c7e6_default;\n  }\n  GetTempPathW(0x800,(LPWSTR)(unaff_EBP + -0x788c));\n  FUN_0040b690((wchar_t *)(unaff_EBP + -0x788c),0x800);\n  do {\n    FUN_00404092(&DAT_0044946a,0x800,L\"%s%s%u\");\n    bVar2 = FUN_0040a231(&DAT_0044946a);\n  } while (bVar2);\n  SetDlgItemTextW(*(HWND *)(unaff_EBP + 8),0x66,&DAT_0044946a);\n  if ((*(short *)(unaff_EBP + -0x588c) == 0) || (DAT_0044c575 != '\\0'))\n  goto switchD_0041c7e6_default;\n  *(undefined2 *)(unaff_EBP + -0x444) = 0;\n  puVar5 = FUN_004222c6((ushort *)(unaff_EBP + -0x588c),0x2c);\n  if (puVar5 == (ushort *)0x0) {\n    iVar11 = 0;\n    sVar22 = *(short *)(unaff_EBP + -0x588c);\n    while (sVar22 != 0) {\n      if (sVar22 == 0x40) {\n        FUN_00410602((short *)(unaff_EBP + -0x444),unaff_EBP + -0x588a + iVar11 * 2,0x200);\n        *(undefined2 *)(unaff_EBP + -0x588c + iVar11 * 2) = 0;\n        break;\n      }\n      iVar23 = iVar11 * 2;\n      iVar11 = iVar11 + 1;\n      sVar22 = *(short *)(unaff_EBP + -0x588a + iVar23);\n    }\n  }\n  if (*(short *)(unaff_EBP + -0x444) == 0) {\n    FUN_00410602((short *)(unaff_EBP + -0x588c),unaff_EBP + -0x1b894,0x1000);\n    FUN_00410602((short *)(unaff_EBP + -0x444),unaff_EBP + -0x19894,0x200);\n  }\n  FUN_0041add2((short *)(unaff_EBP + -0x588c));\n  *(undefined2 *)(unaff_EBP + -0x488c) = 0;\n  iVar11 = FUN_0041a7e4(*(HWND *)(unaff_EBP + 8),(LPCWSTR)(unaff_EBP + -0x588c),\n                        (LPCWSTR)(unaff_EBP + -0x444),0x24);\n  if (iVar11 != 6) {\n    DAT_00448454 = 1;\n    DAT_0044946a = 0;\n    EndDialog(*(HWND *)(unaff_EBP + 8),1);\n  }\n  goto switchD_0041c7e6_default;\nLAB_0041c98f:\n  uVar10 = FUN_0040a5d1((void *)(unaff_EBP + -0x8894),(wchar_t *)(unaff_EBP + -0x388c));\n  if ((char)uVar10 != '\\0') {\n    SetFileAttributesW((LPCWSTR)(unaff_EBP + -0x388c),0);\n    if (*(char *)(unaff_EBP + -0x2880) != '\\0') {\n      FUN_0040b991((wchar_t *)(unaff_EBP + -0x788c),(wchar_t *)(unaff_EBP + -0x1044),0x800);\n      FUN_0040b690((wchar_t *)(unaff_EBP + -0x1044),0x800);\n      sVar7 = _wcslen((wchar_t *)(unaff_EBP + -0x788c));\n      if (((sVar7 < 4) || (sVar9 = _wcslen((wchar_t *)(unaff_EBP + -0x1044)), sVar7 <= sVar9)) &&\n         (bVar2 = FUN_0040bdb4((wchar_t *)(unaff_EBP + -0x588c)), bVar2)) goto LAB_0041c9aa;\n      sVar7 = _wcslen((wchar_t *)(unaff_EBP + -0x388c));\n      *(undefined2 *)(unaff_EBP + -0x388a + sVar7 * 2) = 0;\n      _memset((void *)(unaff_EBP + -0x44),0,0x1e);\n      *(undefined4 *)(unaff_EBP + -0x40) = 3;\n      *(undefined2 *)(unaff_EBP + -0x34) = 0x14;\n      *(int *)(unaff_EBP + -0x3c) = unaff_EBP + -0x388c;\n      SHFileOperationW((LPSHFILEOPSTRUCTW)(unaff_EBP + -0x44));\n    }\n    DVar13 = GetFileAttributesW((LPCWSTR)(unaff_EBP + -0x388c));\n    if ((DVar13 != 0xffffffff) && (BVar6 = DeleteFileW((LPCWSTR)(unaff_EBP + -0x388c)), BVar6 == 0))\n    {\n      do {\n        FUN_00404092((wchar_t *)(unaff_EBP + -0x1044),0x800,L\"%s.%d.tmp\");\n        DVar13 = GetFileAttributesW((LPCWSTR)(unaff_EBP + -0x1044));\n      } while (DVar13 != 0xffffffff);\n      BVar6 = MoveFileW((LPCWSTR)(unaff_EBP + -0x388c),(LPCWSTR)(unaff_EBP + -0x1044));\n      if (BVar6 != 0) {\n        MoveFileExW((LPCWSTR)(unaff_EBP + -0x1044),(LPCWSTR)0x0,4);\n      }\n    }\n    goto LAB_0041c98f;\n  }\nLAB_0041c9aa:\n  *(undefined4 *)(unaff_EBP + -4) = 0xffffffff;\n  FUN_0040a55a(unaff_EBP + -0x8894);\nswitchD_0041c7e6_default:\n  pWVar4 = FUN_0041b314(*(WCHAR **)(unaff_EBP + 0xc),(LPCWSTR)(unaff_EBP + -0xf894),\n                        (short *)(unaff_EBP + -0x588c),(undefined1 *)(unaff_EBP + -0xd),\n                        (undefined1 *)(unaff_EBP + -0x15),0x1000);\n  iVar11 = *(int *)(unaff_EBP + 0x10);\n  *(WCHAR **)(unaff_EBP + 0xc) = pWVar4;\n  if (pWVar4 == (WCHAR *)0x0) goto LAB_0041d40d;\n  goto LAB_0041c793;\n}\n\n"
    },
    {
      "name": "FUN_0041d453",
      "entry": "0041d453",
      "c": "\nwchar_t * FUN_0041d453(wchar_t *param_1,int param_2)\n\n{\n  longlong lVar1;\n  ushort *puVar2;\n  wchar_t *pwVar3;\n  size_t sVar4;\n  undefined2 *_Memory;\n  \n  puVar2 = FUN_004222c6((ushort *)param_1,0x20);\n  if (puVar2 != (ushort *)0x0) {\n    if ((*param_1 == L'\\\"') && (pwVar3 = FUN_0040c27e(param_1), *pwVar3 == L'\\\"')) {\n      return param_1;\n    }\n    sVar4 = _wcslen(param_1);\n    lVar1 = (ulonglong)(sVar4 + 3) * 2;\n    _Memory = (undefined2 *)\n              FUN_0041ee53(-(uint)((int)((ulonglong)lVar1 >> 0x20) != 0) | (uint)lVar1);\n    _wcscpy(_Memory + 1,param_1);\n    _Memory[sVar4 + 1] = 0x22;\n    *_Memory = 0x22;\n    _Memory[sVar4 + 2] = 0;\n    FUN_00410602(param_1,(int)_Memory,param_2);\n    FID_conflict__free(_Memory);\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0041d4d4",
      "entry": "0041d4d4",
      "c": "\nvoid FUN_0041d4d4(char param_1,LPARAM param_2)\n\n{\n  HWND hWnd;\n  undefined4 uStack_5c;\n  undefined4 uStack_58;\n  uint uStack_54;\n  undefined4 uStack_48;\n  undefined1 uStack_43;\n  \n  FUN_0041b568();\n  hWnd = GetDlgItem(DAT_00448458,0x68);\n  if (DAT_00448463 == '\\0') {\n    FUN_00419285(DAT_00448440);\n    ShowWindow(hWnd,5);\n    SendMessageW(hWnd,0xb1,0,-1);\n    SendMessageW(hWnd,0xc2,0,0x4335f4);\n    DAT_00448463 = '\\x01';\n  }\n  SendMessageW(hWnd,0xb1,100000000,100000000);\n  uStack_5c = 0x5c;\n  SendMessageW(hWnd,0x43a,0,(LPARAM)&uStack_5c);\n  uStack_43 = 0;\n  uStack_58 = 1;\n  if (param_1 != '\\0') {\n    uStack_48 = 0xa0;\n    uStack_54 = uStack_54 & 0xbfffffff | 1;\n    uStack_58 = 0x40000001;\n  }\n  SendMessageW(hWnd,0x444,1,(LPARAM)&uStack_5c);\n  SendMessageW(hWnd,0xc2,0,param_2);\n  SendMessageW(hWnd,0xb1,100000000,100000000);\n  if (param_1 != '\\0') {\n    uStack_54 = uStack_54 & 0xfffffffe | 0x40000000;\n    SendMessageW(hWnd,0x444,1,(LPARAM)&uStack_5c);\n  }\n  SendMessageW(hWnd,0xc2,0,0x4343f4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041d600",
      "entry": "0041d600",
      "c": "\nundefined4 FUN_0041d600(HWND param_1,int param_2,uint param_3,LPCWSTR param_4)\n\n{\n  uint uVar1;\n  INT_PTR nResult;\n  \n  uVar1 = FUN_00401316(param_1,param_2,param_3,param_4,L\"RENAMEDLG\",0,0);\n  if ((char)uVar1 == '\\0') {\n    if (param_2 == 0x110) {\n      DAT_0045fcb4 = param_4;\n      SetDlgItemTextW(param_1,0x66,param_4);\n      SetDlgItemTextW(param_1,0x68,DAT_0045fcb4);\n    }\n    else {\n      if (param_2 != 0x111) {\n        return 0;\n      }\n      if ((param_3 & 0xffff) == 1) {\n        GetDlgItemTextW(param_1,0x68,DAT_0045fcb4,0x800);\n        nResult = 1;\n      }\n      else {\n        if ((param_3 & 0xffff) != 2) {\n          return 0;\n        }\n        nResult = 0;\n      }\n      EndDialog(param_1,nResult);\n    }\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0041d694",
      "entry": "0041d694",
      "c": "\nvoid FUN_0041d694(void)\n\n{\n  FUN_0040f279((undefined1 *)&DAT_0044c472);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041d69e",
      "entry": "0041d69e",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041d69e(HWND param_1)\n\n{\n  undefined4 uVar1;\n  HWND pHVar2;\n  int iVar3;\n  LONG LVar4;\n  HANDLE h;\n  int *piVar5;\n  RGBQUAD RVar6;\n  LPARAM lParam;\n  HWND hWnd;\n  int iVar7;\n  undefined1 auStack_1018 [4];\n  int iStack_1014;\n  int iStack_1010;\n  WCHAR aWStack_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x41d6a8;\n  uVar1 = FUN_0041a5c6();\n  if ((char)uVar1 != '\\0') {\n    pHVar2 = GetWindow(param_1,5);\n    iVar7 = 0;\n    hWnd = pHVar2;\n    if (pHVar2 != (HWND)0x0) {\n      while (iVar7 < 0x200) {\n        GetClassNameW(hWnd,aWStack_1000,0x800);\n        iVar3 = FUN_00411fbb(aWStack_1000,L\"STATIC\");\n        if (((iVar3 == 0) && (LVar4 = GetWindowLongW(hWnd,-0x10), ((byte)LVar4 & 0x1f) == 0xe)) &&\n           (h = (HANDLE)SendMessageW(hWnd,0x173,0,0), h != (HANDLE)0x0)) {\n          GetObjectW(h,0x18,auStack_1018);\n          piVar5 = (int *)FUN_0041a605(iStack_1010);\n          RVar6 = (RGBQUAD)FUN_0041a5e4(iStack_1014);\n          lParam = FUN_0041a80c(h,RVar6,piVar5);\n          SendMessageW(hWnd,0x172,0,lParam);\n          DeleteObject(h);\n        }\n        hWnd = GetWindow(hWnd,2);\n        if (hWnd == pHVar2) {\n          return;\n        }\n        iVar7 = iVar7 + 1;\n        if (hWnd == (HWND)0x0) {\n          return;\n        }\n      }\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041d78f",
      "entry": "0041d78f",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041d78f(HWND param_1,wchar_t *param_2,int param_3,char param_4)\n\n{\n  bool bVar1;\n  wchar_t *pwVar2;\n  bool bVar3;\n  size_t sVar4;\n  undefined1 (*pauVar5) [16];\n  BOOL BVar6;\n  int iVar7;\n  wchar_t *pwVar8;\n  wchar_t wVar9;\n  uint uStack_1040;\n  SHELLEXECUTEINFOW local_103c;\n  WCHAR local_1000 [2046];\n  undefined4 uStack_4;\n  \n  uStack_4 = 0x41d799;\n  bVar1 = false;\n  if ((*param_2 != L'\\0') && (sVar4 = _wcslen(param_2), sVar4 < 0x7f6)) {\n    _memset(&local_103c,0,0x3c);\n    local_103c.cbSize = 0x3c;\n    local_103c.fMask = 0x1c0;\n    if (param_4 != '\\0') {\n      local_103c.fMask = 0x5c0;\n    }\n    wVar9 = *param_2;\n    iVar7 = 0;\n    if (wVar9 != L'\\\"') {\n      local_103c.lpFile = param_2;\n      pwVar8 = param_2;\n      goto LAB_0041d85b;\n    }\n    pwVar8 = param_2 + 1;\n    local_103c.lpFile = pwVar8;\n    do {\n      if (wVar9 == L'\\\"') {\n        do {\n          iVar7 = iVar7 + 1;\n          if (param_2[iVar7] == L'\\0') goto LAB_0041d837;\n        } while (param_2[iVar7] != L'\\\"');\n        param_2[iVar7] = L' ';\n      }\nLAB_0041d837:\n      pwVar2 = param_2 + iVar7 + 1;\n      if (param_2[iVar7] == L' ') {\n        param_2[iVar7] = L'\\0';\n        break;\n      }\n      if (*pwVar2 == L'/') break;\n      iVar7 = iVar7 + 1;\n      wVar9 = param_2[iVar7];\nLAB_0041d85b:\n      pwVar2 = local_103c.lpParameters;\n    } while (wVar9 != L'\\0');\n    local_103c.lpParameters = pwVar2;\n    if ((((local_103c.lpParameters == (wchar_t *)0x0) || (*local_103c.lpParameters == L'\\0')) &&\n        (param_4 == '\\0')) && (DAT_0044b472 != 0)) {\n      local_103c.lpParameters = &DAT_0044b472;\n    }\n    local_103c.nShow = param_3;\n    pauVar5 = FUN_0040b92d(pwVar8);\n    if ((pauVar5 != (undefined1 (*) [16])0x0) &&\n       (iVar7 = FUN_00411fbb((PCNZWCH)pauVar5,L\".inf\"), iVar7 == 0)) {\n      local_103c.lpVerb = L\"Install\";\n    }\n    bVar3 = FUN_0040a231(local_103c.lpFile);\n    if (bVar3) {\n      FUN_0040b6c4(local_103c.lpFile,local_1000,0x800);\n      local_103c.lpFile = local_1000;\n    }\n    BVar6 = ShellExecuteExW(&local_103c);\n    if (BVar6 != 0) {\n      if (((DAT_00449468 != '\\0') || (param_4 != '\\0')) || (DAT_00457b7a != '\\0')) {\n        if ((param_1 != (HWND)0x0) && (BVar6 = IsWindowVisible(param_1), BVar6 != 0)) {\n          ShowWindow(param_1,0);\n          bVar1 = true;\n        }\n        WaitForInputIdle(local_103c.hProcess,2000);\n        FUN_0041dc3b(local_103c.hProcess);\n        if (((DAT_00457b7a != '\\0') && (param_4 == '\\0')) &&\n           (BVar6 = GetExitCodeProcess(local_103c.hProcess,&uStack_1040), BVar6 != 0)) {\n          if (DAT_0045fca4 < uStack_1040) {\n            DAT_0045fca4 = uStack_1040;\n          }\n          DAT_00457b7b = 1;\n        }\n      }\n      CloseHandle(local_103c.hProcess);\n      if (((pauVar5 == (undefined1 (*) [16])0x0) ||\n          (iVar7 = FUN_00411fbb((PCNZWCH)pauVar5,L\".exe\"), iVar7 != 0)) &&\n         ((DAT_00449468 != '\\0' && ((param_4 == '\\0' && (DAT_00457b7a == '\\0')))))) {\n        DAT_0045fca8 = 7000;\n      }\n      if ((bVar1) && (param_4 != '\\0')) {\n        ShowWindow(param_1,1);\n      }\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041d9f3",
      "entry": "0041d9f3",
      "c": "\nvoid FUN_0041d9f3(HWND param_1)\n\n{\n  DAT_0044844c = 0;\n  DAT_00448455 = 1;\n  DAT_00448456 = 1;\n  ShowWindow(param_1,1);\n  FUN_004012d3(param_1,2,0);\n  if (((DAT_0045fca0 == 0) && (DAT_00448463 == '\\0')) || (DAT_0044845c == 0)) {\n    SendMessageW(param_1,0x111,1,0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041da52",
      "entry": "0041da52",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0041da52(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041eb78();\n  *(undefined1 **)(unaff_EBP + -0x10) = &stack0xffffdee8;\n  _wcscpy((wchar_t *)&DAT_00455872,L\"X\");\n  FUN_00410659(&DAT_00457894,L\"*\");\n  _wcscpy((wchar_t *)&DAT_00456892,*(wchar_t **)(unaff_EBP + 0xc));\n  FUN_00405b3d(&DAT_0044c578,*(wchar_t **)(unaff_EBP + 0xc));\n  *(undefined4 *)(unaff_EBP + -4) = 0;\n  _DAT_00454850 = 2;\n  _DAT_0045484c = 2;\n  _DAT_00454848 = 2;\n  DAT_004536d3 = DAT_00448461;\n  DAT_0045370c = 1;\n  DAT_0045370f = 1;\n  DAT_004536d4 = DAT_00448462;\n  FUN_00407b0d();\n  *(undefined1 *)(unaff_EBP + -4) = 1;\n  FUN_00407c7d(unaff_EBP + -0x2118);\n  FUN_00407b9e(unaff_EBP + -0x2118);\n  ExceptionList = *(void **)(unaff_EBP + -0xc);\n  return;\n}\n\n"
    },
    {
      "name": "Catch@0041db1a",
      "entry": "0041db1a",
      "c": "\nundefined4 Catch_0041db1a(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00406cba(&DAT_00441098);\n  FUN_00406d83(&DAT_00441098,8);\n  FUN_0041d9f3(*(HWND *)(unaff_EBP + 8));\n  return 0x41db09;\n}\n\n"
    },
    {
      "name": "Catch_All@0041db3d",
      "entry": "0041db3d",
      "c": "\nundefined4 Catch_All_0041db3d(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041d9f3(*(HWND *)(unaff_EBP + 8));\n  return 0x41db09;\n}\n\n"
    },
    {
      "name": "FUN_0041db4b",
      "entry": "0041db4b",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041db4b(wchar_t *param_1)\n\n{\n  LSTATUS LVar1;\n  size_t sVar2;\n  WCHAR local_100c [2048];\n  DWORD local_c;\n  HKEY local_8;\n  \n  local_8 = (HKEY)0x41db58;\n  if ((DAT_0044a470 != '\\0') && (DAT_0044a472 != 0)) {\n    FUN_0041c6f0(0x44a472,local_100c,0x800);\n    LVar1 = RegCreateKeyExW((HKEY)0x80000001,L\"Software\\\\WinRAR SFX\",0,(LPWSTR)0x0,0,0x20006,\n                            (LPSECURITY_ATTRIBUTES)0x0,&local_8,&local_c);\n    if (LVar1 == 0) {\n      sVar2 = _wcslen(param_1);\n      RegSetValueExW(local_8,local_100c,0,1,(BYTE *)param_1,sVar2 * 2 + 2);\n      RegCloseKey(local_8);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041dbde",
      "entry": "0041dbde",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041dbde(LPCWSTR param_1)\n\n{\n  WCHAR WVar1;\n  char cVar2;\n  WCHAR *lpValue;\n  undefined1 local_2004 [8188];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x41dbeb;\n  SetEnvironmentVariableW(L\"sfxcmd\",param_1);\n  lpValue = (WCHAR *)FUN_00410371((ushort *)param_1,(int)local_2004,0x1000);\n  if (lpValue != (WCHAR *)0x0) {\n    WVar1 = *lpValue;\n    while( true ) {\n      cVar2 = FUN_0041048d((uint)(ushort)WVar1);\n      if (cVar2 == '\\0') break;\n      lpValue = lpValue + 1;\n      WVar1 = *lpValue;\n    }\n    SetEnvironmentVariableW(L\"sfxpar\",lpValue);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041dc3b",
      "entry": "0041dc3b",
      "c": "\nvoid FUN_0041dc3b(HANDLE param_1)\n\n{\n  DWORD DVar1;\n  BOOL BVar2;\n  tagMSG local_20;\n  \n  DVar1 = WaitForSingleObject(param_1,10);\n  while (DVar1 == 0x102) {\n    BVar2 = PeekMessageW(&local_20,(HWND)0x0,0,0,0);\n    if (BVar2 != 0) {\n      GetMessageW(&local_20,(HWND)0x0,0,0);\n      TranslateMessage(&local_20);\n      DispatchMessageW(&local_20);\n    }\n    DVar1 = WaitForSingleObject(param_1,10);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041dca1",
      "entry": "0041dca1",
      "c": "\nundefined4 FUN_0041dca1(undefined4 param_1,undefined4 param_2)\n\n{\n  INT_PTR IVar1;\n  undefined4 local_c;\n  undefined4 local_8;\n  \n  local_c = param_1;\n  local_8 = param_2;\n  IVar1 = DialogBoxParamW(DAT_00441028,L\"ASKNEXTVOL\",DAT_00448458,FUN_0041ad10,(LPARAM)&local_c);\n  return CONCAT31((int3)((uint)-(IVar1 + -1) >> 8),'\\x01' - (IVar1 + -1 != 0));\n}\n\n"
    },
    {
      "name": "FUN_0041dcdd",
      "entry": "0041dcdd",
      "c": "\nINT_PTR FUN_0041dcdd(LPARAM param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                    undefined4 param_5)\n\n{\n  INT_PTR IVar1;\n  INT_PTR IVar2;\n  \n  DAT_0045ec88 = param_3;\n  DAT_0045ec8c = param_4;\n  DAT_00448464 = param_5;\n  if (DAT_00448460 == '\\0') {\n    if (DAT_00448457 == '\\0') {\n      do {\n        IVar1 = DialogBoxParamW(DAT_0044102c,L\"REPLACEFILEDLG\",DAT_00448458,FUN_0041c220,param_1);\n        if (IVar1 != 4) {\n          return IVar1;\n        }\n        IVar2 = DialogBoxParamW(DAT_00441028,L\"RENAMEDLG\",DAT_00448450,FUN_0041d600,param_1);\n        IVar1 = 4;\n      } while (IVar2 == 0);\n    }\n    else {\n      IVar1 = 1;\n    }\n  }\n  else {\n    IVar1 = 0;\n  }\n  return IVar1;\n}\n\n"
    },
    {
      "name": "FUN_0041dd6d",
      "entry": "0041dd6d",
      "c": "\nvoid __fastcall FUN_0041dd6d(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined8 uVar1;\n  uint in_stack_00000014;\n  int in_stack_00000018;\n  uint in_stack_0000001c;\n  uint in_stack_00000020;\n  LPARAM lParam;\n  \n  lParam = 0;\n  uVar1 = FUN_00410264(param_1,param_2,in_stack_00000014,in_stack_00000018,in_stack_0000001c,\n                       in_stack_00000020);\n  SendDlgItemMessageW(DAT_00448458,0x6a,0x402,(WPARAM)uVar1,lParam);\n  FUN_0041b568();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041dda0",
      "entry": "0041dda0",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nuint FUN_0041dda0(int param_1,LPCSTR param_2,wchar_t *param_3,undefined4 *param_4)\n\n{\n  uint uVar1;\n  BOOL BVar2;\n  INT_PTR IVar3;\n  int iVar4;\n  HWND pHVar5;\n  undefined4 *puVar6;\n  undefined4 *puVar7;\n  wchar_t local_1004 [2046];\n  undefined4 uStack_8;\n  \n  pHVar5 = DAT_00448458;\n  uStack_8 = 0x41ddad;\n  uVar1 = 1;\n  if (DAT_0044c572 == '\\0') {\n    if (param_1 == 2) {\n      BVar2 = IsWindowVisible(DAT_00448458);\n      pHVar5 = (HWND)((uint)pHVar5 & -(uint)(BVar2 != 0));\n    }\n    FUN_0040baad(param_2,param_3,local_1004,0x800);\n    IVar3 = DialogBoxParamW(DAT_0044102c,L\"GETPASSWORD1\",pHVar5,FUN_0041b270,(LPARAM)local_1004);\n    if (IVar3 == 0) {\n      uVar1 = FUN_0040f3fa(param_4,L\"\");\n      DAT_00448454 = 1;\n      uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n      puVar6 = &DAT_00457a78;\n      puVar7 = param_4;\n      for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n      }\n      uVar1 = 1;\n      *(undefined2 *)puVar7 = *(undefined2 *)puVar6;\n    }\n    if (*(char *)(param_4 + 0x40) != '\\0') {\n      puVar6 = &DAT_0044c472;\n      for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *param_4;\n        param_4 = param_4 + 1;\n        puVar6 = puVar6 + 1;\n      }\n      *(undefined2 *)puVar6 = *(undefined2 *)param_4;\n    }\n  }\n  else {\n    puVar6 = &DAT_0044c472;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n      *param_4 = *puVar6;\n      puVar6 = puVar6 + 1;\n      param_4 = param_4 + 1;\n    }\n    *(undefined2 *)param_4 = *(undefined2 *)puVar6;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_0041de6b",
      "entry": "0041de6b",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nvoid FUN_0041de6b(char param_1,wchar_t *param_2)\n\n{\n  wchar_t *pwVar1;\n  wchar_t local_1404 [2558];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x41de78;\n  FUN_0040c29a(param_2);\n  pwVar1 = (wchar_t *)FUN_0040e617(((param_1 != 'T') - 1 & 0x17e) + 0x8d);\n  FUN_00404092(local_1404,0xa00,pwVar1);\n  FUN_0041d4d4('\\0',(LPARAM)local_1404);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041dec2",
      "entry": "0041dec2",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n\nbool FUN_0041dec2(void)\n\n{\n  wchar_t *pwVar1;\n  byte in_stack_00000010;\n  wchar_t local_1404 [2558];\n  undefined4 uStack_8;\n  \n  uStack_8 = 0x41decf;\n  pwVar1 = (wchar_t *)FUN_0040e617(in_stack_00000010 + 0x65);\n  FUN_00404092(local_1404,0xa00,pwVar1);\n  SetDlgItemTextW(DAT_00448458,0x65,local_1404);\n  FUN_0041b568();\n  return DAT_00448454 == '\\0';\n}\n\n"
    },
    {
      "name": "FUN_0041df1e",
      "entry": "0041df1e",
      "c": "\nint FUN_0041df1e(void)\n\n{\n  LPWSTR pWVar1;\n  HANDLE hFileMappingObject;\n  uint *lpBaseAddress;\n  HMODULE hInstance;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  _SYSTEMTIME _Stack_d4;\n  undefined4 local_c4 [2];\n  undefined4 auStack_bc [11];\n  undefined4 auStack_90 [11];\n  wchar_t awStack_64 [50];\n  \n  FUN_00410863(1);\n  FUN_0041a64d((LPWSTR)&DAT_00448468,0x800);\n  FUN_0041ac16(local_c4);\n  _memset(&DAT_00457b80,0,0x7104);\n  pWVar1 = GetCommandLineW();\n  if (pWVar1 != (LPWSTR)0x0) {\n    FUN_0041c5c4((ushort *)pWVar1);\n    if (DAT_0044a471 == '\\0') {\n      FUN_0041dbde(pWVar1);\n    }\n    else {\n      hFileMappingObject = OpenFileMappingW(0xf001f,0,L\"winrarsfxmappingfile.tmp\");\n      if (hFileMappingObject != (HANDLE)0x0) {\n        lpBaseAddress = (uint *)MapViewOfFile(hFileMappingObject,0xf001f,0,0,0x7104);\n        if (lpBaseAddress != (uint *)0x0) {\n          FUN_00420320((uint *)&DAT_00457b80,lpBaseAddress,0x7104);\n          *(undefined1 *)lpBaseAddress = 1;\n          FUN_0041dbde((LPCWSTR)&DAT_00457b82);\n          puVar3 = &DAT_0045eb82;\n          puVar4 = &DAT_0044c472;\n          for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n          }\n          *(undefined2 *)puVar4 = *(undefined2 *)puVar3;\n        }\n        UnmapViewOfFile(lpBaseAddress);\n      }\n      CloseHandle(hFileMappingObject);\n    }\n  }\n  GetModuleFileNameW((HMODULE)0x0,(LPWSTR)&DAT_0045ec90,0x800);\n  SetEnvironmentVariableW(L\"sfxname\",(LPCWSTR)&DAT_0045ec90);\n  GetLocalTime(&_Stack_d4);\n  FUN_00404092(awStack_64,0x32,L\"%4d-%02d-%02d-%02d-%02d-%02d-%03d\");\n  SetEnvironmentVariableW(L\"sfxstime\",awStack_64);\n  hInstance = GetModuleHandleW((LPCWSTR)0x0);\n  DAT_00441028 = hInstance;\n  DAT_0044102c = hInstance;\n  DAT_00457b7c = LoadIconW(hInstance,(LPCWSTR)0x64);\n  DAT_0045ec84 = FUN_0041b6dd();\n  FUN_0040da42(0x441030);\n  FUN_004190b7(auStack_90);\n  FUN_004190b7(auStack_bc);\n  DAT_00448440 = auStack_90;\n  DAT_00448444 = auStack_bc;\n  DialogBoxParamW(hInstance,L\"STARTDLG\",(HWND)0x0,FUN_0041b7e0,0);\n  DAT_00448444 = (undefined4 *)0x0;\n  DAT_00448440 = (undefined4 *)0x0;\n  FUN_00419178(auStack_bc);\n  FUN_00419178(auStack_90);\n  if (DAT_0045fca8 != 0) {\n    Sleep(DAT_0045fca8);\n  }\n  if (DAT_00449468 != '\\0') {\n    FUN_0041ae2f();\n  }\n  FUN_0040f279((undefined1 *)&DAT_00457a78);\n  if (DAT_0045fca0 != 0) {\n    FID_conflict__free(DAT_0045fc90);\n  }\n  DeleteObject(DAT_00457b7c);\n  if (DAT_0045ec84 != (HBITMAP)0x0) {\n    DeleteObject(DAT_0045ec84);\n  }\n  if ((DAT_00441098 == 0) && (DAT_00448454 != '\\0')) {\n    FUN_00406d83(&DAT_00441098,0xff);\n  }\n  DAT_00448454 = 1;\n  if (DAT_0045fcac != (HANDLE)0x0) {\n    FUN_0041dc3b(DAT_0045fcac);\n    CloseHandle(DAT_0045fcac);\n  }\n  iVar2 = DAT_00441098;\n  if (DAT_00457b7a != '\\0') {\n    if (DAT_00457b7b == '\\0') {\n      if (DAT_0043e728 < 0) {\n        iVar2 = DAT_00441098 - DAT_0043e728;\n      }\n    }\n    else {\n      iVar2 = DAT_0045fca4;\n      if (0 < DAT_0043e728) {\n        iVar2 = DAT_0045fca4 + DAT_0043e728;\n      }\n    }\n  }\n  FUN_0041ac7c((int)local_c4);\n  return iVar2;\n}\n\n"
    },
    {
      "name": "DelayLoad_ShowWindow",
      "entry": "0041e1d1",
      "c": "\nvoid DelayLoad_ShowWindow(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e1db",
      "entry": "0041e1db",
      "c": "\nvoid FUN_0041e1db(void)\n\n{\n  int *in_EAX;\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE = ___delayLoadHelper2_8(&ImgDelayDescr_0043c5ec.grAttrs,in_EAX);\n                    /* WARNING: Could not recover jumptable at 0x0041e1ea. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetDlgItem",
      "entry": "0041e1ec",
      "c": "\nvoid DelayLoad_GetDlgItem(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_EnableWindow",
      "entry": "0041e1f6",
      "c": "\nvoid DelayLoad_EnableWindow(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetWindowTextW",
      "entry": "0041e200",
      "c": "\nvoid DelayLoad_SetWindowTextW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetParent",
      "entry": "0041e20a",
      "c": "\nvoid DelayLoad_GetParent(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetWindowPos",
      "entry": "0041e214",
      "c": "\nvoid DelayLoad_SetWindowPos(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetDlgItemTextW",
      "entry": "0041e21e",
      "c": "\nvoid DelayLoad_SetDlgItemTextW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetSystemMetrics",
      "entry": "0041e228",
      "c": "\nvoid DelayLoad_GetSystemMetrics(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetClientRect",
      "entry": "0041e232",
      "c": "\nvoid DelayLoad_GetClientRect(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetWindowRect",
      "entry": "0041e23c",
      "c": "\nvoid DelayLoad_GetWindowRect(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetWindowLongW",
      "entry": "0041e246",
      "c": "\nvoid DelayLoad_GetWindowLongW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetWindowLongW",
      "entry": "0041e250",
      "c": "\nvoid DelayLoad_SetWindowLongW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetProcessDefaultLayout",
      "entry": "0041e25a",
      "c": "\nvoid DelayLoad_SetProcessDefaultLayout(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetWindow",
      "entry": "0041e264",
      "c": "\nvoid DelayLoad_GetWindow(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_LoadStringW",
      "entry": "0041e26e",
      "c": "\nvoid DelayLoad_LoadStringW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_OemToCharBuffA",
      "entry": "0041e278",
      "c": "\nvoid DelayLoad_OemToCharBuffA(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CharUpperW",
      "entry": "0041e282",
      "c": "\nvoid DelayLoad_CharUpperW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_DefWindowProcW",
      "entry": "0041e28c",
      "c": "\nvoid DelayLoad_DefWindowProcW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_RegisterClassExW",
      "entry": "0041e296",
      "c": "\nvoid DelayLoad_RegisterClassExW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CreateWindowExW",
      "entry": "0041e2a0",
      "c": "\nvoid DelayLoad_CreateWindowExW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_IsWindow",
      "entry": "0041e2aa",
      "c": "\nvoid DelayLoad_IsWindow(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_DestroyWindow",
      "entry": "0041e2b4",
      "c": "\nvoid DelayLoad_DestroyWindow(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_UpdateWindow",
      "entry": "0041e2be",
      "c": "\nvoid DelayLoad_UpdateWindow(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_MapWindowPoints",
      "entry": "0041e2c8",
      "c": "\nvoid DelayLoad_MapWindowPoints(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CopyRect",
      "entry": "0041e2d2",
      "c": "\nvoid DelayLoad_CopyRect(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_LoadCursorW",
      "entry": "0041e2dc",
      "c": "\nvoid DelayLoad_LoadCursorW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SendMessageW",
      "entry": "0041e2e6",
      "c": "\nvoid DelayLoad_SendMessageW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetDC",
      "entry": "0041e2f0",
      "c": "\nvoid DelayLoad_GetDC(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_ReleaseDC",
      "entry": "0041e2fa",
      "c": "\nvoid DelayLoad_ReleaseDC(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_MessageBoxW",
      "entry": "0041e304",
      "c": "\nvoid DelayLoad_MessageBoxW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_FindWindowExW",
      "entry": "0041e30e",
      "c": "\nvoid DelayLoad_FindWindowExW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetClassNameW",
      "entry": "0041e318",
      "c": "\nvoid DelayLoad_GetClassNameW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CopyImage",
      "entry": "0041e322",
      "c": "\nvoid DelayLoad_CopyImage(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_wvsprintfW",
      "entry": "0041e32c",
      "c": "\nvoid DelayLoad_wvsprintfW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetMessageW",
      "entry": "0041e336",
      "c": "\nvoid DelayLoad_GetMessageW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_TranslateMessage",
      "entry": "0041e340",
      "c": "\nvoid DelayLoad_TranslateMessage(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_DispatchMessageW",
      "entry": "0041e34a",
      "c": "\nvoid DelayLoad_DispatchMessageW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_PeekMessageW",
      "entry": "0041e354",
      "c": "\nvoid DelayLoad_PeekMessageW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_PostMessageW",
      "entry": "0041e35e",
      "c": "\nvoid DelayLoad_PostMessageW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_WaitForInputIdle",
      "entry": "0041e368",
      "c": "\nvoid DelayLoad_WaitForInputIdle(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_IsWindowVisible",
      "entry": "0041e372",
      "c": "\nvoid DelayLoad_IsWindowVisible(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_DialogBoxParamW",
      "entry": "0041e37c",
      "c": "\nvoid DelayLoad_DialogBoxParamW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_EndDialog",
      "entry": "0041e386",
      "c": "\nvoid DelayLoad_EndDialog(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetDlgItemTextW",
      "entry": "0041e390",
      "c": "\nvoid DelayLoad_GetDlgItemTextW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SendDlgItemMessageW",
      "entry": "0041e39a",
      "c": "\nvoid DelayLoad_SendDlgItemMessageW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetFocus",
      "entry": "0041e3a4",
      "c": "\nvoid DelayLoad_SetFocus(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetForegroundWindow",
      "entry": "0041e3ae",
      "c": "\nvoid DelayLoad_SetForegroundWindow(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetSysColor",
      "entry": "0041e3b8",
      "c": "\nvoid DelayLoad_GetSysColor(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_LoadBitmapW",
      "entry": "0041e3c2",
      "c": "\nvoid DelayLoad_LoadBitmapW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_LoadIconW",
      "entry": "0041e3cc",
      "c": "\nvoid DelayLoad_LoadIconW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_DestroyIcon",
      "entry": "0041e3d6",
      "c": "\nvoid DelayLoad_DestroyIcon(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_IsDialogMessageW",
      "entry": "0041e3e0",
      "c": "\nvoid DelayLoad_IsDialogMessageW(void)\n\n{\n  FUN_0041e1db();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CreateCompatibleBitmap",
      "entry": "0041e3ea",
      "c": "\nvoid DelayLoad_CreateCompatibleBitmap(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e3f4",
      "entry": "0041e3f4",
      "c": "\nvoid FUN_0041e3f4(void)\n\n{\n  int *in_EAX;\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE = ___delayLoadHelper2_8(&ImgDelayDescr_0043c60c.grAttrs,in_EAX);\n                    /* WARNING: Could not recover jumptable at 0x0041e403. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CreateCompatibleDC",
      "entry": "0041e405",
      "c": "\nvoid DelayLoad_CreateCompatibleDC(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_DeleteDC",
      "entry": "0041e40f",
      "c": "\nvoid DelayLoad_DeleteDC(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_DeleteObject",
      "entry": "0041e419",
      "c": "\nvoid DelayLoad_DeleteObject(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetDeviceCaps",
      "entry": "0041e423",
      "c": "\nvoid DelayLoad_GetDeviceCaps(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SelectObject",
      "entry": "0041e42d",
      "c": "\nvoid DelayLoad_SelectObject(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_StretchBlt",
      "entry": "0041e437",
      "c": "\nvoid DelayLoad_StretchBlt(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CreateDIBSection",
      "entry": "0041e441",
      "c": "\nvoid DelayLoad_CreateDIBSection(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetObjectW",
      "entry": "0041e44b",
      "c": "\nvoid DelayLoad_GetObjectW(void)\n\n{\n  FUN_0041e3f4();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetOpenFileNameW",
      "entry": "0041e455",
      "c": "\nvoid DelayLoad_GetOpenFileNameW(void)\n\n{\n  FUN_0041e45f();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e45f",
      "entry": "0041e45f",
      "c": "\nvoid FUN_0041e45f(void)\n\n{\n  int *in_EAX;\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE = ___delayLoadHelper2_8(&ImgDelayDescr_0043c62c.grAttrs,in_EAX);\n                    /* WARNING: Could not recover jumptable at 0x0041e46e. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_GetSaveFileNameW",
      "entry": "0041e470",
      "c": "\nvoid DelayLoad_GetSaveFileNameW(void)\n\n{\n  FUN_0041e45f();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CommDlgExtendedError",
      "entry": "0041e47a",
      "c": "\nvoid DelayLoad_CommDlgExtendedError(void)\n\n{\n  FUN_0041e45f();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e484",
      "entry": "0041e484",
      "c": "\nvoid FUN_0041e484(void)\n\n{\n  int *in_EAX;\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE = ___delayLoadHelper2_8(&ImgDelayDescr_0043c64c.grAttrs,in_EAX);\n                    /* WARNING: Could not recover jumptable at 0x0041e493. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_OpenProcessToken",
      "entry": "0041e495",
      "c": "\nvoid DelayLoad_OpenProcessToken(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_AdjustTokenPrivileges",
      "entry": "0041e49f",
      "c": "\nvoid DelayLoad_AdjustTokenPrivileges(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SetFileSecurityW",
      "entry": "0041e4a9",
      "c": "\nvoid DelayLoad_SetFileSecurityW(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_LookupPrivilegeValueW",
      "entry": "0041e4b3",
      "c": "\nvoid DelayLoad_LookupPrivilegeValueW(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_AllocateAndInitializeSid",
      "entry": "0041e4bd",
      "c": "\nvoid DelayLoad_AllocateAndInitializeSid(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_FreeSid",
      "entry": "0041e4c7",
      "c": "\nvoid DelayLoad_FreeSid(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CheckTokenMembership",
      "entry": "0041e4d1",
      "c": "\nvoid DelayLoad_CheckTokenMembership(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_RegCloseKey",
      "entry": "0041e4db",
      "c": "\nvoid DelayLoad_RegCloseKey(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_RegCreateKeyExW",
      "entry": "0041e4e5",
      "c": "\nvoid DelayLoad_RegCreateKeyExW(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_RegOpenKeyExW",
      "entry": "0041e4ef",
      "c": "\nvoid DelayLoad_RegOpenKeyExW(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_RegQueryValueExW",
      "entry": "0041e4f9",
      "c": "\nvoid DelayLoad_RegQueryValueExW(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_RegSetValueExW",
      "entry": "0041e503",
      "c": "\nvoid DelayLoad_RegSetValueExW(void)\n\n{\n  FUN_0041e484();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHGetMalloc",
      "entry": "0041e50d",
      "c": "\nvoid DelayLoad_SHGetMalloc(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e517",
      "entry": "0041e517",
      "c": "\nvoid FUN_0041e517(void)\n\n{\n  int *in_EAX;\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE = ___delayLoadHelper2_8(&ImgDelayDescr_0043c66c.grAttrs,in_EAX);\n                    /* WARNING: Could not recover jumptable at 0x0041e526. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHGetPathFromIDListW",
      "entry": "0041e528",
      "c": "\nvoid DelayLoad_SHGetPathFromIDListW(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHBrowseForFolderW",
      "entry": "0041e532",
      "c": "\nvoid DelayLoad_SHBrowseForFolderW(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHFileOperationW",
      "entry": "0041e53c",
      "c": "\nvoid DelayLoad_SHFileOperationW(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_ShellExecuteExW",
      "entry": "0041e546",
      "c": "\nvoid DelayLoad_ShellExecuteExW(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHGetFileInfoW",
      "entry": "0041e550",
      "c": "\nvoid DelayLoad_SHGetFileInfoW(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHGetFolderLocation",
      "entry": "0041e55a",
      "c": "\nvoid DelayLoad_SHGetFolderLocation(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHChangeNotify",
      "entry": "0041e564",
      "c": "\nvoid DelayLoad_SHChangeNotify(void)\n\n{\n  FUN_0041e517();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CoSetProxyBlanket",
      "entry": "0041e56e",
      "c": "\nvoid DelayLoad_CoSetProxyBlanket(void)\n\n{\n  FUN_0041e578();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e578",
      "entry": "0041e578",
      "c": "\nvoid FUN_0041e578(void)\n\n{\n  int *in_EAX;\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE = ___delayLoadHelper2_8(&ImgDelayDescr_0043c68c.grAttrs,in_EAX);\n                    /* WARNING: Could not recover jumptable at 0x0041e587. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CoCreateInstance",
      "entry": "0041e589",
      "c": "\nvoid DelayLoad_CoCreateInstance(void)\n\n{\n  FUN_0041e578();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CreateStreamOnHGlobal",
      "entry": "0041e593",
      "c": "\nvoid DelayLoad_CreateStreamOnHGlobal(void)\n\n{\n  FUN_0041e578();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_CLSIDFromString",
      "entry": "0041e59d",
      "c": "\nvoid DelayLoad_CLSIDFromString(void)\n\n{\n  FUN_0041e578();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_OleInitialize",
      "entry": "0041e5a7",
      "c": "\nvoid DelayLoad_OleInitialize(void)\n\n{\n  FUN_0041e578();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_OleUninitialize",
      "entry": "0041e5b1",
      "c": "\nvoid DelayLoad_OleUninitialize(void)\n\n{\n  FUN_0041e578();\n  return;\n}\n\n"
    },
    {
      "name": "DloadAcquireSectionWriteAccess",
      "entry": "0041e5bb",
      "c": "\n/* Library Function - Single Match\n    void __stdcall DloadAcquireSectionWriteAccess(void)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid DloadAcquireSectionWriteAccess(void)\n\n{\n  if ((IMAGE_LOAD_CONFIG_DIRECTORY32_004355f8.GuardFlags & IMAGE_GUARD_PROTECT_DELAYLOAD_IAT) != 0)\n  {\n    DloadLock();\n    DAT_00461ce8 = DAT_00461ce8 + 1;\n    if (DAT_00461ce8 == 1) {\n      DloadProtectSection(4,&DAT_00461cec);\n    }\n    DloadUnlock();\n    return;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e5ee",
      "entry": "0041e5ee",
      "c": "\nbool FUN_0041e5ee(void)\n\n{\n  HMODULE pHVar1;\n  HMODULE hModule;\n  FARPROC pFVar2;\n  HMODULE pHVar3;\n  \n  if (DAT_00461cd8 != (HMODULE)0x1) {\n    if (DAT_00461cd8 != (HMODULE)0x0) {\n      return true;\n    }\n    hModule = GetModuleHandleW(L\"KERNEL32.DLL\");\n    if (((hModule == (HMODULE)0x0) ||\n        (pFVar2 = GetProcAddress(hModule,\"AcquireSRWLockExclusive\"), pFVar2 == (FARPROC)0x0)) ||\n       (DAT_00461cdc = pFVar2, pFVar2 = GetProcAddress(hModule,\"ReleaseSRWLockExclusive\"),\n       pFVar2 == (FARPROC)0x0)) {\n      hModule = (HMODULE)0x1;\n      pFVar2 = DAT_00461ce0;\n    }\n    DAT_00461ce0 = pFVar2;\n    pHVar3 = (HMODULE)0x0;\n    LOCK();\n    pHVar1 = hModule;\n    if (DAT_00461cd8 != (HMODULE)0x0) {\n      pHVar3 = DAT_00461cd8;\n      pHVar1 = DAT_00461cd8;\n    }\n    DAT_00461cd8 = pHVar1;\n    UNLOCK();\n    if ((pHVar3 != (HMODULE)0x0) || (hModule != (HMODULE)0x1)) {\n      return pHVar3 != (HMODULE)0x1;\n    }\n  }\n  return false;\n}\n\n"
    },
    {
      "name": "DloadLock",
      "entry": "0041e664",
      "c": "\n/* WARNING: Removing unreachable block (ram,0x0041e69a) */\n/* Library Function - Single Match\n    void __stdcall DloadLock(void)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid DloadLock(void)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  \n  bVar2 = FUN_0041e5ee();\n  pcVar1 = DAT_00461cdc;\n  if (bVar2) {\n    (*(code *)PTR_guard_check_icall_00433278)(&DAT_00461ce4);\n    (*pcVar1)();\n    return;\n  }\n  do {\n  } while (DAT_00461ce4 != 0);\n  LOCK();\n  DAT_00461ce4 = 1;\n  UNLOCK();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e6a3",
      "entry": "0041e6a3",
      "c": "\nvoid FUN_0041e6a3(LPCVOID param_1,uint param_2)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  SIZE_T SVar3;\n  int iVar4;\n  undefined4 *puVar5;\n  _SYSTEM_INFO local_44;\n  _MEMORY_BASIC_INFORMATION local_20;\n  \n  SVar3 = VirtualQuery(param_1,&local_20,0x1c);\n  if (SVar3 == 0) {\n    pcVar2 = (code *)swi(0x29);\n    (*pcVar2)();\n  }\n  if (((byte)local_20.Protect & 0x44) != 0) {\n    GetSystemInfo(&local_44);\n    uVar1 = local_44.dwPageSize - 1;\n    puVar5 = (undefined4 *)(~uVar1 & (uint)param_1);\n    for (iVar4 = ((uVar1 & (uint)param_1) + local_44.dwPageSize + ((uVar1 & param_2) - 1)) /\n                 local_44.dwPageSize + param_2 / local_44.dwPageSize; iVar4 != 0; iVar4 = iVar4 + -1\n        ) {\n      LOCK();\n      *puVar5 = *puVar5;\n      UNLOCK();\n      puVar5 = (undefined4 *)((int)puVar5 + local_44.dwPageSize);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041e712",
      "entry": "0041e712",
      "c": "\n/* WARNING: Enum \"SectionFlags\": Some values do not have unique names */\n\nint FUN_0041e712(dword *param_1,SectionFlags *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  if ((0xd < *(uint *)(IMAGE_DOS_HEADER_00400000.e_program +\n                      IMAGE_DOS_HEADER_00400000.e_lfanew + 0x34)) &&\n     (*(int *)(&UNK_00400080.field_0x60 + IMAGE_DOS_HEADER_00400000.e_lfanew) != 0)) {\n    iVar1 = IMAGE_DOS_HEADER_00400000.e_lfanew + 0x400018 +\n            (uint)*(ushort *)\n                   ((int)IMAGE_DOS_HEADER_00400000.e_res_4_ +\n                   (IMAGE_DOS_HEADER_00400000.e_lfanew - 8));\n    uVar2 = 0;\n    if (*(ushort *)(IMAGE_DOS_HEADER_00400000.e_magic + IMAGE_DOS_HEADER_00400000.e_lfanew + 6) != 0\n       ) {\n      do {\n        if ((*(uint *)(iVar1 + 0xc) <=\n             *(uint *)(IMAGE_DOS_HEADER_00400000.e_magic +\n                      *(int *)(&UNK_00400080.field_0x60 + IMAGE_DOS_HEADER_00400000.e_lfanew) + 0xc)\n            ) && (*(uint *)(IMAGE_DOS_HEADER_00400000.e_magic +\n                           *(int *)(&UNK_00400080.field_0x60 + IMAGE_DOS_HEADER_00400000.e_lfanew) +\n                           0xc) < *(uint *)(iVar1 + 0xc) + *(dword *)(iVar1 + 8))) {\n          *param_1 = *(dword *)(iVar1 + 8);\n          *param_2 = *(SectionFlags *)(iVar1 + 0x24);\n          return *(int *)(iVar1 + 0xc) + 0x400000;\n        }\n        uVar2 = uVar2 + 1;\n        iVar1 = iVar1 + 0x28;\n      } while (uVar2 < *(ushort *)\n                        (IMAGE_DOS_HEADER_00400000.e_magic + IMAGE_DOS_HEADER_00400000.e_lfanew + 6)\n              );\n    }\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "DloadProtectSection",
      "entry": "0041e78d",
      "c": "\n/* WARNING: Enum \"SectionFlags\": Some values do not have unique names */\n/* Library Function - Single Match\n    void __stdcall DloadProtectSection(unsigned long,unsigned long *)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid DloadProtectSection(ulong param_1,ulong *param_2)\n\n{\n  code *pcVar1;\n  LPCVOID lpAddress;\n  BOOL BVar2;\n  SectionFlags local_c;\n  uint local_8;\n  \n  lpAddress = (LPCVOID)FUN_0041e712(&local_8,&local_c);\n  if (lpAddress == (LPCVOID)0x0) {\n    *param_2 = 4;\n  }\n  else {\n    if (DAT_00461cf0 == 0) {\n      DAT_00461cf0 = 1;\n      if ((local_c & IMAGE_SCN_MEM_WRITE) == 0) {\n        pcVar1 = (code *)swi(0x29);\n        (*pcVar1)();\n      }\n      FUN_0041e6a3(lpAddress,local_8);\n    }\n    BVar2 = VirtualProtect(lpAddress,local_8,param_1,param_2);\n    if (BVar2 == 0) {\n      pcVar1 = (code *)swi(0x29);\n      (*pcVar1)();\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "DloadReleaseSectionWriteAccess",
      "entry": "0041e7fb",
      "c": "\n/* Library Function - Single Match\n    void __stdcall DloadReleaseSectionWriteAccess(void)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid DloadReleaseSectionWriteAccess(void)\n\n{\n  ulong local_8;\n  \n  if ((IMAGE_LOAD_CONFIG_DIRECTORY32_004355f8.GuardFlags & IMAGE_GUARD_PROTECT_DELAYLOAD_IAT) != 0)\n  {\n    DloadLock();\n    DAT_00461ce8 = DAT_00461ce8 + -1;\n    if (DAT_00461ce8 == 0) {\n      DloadProtectSection(DAT_00461cec,&local_8);\n    }\n    DloadUnlock();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "DloadUnlock",
      "entry": "0041e831",
      "c": "\n/* Library Function - Single Match\n    void __stdcall DloadUnlock(void)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid DloadUnlock(void)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  \n  bVar2 = FUN_0041e5ee();\n  pcVar1 = DAT_00461ce0;\n  if (bVar2) {\n    (*(code *)PTR_guard_check_icall_00433278)(&DAT_00461ce4);\n    (*pcVar1)();\n    return;\n  }\n  DAT_00461ce4 = 0;\n  return;\n}\n\n"
    },
    {
      "name": "___delayLoadHelper2@8",
      "entry": "0041e85d",
      "c": "\n/* Library Function - Single Match\n    ___delayLoadHelper2@8\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nFARPROC ___delayLoadHelper2_8(uint *param_1,int *param_2)\n\n{\n  HMODULE pHVar1;\n  uint uVar2;\n  int iVar3;\n  code *pcVar4;\n  HMODULE hLibModule;\n  FARPROC pFVar5;\n  int local_38;\n  uint *local_34;\n  int *local_30;\n  LPCSTR local_2c;\n  uint local_28;\n  char *local_24;\n  HMODULE local_20;\n  FARPROC local_1c;\n  DWORD local_18;\n  int *local_14;\n  int local_10;\n  uint local_c;\n  int *local_8;\n  \n  DloadAcquireSectionWriteAccess();\n  pcVar4 = DAT_004355c8;\n  local_38 = 0x24;\n  local_34 = param_1;\n  local_2c = (LPCSTR)(param_1[1] + 0x400000);\n  local_8 = (int *)(param_1[2] + 0x400000);\n  local_14 = (int *)(param_1[5] + 0x400000);\n  local_c = param_1[7];\n  local_30 = param_2;\n  local_28 = 0;\n  local_24 = (char *)0x0;\n  local_20 = (HMODULE)0x0;\n  local_1c = (FARPROC)0x0;\n  local_18 = 0;\n  if ((*param_1 & 1) == 0) {\n    local_8 = &local_38;\n    DloadReleaseSectionWriteAccess();\n    RaiseException(0xc06d0057,0,1,(ULONG_PTR *)&local_8);\n    return (FARPROC)0x0;\n  }\n  hLibModule = (HMODULE)*local_8;\n  local_10 = (int)((int)param_2 - (param_1[3] + 0x400000)) >> 2;\n  uVar2 = *(uint *)(param_1[4] + 0x400000 + local_10 * 4);\n  local_28 = ~(uVar2 >> 0x1f) & 1;\n  local_24 = IMAGE_DOS_HEADER_00400000.e_magic + uVar2 + 2;\n  if (local_28 == 0) {\n    local_24 = (char *)(uVar2 & 0xffff);\n  }\n  pFVar5 = (FARPROC)0x0;\n  if (DAT_004355c8 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)(0,&local_38);\n    pFVar5 = (FARPROC)(*pcVar4)();\n    if (pFVar5 != (FARPROC)0x0) goto LAB_0041ea9a;\n  }\n  pcVar4 = DAT_004355c8;\n  if (hLibModule == (HMODULE)0x0) {\n    if (DAT_004355c8 == (code *)0x0) {\nLAB_0041e966:\n      hLibModule = LoadLibraryExA(local_2c,(HANDLE)0x0,0);\n      if (hLibModule == (HMODULE)0x0) {\n        local_18 = GetLastError();\n        pcVar4 = DAT_004355cc;\n        if (DAT_004355cc == (code *)0x0) {\nLAB_0041e9a2:\n          local_8 = &local_38;\n          DloadReleaseSectionWriteAccess();\n          RaiseException(0xc06d007e,0,1,(ULONG_PTR *)&local_8);\n          return local_1c;\n        }\n        (*(code *)PTR_guard_check_icall_00433278)(3,&local_38);\n        hLibModule = (HMODULE)(*pcVar4)();\n        if (hLibModule == (HMODULE)0x0) goto LAB_0041e9a2;\n      }\n    }\n    else {\n      (*(code *)PTR_guard_check_icall_00433278)(1,&local_38);\n      hLibModule = (HMODULE)(*pcVar4)();\n      if (hLibModule == (HMODULE)0x0) goto LAB_0041e966;\n    }\n    LOCK();\n    pHVar1 = (HMODULE)*local_8;\n    *local_8 = (int)hLibModule;\n    UNLOCK();\n    if (pHVar1 == hLibModule) {\n      FreeLibrary(hLibModule);\n    }\n  }\n  pcVar4 = DAT_004355c8;\n  local_20 = hLibModule;\n  if (DAT_004355c8 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)(2,&local_38);\n    pFVar5 = (FARPROC)(*pcVar4)();\n  }\n  if (((pFVar5 == (FARPROC)0x0) &&\n      ((((param_1[5] == 0 || (param_1[7] == 0)) ||\n        (iVar3 = hLibModule[0xf].unused, *(int *)((int)&hLibModule->unused + iVar3) != 0x4550)) ||\n       (((*(uint *)((int)&hLibModule[2].unused + iVar3) != local_c ||\n         (hLibModule != *(HMODULE *)((int)&hLibModule[0xd].unused + iVar3))) ||\n        (pFVar5 = (FARPROC)local_14[local_10], (FARPROC)local_14[local_10] == (FARPROC)0x0)))))) &&\n     (pFVar5 = GetProcAddress(hLibModule,local_24), pFVar5 == (FARPROC)0x0)) {\n    local_18 = GetLastError();\n    pcVar4 = DAT_004355cc;\n    if (DAT_004355cc != (code *)0x0) {\n      (*(code *)PTR_guard_check_icall_00433278)(4,&local_38);\n      pFVar5 = (FARPROC)(*pcVar4)();\n      if (pFVar5 != (FARPROC)0x0) goto LAB_0041ea95;\n    }\n    local_14 = &local_38;\n    DloadReleaseSectionWriteAccess();\n    RaiseException(0xc06d007f,0,1,(ULONG_PTR *)&local_14);\n    DloadAcquireSectionWriteAccess();\n    pFVar5 = local_1c;\n  }\nLAB_0041ea95:\n  *param_2 = (int)pFVar5;\nLAB_0041ea9a:\n  pcVar4 = DAT_004355c8;\n  if (DAT_004355c8 != (code *)0x0) {\n    local_18 = 0;\n    local_20 = hLibModule;\n    local_1c = pFVar5;\n    (*(code *)PTR_guard_check_icall_00433278)(5,&local_38);\n    (*pcVar4)();\n  }\n  DloadReleaseSectionWriteAccess();\n  return pFVar5;\n}\n\n"
    },
    {
      "name": "DelayLoad_SHAutoComplete",
      "entry": "0041eacc",
      "c": "\nvoid DelayLoad_SHAutoComplete(void)\n\n{\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE =\n       ___delayLoadHelper2_8(&ImgDelayDescr_0043c6ac.grAttrs,(int *)&SHAutoComplete_exref);\n                    /* WARNING: Could not recover jumptable at 0x0041eae5. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "DelayLoad_InitCommonControlsEx",
      "entry": "0041eae7",
      "c": "\nvoid DelayLoad_InitCommonControlsEx(void)\n\n{\n  FARPROC UNRECOVERED_JUMPTABLE;\n  \n  UNRECOVERED_JUMPTABLE =\n       ___delayLoadHelper2_8(&ImgDelayDescr_0043c6cc.grAttrs,(int *)&InitCommonControlsEx_exref);\n                    /* WARNING: Could not recover jumptable at 0x0041eb00. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "GdipAlloc",
      "entry": "0041eb02",
      "c": "\nvoid GdipAlloc(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdipAlloc();\n  return;\n}\n\n"
    },
    {
      "name": "GdipFree",
      "entry": "0041eb08",
      "c": "\nvoid GdipFree(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb08. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdipFree();\n  return;\n}\n\n"
    },
    {
      "name": "GdipCloneImage",
      "entry": "0041eb0e",
      "c": "\nvoid GdipCloneImage(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb0e. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdipCloneImage();\n  return;\n}\n\n"
    },
    {
      "name": "GdipDisposeImage",
      "entry": "0041eb14",
      "c": "\nvoid GdipDisposeImage(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb14. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdipDisposeImage();\n  return;\n}\n\n"
    },
    {
      "name": "GdipCreateBitmapFromStream",
      "entry": "0041eb1a",
      "c": "\nvoid GdipCreateBitmapFromStream(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdipCreateBitmapFromStream();\n  return;\n}\n\n"
    },
    {
      "name": "GdipCreateBitmapFromStreamICM",
      "entry": "0041eb20",
      "c": "\nvoid GdipCreateBitmapFromStreamICM(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb20. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdipCreateBitmapFromStreamICM();\n  return;\n}\n\n"
    },
    {
      "name": "GdipCreateHBITMAPFromBitmap",
      "entry": "0041eb26",
      "c": "\nvoid GdipCreateHBITMAPFromBitmap(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb26. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdipCreateHBITMAPFromBitmap();\n  return;\n}\n\n"
    },
    {
      "name": "GdiplusStartup",
      "entry": "0041eb2c",
      "c": "\nvoid GdiplusStartup(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdiplusStartup();\n  return;\n}\n\n"
    },
    {
      "name": "GdiplusShutdown",
      "entry": "0041eb32",
      "c": "\nvoid GdiplusShutdown(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x0041eb32. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  GdiplusShutdown();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041eb38",
      "entry": "0041eb38",
      "c": "\nvoid __cdecl FUN_0041eb38(size_t param_1)\n\n{\n  code *pcVar1;\n  int iVar2;\n  int aiStack_10 [2];\n  \n  do {\n    aiStack_10[1] = 0x41eb52;\n    iVar2 = FUN_00423e33(param_1);\n    if (iVar2 != 0) {\n      return;\n    }\n    iVar2 = __callnewh(param_1);\n  } while (iVar2 != 0);\n  if (param_1 != 0xffffffff) {\n    FUN_0041f5ad();\n    return;\n  }\n  FUN_0041f55b(aiStack_10);\n  __CxxThrowException_8(aiStack_10,&DAT_0043c0f4);\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041eb68",
      "entry": "0041eb68",
      "c": "\nvoid __cdecl FUN_0041eb68(void *param_1)\n\n{\n  FID_conflict__free(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041eb78",
      "entry": "0041eb78",
      "c": "\nvoid FUN_0041eb78(void)\n\n{\n  undefined1 auStack_c [12];\n  \n  ExceptionList = auStack_c;\n  return;\n}\n\n"
    },
    {
      "name": "__alldiv",
      "entry": "0041eba0",
      "c": "\n/* Library Function - Single Match\n    __alldiv\n   \n   Library: Visual Studio */\n\nundefined8 __alldiv(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  bool bVar10;\n  char cVar11;\n  uint uVar9;\n  \n  cVar11 = (int)param_2 < 0;\n  if ((bool)cVar11) {\n    bVar10 = param_1 != 0;\n    param_1 = -param_1;\n    param_2 = -(uint)bVar10 - param_2;\n  }\n  if ((int)param_4 < 0) {\n    cVar11 = cVar11 + '\\x01';\n    bVar10 = param_3 != 0;\n    param_3 = -param_3;\n    param_4 = -(uint)bVar10 - param_4;\n  }\n  uVar3 = param_1;\n  uVar5 = param_3;\n  uVar6 = param_2;\n  uVar9 = param_4;\n  if (param_4 == 0) {\n    uVar3 = param_2 / param_3;\n    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /\n                 (ulonglong)param_3);\n  }\n  else {\n    do {\n      uVar8 = uVar9 >> 1;\n      uVar5 = uVar5 >> 1 | (uint)((uVar9 & 1) != 0) << 0x1f;\n      uVar7 = uVar6 >> 1;\n      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;\n      uVar6 = uVar7;\n      uVar9 = uVar8;\n    } while (uVar8 != 0);\n    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar5;\n    iVar4 = (int)uVar1;\n    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    uVar5 = uVar3 + iVar4 * param_4;\n    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar5)) ||\n       ((param_2 <= uVar5 && (param_1 < (uint)lVar2)))) {\n      iVar4 = iVar4 + -1;\n    }\n    uVar3 = 0;\n  }\n  if (cVar11 == '\\x01') {\n    bVar10 = iVar4 != 0;\n    iVar4 = -iVar4;\n    uVar3 = -(uint)bVar10 - uVar3;\n  }\n  return CONCAT44(uVar3,iVar4);\n}\n\n"
    },
    {
      "name": "__alloca_probe",
      "entry": "0041ec50",
      "c": "\n/* WARNING: This is an inlined function */\n/* Library Function - Single Match\n    __chkstk\n   \n   Library: Visual Studio */\n\nvoid __alloca_probe(void)\n\n{\n  undefined1 *in_EAX;\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 unaff_retaddr;\n  undefined1 auStack_4 [4];\n  \n  puVar2 = (undefined4 *)((int)&stack0x00000000 - (int)in_EAX & ~-(uint)(&stack0x00000000 < in_EAX))\n  ;\n  for (puVar1 = (undefined4 *)((uint)auStack_4 & 0xfffff000); puVar2 < puVar1;\n      puVar1 = puVar1 + -0x400) {\n  }\n  *puVar2 = unaff_retaddr;\n  return;\n}\n\n"
    },
    {
      "name": "`eh_vector_constructor_iterator'",
      "entry": "0041ec7b",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    void __stdcall `eh vector constructor iterator'(void *,unsigned int,unsigned int,void\n   (__thiscall*)(void *),void (__thiscall*)(void *))\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid _eh_vector_constructor_iterator_\n               (void *param_1,uint param_2,uint param_3,_func_void_void_ptr *param_4,\n               _func_void_void_ptr *param_5)\n\n{\n  uint uVar1;\n  void *pvVar2;\n  undefined4 local_14;\n  \n  for (uVar1 = 0; uVar1 != param_3; uVar1 = uVar1 + 1) {\n    pvVar2 = (void *)0x41eca0;\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*param_4)(pvVar2);\n  }\n  FUN_0041ecdb();\n  ExceptionList = local_14;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041ecdb",
      "entry": "0041ecdb",
      "c": "\nvoid FUN_0041ecdb(void)\n\n{\n  char in_AL;\n  uint unaff_EBX;\n  int unaff_EBP;\n  \n  if (in_AL == '\\0') {\n    __ArrayUnwind(*(void **)(unaff_EBP + 8),*(uint *)(unaff_EBP + 0xc),unaff_EBX,\n                  *(_func_void_void_ptr **)(unaff_EBP + 0x18));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "`eh_vector_destructor_iterator'",
      "entry": "0041ecef",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    void __stdcall `eh vector destructor iterator'(void *,unsigned int,unsigned int,void\n   (__thiscall*)(void *))\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid _eh_vector_destructor_iterator_\n               (void *param_1,uint param_2,uint param_3,_func_void_void_ptr *param_4)\n\n{\n  void *pvVar1;\n  undefined4 local_14;\n  \n  while( true ) {\n    if (param_3 == 0) break;\n    pvVar1 = (void *)0x41ed2e;\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*param_4)(pvVar1);\n    param_3 = param_3 - 1;\n  }\n  FUN_0041ed64();\n  ExceptionList = local_14;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041ed64",
      "entry": "0041ed64",
      "c": "\nvoid FUN_0041ed64(void)\n\n{\n  char in_AL;\n  uint unaff_EBX;\n  int unaff_EBP;\n  void *unaff_ESI;\n  uint unaff_EDI;\n  \n  if (in_AL == '\\0') {\n    __ArrayUnwind(unaff_ESI,unaff_EBX,unaff_EDI,*(_func_void_void_ptr **)(unaff_EBP + 0x14));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__ArrayUnwind",
      "entry": "0041ed74",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    void __stdcall __ArrayUnwind(void *,unsigned int,unsigned int,void (__thiscall*)(void *))\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __ArrayUnwind(void *param_1,uint param_2,uint param_3,_func_void_void_ptr *param_4)\n\n{\n  uint uVar1;\n  void *pvVar2;\n  undefined4 local_14;\n  \n  for (uVar1 = 0; uVar1 != param_3; uVar1 = uVar1 + 1) {\n    pvVar2 = (void *)0x41ed9f;\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*param_4)(pvVar2);\n  }\n  ExceptionList = local_14;\n  return;\n}\n\n"
    },
    {
      "name": "__aullshr",
      "entry": "0041ee10",
      "c": "\n/* Library Function - Single Match\n    __aullshr\n   \n   Library: Visual Studio 2015 Release */\n\nulonglong __fastcall __aullshr(byte param_1,uint param_2)\n\n{\n  uint in_EAX;\n  \n  if (0x3f < param_1) {\n    return 0;\n  }\n  if (param_1 < 0x20) {\n    return CONCAT44(param_2 >> (param_1 & 0x1f),\n                    in_EAX >> (param_1 & 0x1f) | param_2 << 0x20 - (param_1 & 0x1f));\n  }\n  return (ulonglong)(param_2 >> (param_1 & 0x1f));\n}\n\n"
    },
    {
      "name": "FUN_0041ee30",
      "entry": "0041ee30",
      "c": "\nundefined4 * __thiscall FUN_0041ee30(void *this,byte param_1)\n\n{\n  *(undefined ***)this = type_info::vftable;\n  if ((param_1 & 1) != 0) {\n    FUN_0041eb68(this);\n  }\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_0041ee53",
      "entry": "0041ee53",
      "c": "\nvoid __cdecl FUN_0041ee53(size_t param_1)\n\n{\n  FUN_0041eb38(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "0041ee5c",
      "c": "\nvoid __cdecl FID_conflict__free(void *_Memory)\n\n{\n  BOOL BVar1;\n  int *piVar2;\n  DWORD DVar3;\n  int iVar4;\n  \n  if (_Memory != (void *)0x0) {\n    BVar1 = HeapFree(DAT_004626e4,0,_Memory);\n    if (BVar1 == 0) {\n      piVar2 = __errno();\n      DVar3 = GetLastError();\n      iVar4 = FID_conflict____acrt_errno_from_os_error(DVar3);\n      *piVar2 = iVar4;\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "find_pe_section",
      "entry": "0041ee61",
      "c": "\n/* Library Function - Single Match\n    struct _IMAGE_SECTION_HEADER * __cdecl find_pe_section(unsigned char * const,unsigned int)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\n_IMAGE_SECTION_HEADER * __cdecl find_pe_section(uchar *param_1,uint param_2)\n\n{\n  int iVar1;\n  _IMAGE_SECTION_HEADER *p_Var2;\n  _IMAGE_SECTION_HEADER *p_Var3;\n  \n  iVar1 = *(int *)(param_1 + 0x3c);\n  p_Var2 = (_IMAGE_SECTION_HEADER *)\n           (param_1 + (uint)*(ushort *)(param_1 + iVar1 + 0x14) + iVar1 + 0x18);\n  p_Var3 = p_Var2 + *(ushort *)(param_1 + iVar1 + 6);\n  while( true ) {\n    if (p_Var2 == p_Var3) {\n      return (_IMAGE_SECTION_HEADER *)0x0;\n    }\n    if ((p_Var2->VirtualAddress <= param_2) &&\n       (param_2 < (p_Var2->Misc).PhysicalAddress + p_Var2->VirtualAddress)) break;\n    p_Var2 = p_Var2 + 1;\n  }\n  return p_Var2;\n}\n\n"
    },
    {
      "name": "___scrt_acquire_startup_lock",
      "entry": "0041eea5",
      "c": "\n/* Library Function - Single Match\n    ___scrt_acquire_startup_lock\n   \n   Library: Visual Studio 2019 Release */\n\nuint ___scrt_acquire_startup_lock(void)\n\n{\n  uint uVar1;\n  bool bVar2;\n  undefined3 extraout_var;\n  uint uVar3;\n  \n  bVar2 = ___scrt_is_ucrt_dll_in_use();\n  uVar3 = CONCAT31(extraout_var,bVar2);\n  if (uVar3 != 0) {\n    while( true ) {\n      uVar3 = 0;\n      LOCK();\n      uVar1 = *(uint *)((int)Self + 4);\n      if (DAT_00461d00 != 0) {\n        uVar3 = DAT_00461d00;\n        uVar1 = DAT_00461d00;\n      }\n      DAT_00461d00 = uVar1;\n      UNLOCK();\n      if (uVar3 == 0) break;\n      if (*(uint *)((int)Self + 4) == uVar3) {\n        return CONCAT31((int3)(uVar3 >> 8),1);\n      }\n    }\n  }\n  return uVar3 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "___scrt_initialize_crt",
      "entry": "0041eed7",
      "c": "\n/* Library Function - Single Match\n    ___scrt_initialize_crt\n   \n   Library: Visual Studio 2019 Release */\n\nuint __cdecl ___scrt_initialize_crt(int param_1)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  \n  if (param_1 == 0) {\n    DAT_00461d04 = 1;\n  }\n  FUN_0041f654();\n  uVar1 = ___vcrt_initialize();\n  if ((char)uVar1 != '\\0') {\n    uVar2 = ___acrt_initialize();\n    if ((char)uVar2 != '\\0') {\n      return CONCAT31((int3)((uint)uVar2 >> 8),1);\n    }\n    uVar1 = ___vcrt_uninitialize('\\0');\n  }\n  return uVar1 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "___scrt_initialize_onexit_tables",
      "entry": "0041ef10",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    ___scrt_initialize_onexit_tables\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 __cdecl ___scrt_initialize_onexit_tables(int param_1)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  undefined4 in_EAX;\n  undefined3 extraout_var;\n  uint uVar3;\n  undefined4 uVar4;\n  \n  if (DAT_00461d05 != '\\0') {\n    return CONCAT31((int3)((uint)in_EAX >> 8),1);\n  }\n  if ((param_1 != 0) && (param_1 != 1)) {\n    FUN_0041f838();\n    pcVar1 = (code *)swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n  }\n  bVar2 = ___scrt_is_ucrt_dll_in_use();\n  uVar3 = CONCAT31(extraout_var,bVar2);\n  if ((uVar3 == 0) || (param_1 != 0)) {\n    DAT_00461d08 = 0xffffffff;\n    _DAT_00461d0c = 0xffffffff;\n    _DAT_00461d10 = 0xffffffff;\n    _DAT_00461d14 = 0xffffffff;\n    _DAT_00461d18 = 0xffffffff;\n    _DAT_00461d1c = 0xffffffff;\nLAB_0041ef83:\n    DAT_00461d05 = '\\x01';\n    uVar3 = CONCAT31((int3)(uVar3 >> 8),1);\n  }\n  else {\n    uVar3 = __initialize_onexit_table(&DAT_00461d08);\n    if (uVar3 == 0) {\n      uVar3 = __initialize_onexit_table((uint *)&DAT_00461d14);\n      if (uVar3 == 0) goto LAB_0041ef83;\n    }\n    uVar3 = uVar3 & 0xffffff00;\n  }\n  return uVar3;\n}\n\n"
    },
    {
      "name": "___scrt_is_nonwritable_in_current_image",
      "entry": "0041ef97",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    ___scrt_is_nonwritable_in_current_image\n   \n   Library: Visual Studio 2019 Release */\n\nuint __cdecl ___scrt_is_nonwritable_in_current_image(int param_1)\n\n{\n  _IMAGE_SECTION_HEADER *p_Var1;\n  void *local_14;\n  \n  p_Var1 = (_IMAGE_SECTION_HEADER *)0x5a4d;\n  if ((((IMAGE_DOS_HEADER_00400000.e_magic == (char  [2])0x5a4d) &&\n       (p_Var1 = (_IMAGE_SECTION_HEADER *)IMAGE_DOS_HEADER_00400000.e_lfanew,\n       *(int *)(IMAGE_DOS_HEADER_00400000.e_lfanew + 0x400000) == 0x4550)) &&\n      (*(short *)((int)IMAGE_DOS_HEADER_00400000.e_res_4_ + (IMAGE_DOS_HEADER_00400000.e_lfanew - 4)\n                 ) == 0x10b)) &&\n     ((p_Var1 = find_pe_section((uchar *)&IMAGE_DOS_HEADER_00400000,param_1 - 0x400000),\n      p_Var1 != (_IMAGE_SECTION_HEADER *)0x0 && (-1 < (int)p_Var1->Characteristics)))) {\n    ExceptionList = local_14;\n    return CONCAT31((int3)((uint)p_Var1 >> 8),1);\n  }\n  ExceptionList = local_14;\n  return (uint)p_Var1 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "___scrt_release_startup_lock",
      "entry": "0041f02b",
      "c": "\n/* Library Function - Single Match\n    ___scrt_release_startup_lock\n   \n   Library: Visual Studio 2019 Release */\n\nint __cdecl ___scrt_release_startup_lock(char param_1)\n\n{\n  int iVar1;\n  bool bVar2;\n  undefined3 extraout_var;\n  int iVar3;\n  \n  bVar2 = ___scrt_is_ucrt_dll_in_use();\n  iVar1 = DAT_00461d00;\n  iVar3 = CONCAT31(extraout_var,bVar2);\n  if ((iVar3 != 0) && (param_1 == '\\0')) {\n    LOCK();\n    DAT_00461d00 = 0;\n    UNLOCK();\n    iVar3 = iVar1;\n  }\n  return iVar3;\n}\n\n"
    },
    {
      "name": "___scrt_uninitialize_crt",
      "entry": "0041f048",
      "c": "\n/* Library Function - Single Match\n    ___scrt_uninitialize_crt\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 __cdecl ___scrt_uninitialize_crt(char param_1,char param_2)\n\n{\n  undefined4 in_EAX;\n  \n  if ((DAT_00461d04 == '\\0') || (param_2 == '\\0')) {\n    ___acrt_uninitialize();\n    in_EAX = ___vcrt_uninitialize(param_1);\n  }\n  return CONCAT31((int3)((uint)in_EAX >> 8),1);\n}\n\n"
    },
    {
      "name": "__onexit",
      "entry": "0041f070",
      "c": "\n/* Library Function - Single Match\n    __onexit\n   \n   Library: Visual Studio 2019 Release */\n\n_onexit_t __cdecl __onexit(_onexit_t _Func)\n\n{\n  int iVar1;\n  \n  if (DAT_00461d08 == -1) {\n    iVar1 = FUN_004287ca();\n  }\n  else {\n    iVar1 = __register_onexit_function();\n  }\n  return (_onexit_t)(~-(uint)(iVar1 != 0) & (uint)_Func);\n}\n\n"
    },
    {
      "name": "_atexit",
      "entry": "0041f09d",
      "c": "\n/* Library Function - Single Match\n    _atexit\n   \n   Library: Visual Studio 2019 Release */\n\nint __cdecl _atexit(_func_4879 *param_1)\n\n{\n  _onexit_t p_Var1;\n  \n  p_Var1 = __onexit((_onexit_t)param_1);\n  return (p_Var1 != (_onexit_t)0x0) - 1;\n}\n\n"
    },
    {
      "name": "__allshl",
      "entry": "0041f0c0",
      "c": "\n/* Library Function - Single Match\n    __allshl\n   \n   Library: Visual Studio 2015 Release */\n\nlonglong __fastcall __allshl(byte param_1,int param_2)\n\n{\n  uint in_EAX;\n  \n  if (0x3f < param_1) {\n    return 0;\n  }\n  if (param_1 < 0x20) {\n    return CONCAT44(param_2 << (param_1 & 0x1f) | in_EAX >> 0x20 - (param_1 & 0x1f),\n                    in_EAX << (param_1 & 0x1f));\n  }\n  return (ulonglong)(in_EAX << (param_1 & 0x1f)) << 0x20;\n}\n\n"
    },
    {
      "name": "__allmul",
      "entry": "0041f0e0",
      "c": "\n/* Library Function - Single Match\n    __allmul\n   \n   Library: Visual Studio 2015 Release */\n\nlonglong __allmul(uint param_1,int param_2,uint param_3,int param_4)\n\n{\n  if (param_4 == 0 && param_2 == 0) {\n    return (ulonglong)param_1 * (ulonglong)param_3;\n  }\n  return CONCAT44((int)((ulonglong)param_1 * (ulonglong)param_3 >> 0x20) +\n                  param_2 * param_3 + param_1 * param_4,\n                  (int)((ulonglong)param_1 * (ulonglong)param_3));\n}\n\n"
    },
    {
      "name": "__allrem",
      "entry": "0041f120",
      "c": "\n/* Library Function - Single Match\n    __allrem\n   \n   Library: Visual Studio */\n\nundefined8 __allrem(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  \n  bVar13 = (int)param_2 < 0;\n  if (bVar13) {\n    bVar12 = param_1 != 0;\n    param_1 = -param_1;\n    param_2 = -(uint)bVar12 - param_2;\n  }\n  uVar11 = (uint)bVar13;\n  if ((int)param_4 < 0) {\n    bVar13 = param_3 != 0;\n    param_3 = -param_3;\n    param_4 = -(uint)bVar13 - param_4;\n  }\n  uVar3 = param_1;\n  uVar4 = param_3;\n  uVar8 = param_2;\n  uVar9 = param_4;\n  if (param_4 == 0) {\n    iVar5 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) %\n                 (ulonglong)param_3);\n    iVar6 = 0;\n    if ((int)(uVar11 - 1) < 0) goto LAB_0041f1cd;\n  }\n  else {\n    do {\n      uVar10 = uVar9 >> 1;\n      uVar4 = uVar4 >> 1 | (uint)((uVar9 & 1) != 0) << 0x1f;\n      uVar7 = uVar8 >> 1;\n      uVar3 = uVar3 >> 1 | (uint)((uVar8 & 1) != 0) << 0x1f;\n      uVar8 = uVar7;\n      uVar9 = uVar10;\n    } while (uVar10 != 0);\n    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar4;\n    uVar3 = (int)uVar1 * param_4;\n    lVar2 = (uVar1 & 0xffffffff) * (ulonglong)param_3;\n    uVar8 = (uint)((ulonglong)lVar2 >> 0x20);\n    uVar4 = (uint)lVar2;\n    uVar9 = uVar8 + uVar3;\n    if (((CARRY4(uVar8,uVar3)) || (param_2 < uVar9)) || ((param_2 <= uVar9 && (param_1 < uVar4)))) {\n      bVar13 = uVar4 < param_3;\n      uVar4 = uVar4 - param_3;\n      uVar9 = (uVar9 - param_4) - (uint)bVar13;\n    }\n    iVar5 = uVar4 - param_1;\n    iVar6 = (uVar9 - param_2) - (uint)(uVar4 < param_1);\n    if (-1 < (int)(uVar11 - 1)) goto LAB_0041f1cd;\n  }\n  bVar13 = iVar5 != 0;\n  iVar5 = -iVar5;\n  iVar6 = -(uint)bVar13 - iVar6;\nLAB_0041f1cd:\n  return CONCAT44(iVar6,iVar5);\n}\n\n"
    },
    {
      "name": "__aulldiv",
      "entry": "0041f1e0",
      "c": "\n/* Library Function - Single Match\n    __aulldiv\n   \n   Library: Visual Studio */\n\nundefined8 __aulldiv(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  \n  uVar3 = param_1;\n  uVar8 = param_4;\n  uVar6 = param_2;\n  uVar9 = param_3;\n  if (param_4 == 0) {\n    uVar3 = param_2 / param_3;\n    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /\n                 (ulonglong)param_3);\n  }\n  else {\n    do {\n      uVar5 = uVar8 >> 1;\n      uVar9 = uVar9 >> 1 | (uint)((uVar8 & 1) != 0) << 0x1f;\n      uVar7 = uVar6 >> 1;\n      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;\n      uVar8 = uVar5;\n      uVar6 = uVar7;\n    } while (uVar5 != 0);\n    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar9;\n    iVar4 = (int)uVar1;\n    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    uVar8 = uVar3 + iVar4 * param_4;\n    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar8)) ||\n       ((param_2 <= uVar8 && (param_1 < (uint)lVar2)))) {\n      iVar4 = iVar4 + -1;\n    }\n    uVar3 = 0;\n  }\n  return CONCAT44(uVar3,iVar4);\n}\n\n"
    },
    {
      "name": "__aullrem",
      "entry": "0041f250",
      "c": "\n/* Library Function - Single Match\n    __aullrem\n   \n   Library: Visual Studio */\n\nundefined8 __aullrem(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  bool bVar11;\n  \n  uVar3 = param_1;\n  uVar4 = param_4;\n  uVar9 = param_2;\n  uVar10 = param_3;\n  if (param_4 == 0) {\n    iVar6 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) %\n                 (ulonglong)param_3);\n    iVar7 = 0;\n  }\n  else {\n    do {\n      uVar5 = uVar4 >> 1;\n      uVar10 = uVar10 >> 1 | (uint)((uVar4 & 1) != 0) << 0x1f;\n      uVar8 = uVar9 >> 1;\n      uVar3 = uVar3 >> 1 | (uint)((uVar9 & 1) != 0) << 0x1f;\n      uVar4 = uVar5;\n      uVar9 = uVar8;\n    } while (uVar5 != 0);\n    uVar1 = CONCAT44(uVar8,uVar3) / (ulonglong)uVar10;\n    uVar3 = (int)uVar1 * param_4;\n    lVar2 = (uVar1 & 0xffffffff) * (ulonglong)param_3;\n    uVar9 = (uint)((ulonglong)lVar2 >> 0x20);\n    uVar4 = (uint)lVar2;\n    uVar10 = uVar9 + uVar3;\n    if (((CARRY4(uVar9,uVar3)) || (param_2 < uVar10)) || ((param_2 <= uVar10 && (param_1 < uVar4))))\n    {\n      bVar11 = uVar4 < param_3;\n      uVar4 = uVar4 - param_3;\n      uVar10 = (uVar10 - param_4) - (uint)bVar11;\n    }\n    iVar6 = -(uVar4 - param_1);\n    iVar7 = -(uint)(uVar4 - param_1 != 0) - ((uVar10 - param_2) - (uint)(uVar4 < param_1));\n  }\n  return CONCAT44(iVar7,iVar6);\n}\n\n"
    },
    {
      "name": "FUN_0041f2c5",
      "entry": "0041f2c5",
      "c": "\nvoid __cdecl FUN_0041f2c5(void *param_1)\n\n{\n  FID_conflict__free(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041f2e0",
      "entry": "0041f2e0",
      "c": "\nvoid FUN_0041f2e0(void)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  char cVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 *puVar6;\n  _crt_argv_mode _Var7;\n  undefined3 extraout_var;\n  \n  FUN_004289a1(2);\n  iVar4 = FUN_0041fae6();\n  __set_fmode(iVar4);\n  uVar5 = FUN_0041f990();\n  puVar6 = (undefined4 *)FUN_00428c69();\n  *puVar6 = uVar5;\n  uVar5 = ___scrt_initialize_onexit_tables(1);\n  if ((char)uVar5 != '\\0') {\n    FUN_0041fb5f();\n    _atexit(FUN_0041fb90);\n    _Var7 = FUN_0041f828();\n    iVar4 = FUN_0042825c(_Var7);\n    if (iVar4 == 0) {\n      FUN_0041faec();\n      bVar2 = FUN_0041fb47();\n      if (CONCAT31(extraout_var,bVar2) != 0) {\n        ___setusermatherr(0x41f990);\n      }\n      guard_check_icall();\n      guard_check_icall();\n      __initialize_default_precision();\n      iVar4 = FUN_0041f990();\n      __configthreadlocale(iVar4);\n      cVar3 = FUN_0041fb00();\n      if (cVar3 != '\\0') {\n        common_initialize_environment_nolock<char>();\n      }\n      FUN_0041f990();\n      iVar4 = thunk_FUN_0041f990();\n      if (iVar4 == 0) {\n        return;\n      }\n    }\n  }\n  FUN_0041f838();\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041f390",
      "entry": "0041f390",
      "c": "\nundefined4 FUN_0041f390(void)\n\n{\n  FUN_0041fb2a();\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0041f3a0",
      "entry": "0041f3a0",
      "c": "\nvoid FUN_0041f3a0(void)\n\n{\n  int iVar1;\n  \n  FUN_0041f9d5();\n  iVar1 = FUN_0041f990();\n  __set_new_mode(iVar1);\n  return;\n}\n\n"
    },
    {
      "name": "__scrt_common_main_seh",
      "entry": "0041f3b2",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    int __cdecl __scrt_common_main_seh(void)\n   \n   Library: Visual Studio 2019 Release */\n\nint __cdecl __scrt_common_main_seh(void)\n\n{\n  code *pcVar1;\n  bool bVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int *piVar5;\n  uint *puVar6;\n  uint uVar7;\n  int unaff_ESI;\n  void *local_14;\n  \n  uVar3 = ___scrt_initialize_crt(1);\n  if ((char)uVar3 != '\\0') {\n    bVar2 = false;\n    uVar3 = ___scrt_acquire_startup_lock();\n    if (DAT_00461cfc != 1) {\n      if (DAT_00461cfc == 0) {\n        DAT_00461cfc = 1;\n        iVar4 = __initterm_e((undefined4 *)&DAT_004332b8,(undefined4 *)&DAT_004332d4);\n        if (iVar4 != 0) {\n          ExceptionList = local_14;\n          return 0xff;\n        }\n        __initterm((undefined4 *)&DAT_00433280,(undefined4 *)&DAT_004332b4);\n        DAT_00461cfc = 2;\n      }\n      else {\n        bVar2 = true;\n      }\n      ___scrt_release_startup_lock((char)uVar3);\n      piVar5 = (int *)FUN_0041fb53();\n      if ((*piVar5 != 0) &&\n         (uVar3 = ___scrt_is_nonwritable_in_current_image((int)piVar5), (char)uVar3 != '\\0')) {\n        pcVar1 = (code *)*piVar5;\n        (*(code *)PTR_guard_check_icall_00433278)(0,2,0);\n        (*pcVar1)();\n      }\n      puVar6 = (uint *)FUN_0041fb59();\n      if ((*puVar6 != 0) &&\n         (uVar3 = ___scrt_is_nonwritable_in_current_image((int)puVar6), (char)uVar3 != '\\0')) {\n        __register_thread_local_exe_atexit_callback(*puVar6);\n      }\n      ___scrt_get_show_window_mode();\n      __get_narrow_winmain_command_line();\n      unaff_ESI = FUN_0041df1e();\n      uVar7 = FUN_0041f993();\n      if ((char)uVar7 != '\\0') {\n        if (!bVar2) {\n          __cexit();\n        }\n        ___scrt_uninitialize_crt('\\x01','\\0');\n        ExceptionList = local_14;\n        return unaff_ESI;\n      }\n      goto LAB_0041f51f;\n    }\n  }\n  FUN_0041f838();\nLAB_0041f51f:\n                    /* WARNING: Subroutine does not return */\n  _exit(unaff_ESI);\n}\n\n"
    },
    {
      "name": "entry",
      "entry": "0041f530",
      "c": "\nvoid entry(void)\n\n{\n  ___security_init_cookie();\n  __scrt_common_main_seh();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041f540",
      "entry": "0041f540",
      "c": "\nundefined4 * __thiscall FUN_0041f540(void *this,int param_1)\n\n{\n  FUN_00412210(this,param_1);\n  *(undefined ***)this = std::bad_array_new_length::vftable;\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_0041f55b",
      "entry": "0041f55b",
      "c": "\nundefined4 * __fastcall FUN_0041f55b(undefined4 *param_1)\n\n{\n  param_1[1] = 0;\n  param_1[2] = 0;\n  param_1[1] = \"bad array new length\";\n  *param_1 = std::bad_array_new_length::vftable;\n  return param_1;\n}\n\n"
    },
    {
      "name": "FUN_0041f580",
      "entry": "0041f580",
      "c": "\nundefined4 * __thiscall FUN_0041f580(void *this,byte param_1)\n\n{\n  *(undefined ***)this = std::exception::vftable;\n  ___std_exception_destroy((undefined4 *)((int)this + 4));\n  if ((param_1 & 1) != 0) {\n    FUN_0041eb68(this);\n  }\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_0041f5ad",
      "entry": "0041f5ad",
      "c": "\nvoid FUN_0041f5ad(void)\n\n{\n  code *pcVar1;\n  int local_10 [3];\n  \n  FUN_004121f8(local_10);\n  __CxxThrowException_8(local_10,&DAT_0043bef0);\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "0041f5e7",
      "c": "\nvoid __cdecl FID_conflict__free(void *_Memory)\n\n{\n  BOOL BVar1;\n  int *piVar2;\n  DWORD DVar3;\n  int iVar4;\n  \n  if (_Memory != (void *)0x0) {\n    BVar1 = HeapFree(DAT_004626e4,0,_Memory);\n    if (BVar1 == 0) {\n      piVar2 = __errno();\n      DVar3 = GetLastError();\n      iVar4 = FID_conflict____acrt_errno_from_os_error(DVar3);\n      *piVar2 = iVar4;\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__SEH_prolog4",
      "entry": "0041f5f0",
      "c": "\n/* WARNING: This is an inlined function */\n/* WARNING: Unable to track spacebase fully for stack */\n/* WARNING: Variable defined which should be unmapped: param_2 */\n/* Library Function - Single Match\n    __SEH_prolog4\n   \n   Library: Visual Studio */\n\nvoid __cdecl __SEH_prolog4(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 unaff_EBX;\n  undefined4 unaff_ESI;\n  undefined4 unaff_EDI;\n  undefined4 unaff_retaddr;\n  uint auStack_1c [5];\n  undefined1 local_8 [8];\n  \n  iVar1 = -param_2;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 0x10) = unaff_EBX;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 0xc) = unaff_ESI;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 8) = unaff_EDI;\n  *(uint *)((int)auStack_1c + iVar1 + 4) = DAT_0043e7ac ^ (uint)&param_2;\n  *(undefined4 *)((int)auStack_1c + iVar1) = unaff_retaddr;\n  ExceptionList = local_8;\n  return;\n}\n\n"
    },
    {
      "name": "__SEH_epilog4",
      "entry": "0041f640",
      "c": "\n/* WARNING: This is an inlined function */\n/* Library Function - Single Match\n    __SEH_epilog4\n   \n   Library: Visual Studio */\n\nvoid __SEH_epilog4(void)\n\n{\n  undefined4 *unaff_EBP;\n  undefined4 unaff_retaddr;\n  \n  ExceptionList = (void *)unaff_EBP[-4];\n  *unaff_EBP = unaff_retaddr;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041f654",
      "entry": "0041f654",
      "c": "\n/* WARNING: Removing unreachable block (ram,0x0041f6c3) */\n/* WARNING: Removing unreachable block (ram,0x0041f687) */\n/* WARNING: Removing unreachable block (ram,0x0041f73b) */\n\nundefined4 FUN_0041f654(void)\n\n{\n  int *piVar1;\n  uint *puVar2;\n  int iVar3;\n  BOOL BVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint in_XCR0;\n  \n  DAT_00461d20 = 0;\n  DAT_0043e7a0 = DAT_0043e7a0 | 1;\n  BVar4 = IsProcessorFeaturePresent(10);\n  uVar5 = DAT_0043e7a0;\n  if (BVar4 != 0) {\n    piVar1 = (int *)cpuid_basic_info(0);\n    puVar2 = (uint *)cpuid_Version_info(1);\n    uVar6 = puVar2[3];\n    if (((piVar1[2] == 0x49656e69 && piVar1[3] == 0x6c65746e) && piVar1[1] == 0x756e6547) &&\n       (((((uVar5 = *puVar2 & 0xfff3ff0, uVar5 == 0x106c0 || (uVar5 == 0x20660)) ||\n          (uVar5 == 0x20670)) || ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))\n       ) {\n      DAT_00461d24 = DAT_00461d24 | 1;\n    }\n    if (*piVar1 < 7) {\n      uVar7 = 0;\n    }\n    else {\n      iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n      uVar7 = *(uint *)(iVar3 + 4);\n      if ((uVar7 & 0x200) != 0) {\n        DAT_00461d24 = DAT_00461d24 | 2;\n      }\n    }\n    DAT_00461d20 = 1;\n    uVar5 = DAT_0043e7a0 | 2;\n    if ((uVar6 & 0x100000) != 0) {\n      uVar5 = DAT_0043e7a0 | 6;\n      DAT_00461d20 = 2;\n      if ((((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n        DAT_00461d20 = 3;\n        uVar5 = DAT_0043e7a0 | 0xe;\n        if ((uVar7 & 0x20) != 0) {\n          DAT_00461d20 = 5;\n          uVar5 = DAT_0043e7a0 | 0x2e;\n          if (((uVar7 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n            DAT_0043e7a0 = DAT_0043e7a0 | 0x6e;\n            DAT_00461d20 = 6;\n            uVar5 = DAT_0043e7a0;\n          }\n        }\n      }\n    }\n  }\n  DAT_0043e7a0 = uVar5;\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0041f828",
      "entry": "0041f828",
      "c": "\nundefined4 FUN_0041f828(void)\n\n{\n  return 1;\n}\n\n"
    },
    {
      "name": "___scrt_is_ucrt_dll_in_use",
      "entry": "0041f82c",
      "c": "\n/* Library Function - Single Match\n    ___scrt_is_ucrt_dll_in_use\n   \n   Library: Visual Studio 2019 Release */\n\nbool ___scrt_is_ucrt_dll_in_use(void)\n\n{\n  return DAT_00462714 != 0;\n}\n\n"
    },
    {
      "name": "FUN_0041f838",
      "entry": "0041f838",
      "c": "\nvoid FUN_0041f838(void)\n\n{\n  code *pcVar1;\n  BOOL BVar2;\n  LONG LVar3;\n  undefined4 local_328 [39];\n  EXCEPTION_RECORD local_5c;\n  _EXCEPTION_POINTERS local_c;\n  \n  BVar2 = IsProcessorFeaturePresent(0x17);\n  if (BVar2 != 0) {\n    pcVar1 = (code *)swi(0x29);\n    (*pcVar1)();\n  }\n  FUN_0041fa46();\n  _memset(local_328,0,0x2cc);\n  local_328[0] = 0x10001;\n  _memset(&local_5c,0,0x50);\n  local_5c.ExceptionCode = 0x40000015;\n  local_5c.ExceptionFlags = 1;\n  BVar2 = IsDebuggerPresent();\n  local_c.ExceptionRecord = &local_5c;\n  local_c.ContextRecord = (PCONTEXT)local_328;\n  SetUnhandledExceptionFilter((LPTOP_LEVEL_EXCEPTION_FILTER)0x0);\n  LVar3 = UnhandledExceptionFilter(&local_c);\n  if ((LVar3 == 0) && (BVar2 != 1)) {\n    FUN_0041fa46();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___scrt_get_show_window_mode",
      "entry": "0041f953",
      "c": "\n/* Library Function - Single Match\n    ___scrt_get_show_window_mode\n   \n   Library: Visual Studio 2019 Release */\n\nWORD ___scrt_get_show_window_mode(void)\n\n{\n  _STARTUPINFOW local_48;\n  \n  _memset(&local_48,0,0x44);\n  GetStartupInfoW(&local_48);\n  if (((byte)local_48.dwFlags & 1) != 0) {\n    return local_48.wShowWindow;\n  }\n  return 10;\n}\n\n"
    },
    {
      "name": "thunk_FUN_0041f990",
      "entry": "0041f984",
      "c": "\nundefined4 thunk_FUN_0041f990(void)\n\n{\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0041f990",
      "entry": "0041f990",
      "c": "\nundefined4 FUN_0041f990(void)\n\n{\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0041f993",
      "entry": "0041f993",
      "c": "\nuint FUN_0041f993(void)\n\n{\n  HMODULE pHVar1;\n  int *piVar2;\n  \n  pHVar1 = GetModuleHandleW((LPCWSTR)0x0);\n  if ((((pHVar1 != (HMODULE)0x0) && ((short)pHVar1->unused == 0x5a4d)) &&\n      (piVar2 = (int *)((int)&pHVar1->unused + pHVar1[0xf].unused), *piVar2 == 0x4550)) &&\n     ((pHVar1 = (HMODULE)0x10b, (short)piVar2[6] == 0x10b && (0xe < (uint)piVar2[0x1d])))) {\n    return CONCAT31(1,piVar2[0x3a] != 0);\n  }\n  return (uint)pHVar1 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "FUN_0041f9d5",
      "entry": "0041f9d5",
      "c": "\nvoid FUN_0041f9d5(void)\n\n{\n  SetUnhandledExceptionFilter(___scrt_unhandled_exception_filter_4);\n  return;\n}\n\n"
    },
    {
      "name": "___scrt_unhandled_exception_filter@4",
      "entry": "0041f9f0",
      "c": "\n/* Library Function - Single Match\n    ___scrt_unhandled_exception_filter@4\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 ___scrt_unhandled_exception_filter_4(int *param_1)\n\n{\n  int iVar1;\n  code *pcVar2;\n  int *piVar3;\n  int *piVar4;\n  undefined4 uVar5;\n  \n  piVar4 = (int *)*param_1;\n  if (((*piVar4 == -0x1f928c9d) && (piVar4[4] == 3)) &&\n     ((iVar1 = piVar4[5], iVar1 == 0x19930520 ||\n      (((iVar1 == 0x19930521 || (iVar1 == 0x19930522)) || (iVar1 == 0x1994000)))))) {\n    piVar3 = (int *)FUN_004202f7();\n    *piVar3 = (int)piVar4;\n    iVar1 = param_1[1];\n    piVar4 = (int *)FUN_00420300();\n    *piVar4 = iVar1;\n    terminate();\n    pcVar2 = (code *)swi(3);\n    uVar5 = (*pcVar2)();\n    return uVar5;\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_0041fa46",
      "entry": "0041fa46",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0041fa46(void)\n\n{\n  _DAT_00461d28 = 0;\n  return;\n}\n\n"
    },
    {
      "name": "___get_entropy",
      "entry": "0041fa4e",
      "c": "\n/* Library Function - Single Match\n    ___get_entropy\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nuint ___get_entropy(void)\n\n{\n  DWORD DVar1;\n  LARGE_INTEGER local_18;\n  _FILETIME local_10;\n  uint local_8;\n  \n  local_10.dwLowDateTime = 0;\n  local_10.dwHighDateTime = 0;\n  GetSystemTimeAsFileTime(&local_10);\n  local_8 = local_10.dwHighDateTime ^ local_10.dwLowDateTime;\n  DVar1 = GetCurrentThreadId();\n  local_8 = local_8 ^ DVar1;\n  DVar1 = GetCurrentProcessId();\n  local_8 = local_8 ^ DVar1;\n  QueryPerformanceCounter(&local_18);\n  return local_18.s.HighPart ^ local_18.s.LowPart ^ local_8 ^ (uint)&local_8;\n}\n\n"
    },
    {
      "name": "___security_init_cookie",
      "entry": "0041fa9b",
      "c": "\n/* Library Function - Single Match\n    ___security_init_cookie\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___security_init_cookie(void)\n\n{\n  if ((DAT_0043e7ac == 0xbb40e64e) || ((DAT_0043e7ac & 0xffff0000) == 0)) {\n    DAT_0043e7ac = ___get_entropy();\n    if (DAT_0043e7ac == 0xbb40e64e) {\n      DAT_0043e7ac = 0xbb40e64f;\n    }\n    else if ((DAT_0043e7ac & 0xffff0000) == 0) {\n      DAT_0043e7ac = DAT_0043e7ac | (DAT_0043e7ac | 0x4711) << 0x10;\n    }\n  }\n  DAT_0043e7a8 = ~DAT_0043e7ac;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fae6",
      "entry": "0041fae6",
      "c": "\nundefined4 FUN_0041fae6(void)\n\n{\n  return 0x4000;\n}\n\n"
    },
    {
      "name": "FUN_0041faec",
      "entry": "0041faec",
      "c": "\nvoid FUN_0041faec(void)\n\n{\n  InitializeSListHead((PSLIST_HEADER)&DAT_00461d30);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fb00",
      "entry": "0041fb00",
      "c": "\nundefined1 FUN_0041fb00(void)\n\n{\n  return 1;\n}\n\n"
    },
    {
      "name": "__initialize_default_precision",
      "entry": "0041fb03",
      "c": "\n/* Library Function - Single Match\n    __initialize_default_precision\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __initialize_default_precision(void)\n\n{\n  code *pcVar1;\n  errno_t eVar2;\n  \n  eVar2 = __controlfp_s((uint *)0x0,0x10000,0x30000);\n  if (eVar2 == 0) {\n    return;\n  }\n  FUN_0041f838();\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fb24",
      "entry": "0041fb24",
      "c": "\nundefined * FUN_0041fb24(void)\n\n{\n  return &DAT_00461d38;\n}\n\n"
    },
    {
      "name": "FUN_0041fb2a",
      "entry": "0041fb2a",
      "c": "\nvoid FUN_0041fb2a(void)\n\n{\n  uint *puVar1;\n  \n  puVar1 = (uint *)FUN_0040405f();\n  *puVar1 = *puVar1 | 0x24;\n  puVar1[1] = puVar1[1];\n  puVar1 = (uint *)FUN_0041fb24();\n  *puVar1 = *puVar1 | 2;\n  puVar1[1] = puVar1[1];\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fb47",
      "entry": "0041fb47",
      "c": "\nbool FUN_0041fb47(void)\n\n{\n  return DAT_0043e7a4 == 0;\n}\n\n"
    },
    {
      "name": "FUN_0041fb53",
      "entry": "0041fb53",
      "c": "\nundefined * FUN_0041fb53(void)\n\n{\n  return &DAT_00462710;\n}\n\n"
    },
    {
      "name": "FUN_0041fb59",
      "entry": "0041fb59",
      "c": "\nundefined * FUN_0041fb59(void)\n\n{\n  return &DAT_0046270c;\n}\n\n"
    },
    {
      "name": "FUN_0041fb5f",
      "entry": "0041fb5f",
      "c": "\n/* WARNING: Removing unreachable block (ram,0x0041fb6f) */\n/* WARNING: Removing unreachable block (ram,0x0041fb70) */\n/* WARNING: Removing unreachable block (ram,0x0041fb76) */\n/* WARNING: Removing unreachable block (ram,0x0041fb80) */\n/* WARNING: Removing unreachable block (ram,0x0041fb87) */\n\nvoid FUN_0041fb5f(void)\n\n{\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fb90",
      "entry": "0041fb90",
      "c": "\n/* WARNING: Removing unreachable block (ram,0x0041fba0) */\n/* WARNING: Removing unreachable block (ram,0x0041fba1) */\n/* WARNING: Removing unreachable block (ram,0x0041fba7) */\n/* WARNING: Removing unreachable block (ram,0x0041fbb1) */\n/* WARNING: Removing unreachable block (ram,0x0041fbb8) */\n\nvoid FUN_0041fb90(void)\n\n{\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fbbc",
      "entry": "0041fbbc",
      "c": "\nvoid __fastcall FUN_0041fbbc(int param_1)\n\n{\n  if (param_1 == DAT_0043e7ac) {\n    return;\n  }\n  FUN_0041fbf2();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fbca",
      "entry": "0041fbca",
      "c": "\nvoid __cdecl FUN_0041fbca(_EXCEPTION_POINTERS *param_1)\n\n{\n  HANDLE hProcess;\n  UINT uExitCode;\n  \n  SetUnhandledExceptionFilter((LPTOP_LEVEL_EXCEPTION_FILTER)0x0);\n  UnhandledExceptionFilter(param_1);\n  uExitCode = 0xc0000409;\n  hProcess = GetCurrentProcess();\n  TerminateProcess(hProcess,uExitCode);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0041fbf2",
      "entry": "0041fbf2",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0041fbf2(void)\n\n{\n  code *pcVar1;\n  uint uVar2;\n  undefined4 extraout_ECX;\n  undefined4 extraout_ECX_00;\n  undefined4 uVar3;\n  undefined4 extraout_EDX;\n  undefined4 unaff_EBX;\n  undefined4 unaff_EBP;\n  undefined4 unaff_ESI;\n  undefined4 unaff_EDI;\n  undefined2 in_ES;\n  undefined2 in_CS;\n  undefined2 in_SS;\n  undefined2 in_DS;\n  undefined2 in_FS;\n  undefined2 in_GS;\n  byte bVar4;\n  byte bVar5;\n  byte in_AF;\n  byte bVar6;\n  byte bVar7;\n  byte in_TF;\n  byte in_IF;\n  byte bVar8;\n  byte in_NT;\n  byte in_AC;\n  byte in_VIF;\n  byte in_VIP;\n  byte in_ID;\n  undefined8 uVar9;\n  undefined4 unaff_retaddr;\n  \n  uVar2 = IsProcessorFeaturePresent(0x17);\n  uVar9 = CONCAT44(extraout_EDX,uVar2);\n  bVar4 = 0;\n  bVar8 = 0;\n  bVar7 = (int)uVar2 < 0;\n  bVar6 = uVar2 == 0;\n  bVar5 = (POPCOUNT(uVar2 & 0xff) & 1U) == 0;\n  uVar3 = extraout_ECX;\n  if (!(bool)bVar6) {\n    pcVar1 = (code *)swi(0x29);\n    uVar9 = (*pcVar1)();\n    uVar3 = extraout_ECX_00;\n  }\n  _DAT_00461e38 = (undefined4)((ulonglong)uVar9 >> 0x20);\n  _DAT_00461e40 = (undefined4)uVar9;\n  _DAT_00461e50 =\n       (uint)(in_NT & 1) * 0x4000 | (uint)(bVar8 & 1) * 0x800 | (uint)(in_IF & 1) * 0x200 |\n       (uint)(in_TF & 1) * 0x100 | (uint)(bVar7 & 1) * 0x80 | (uint)(bVar6 & 1) * 0x40 |\n       (uint)(in_AF & 1) * 0x10 | (uint)(bVar5 & 1) * 4 | (uint)(bVar4 & 1) |\n       (uint)(in_ID & 1) * 0x200000 | (uint)(in_VIP & 1) * 0x100000 | (uint)(in_VIF & 1) * 0x80000 |\n       (uint)(in_AC & 1) * 0x40000;\n  _DAT_00461e54 = &stack0x00000004;\n  _DAT_00461d90 = 0x10001;\n  _DAT_00461d40 = 0xc0000409;\n  _DAT_00461d44 = 1;\n  _DAT_00461d50 = 1;\n  DAT_00461d54 = 2;\n  _DAT_00461d4c = unaff_retaddr;\n  _DAT_00461e1c = in_GS;\n  _DAT_00461e20 = in_FS;\n  _DAT_00461e24 = in_ES;\n  _DAT_00461e28 = in_DS;\n  _DAT_00461e2c = unaff_EDI;\n  _DAT_00461e30 = unaff_ESI;\n  _DAT_00461e34 = unaff_EBX;\n  _DAT_00461e3c = uVar3;\n  _DAT_00461e44 = unaff_EBP;\n  DAT_00461e48 = unaff_retaddr;\n  _DAT_00461e4c = in_CS;\n  _DAT_00461e58 = in_SS;\n  FUN_0041fbca((_EXCEPTION_POINTERS *)&PTR_DAT_004356f0);\n  return;\n}\n\n"
    },
    {
      "name": "_com_issue_error",
      "entry": "0041fcf0",
      "c": "\n/* Library Function - Single Match\n    void __stdcall _com_issue_error(long)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid _com_issue_error(long param_1)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR__com_raise_error_0043e7b0;\n  (*(code *)PTR_guard_check_icall_00433278)(param_1,0);\n  (*(code *)puVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "ConvertStringToBSTR",
      "entry": "0041fd10",
      "c": "\n/* WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe */\n/* Library Function - Multiple Matches With Same Base Name\n    unsigned short * __stdcall _com_util::ConvertStringToBSTR(char const *)\n    wchar_t * __stdcall _com_util::ConvertStringToBSTR(char const *)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid ConvertStringToBSTR(LPCSTR param_1)\n\n{\n  char *cbMultiByte;\n  char cVar1;\n  code *pcVar2;\n  uint uVar3;\n  int iVar4;\n  DWORD DVar5;\n  LPCSTR pCVar6;\n  LPWSTR unaff_ESI;\n  int unaff_EDI;\n  uint local_3c;\n  void *local_14;\n  code *pcStack_10;\n  uint local_c;\n  undefined4 local_8;\n  \n  local_8 = 0xfffffffe;\n  pcStack_10 = __except_handler4;\n  local_14 = ExceptionList;\n  local_c = DAT_0043e7ac ^ 0x43c130;\n  uVar3 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  ExceptionList = &local_14;\n  local_3c = uVar3;\n  if (param_1 == (LPCSTR)0x0) {\nLAB_0041fd4f:\n    ExceptionList = local_14;\n    FUN_0041fbbc(uVar3 ^ (uint)&stack0xfffffffc);\n    return;\n  }\n  pCVar6 = param_1;\n  do {\n    cVar1 = *pCVar6;\n    pCVar6 = pCVar6 + 1;\n  } while (cVar1 != '\\0');\n  cbMultiByte = pCVar6 + (1 - (int)(param_1 + 1));\n  if (cbMultiByte < (char *)0x80000000) {\n    unaff_EDI = MultiByteToWideChar(0,0,param_1,(int)cbMultiByte,(LPWSTR)0x0,0);\n    if (unaff_EDI != 0) {\n      local_8 = 0;\n      if (unaff_EDI < 0x1000) {\n        unaff_ESI = (LPWSTR)&local_3c;\n      }\n      else {\n        unaff_ESI = (LPWSTR)FUN_00423e33(unaff_EDI * 2);\n      }\n      local_8 = 0xfffffffe;\n      if (unaff_ESI != (LPWSTR)0x0) {\n        iVar4 = MultiByteToWideChar(0,0,param_1,(int)cbMultiByte,unaff_ESI,unaff_EDI);\n        if (iVar4 == 0) goto LAB_0041fe6f;\n        iVar4 = Ordinal_2(unaff_ESI);\n        if (0xfff < unaff_EDI) {\n          FID_conflict__free(unaff_ESI);\n        }\n        if (iVar4 != 0) goto LAB_0041fd4f;\n      }\n      _com_issue_error(-0x7ff8fff2);\n      goto LAB_0041fe4d;\n    }\n  }\n  else {\nLAB_0041fe4d:\n    _com_issue_error(-0x7ff8ffa9);\n  }\n  DVar5 = GetLastError();\n  if (0 < (int)DVar5) {\n    DVar5 = DVar5 & 0xffff | 0x80070000;\n  }\n  _com_issue_error(DVar5);\nLAB_0041fe6f:\n  if (0xfff < unaff_EDI) {\n    FID_conflict__free(unaff_ESI);\n  }\n  DVar5 = GetLastError();\n  if (0 < (int)DVar5) {\n    DVar5 = DVar5 & 0xffff | 0x80070000;\n  }\n  _com_issue_error(DVar5);\n  pcVar2 = (code *)swi(3);\n  (*pcVar2)();\n  return;\n}\n\n"
    },
    {
      "name": "_com_error",
      "entry": "0041fea0",
      "c": "\n/* Library Function - Single Match\n    public: __thiscall _com_error::_com_error(class _com_error const &)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\n_com_error * __thiscall _com_error::_com_error(_com_error *this,_com_error *param_1)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  \n  *(undefined ***)this = &PTR__scalar_deleting_destructor__004356f8;\n  *(undefined4 *)(this + 4) = *(undefined4 *)(param_1 + 4);\n  piVar1 = *(int **)(param_1 + 8);\n  *(int **)(this + 8) = piVar1;\n  *(undefined4 *)(this + 0xc) = 0;\n  if (piVar1 != (int *)0x0) {\n    pcVar2 = *(code **)(*piVar1 + 4);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar1);\n    (*pcVar2)();\n  }\n  return this;\n}\n\n"
    },
    {
      "name": "_com_error",
      "entry": "0041fee0",
      "c": "\n/* Library Function - Single Match\n    public: __thiscall _com_error::_com_error(long,struct IErrorInfo *,bool)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\n_com_error * __thiscall\n_com_error::_com_error(_com_error *this,long param_1,IErrorInfo *param_2,bool param_3)\n\n{\n  code *pcVar1;\n  \n  *(undefined ***)this = &PTR__scalar_deleting_destructor__004356f8;\n  *(long *)(this + 4) = param_1;\n  *(IErrorInfo **)(this + 8) = param_2;\n  *(undefined4 *)(this + 0xc) = 0;\n  if ((param_2 != (IErrorInfo *)0x0) && (param_3)) {\n    pcVar1 = *(code **)(*(int *)param_2 + 4);\n    (*(code *)PTR_guard_check_icall_00433278)(param_2);\n    (*pcVar1)();\n  }\n  return this;\n}\n\n"
    },
    {
      "name": "~_com_error",
      "entry": "0041ff30",
      "c": "\n/* Library Function - Single Match\n    public: virtual __thiscall _com_error::~_com_error(void)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __thiscall _com_error::~_com_error(_com_error *this)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  \n  piVar1 = *(int **)(this + 8);\n  *(undefined ***)this = &PTR__scalar_deleting_destructor__004356f8;\n  if (piVar1 != (int *)0x0) {\n    pcVar2 = *(code **)(*piVar1 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar1);\n    (*pcVar2)();\n  }\n  if (*(HLOCAL *)(this + 0xc) != (HLOCAL)0x0) {\n    LocalFree(*(HLOCAL *)(this + 0xc));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "`scalar_deleting_destructor'",
      "entry": "0041ff70",
      "c": "\n/* Library Function - Single Match\n    public: virtual void * __thiscall _com_error::`scalar deleting destructor'(unsigned int)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid * __thiscall _com_error::_scalar_deleting_destructor_(_com_error *this,uint param_1)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  \n  piVar1 = *(int **)(this + 8);\n  *(undefined ***)this = &PTR__scalar_deleting_destructor__004356f8;\n  if (piVar1 != (int *)0x0) {\n    pcVar2 = *(code **)(*piVar1 + 8);\n    (*(code *)PTR_guard_check_icall_00433278)(piVar1);\n    (*pcVar2)();\n  }\n  if (*(HLOCAL *)(this + 0xc) != (HLOCAL)0x0) {\n    LocalFree(*(HLOCAL *)(this + 0xc));\n  }\n  if ((param_1 & 1) != 0) {\n    FUN_0041eb68(this);\n  }\n  return this;\n}\n\n"
    },
    {
      "name": "_com_raise_error",
      "entry": "0041ffc0",
      "c": "\n/* Library Function - Single Match\n    void __stdcall _com_raise_error(long,struct IErrorInfo *)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid _com_raise_error(long param_1,IErrorInfo *param_2)\n\n{\n  code *pcVar1;\n  _com_error local_14 [16];\n  \n  _com_error::_com_error(local_14,param_1,param_2,false);\n  __CxxThrowException_8((int *)local_14,&DAT_0043c14c);\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "_memset",
      "entry": "0041fff0",
      "c": "\n/* Library Function - Single Match\n    _memset\n   \n   Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual\n   Studio 2019 Release */\n\nvoid * __cdecl _memset(void *_Dst,int _Val,size_t _Size)\n\n{\n  int iVar1;\n  undefined1 *puVar2;\n  int *piVar3;\n  \n  if (_Size == 0) {\n    return _Dst;\n  }\n  iVar1 = (_Val & 0xffU) * 0x1010101;\n  piVar3 = (int *)_Dst;\n  if (0x20 < _Size) {\n    if (0x7f < _Size) {\n      puVar2 = (undefined1 *)_Dst;\n      if ((DAT_00461d24 >> 1 & 1) != 0) {\n        for (; _Size != 0; _Size = _Size - 1) {\n          *puVar2 = (char)iVar1;\n          puVar2 = puVar2 + 1;\n        }\n        return _Dst;\n      }\n      if ((DAT_0043e7a0 >> 1 & 1) == 0) goto joined_r0x004200fb;\n      *(int *)_Dst = iVar1;\n      *(int *)((int)_Dst + 4) = iVar1;\n      *(int *)((int)_Dst + 8) = iVar1;\n      *(int *)((int)_Dst + 0xc) = iVar1;\n      piVar3 = (int *)((int)_Dst + 0x10U & 0xfffffff0);\n      _Size = (int)_Dst + (_Size - (int)piVar3);\n      if (0x80 < _Size) {\n        do {\n          *piVar3 = iVar1;\n          piVar3[1] = iVar1;\n          piVar3[2] = iVar1;\n          piVar3[3] = iVar1;\n          piVar3[4] = iVar1;\n          piVar3[5] = iVar1;\n          piVar3[6] = iVar1;\n          piVar3[7] = iVar1;\n          piVar3[8] = iVar1;\n          piVar3[9] = iVar1;\n          piVar3[10] = iVar1;\n          piVar3[0xb] = iVar1;\n          piVar3[0xc] = iVar1;\n          piVar3[0xd] = iVar1;\n          piVar3[0xe] = iVar1;\n          piVar3[0xf] = iVar1;\n          piVar3[0x10] = iVar1;\n          piVar3[0x11] = iVar1;\n          piVar3[0x12] = iVar1;\n          piVar3[0x13] = iVar1;\n          piVar3[0x14] = iVar1;\n          piVar3[0x15] = iVar1;\n          piVar3[0x16] = iVar1;\n          piVar3[0x17] = iVar1;\n          piVar3[0x18] = iVar1;\n          piVar3[0x19] = iVar1;\n          piVar3[0x1a] = iVar1;\n          piVar3[0x1b] = iVar1;\n          piVar3[0x1c] = iVar1;\n          piVar3[0x1d] = iVar1;\n          piVar3[0x1e] = iVar1;\n          piVar3[0x1f] = iVar1;\n          piVar3 = piVar3 + 0x20;\n          _Size = _Size - 0x80;\n        } while ((_Size & 0xffffff00) != 0);\n        goto LAB_004200c0;\n      }\n    }\n    if ((DAT_0043e7a0 >> 1 & 1) != 0) {\nLAB_004200c0:\n      if (0x1f < _Size) {\n        do {\n          *piVar3 = iVar1;\n          piVar3[1] = iVar1;\n          piVar3[2] = iVar1;\n          piVar3[3] = iVar1;\n          piVar3[4] = iVar1;\n          piVar3[5] = iVar1;\n          piVar3[6] = iVar1;\n          piVar3[7] = iVar1;\n          piVar3 = piVar3 + 8;\n          _Size = _Size - 0x20;\n        } while (0x1f < _Size);\n        if ((_Size & 0x1f) == 0) {\n          return _Dst;\n        }\n      }\n      piVar3 = (int *)((int)piVar3 + (_Size - 0x20));\n      *piVar3 = iVar1;\n      piVar3[1] = iVar1;\n      piVar3[2] = iVar1;\n      piVar3[3] = iVar1;\n      piVar3[4] = iVar1;\n      piVar3[5] = iVar1;\n      piVar3[6] = iVar1;\n      piVar3[7] = iVar1;\n      return _Dst;\n    }\n  }\njoined_r0x004200fb:\n  for (; (_Size & 3) != 0; _Size = _Size - 1) {\n    *(char *)piVar3 = (char)iVar1;\n    piVar3 = (int *)((int)piVar3 + 1);\n  }\n  if ((_Size & 4) != 0) {\n    *piVar3 = iVar1;\n    piVar3 = piVar3 + 1;\n    _Size = _Size - 4;\n  }\n  for (; (_Size & 0xfffffff8) != 0; _Size = _Size - 8) {\n    *piVar3 = iVar1;\n    piVar3[1] = iVar1;\n    piVar3 = piVar3 + 2;\n  }\n  return _Dst;\n}\n\n"
    },
    {
      "name": "___DestructExceptionObject",
      "entry": "00420150",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    ___DestructExceptionObject\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___DestructExceptionObject(int *param_1)\n\n{\n  byte *pbVar1;\n  int *piVar2;\n  code *pcVar3;\n  void *local_14;\n  \n  if ((((param_1 != (int *)0x0) && (*param_1 == -0x1f928c9d)) && (param_1[4] == 3)) &&\n     ((((param_1[5] == 0x19930520 || (param_1[5] == 0x19930521)) || (param_1[5] == 0x19930522)) &&\n      (pbVar1 = (byte *)param_1[7], pbVar1 != (byte *)0x0)))) {\n    if (*(void **)(pbVar1 + 4) == (void *)0x0) {\n      if (((*pbVar1 & 0x10) != 0) && (piVar2 = *(int **)param_1[6], piVar2 != (int *)0x0)) {\n        pcVar3 = *(code **)(*piVar2 + 8);\n        (*(code *)PTR_guard_check_icall_00433278)(piVar2);\n        (*pcVar3)();\n      }\n    }\n    else {\n      _CallMemberFunction0((void *)param_1[6],*(void **)(pbVar1 + 4));\n    }\n  }\n  ExceptionList = local_14;\n  return;\n}\n\n"
    },
    {
      "name": "_CallMemberFunction0",
      "entry": "004201f1",
      "c": "\n/* Library Function - Single Match\n    void __stdcall _CallMemberFunction0(void * const,void * const)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid _CallMemberFunction0(void *param_1,void *param_2)\n\n{\n  (*(code *)param_2)();\n  return;\n}\n\n"
    },
    {
      "name": "_FilterSetCurrentException",
      "entry": "004201fe",
      "c": "\n/* Library Function - Single Match\n    unsigned long __cdecl _FilterSetCurrentException(struct _EXCEPTION_POINTERS *,unsigned char)\n   \n   Library: Visual Studio 2019 Release */\n\nulong __cdecl _FilterSetCurrentException(_EXCEPTION_POINTERS *param_1,uchar param_2)\n\n{\n  PEXCEPTION_RECORD pEVar1;\n  PCONTEXT pCVar2;\n  code *pcVar3;\n  int iVar4;\n  ulong uVar5;\n  \n  if ((((param_2 != '\\0') &&\n       (pEVar1 = param_1->ExceptionRecord, pEVar1->ExceptionCode == 0xe06d7363)) &&\n      (pEVar1->NumberParameters == 3)) &&\n     (((pEVar1->ExceptionInformation[0] == 0x19930520 ||\n       (pEVar1->ExceptionInformation[0] == 0x19930521)) ||\n      (pEVar1->ExceptionInformation[0] == 0x19930522)))) {\n    iVar4 = ___vcrt_getptd();\n    *(PEXCEPTION_RECORD *)(iVar4 + 0x10) = pEVar1;\n    pCVar2 = param_1->ContextRecord;\n    iVar4 = ___vcrt_getptd();\n    *(PCONTEXT *)(iVar4 + 0x14) = pCVar2;\n    terminate();\n    pcVar3 = (code *)swi(3);\n    uVar5 = (*pcVar3)();\n    return uVar5;\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "__IsExceptionObjectToBeDestroyed",
      "entry": "00420256",
      "c": "\n/* Library Function - Single Match\n    __IsExceptionObjectToBeDestroyed\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 __cdecl __IsExceptionObjectToBeDestroyed(int param_1)\n\n{\n  int *piVar1;\n  int iVar2;\n  \n  iVar2 = ___vcrt_getptd();\n  piVar1 = *(int **)(iVar2 + 0x24);\n  while( true ) {\n    if (piVar1 == (int *)0x0) {\n      return 1;\n    }\n    if (*piVar1 == param_1) break;\n    piVar1 = (int *)piVar1[1];\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "___AdjustPointer",
      "entry": "0042027c",
      "c": "\n/* Library Function - Single Match\n    ___AdjustPointer\n   \n   Library: Visual Studio 2019 Release */\n\nint __cdecl ___AdjustPointer(int param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = param_2[1];\n  iVar2 = *param_2 + param_1;\n  if (-1 < iVar1) {\n    iVar2 = iVar2 + *(int *)(*(int *)(iVar1 + param_1) + param_2[2]) + iVar1;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "___FrameUnwindFilter",
      "entry": "004202a1",
      "c": "\n/* Library Function - Single Match\n    ___FrameUnwindFilter\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 __cdecl ___FrameUnwindFilter(undefined4 *param_1)\n\n{\n  int *piVar1;\n  code *pcVar2;\n  int iVar3;\n  undefined4 uVar4;\n  \n  piVar1 = (int *)*param_1;\n  if ((*piVar1 == -0x1fbcbcae) || (*piVar1 == -0x1fbcb0b3)) {\n    iVar3 = ___vcrt_getptd();\n    if (0 < *(int *)(iVar3 + 0x18)) {\n      iVar3 = ___vcrt_getptd();\n      *(int *)(iVar3 + 0x18) = *(int *)(iVar3 + 0x18) + -1;\n    }\n  }\n  else if (*piVar1 == -0x1f928c9d) {\n    iVar3 = ___vcrt_getptd();\n    *(int **)(iVar3 + 0x10) = piVar1;\n    uVar4 = param_1[1];\n    iVar3 = ___vcrt_getptd();\n    *(undefined4 *)(iVar3 + 0x14) = uVar4;\n    terminate();\n    pcVar2 = (code *)swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_004202f7",
      "entry": "004202f7",
      "c": "\nint FUN_004202f7(void)\n\n{\n  int iVar1;\n  \n  iVar1 = ___vcrt_getptd();\n  return iVar1 + 0x10;\n}\n\n"
    },
    {
      "name": "FUN_00420300",
      "entry": "00420300",
      "c": "\nint FUN_00420300(void)\n\n{\n  int iVar1;\n  \n  iVar1 = ___vcrt_getptd();\n  return iVar1 + 0x14;\n}\n\n"
    },
    {
      "name": "Unwind@00420310",
      "entry": "00420310",
      "c": "\n/* WARNING: Function: __SEH_prolog4_GS replaced with injection: SEH_prolog4 */\n\nvoid __cdecl Unwind_00420310(void)\n\n{\n  code *pcVar1;\n  __acrt_ptd *p_Var2;\n  \n  p_Var2 = ___acrt_getptd();\n  pcVar1 = *(code **)(p_Var2 + 0xc);\n  if (pcVar1 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "FUN_00420320",
      "entry": "00420320",
      "c": "\nulonglong __cdecl FUN_00420320(uint *param_1,uint *param_2,uint param_3)\n\n{\n  undefined8 uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  undefined4 uVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  undefined4 uVar27;\n  undefined4 uVar28;\n  undefined4 uVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined4 uVar32;\n  undefined4 uVar33;\n  uint uVar34;\n  uint uVar35;\n  uint uVar36;\n  uint uVar37;\n  uint uVar38;\n  uint uVar39;\n  uint uVar40;\n  uint uVar41;\n  uint uVar42;\n  uint uVar43;\n  uint uVar44;\n  uint uVar45;\n  uint uVar46;\n  uint uVar47;\n  uint *puVar48;\n  undefined4 *puVar49;\n  undefined4 *puVar50;\n  uint *puVar51;\n  undefined4 *puVar52;\n  undefined4 *puVar53;\n  uint uVar54;\n  ulonglong uVar55;\n  \n  if ((param_2 < param_1) && (param_1 < (uint *)(param_3 + (int)param_2))) {\n    puVar49 = (undefined4 *)((int)param_2 + param_3);\n    puVar52 = (undefined4 *)((int)param_1 + param_3);\n    uVar46 = param_3;\n    uVar47 = param_3;\n    if (0x1f < param_3) {\n      if ((DAT_0043e7a0 >> 1 & 1) == 0) {\n        if (((uint)puVar52 & 3) != 0) {\n          uVar47 = (uint)puVar52 & 3;\n          param_3 = param_3 - uVar47;\n          do {\n            *(undefined1 *)((int)puVar52 - 1) = *(undefined1 *)((int)puVar49 + -1);\n            puVar49 = (undefined4 *)((int)puVar49 + -1);\n            puVar52 = (undefined4 *)((int)puVar52 - 1);\n            uVar47 = uVar47 - 1;\n          } while (uVar47 != 0);\n        }\n        uVar46 = param_3;\n        if (0x1f < param_3) {\n          uVar46 = param_3 >> 2;\n          while( true ) {\n            if (uVar46 == 0) break;\n            uVar46 = uVar46 - 1;\n            puVar52[-1] = puVar49[-1];\n            puVar49 = puVar49 + -1;\n            puVar52 = puVar52 + -1;\n          }\n          switch(param_3 & 3) {\n          case 0:\n            return CONCAT44(param_3,param_1) & 0x3ffffffff;\n          case 1:\n            *(undefined1 *)((int)puVar52 - 1) = *(undefined1 *)((int)puVar49 + -1);\n            return CONCAT44(param_3,param_1) & 0x3ffffffff;\n          case 2:\n            *(undefined1 *)((int)puVar52 - 1) = *(undefined1 *)((int)puVar49 + -1);\n            *(undefined1 *)((int)puVar52 - 2) = *(undefined1 *)((int)puVar49 + -2);\n            return CONCAT44(param_3,param_1) & 0x3ffffffff;\n          case 3:\n            *(undefined1 *)((int)puVar52 - 1) = *(undefined1 *)((int)puVar49 + -1);\n            *(undefined1 *)((int)puVar52 - 2) = *(undefined1 *)((int)puVar49 + -2);\n            *(undefined1 *)((int)puVar52 - 3) = *(undefined1 *)((int)puVar49 + -3);\n            return CONCAT44(param_3,param_1) & 0x3ffffffff;\n          }\n        }\n      }\n      else {\n        while (puVar50 = puVar49, puVar53 = puVar52, ((uint)puVar52 & 0xf) != 0) {\n          puVar49 = (undefined4 *)((int)puVar49 + -1);\n          puVar52 = (undefined4 *)((int)puVar52 + -1);\n          *(undefined1 *)puVar52 = *(undefined1 *)puVar49;\n          uVar46 = uVar46 - 1;\n        }\n        do {\n          puVar49 = puVar50;\n          puVar52 = puVar53;\n          if (uVar46 < 0x80) break;\n          puVar49 = puVar50 + -0x20;\n          puVar52 = puVar53 + -0x20;\n          uVar3 = puVar50[-0x1f];\n          uVar4 = puVar50[-0x1e];\n          uVar5 = puVar50[-0x1d];\n          uVar6 = puVar50[-0x1c];\n          uVar7 = puVar50[-0x1b];\n          uVar8 = puVar50[-0x1a];\n          uVar9 = puVar50[-0x19];\n          uVar10 = puVar50[-0x18];\n          uVar11 = puVar50[-0x17];\n          uVar12 = puVar50[-0x16];\n          uVar13 = puVar50[-0x15];\n          uVar14 = puVar50[-0x14];\n          uVar15 = puVar50[-0x13];\n          uVar16 = puVar50[-0x12];\n          uVar17 = puVar50[-0x11];\n          uVar18 = puVar50[-0x10];\n          uVar19 = puVar50[-0xf];\n          uVar20 = puVar50[-0xe];\n          uVar21 = puVar50[-0xd];\n          uVar22 = puVar50[-0xc];\n          uVar23 = puVar50[-0xb];\n          uVar24 = puVar50[-10];\n          uVar25 = puVar50[-9];\n          uVar26 = puVar50[-8];\n          uVar27 = puVar50[-7];\n          uVar28 = puVar50[-6];\n          uVar29 = puVar50[-5];\n          uVar30 = puVar50[-4];\n          uVar31 = puVar50[-3];\n          uVar32 = puVar50[-2];\n          uVar33 = puVar50[-1];\n          *puVar52 = *puVar49;\n          puVar53[-0x1f] = uVar3;\n          puVar53[-0x1e] = uVar4;\n          puVar53[-0x1d] = uVar5;\n          puVar53[-0x1c] = uVar6;\n          puVar53[-0x1b] = uVar7;\n          puVar53[-0x1a] = uVar8;\n          puVar53[-0x19] = uVar9;\n          puVar53[-0x18] = uVar10;\n          puVar53[-0x17] = uVar11;\n          puVar53[-0x16] = uVar12;\n          puVar53[-0x15] = uVar13;\n          puVar53[-0x14] = uVar14;\n          puVar53[-0x13] = uVar15;\n          puVar53[-0x12] = uVar16;\n          puVar53[-0x11] = uVar17;\n          puVar53[-0x10] = uVar18;\n          puVar53[-0xf] = uVar19;\n          puVar53[-0xe] = uVar20;\n          puVar53[-0xd] = uVar21;\n          puVar53[-0xc] = uVar22;\n          puVar53[-0xb] = uVar23;\n          puVar53[-10] = uVar24;\n          puVar53[-9] = uVar25;\n          puVar53[-8] = uVar26;\n          puVar53[-7] = uVar27;\n          puVar53[-6] = uVar28;\n          puVar53[-5] = uVar29;\n          puVar53[-4] = uVar30;\n          puVar53[-3] = uVar31;\n          puVar53[-2] = uVar32;\n          puVar53[-1] = uVar33;\n          uVar46 = uVar46 - 0x80;\n          puVar50 = puVar49;\n          puVar53 = puVar52;\n        } while ((uVar46 & 0xffffff80) != 0);\n        puVar50 = puVar49;\n        puVar53 = puVar52;\n        if (0x1f < uVar46) {\n          do {\n            puVar49 = puVar50 + -8;\n            puVar52 = puVar53 + -8;\n            uVar3 = puVar50[-7];\n            uVar4 = puVar50[-6];\n            uVar5 = puVar50[-5];\n            uVar6 = puVar50[-4];\n            uVar7 = puVar50[-3];\n            uVar8 = puVar50[-2];\n            uVar9 = puVar50[-1];\n            *puVar52 = *puVar49;\n            puVar53[-7] = uVar3;\n            puVar53[-6] = uVar4;\n            puVar53[-5] = uVar5;\n            puVar53[-4] = uVar6;\n            puVar53[-3] = uVar7;\n            puVar53[-2] = uVar8;\n            puVar53[-1] = uVar9;\n            uVar46 = uVar46 - 0x20;\n            puVar50 = puVar49;\n            puVar53 = puVar52;\n          } while ((uVar46 & 0xffffffe0) != 0);\n        }\n      }\n    }\n    for (; (uVar46 & 0xfffffffc) != 0; uVar46 = uVar46 - 4) {\n      puVar52 = puVar52 + -1;\n      puVar49 = puVar49 + -1;\n      *puVar52 = *puVar49;\n    }\n    for (; uVar46 != 0; uVar46 = uVar46 - 1) {\n      puVar52 = (undefined4 *)((int)puVar52 - 1);\n      puVar49 = (undefined4 *)((int)puVar49 + -1);\n      *(undefined1 *)puVar52 = *(undefined1 *)puVar49;\n    }\n    return CONCAT44(uVar47,param_1);\n  }\n  uVar46 = param_3;\n  puVar51 = param_1;\n  if (0x1f < param_3) {\n    if (param_3 < 0x80) {\n      if ((DAT_0043e7a0 >> 1 & 1) != 0) {\nLAB_004207ed:\n        if (uVar46 == 0) goto LAB_00420850;\n        for (param_3 = uVar46 >> 5; param_3 != 0; param_3 = param_3 - 1) {\n          uVar47 = param_2[1];\n          uVar54 = param_2[2];\n          uVar2 = param_2[3];\n          uVar34 = param_2[4];\n          uVar35 = param_2[5];\n          uVar36 = param_2[6];\n          uVar37 = param_2[7];\n          *puVar51 = *param_2;\n          puVar51[1] = uVar47;\n          puVar51[2] = uVar54;\n          puVar51[3] = uVar2;\n          puVar51[4] = uVar34;\n          puVar51[5] = uVar35;\n          puVar51[6] = uVar36;\n          puVar51[7] = uVar37;\n          param_2 = param_2 + 8;\n          puVar51 = puVar51 + 8;\n        }\n        goto LAB_0042081b;\n      }\nLAB_00420547:\n      uVar46 = (uint)param_1 & 3;\n      while (uVar46 != 0) {\n        *(char *)puVar51 = (char)*param_2;\n        param_3 = param_3 - 1;\n        param_2 = (uint *)((int)param_2 + 1);\n        puVar51 = (uint *)((int)puVar51 + 1);\n        uVar46 = (uint)puVar51 & 3;\n      }\n    }\n    else {\n      if ((DAT_00461d24 >> 1 & 1) != 0) {\n        for (; uVar46 != 0; uVar46 = uVar46 - 1) {\n          *(char *)puVar51 = (char)*param_2;\n          param_2 = (uint *)((int)param_2 + 1);\n          puVar51 = (uint *)((int)puVar51 + 1);\n        }\n        return CONCAT44(param_3,param_1);\n      }\n      if (((((uint)param_1 ^ (uint)param_2) & 0xf) == 0) && ((DAT_0043e7a0 >> 1 & 1) != 0)) {\n        if (((uint)param_2 & 0xf) != 0) {\n          uVar47 = 0x10 - ((uint)param_2 & 0xf);\n          param_3 = param_3 - uVar47;\n          for (uVar46 = uVar47 & 3; uVar46 != 0; uVar46 = uVar46 - 1) {\n            *(char *)puVar51 = (char)*param_2;\n            param_2 = (uint *)((int)param_2 + 1);\n            puVar51 = (uint *)((int)puVar51 + 1);\n          }\n          for (uVar47 = uVar47 >> 2; uVar47 != 0; uVar47 = uVar47 - 1) {\n            *puVar51 = *param_2;\n            param_2 = param_2 + 1;\n            puVar51 = puVar51 + 1;\n          }\n        }\n        uVar46 = param_3 & 0x7f;\n        for (param_3 = param_3 >> 7; param_3 != 0; param_3 = param_3 - 1) {\n          uVar47 = param_2[1];\n          uVar54 = param_2[2];\n          uVar2 = param_2[3];\n          uVar34 = param_2[4];\n          uVar35 = param_2[5];\n          uVar36 = param_2[6];\n          uVar37 = param_2[7];\n          uVar38 = param_2[8];\n          uVar39 = param_2[9];\n          uVar40 = param_2[10];\n          uVar41 = param_2[0xb];\n          uVar42 = param_2[0xc];\n          uVar43 = param_2[0xd];\n          uVar44 = param_2[0xe];\n          uVar45 = param_2[0xf];\n          *puVar51 = *param_2;\n          puVar51[1] = uVar47;\n          puVar51[2] = uVar54;\n          puVar51[3] = uVar2;\n          puVar51[4] = uVar34;\n          puVar51[5] = uVar35;\n          puVar51[6] = uVar36;\n          puVar51[7] = uVar37;\n          puVar51[8] = uVar38;\n          puVar51[9] = uVar39;\n          puVar51[10] = uVar40;\n          puVar51[0xb] = uVar41;\n          puVar51[0xc] = uVar42;\n          puVar51[0xd] = uVar43;\n          puVar51[0xe] = uVar44;\n          puVar51[0xf] = uVar45;\n          uVar47 = param_2[0x11];\n          uVar54 = param_2[0x12];\n          uVar2 = param_2[0x13];\n          uVar34 = param_2[0x14];\n          uVar35 = param_2[0x15];\n          uVar36 = param_2[0x16];\n          uVar37 = param_2[0x17];\n          uVar38 = param_2[0x18];\n          uVar39 = param_2[0x19];\n          uVar40 = param_2[0x1a];\n          uVar41 = param_2[0x1b];\n          uVar42 = param_2[0x1c];\n          uVar43 = param_2[0x1d];\n          uVar44 = param_2[0x1e];\n          uVar45 = param_2[0x1f];\n          puVar51[0x10] = param_2[0x10];\n          puVar51[0x11] = uVar47;\n          puVar51[0x12] = uVar54;\n          puVar51[0x13] = uVar2;\n          puVar51[0x14] = uVar34;\n          puVar51[0x15] = uVar35;\n          puVar51[0x16] = uVar36;\n          puVar51[0x17] = uVar37;\n          puVar51[0x18] = uVar38;\n          puVar51[0x19] = uVar39;\n          puVar51[0x1a] = uVar40;\n          puVar51[0x1b] = uVar41;\n          puVar51[0x1c] = uVar42;\n          puVar51[0x1d] = uVar43;\n          puVar51[0x1e] = uVar44;\n          puVar51[0x1f] = uVar45;\n          param_2 = param_2 + 0x20;\n          puVar51 = puVar51 + 0x20;\n        }\n        goto LAB_004207ed;\n      }\n      if (((DAT_00461d24 & 1) == 0) || (((uint)param_1 & 3) != 0)) goto LAB_00420547;\n      if (((uint)param_2 & 3) == 0) {\n        if (((uint)param_1 >> 2 & 1) != 0) {\n          uVar46 = *param_2;\n          param_3 = param_3 - 4;\n          param_2 = param_2 + 1;\n          *param_1 = uVar46;\n          param_1 = param_1 + 1;\n        }\n        if (((uint)param_1 >> 3 & 1) != 0) {\n          uVar1 = *(undefined8 *)param_2;\n          param_3 = param_3 - 8;\n          param_2 = param_2 + 2;\n          *(undefined8 *)param_1 = uVar1;\n          param_1 = param_1 + 2;\n        }\n        if (((uint)param_2 & 7) == 0) {\n          puVar51 = param_2 + -2;\n          uVar46 = *param_2;\n          uVar47 = param_2[1];\n          do {\n            puVar48 = puVar51;\n            uVar34 = puVar48[8];\n            uVar35 = puVar48[9];\n            param_3 = param_3 - 0x30;\n            uVar36 = puVar48[6];\n            uVar37 = puVar48[7];\n            uVar38 = puVar48[8];\n            uVar39 = puVar48[9];\n            uVar54 = puVar48[0xe];\n            uVar2 = puVar48[0xf];\n            uVar40 = puVar48[10];\n            uVar41 = puVar48[0xb];\n            uVar42 = puVar48[0xc];\n            uVar43 = puVar48[0xd];\n            param_1[2] = uVar46;\n            param_1[3] = uVar47;\n            param_1[4] = uVar34;\n            param_1[5] = uVar35;\n            param_1[6] = uVar36;\n            param_1[7] = uVar37;\n            param_1[8] = uVar38;\n            param_1[9] = uVar39;\n            param_1[10] = uVar40;\n            param_1[0xb] = uVar41;\n            param_1[0xc] = uVar42;\n            param_1[0xd] = uVar43;\n            param_1 = param_1 + 0xc;\n            puVar51 = puVar48 + 0xc;\n            uVar46 = uVar54;\n            uVar47 = uVar2;\n          } while (0x2f < param_3);\n          puVar48 = puVar48 + 0xe;\n        }\n        else if (((uint)param_2 >> 3 & 1) == 0) {\n          puVar51 = param_2 + -1;\n          uVar46 = *param_2;\n          uVar47 = param_2[1];\n          uVar54 = param_2[2];\n          do {\n            puVar48 = puVar51;\n            uVar36 = puVar48[8];\n            param_3 = param_3 - 0x30;\n            uVar37 = puVar48[5];\n            uVar38 = puVar48[6];\n            uVar39 = puVar48[7];\n            uVar40 = puVar48[8];\n            uVar2 = puVar48[0xd];\n            uVar34 = puVar48[0xe];\n            uVar35 = puVar48[0xf];\n            uVar41 = puVar48[9];\n            uVar42 = puVar48[10];\n            uVar43 = puVar48[0xb];\n            uVar44 = puVar48[0xc];\n            param_1[1] = uVar46;\n            param_1[2] = uVar47;\n            param_1[3] = uVar54;\n            param_1[4] = uVar36;\n            param_1[5] = uVar37;\n            param_1[6] = uVar38;\n            param_1[7] = uVar39;\n            param_1[8] = uVar40;\n            param_1[9] = uVar41;\n            param_1[10] = uVar42;\n            param_1[0xb] = uVar43;\n            param_1[0xc] = uVar44;\n            param_1 = param_1 + 0xc;\n            puVar51 = puVar48 + 0xc;\n            uVar46 = uVar2;\n            uVar47 = uVar34;\n            uVar54 = uVar35;\n          } while (0x2f < param_3);\n          puVar48 = puVar48 + 0xd;\n        }\n        else {\n          puVar51 = param_2 + -3;\n          uVar46 = *param_2;\n          do {\n            puVar48 = puVar51;\n            uVar54 = puVar48[8];\n            uVar2 = puVar48[9];\n            uVar34 = puVar48[10];\n            param_3 = param_3 - 0x30;\n            uVar35 = puVar48[7];\n            uVar36 = puVar48[8];\n            uVar37 = puVar48[9];\n            uVar38 = puVar48[10];\n            uVar47 = puVar48[0xf];\n            uVar39 = puVar48[0xb];\n            uVar40 = puVar48[0xc];\n            uVar41 = puVar48[0xd];\n            uVar42 = puVar48[0xe];\n            param_1[3] = uVar46;\n            param_1[4] = uVar54;\n            param_1[5] = uVar2;\n            param_1[6] = uVar34;\n            param_1[7] = uVar35;\n            param_1[8] = uVar36;\n            param_1[9] = uVar37;\n            param_1[10] = uVar38;\n            param_1[0xb] = uVar39;\n            param_1[0xc] = uVar40;\n            param_1[0xd] = uVar41;\n            param_1[0xe] = uVar42;\n            param_1 = param_1 + 0xc;\n            puVar51 = puVar48 + 0xc;\n            uVar46 = uVar47;\n          } while (0x2f < param_3);\n          puVar48 = puVar48 + 0xf;\n        }\n        for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n          uVar46 = *puVar48;\n          uVar47 = puVar48[1];\n          uVar54 = puVar48[2];\n          uVar2 = puVar48[3];\n          puVar48 = puVar48 + 4;\n          *param_1 = uVar46;\n          param_1[1] = uVar47;\n          param_1[2] = uVar54;\n          param_1[3] = uVar2;\n          param_1 = param_1 + 4;\n        }\n        if ((param_3 >> 2 & 1) != 0) {\n          uVar46 = *puVar48;\n          param_3 = param_3 - 4;\n          puVar48 = puVar48 + 1;\n          *param_1 = uVar46;\n          param_1 = param_1 + 1;\n        }\n        if ((param_3 >> 3 & 1) != 0) {\n          param_3 = param_3 - 8;\n          *(undefined8 *)param_1 = *(undefined8 *)puVar48;\n        }\n                    /* WARNING: Could not recover jumptable at 0x00420545. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar55 = (*(code *)(&switchD_00420575::switchdataD_00420584)[param_3])();\n        return uVar55;\n      }\n    }\n    uVar46 = param_3;\n    if (0x1f < param_3) {\n      for (uVar46 = param_3 >> 2; uVar46 != 0; uVar46 = uVar46 - 1) {\n        *puVar51 = *param_2;\n        param_2 = param_2 + 1;\n        puVar51 = puVar51 + 1;\n      }\n      switch(param_3 & 3) {\n      case 0:\n        return CONCAT44(param_3,param_1) & 0x3ffffffff;\n      case 1:\n        *(char *)puVar51 = (char)*param_2;\n        return CONCAT44(param_3,param_1) & 0x3ffffffff;\n      case 2:\n        *(char *)puVar51 = (char)*param_2;\n        *(undefined1 *)((int)puVar51 + 1) = *(undefined1 *)((int)param_2 + 1);\n        return CONCAT44(param_3,param_1) & 0x3ffffffff;\n      case 3:\n        *(char *)puVar51 = (char)*param_2;\n        *(undefined1 *)((int)puVar51 + 1) = *(undefined1 *)((int)param_2 + 1);\n        *(undefined1 *)((int)puVar51 + 2) = *(undefined1 *)((int)param_2 + 2);\n        return CONCAT44(param_3,param_1) & 0x3ffffffff;\n      }\n    }\n  }\nLAB_0042081b:\n  if ((uVar46 & 0x1f) != 0) {\n    for (uVar47 = (uVar46 & 0x1f) >> 2; uVar47 != 0; uVar47 = uVar47 - 1) {\n      param_3 = *param_2;\n      *puVar51 = param_3;\n      puVar51 = puVar51 + 1;\n      param_2 = param_2 + 1;\n    }\n    for (uVar46 = uVar46 & 3; uVar46 != 0; uVar46 = uVar46 - 1) {\n      *(char *)puVar51 = (char)*param_2;\n      param_2 = (uint *)((int)param_2 + 1);\n      puVar51 = (uint *)((int)puVar51 + 1);\n    }\n  }\nLAB_00420850:\n  return CONCAT44(param_3,param_1);\n}\n\n"
    },
    {
      "name": "GetRangeOfTrysToCheck",
      "entry": "00420894",
      "c": "\n/* Library Function - Single Match\n    public: static struct std::pair<class __FrameHandler3::TryBlockMap::iterator,class\n   __FrameHandler3::TryBlockMap::iterator> __cdecl __FrameHandler3::GetRangeOfTrysToCheck(class\n   __FrameHandler3::TryBlockMap &,int,void *,struct _s_FuncInfo const *,int)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl\n__FrameHandler3::GetRangeOfTrysToCheck\n          (TryBlockMap *param_1,int param_2,void *param_3,_s_FuncInfo *param_4,int param_5)\n\n{\n  uint uVar1;\n  int *piVar2;\n  uint uVar3;\n  uint uVar4;\n  int in_stack_00000018;\n  uint local_8;\n  \n  uVar1 = *(uint *)(param_5 + 0xc);\n  uVar3 = uVar1;\n  uVar4 = uVar1;\n  if (-1 < in_stack_00000018) {\n    piVar2 = (int *)(uVar1 * 0x14 + *(int *)(param_5 + 0x10) + 8);\n    local_8 = uVar1;\n    do {\n      if (uVar3 == 0xffffffff) goto LAB_004208fe;\n      uVar3 = uVar3 - 1;\n      if (((piVar2[-6] < (int)param_3) && ((int)param_3 <= piVar2[-5])) || (uVar3 == 0xffffffff)) {\n        in_stack_00000018 = in_stack_00000018 + -1;\n        uVar4 = local_8;\n        local_8 = uVar3;\n      }\n      piVar2 = piVar2 + -5;\n    } while (-1 < in_stack_00000018);\n  }\n  if ((uVar4 <= uVar1) && (uVar3 + 1 <= uVar4)) {\n    *(uint *)(param_1 + 0xc) = uVar4;\n    *(int *)param_1 = param_2;\n    *(uint *)(param_1 + 4) = uVar3 + 1;\n    *(int *)(param_1 + 8) = param_2;\n    return;\n  }\nLAB_004208fe:\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "FUN_00420904",
      "entry": "00420904",
      "c": "\nundefined4 __cdecl\nFUN_00420904(undefined4 param_1,undefined4 param_2,undefined4 param_3,int param_4,int param_5)\n\n{\n  undefined4 uVar1;\n  void *local_1c;\n  code *local_18;\n  uint local_14;\n  undefined4 local_10;\n  undefined4 local_c;\n  int local_8;\n  \n  local_14 = (uint)&local_1c ^ DAT_0043e7ac;\n  local_10 = param_2;\n  local_8 = param_4 + 1;\n  local_18 = __CatchGuardHandler;\n  local_c = param_1;\n  local_1c = ExceptionList;\n  ExceptionList = &local_1c;\n  uVar1 = __CallSettingFrame_12(param_3,param_1,param_5);\n  ExceptionList = local_1c;\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00420961",
      "entry": "00420961",
      "c": "\nundefined4 __cdecl\nFUN_00420961(int *param_1,undefined4 *param_2,undefined4 param_3,undefined4 param_4,\n            undefined4 param_5,undefined4 param_6,undefined4 param_7)\n\n{\n  int iVar1;\n  undefined4 *local_44;\n  code *local_40;\n  uint local_3c;\n  undefined4 local_38;\n  undefined4 *local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  undefined1 *local_28;\n  undefined1 *local_24;\n  int local_20;\n  int *local_1c;\n  undefined4 local_18;\n  code *local_14;\n  undefined *local_10;\n  undefined4 local_c;\n  code *local_8;\n  \n  local_24 = &stack0xfffffffc;\n  local_28 = &stack0xffffffb8;\n  if (param_1 == (int *)0x123) {\n    *param_2 = 0x420a2b;\n    local_c = 1;\n  }\n  else {\n    local_40 = __TranslatorGuardHandler;\n    local_3c = DAT_0043e7ac ^ (uint)&local_44;\n    local_38 = param_5;\n    local_34 = param_2;\n    local_30 = param_6;\n    local_2c = param_7;\n    local_20 = 0;\n    local_44 = (undefined4 *)ExceptionList;\n    ExceptionList = &local_44;\n    iVar1 = __filter_x86_sse2_floating_point_exception_default(*param_1);\n    *param_1 = iVar1;\n    local_c = 1;\n    local_1c = param_1;\n    local_18 = param_3;\n    iVar1 = ___vcrt_getptd();\n    local_8 = *(code **)(iVar1 + 8);\n    local_10 = PTR_guard_check_icall_00433278;\n    (*(code *)PTR_guard_check_icall_00433278)();\n    local_14 = local_8;\n    (*local_8)(*param_1,&local_1c);\n    local_c = 0;\n    if (local_20 != 0) {\n                    /* WARNING: Load size is inaccurate */\n      *local_44 = *ExceptionList;\n    }\n    ExceptionList = local_44;\n  }\n  return local_c;\n}\n\n"
    },
    {
      "name": "_JumpToContinuation",
      "entry": "00420a57",
      "c": "\n/* Library Function - Single Match\n    void __stdcall _JumpToContinuation(void *,struct EHRegistrationNode *)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid _JumpToContinuation(void *param_1,EHRegistrationNode *param_2)\n\n{\n                    /* WARNING: Load size is inaccurate */\n  ExceptionList = *ExceptionList;\n                    /* WARNING: Could not recover jumptable at 0x00420a80. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)param_1)();\n  return;\n}\n\n"
    },
    {
      "name": "_UnwindNestedFrames",
      "entry": "00420a87",
      "c": "\n/* Library Function - Single Match\n    void __stdcall _UnwindNestedFrames(struct EHRegistrationNode *,struct EHExceptionRecord *)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid _UnwindNestedFrames(EHRegistrationNode *param_1,EHExceptionRecord *param_2)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = ExceptionList;\n  RtlUnwind(param_1,(PVOID)0x420ab1,(PEXCEPTION_RECORD)param_2,(PVOID)0x0);\n  *(uint *)(param_2 + 4) = *(uint *)(param_2 + 4) & 0xfffffffd;\n  *(void **)pvVar1 = ExceptionList;\n  ExceptionList = pvVar1;\n  return;\n}\n\n"
    },
    {
      "name": "__CatchGuardHandler",
      "entry": "00420ada",
      "c": "\n/* Library Function - Single Match\n    __CatchGuardHandler\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl\n__CatchGuardHandler(EHExceptionRecord *param_1,EHRegistrationNode *param_2,_CONTEXT *param_3)\n\n{\n  FUN_0041fbbc(*(uint *)(param_2 + 8) ^ (uint)param_2);\n  __InternalCxxFrameHandler<class___FrameHandler3>\n            (param_1,*(EHRegistrationNode **)(param_2 + 0x10),param_3,(void *)0x0,\n             *(_s_FuncInfo **)(param_2 + 0xc),*(int *)(param_2 + 0x14),param_2,'\\0');\n  return;\n}\n\n"
    },
    {
      "name": "__CreateFrameInfo",
      "entry": "00420b0b",
      "c": "\n/* Library Function - Single Match\n    __CreateFrameInfo\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 * __cdecl __CreateFrameInfo(undefined4 *param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  *param_1 = param_2;\n  iVar1 = ___vcrt_getptd();\n  param_1[1] = *(undefined4 *)(iVar1 + 0x24);\n  iVar1 = ___vcrt_getptd();\n  *(undefined4 **)(iVar1 + 0x24) = param_1;\n  return param_1;\n}\n\n"
    },
    {
      "name": "__FindAndUnlinkFrame",
      "entry": "00420b2f",
      "c": "\n/* Library Function - Single Match\n    __FindAndUnlinkFrame\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl __FindAndUnlinkFrame(int param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  \n  iVar2 = ___vcrt_getptd();\n  if (param_1 == *(int *)(iVar2 + 0x24)) {\n    uVar1 = *(undefined4 *)(param_1 + 4);\n    iVar2 = ___vcrt_getptd();\n    *(undefined4 *)(iVar2 + 0x24) = uVar1;\n  }\n  else {\n    iVar2 = ___vcrt_getptd();\n    iVar2 = *(int *)(iVar2 + 0x24);\n    do {\n      piVar3 = (int *)(iVar2 + 4);\n      iVar2 = *piVar3;\n      if (iVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n        _abort();\n      }\n    } while (param_1 != iVar2);\n    *piVar3 = *(int *)(param_1 + 4);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__TranslatorGuardHandler",
      "entry": "00420b77",
      "c": "\n/* Library Function - Single Match\n    __TranslatorGuardHandler\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 __cdecl\n__TranslatorGuardHandler(EHExceptionRecord *param_1,EHRegistrationNode *param_2,_CONTEXT *param_3)\n\n{\n  undefined4 uVar1;\n  code *local_8;\n  \n  FUN_0041fbbc(*(uint *)(param_2 + 8) ^ (uint)param_2);\n  if ((*(uint *)(param_1 + 4) & 0x66) != 0) {\n    *(undefined4 *)(param_2 + 0x24) = 1;\n    return 1;\n  }\n  __InternalCxxFrameHandler<class___FrameHandler3>\n            (param_1,*(EHRegistrationNode **)(param_2 + 0x10),param_3,(void *)0x0,\n             *(_s_FuncInfo **)(param_2 + 0xc),*(int *)(param_2 + 0x14),\n             *(EHRegistrationNode **)(param_2 + 0x18),'\\x01');\n  if (*(int *)(param_2 + 0x24) == 0) {\n    _UnwindNestedFrames(param_2,param_1);\n  }\n  FUN_00420961((int *)0x123,&local_8,0,0,0,0,0);\n                    /* WARNING: Could not recover jumptable at 0x00420c0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar1 = (*local_8)();\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FID_conflict:___CxxFrameHandler3",
      "entry": "00420c14",
      "c": "\n/* Library Function - Multiple Matches With Different Base Names\n    ___CxxFrameHandler\n    ___CxxFrameHandler2\n    ___CxxFrameHandler3\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\n_EXCEPTION_DISPOSITION __cdecl\nFID_conflict____CxxFrameHandler3\n          (EHExceptionRecord *param_1,EHRegistrationNode *param_2,_CONTEXT *param_3,void *param_4)\n\n{\n  _s_FuncInfo *in_EAX;\n  _EXCEPTION_DISPOSITION _Var1;\n  \n  _Var1 = __InternalCxxFrameHandler<class___FrameHandler3>\n                    (param_1,param_2,param_3,param_4,in_EAX,0,(EHRegistrationNode *)0x0,'\\0');\n  return _Var1;\n}\n\n"
    },
    {
      "name": "FUN_00420c4a",
      "entry": "00420c4a",
      "c": "\nint __cdecl FUN_00420c4a(uint *param_1,uint *param_2,int param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  \n  if (param_3 == 0) {\n    return 0;\n  }\n  if (param_3 == 1) {\n    uVar3 = (uint)(byte)*param_1;\n    uVar1 = (uint)(byte)*param_2;\n  }\n  else if (param_3 == 2) {\n    iVar2 = (uint)(byte)*param_1 - (uint)(byte)*param_2;\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    uVar3 = (uint)*(byte *)((int)param_1 + 1);\n    uVar1 = (uint)*(byte *)((int)param_2 + 1);\n  }\n  else if (param_3 == 3) {\n    iVar2 = (uint)(byte)*param_1 - (uint)(byte)*param_2;\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 1) - (uint)*(byte *)((int)param_2 + 1);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    uVar3 = (uint)*(byte *)((int)param_1 + 2);\n    uVar1 = (uint)*(byte *)((int)param_2 + 2);\n  }\n  else {\n    if (param_3 != 4) {\nLAB_0042112c:\n      switch(param_3) {\n      case 0:\n        break;\n      case 1:\n        goto switchD_00421138_caseD_1;\n      case 2:\n        goto switchD_00421138_caseD_2;\n      case 3:\n        goto switchD_00421138_caseD_3;\n      case 4:\n        goto switchD_00421138_caseD_4;\n      case 5:\n        goto switchD_00421138_caseD_5;\n      case 6:\n        goto switchD_00421138_caseD_6;\n      case 7:\n        goto switchD_00421138_caseD_7;\n      case 8:\n        goto switchD_00421138_caseD_8;\n      case 9:\n        goto switchD_00421138_caseD_9;\n      case 10:\n        goto switchD_00421138_caseD_a;\n      case 0xb:\n        goto switchD_00421138_caseD_b;\n      case 0xc:\n        goto switchD_00421138_caseD_c;\n      case 0xd:\n        goto switchD_00421138_caseD_d;\n      case 0xe:\n        goto switchD_00421138_caseD_e;\n      case 0xf:\n        goto switchD_00421138_caseD_f;\n      case 0x10:\n        goto switchD_00421138_caseD_10;\n      case 0x11:\n        goto switchD_00421138_caseD_11;\n      case 0x12:\n        goto switchD_00421138_caseD_12;\n      case 0x13:\n        goto switchD_00421138_caseD_13;\n      case 0x14:\n        goto switchD_00421138_caseD_14;\n      case 0x15:\n        goto switchD_00421138_caseD_15;\n      case 0x16:\n        goto switchD_00421138_caseD_16;\n      case 0x17:\n        goto switchD_00421138_caseD_17;\n      case 0x1a:\n        goto switchD_00421138_caseD_1a;\n      case 0x1b:\n        goto switchD_00421138_caseD_1b;\n      case 0x1c:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x1c);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x1c)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x1c);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1b) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1b);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1a) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1a);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x19) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x19);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\n      case 0x18:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x18);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x18)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x18);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x17) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x17);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x16) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x16);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x15) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x15);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_14:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x14);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x14)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x14);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x13) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x13);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x12) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x12);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x11) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x11);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_10:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x10);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x10)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xf) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xf);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xe) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xe);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xd) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xd);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_c:\n        if (*(int *)((int)param_1 + param_3 + -0xc) != *(int *)((int)param_2 + param_3 + -0xc)) {\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xc) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xc);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xb) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xb);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -10) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -9) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -9);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_8:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -8);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -8)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -8);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -7) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -7);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -6) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -6);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -5) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -5);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_4:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -4);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -4)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -4);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -3) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -3);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -2) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -2);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -1) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -1);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\n        break;\n      case 0x1d:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x1d);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x1d)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x1d);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1c) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1c);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1b) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1b);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1a) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1a);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\n      case 0x19:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x19);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x19)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x19);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x18) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x18);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x17) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x17);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x16) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x16);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_15:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x15);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x15)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x15);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x14) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x14);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x13) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x13);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x12) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x12);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_11:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x11);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x11)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x11);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x10) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xf) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xf);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xe) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xe);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_d:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0xd);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0xd)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0xd);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xc) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xc);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xb) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xb);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -10) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_9:\n        if (*(int *)((int)param_1 + param_3 + -9) != *(int *)((int)param_2 + param_3 + -9)) {\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -9) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -9);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -8) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -8);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -7) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -7);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -6) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -6);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_5:\n        if (*(int *)((int)param_1 + param_3 + -5) != *(int *)((int)param_2 + param_3 + -5)) {\nLAB_004218aa:\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -5) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -5);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -4) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -4);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\nswitchD_00421138_caseD_3:\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -3) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -3);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\nLAB_00421910:\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -2) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -2);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_1:\n        uVar1 = (uint)*(byte *)((int)param_2 + param_3 + -1);\n        uVar3 = (uint)*(byte *)((int)param_1 + param_3 + -1);\n        if (uVar3 == uVar1) {\n          return 0;\n        }\n        return (uint)(0 < (int)(uVar3 - uVar1)) * 2 + -1;\n      case 0x1e:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x1e);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x1e)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x1e);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1d) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1d);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1c) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1c);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1b) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1b);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_1a:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x1a);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x1a)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x1a);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x19) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x19);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x18) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x18);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x17) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x17);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_16:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x16);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x16)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x16);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x15) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x15);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x14) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x14);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x13) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x13);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_12:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x12);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x12)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x12);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x11) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x11);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x10) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xf) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xf);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_e:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0xe);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0xe)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0xe);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xd) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xd);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xc) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xc);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xb) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xb);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_a:\n        if (*(int *)((int)param_1 + param_3 + -10) != *(int *)((int)param_2 + param_3 + -10)) {\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -10) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -9) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -9);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -8) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -8);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -7) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -7);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_6:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -6);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -6)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -6);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -5) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -5);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -4) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -4);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -3) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -3);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_2:\n        if (*(short *)((int)param_1 + param_3 + -2) != *(short *)((int)param_2 + param_3 + -2))\n        goto LAB_00421910;\n        break;\n      case 0x1f:\n        if (*(int *)((int)param_1 + param_3 + -0x1f) != *(int *)((int)param_2 + param_3 + -0x1f)) {\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1f) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1f);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1e) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1e);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1d) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1d);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1c) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1c);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_1b:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x1b);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x1b)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x1b);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x1a) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x1a);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x19) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x19);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x18) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x18);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_17:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x17);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x17)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x17);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x16) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x16);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x15) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x15);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x14) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x14);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_13:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0x13);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0x13)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0x13);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x12) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x12);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x11) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x11);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0x10) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0x10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_f:\n        if (*(int *)((int)param_1 + param_3 + -0xf) != *(int *)((int)param_2 + param_3 + -0xf)) {\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xf) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xf);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xe) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xe);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xd) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xd);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -0xc) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -0xc);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_b:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -0xb);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -0xb)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -0xb);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -10) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -10);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -9) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -9);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -8) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -8);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n        }\nswitchD_00421138_caseD_7:\n        uVar1 = *(uint *)((int)param_1 + param_3 + -7);\n        if (uVar1 != *(uint *)((int)param_2 + param_3 + -7)) {\n          iVar2 = (uVar1 & 0xff) - (uint)*(byte *)((int)param_2 + param_3 + -7);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          iVar2 = (uint)*(byte *)((int)param_1 + param_3 + -6) -\n                  (uint)*(byte *)((int)param_2 + param_3 + -6);\n          if (iVar2 != 0) {\n            iVar2 = (uint)(0 < iVar2) * 2 + -1;\n          }\n          if (iVar2 != 0) {\n            return iVar2;\n          }\n          goto LAB_004218aa;\n        }\n        goto switchD_00421138_caseD_3;\n      default:\n        goto switchD_00421138_default;\n      }\n      return 0;\n    }\n    iVar2 = (uint)(byte)*param_1 - (uint)(byte)*param_2;\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 1) - (uint)*(byte *)((int)param_2 + 1);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 2) - (uint)*(byte *)((int)param_2 + 2);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    uVar3 = (uint)*(byte *)((int)param_1 + 3);\n    uVar1 = (uint)*(byte *)((int)param_2 + 3);\n  }\n  if (uVar3 == uVar1) {\n    return 0;\n  }\n  return (uint)(0 < (int)(uVar3 - uVar1)) * 2 + -1;\nswitchD_00421138_default:\n  if (*param_1 != *param_2) {\n    iVar2 = (*param_1 & 0xff) - (uint)(byte)*param_2;\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 1) - (uint)*(byte *)((int)param_2 + 1);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 2) - (uint)*(byte *)((int)param_2 + 2);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 3) - (uint)*(byte *)((int)param_2 + 3);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  if (param_1[1] != param_2[1]) {\n    iVar2 = (param_1[1] & 0xff) - (uint)(byte)param_2[1];\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 5) - (uint)*(byte *)((int)param_2 + 5);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 6) - (uint)*(byte *)((int)param_2 + 6);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 7) - (uint)*(byte *)((int)param_2 + 7);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  if (param_1[2] != param_2[2]) {\n    iVar2 = (param_1[2] & 0xff) - (uint)(byte)param_2[2];\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 9) - (uint)*(byte *)((int)param_2 + 9);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 10) - (uint)*(byte *)((int)param_2 + 10);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0xb) - (uint)*(byte *)((int)param_2 + 0xb);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  if (param_1[3] != param_2[3]) {\n    iVar2 = (param_1[3] & 0xff) - (uint)(byte)param_2[3];\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0xd) - (uint)*(byte *)((int)param_2 + 0xd);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0xe) - (uint)*(byte *)((int)param_2 + 0xe);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0xf) - (uint)*(byte *)((int)param_2 + 0xf);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  if (param_1[4] != param_2[4]) {\n    iVar2 = (uint)(byte)param_1[4] - (uint)(byte)param_2[4];\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x11) - (uint)*(byte *)((int)param_2 + 0x11);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x12) - (uint)*(byte *)((int)param_2 + 0x12);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x13) - (uint)*(byte *)((int)param_2 + 0x13);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  if (param_1[5] != param_2[5]) {\n    iVar2 = (param_1[5] & 0xff) - (uint)(byte)param_2[5];\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x15) - (uint)*(byte *)((int)param_2 + 0x15);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x16) - (uint)*(byte *)((int)param_2 + 0x16);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x17) - (uint)*(byte *)((int)param_2 + 0x17);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  if (param_1[6] != param_2[6]) {\n    iVar2 = (param_1[6] & 0xff) - (uint)(byte)param_2[6];\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x19) - (uint)*(byte *)((int)param_2 + 0x19);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x1a) - (uint)*(byte *)((int)param_2 + 0x1a);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x1b) - (uint)*(byte *)((int)param_2 + 0x1b);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  if (param_1[7] != param_2[7]) {\n    iVar2 = (param_1[7] & 0xff) - (uint)(byte)param_2[7];\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x1d) - (uint)*(byte *)((int)param_2 + 0x1d);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x1e) - (uint)*(byte *)((int)param_2 + 0x1e);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n    iVar2 = (uint)*(byte *)((int)param_1 + 0x1f) - (uint)*(byte *)((int)param_2 + 0x1f);\n    if (iVar2 != 0) {\n      iVar2 = (uint)(0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 != 0) {\n      return iVar2;\n    }\n  }\n  param_1 = param_1 + 8;\n  param_2 = param_2 + 8;\n  param_3 = param_3 + -0x20;\n  goto LAB_0042112c;\n}\n\n"
    },
    {
      "name": "FUN_004222c6",
      "entry": "004222c6",
      "c": "\nushort * __cdecl FUN_004222c6(ushort *param_1,ushort param_2)\n\n{\n  int iVar1;\n  undefined1 auVar2 [16];\n  undefined1 auVar3 [16];\n  undefined1 auVar4 [16];\n  ushort uVar5;\n  ushort uVar6;\n  int iStack_34;\n  \n  if (0 < DAT_00461d20) {\n    auVar2 = pshuflw(ZEXT216(param_2),ZEXT216(param_2),0);\n    do {\n      if (((uint)param_1 & 0xfff) < 0xff1) {\n        auVar4._0_2_ = -(ushort)(*param_1 == 0);\n        auVar4._2_2_ = -(ushort)(param_1[1] == 0);\n        auVar4._4_2_ = -(ushort)(param_1[2] == 0);\n        auVar4._6_2_ = -(ushort)(param_1[3] == 0);\n        auVar4._8_2_ = -(ushort)(param_1[4] == 0);\n        auVar4._10_2_ = -(ushort)(param_1[5] == 0);\n        auVar4._12_2_ = -(ushort)(param_1[6] == 0);\n        auVar4._14_2_ = -(ushort)(param_1[7] == 0);\n        uVar5 = auVar2._0_2_;\n        auVar3._0_2_ = -(ushort)(*param_1 == uVar5);\n        uVar6 = auVar2._2_2_;\n        auVar3._2_2_ = -(ushort)(param_1[1] == uVar6);\n        auVar3._4_2_ = -(ushort)(param_1[2] == uVar5);\n        auVar3._6_2_ = -(ushort)(param_1[3] == uVar6);\n        auVar3._8_2_ = -(ushort)(param_1[4] == uVar5);\n        auVar3._10_2_ = -(ushort)(param_1[5] == uVar6);\n        auVar3._12_2_ = -(ushort)(param_1[6] == uVar5);\n        auVar3._14_2_ = -(ushort)(param_1[7] == uVar6);\n        auVar4 = auVar4 | auVar3;\n        uVar5 = (ushort)(SUB161(auVar4 >> 7,0) & 1) | (ushort)(SUB161(auVar4 >> 0xf,0) & 1) << 1 |\n                (ushort)(SUB161(auVar4 >> 0x17,0) & 1) << 2 |\n                (ushort)(SUB161(auVar4 >> 0x1f,0) & 1) << 3 |\n                (ushort)(SUB161(auVar4 >> 0x27,0) & 1) << 4 |\n                (ushort)(SUB161(auVar4 >> 0x2f,0) & 1) << 5 |\n                (ushort)(SUB161(auVar4 >> 0x37,0) & 1) << 6 |\n                (ushort)(SUB161(auVar4 >> 0x3f,0) & 1) << 7 |\n                (ushort)(SUB161(auVar4 >> 0x47,0) & 1) << 8 |\n                (ushort)(SUB161(auVar4 >> 0x4f,0) & 1) << 9 |\n                (ushort)(SUB161(auVar4 >> 0x57,0) & 1) << 10 |\n                (ushort)(SUB161(auVar4 >> 0x5f,0) & 1) << 0xb |\n                (ushort)(SUB161(auVar4 >> 0x67,0) & 1) << 0xc |\n                (ushort)(SUB161(auVar4 >> 0x6f,0) & 1) << 0xd |\n                (ushort)(SUB161(auVar4 >> 0x77,0) & 1) << 0xe |\n                (ushort)(byte)(auVar4[0xf] >> 7) << 0xf;\n        if (uVar5 != 0) goto LAB_00422373;\n        iStack_34 = 0x10;\n      }\n      else {\n        if (*param_1 == param_2) {\n          return param_1;\n        }\n        if (*param_1 == 0) {\n          return (ushort *)0x0;\n        }\n        iStack_34 = 2;\n      }\n      param_1 = (ushort *)((int)param_1 + iStack_34);\n    } while( true );\n  }\n  uVar5 = *param_1;\n  while ((uVar5 != 0 && (uVar5 != param_2))) {\n    param_1 = param_1 + 1;\n    uVar5 = *param_1;\n  }\nLAB_00422315:\n  return (ushort *)((uVar5 != param_2) - 1 & (uint)param_1);\nLAB_00422373:\n  iVar1 = 0;\n  if (uVar5 != 0) {\n    for (; (uVar5 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n    }\n  }\n  param_1 = (ushort *)((int)param_1 + iVar1);\n  uVar5 = *param_1;\n  goto LAB_00422315;\n}\n\n"
    },
    {
      "name": "__CxxThrowException@8",
      "entry": "0042238d",
      "c": "\n/* Library Function - Single Match\n    __CxxThrowException@8\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __CxxThrowException_8(int *param_1,byte *param_2)\n\n{\n  int iVar1;\n  code *pcVar2;\n  ULONG_PTR UVar3;\n  ULONG_PTR local_10;\n  int *local_c;\n  byte *local_8;\n  \n  UVar3 = 0x19930520;\n  if (param_2 != (byte *)0x0) {\n    if ((*param_2 & 0x10) != 0) {\n      iVar1 = *(int *)(*param_1 + -4);\n      pcVar2 = *(code **)(iVar1 + 0x20);\n      param_2 = *(byte **)(iVar1 + 0x18);\n      (*(code *)PTR_guard_check_icall_00433278)((int *)(*param_1 + -4));\n      (*pcVar2)();\n      if (param_2 == (byte *)0x0) goto LAB_004223d4;\n    }\n    if ((*param_2 & 8) != 0) {\n      UVar3 = 0x1994000;\n    }\n  }\nLAB_004223d4:\n  local_c = param_1;\n  local_10 = UVar3;\n  local_8 = param_2;\n  RaiseException(0xe06d7363,1,3,&local_10);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004223f9",
      "entry": "004223f9",
      "c": "\nundefined1 (*) [16] __cdecl FUN_004223f9(undefined1 (*param_1) [16],undefined1 (*param_2) [16])\n\n{\n  ushort uVar1;\n  uint uVar2;\n  int iVar3;\n  undefined1 (*pauVar4) [16];\n  ushort uVar5;\n  undefined1 (*pauVar6) [16];\n  undefined1 auVar7 [16];\n  undefined1 auVar8 [16];\n  undefined1 auVar9 [16];\n  undefined1 auVar10 [16];\n  undefined1 auVar11 [16];\n  undefined1 auVar12 [16];\n  short sVar13;\n  short sVar14;\n  int local_18;\n  \n  uVar1 = *(ushort *)*param_2;\n  if (uVar1 != 0) {\n    if (1 < DAT_00461d20) {\n      if (((uint)param_2 & 0xfff) < 0xff1) {\n        auVar7 = *param_2;\n      }\n      else {\n        iVar3 = 8;\n        pauVar4 = param_2;\n        auVar8 = (undefined1  [16])0x0;\n        uVar5 = uVar1;\n        do {\n          auVar7._0_8_ = auVar8._2_8_;\n          auVar7._8_8_ = auVar8._8_8_ >> 0x10 | (ulonglong)uVar5 << 0x30;\n          if (uVar5 != 0) {\n            pauVar4 = (undefined1 (*) [16])(*pauVar4 + 2);\n            uVar5 = *(ushort *)*pauVar4;\n          }\n          iVar3 = iVar3 + -1;\n          auVar8 = auVar7;\n        } while (iVar3 != 0);\n      }\nLAB_00422482:\n      while( true ) {\n        while( true ) {\n          uVar2 = (uint)param_1 & 0xfff;\n          pauVar4 = param_2;\n          if (uVar2 < 0xff1) break;\n          if (*(ushort *)*param_1 == 0) goto LAB_00422662;\n          pauVar6 = param_1;\n          if (*(ushort *)*param_1 == uVar1) goto LAB_004224b4;\n          param_1 = (undefined1 (*) [16])(*param_1 + 2);\n        }\n        pcmpistri(auVar7,*param_1,0xd);\n        if (uVar2 < 0xff1) break;\n        param_1 = param_1 + 1;\n      }\n      if (uVar2 < 0xff0) {\n        iVar3 = pcmpistri(auVar7,*param_1,0xd);\n        param_1 = (undefined1 (*) [16])(*param_1 + iVar3 * 2);\n        pauVar6 = param_1;\nLAB_004224b4:\n        do {\n          for (; 0xff0 < ((uint)param_1 & 0xfff); param_1 = (undefined1 (*) [16])(*param_1 + 2)) {\nLAB_00422502:\n            if (*(short *)*pauVar4 == 0) {\n              return pauVar6;\n            }\n            if (*(short *)*param_1 != *(short *)*pauVar4) goto LAB_0042251a;\n            pauVar4 = (undefined1 (*) [16])(*pauVar4 + 2);\n          }\n          uVar2 = (uint)pauVar4 & 0xfff;\n          if (0xff0 < uVar2) goto LAB_00422502;\n          pcmpistri(*pauVar4,*param_1,0xd);\n          if (!SBORROW4(uVar2,0xff0)) goto LAB_0042251a;\n          if ((int)(uVar2 - 0xff0) < 0) {\n            return pauVar6;\n          }\n          param_1 = param_1 + 1;\n          pauVar4 = pauVar4 + 1;\n        } while( true );\n      }\n      goto LAB_00422662;\n    }\n    if (DAT_00461d20 == 1) {\n      auVar8 = pshuflw(ZEXT216(uVar1),ZEXT216(uVar1),0);\nLAB_00422549:\n      for (; ((uint)param_1 & 0xfff) < 0xff1; param_1 = param_1 + 1) {\n        auVar9._0_2_ = -(ushort)(*(short *)*param_1 == 0);\n        auVar9._2_2_ = -(ushort)(*(short *)(*param_1 + 2) == 0);\n        auVar9._4_2_ = -(ushort)(*(short *)(*param_1 + 4) == 0);\n        auVar9._6_2_ = -(ushort)(*(short *)(*param_1 + 6) == 0);\n        auVar9._8_2_ = -(ushort)(*(short *)(*param_1 + 8) == 0);\n        auVar9._10_2_ = -(ushort)(*(short *)(*param_1 + 10) == 0);\n        auVar9._12_2_ = -(ushort)(*(short *)(*param_1 + 0xc) == 0);\n        auVar9._14_2_ = -(ushort)(*(short *)(*param_1 + 0xe) == 0);\n        sVar13 = auVar8._0_2_;\n        auVar11._0_2_ = -(ushort)(*(short *)*param_1 == sVar13);\n        sVar14 = auVar8._2_2_;\n        auVar11._2_2_ = -(ushort)(*(short *)(*param_1 + 2) == sVar14);\n        auVar11._4_2_ = -(ushort)(*(short *)(*param_1 + 4) == sVar13);\n        auVar11._6_2_ = -(ushort)(*(short *)(*param_1 + 6) == sVar14);\n        auVar11._8_2_ = -(ushort)(*(short *)(*param_1 + 8) == sVar13);\n        auVar11._10_2_ = -(ushort)(*(short *)(*param_1 + 10) == sVar14);\n        auVar11._12_2_ = -(ushort)(*(short *)(*param_1 + 0xc) == sVar13);\n        auVar11._14_2_ = -(ushort)(*(short *)(*param_1 + 0xe) == sVar14);\n        auVar9 = auVar9 | auVar11;\n        uVar5 = (ushort)(SUB161(auVar9 >> 7,0) & 1) | (ushort)(SUB161(auVar9 >> 0xf,0) & 1) << 1 |\n                (ushort)(SUB161(auVar9 >> 0x17,0) & 1) << 2 |\n                (ushort)(SUB161(auVar9 >> 0x1f,0) & 1) << 3 |\n                (ushort)(SUB161(auVar9 >> 0x27,0) & 1) << 4 |\n                (ushort)(SUB161(auVar9 >> 0x2f,0) & 1) << 5 |\n                (ushort)(SUB161(auVar9 >> 0x37,0) & 1) << 6 |\n                (ushort)(SUB161(auVar9 >> 0x3f,0) & 1) << 7 |\n                (ushort)(SUB161(auVar9 >> 0x47,0) & 1) << 8 |\n                (ushort)(SUB161(auVar9 >> 0x4f,0) & 1) << 9 |\n                (ushort)(SUB161(auVar9 >> 0x57,0) & 1) << 10 |\n                (ushort)(SUB161(auVar9 >> 0x5f,0) & 1) << 0xb |\n                (ushort)(SUB161(auVar9 >> 0x67,0) & 1) << 0xc |\n                (ushort)(SUB161(auVar9 >> 0x6f,0) & 1) << 0xd |\n                (ushort)(SUB161(auVar9 >> 0x77,0) & 1) << 0xe |\n                (ushort)(byte)(auVar9[0xf] >> 7) << 0xf;\n        if (uVar5 != 0) {\n          uVar2 = 0;\n          if (uVar5 != 0) {\n            for (; (uVar5 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n            }\n          }\n          param_1 = (undefined1 (*) [16])(*param_1 + (uVar2 & 0xfffffffe));\n          break;\n        }\n      }\n      if (*(ushort *)*param_1 != 0) {\n        pauVar4 = param_1;\n        pauVar6 = param_2;\n        if (uVar1 == *(ushort *)*param_1) {\nLAB_00422596:\n          for (; (((uint)pauVar6 & 0xfff) < 0xff1 && (((uint)pauVar4 & 0xfff) < 0xff1));\n              pauVar4 = pauVar4 + 1) {\n            auVar10._0_2_ = -(ushort)(*(short *)*pauVar6 == 0);\n            auVar10._2_2_ = -(ushort)(*(short *)(*pauVar6 + 2) == 0);\n            auVar10._4_2_ = -(ushort)(*(short *)(*pauVar6 + 4) == 0);\n            auVar10._6_2_ = -(ushort)(*(short *)(*pauVar6 + 6) == 0);\n            auVar10._8_2_ = -(ushort)(*(short *)(*pauVar6 + 8) == 0);\n            auVar10._10_2_ = -(ushort)(*(short *)(*pauVar6 + 10) == 0);\n            auVar10._12_2_ = -(ushort)(*(short *)(*pauVar6 + 0xc) == 0);\n            auVar10._14_2_ = -(ushort)(*(short *)(*pauVar6 + 0xe) == 0);\n            auVar12._0_2_ = -(ushort)(*(short *)*pauVar4 != *(short *)*pauVar6);\n            auVar12._2_2_ = -(ushort)(*(short *)(*pauVar4 + 2) != *(short *)(*pauVar6 + 2));\n            auVar12._4_2_ = -(ushort)(*(short *)(*pauVar4 + 4) != *(short *)(*pauVar6 + 4));\n            auVar12._6_2_ = -(ushort)(*(short *)(*pauVar4 + 6) != *(short *)(*pauVar6 + 6));\n            auVar12._8_2_ = -(ushort)(*(short *)(*pauVar4 + 8) != *(short *)(*pauVar6 + 8));\n            auVar12._10_2_ = -(ushort)(*(short *)(*pauVar4 + 10) != *(short *)(*pauVar6 + 10));\n            auVar12._12_2_ = -(ushort)(*(short *)(*pauVar4 + 0xc) != *(short *)(*pauVar6 + 0xc));\n            auVar12._14_2_ = -(ushort)(*(short *)(*pauVar4 + 0xe) != *(short *)(*pauVar6 + 0xe));\n            auVar12 = auVar12 | auVar10;\n            uVar5 = (ushort)(SUB161(auVar12 >> 7,0) & 1) |\n                    (ushort)(SUB161(auVar12 >> 0xf,0) & 1) << 1 |\n                    (ushort)(SUB161(auVar12 >> 0x17,0) & 1) << 2 |\n                    (ushort)(SUB161(auVar12 >> 0x1f,0) & 1) << 3 |\n                    (ushort)(SUB161(auVar12 >> 0x27,0) & 1) << 4 |\n                    (ushort)(SUB161(auVar12 >> 0x2f,0) & 1) << 5 |\n                    (ushort)(SUB161(auVar12 >> 0x37,0) & 1) << 6 |\n                    (ushort)(SUB161(auVar12 >> 0x3f,0) & 1) << 7 |\n                    (ushort)(SUB161(auVar12 >> 0x47,0) & 1) << 8 |\n                    (ushort)(SUB161(auVar12 >> 0x4f,0) & 1) << 9 |\n                    (ushort)(SUB161(auVar12 >> 0x57,0) & 1) << 10 |\n                    (ushort)(SUB161(auVar12 >> 0x5f,0) & 1) << 0xb |\n                    (ushort)(SUB161(auVar12 >> 0x67,0) & 1) << 0xc |\n                    (ushort)(SUB161(auVar12 >> 0x6f,0) & 1) << 0xd |\n                    (ushort)(SUB161(auVar12 >> 0x77,0) & 1) << 0xe |\n                    (ushort)(byte)(auVar12[0xf] >> 7) << 0xf;\n            if (uVar5 != 0) {\n              uVar2 = 0;\n              if (uVar5 != 0) {\n                for (; (uVar5 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n              }\n              pauVar4 = (undefined1 (*) [16])(*pauVar4 + (uVar2 & 0xfffffffe));\n              pauVar6 = (undefined1 (*) [16])(*pauVar6 + (uVar2 & 0xfffffffe));\n              break;\n            }\n            pauVar6 = pauVar6 + 1;\n          }\n          if (*(short *)*pauVar6 == 0) {\n            return param_1;\n          }\n          if (*(short *)*pauVar4 == *(short *)*pauVar6) {\n            pauVar4 = (undefined1 (*) [16])(*pauVar4 + 2);\n            pauVar6 = (undefined1 (*) [16])(*pauVar6 + 2);\n            goto LAB_00422596;\n          }\n        }\n        param_1 = (undefined1 (*) [16])(*param_1 + 2);\n        goto LAB_00422549;\n      }\n    }\n    else if (*(short *)*param_1 != 0) {\n      local_18 = (int)param_1 - (int)param_2;\n      pauVar4 = param_2;\n      do {\n        do {\n          if (*(short *)*pauVar4 == 0) {\n            return param_1;\n          }\n        } while ((*(short *)(*pauVar4 + local_18) == *(short *)*pauVar4) &&\n                (pauVar4 = (undefined1 (*) [16])(*pauVar4 + 2), *(short *)(*pauVar4 + local_18) != 0\n                ));\n        if (*(short *)*pauVar4 == 0) {\n          return param_1;\n        }\n        param_1 = (undefined1 (*) [16])(*param_1 + 2);\n        local_18 = local_18 + 2;\n        pauVar4 = param_2;\n      } while (*(short *)*param_1 != 0);\n    }\nLAB_00422662:\n    param_1 = (undefined1 (*) [16])0x0;\n  }\n  return param_1;\nLAB_0042251a:\n  param_1 = (undefined1 (*) [16])(*pauVar6 + 2);\n  goto LAB_00422482;\n}\n\n"
    },
    {
      "name": "FUN_00422670",
      "entry": "00422670",
      "c": "\nuint * __cdecl FUN_00422670(uint *param_1,char param_2)\n\n{\n  int iVar1;\n  char cVar2;\n  uint uVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint uVar6;\n  char *pcVar7;\n  undefined1 auVar8 [16];\n  undefined1 auVar9 [16];\n  undefined1 auVar10 [16];\n  \n  if (DAT_00461d20 != 0) {\n    auVar10 = pshuflw(ZEXT216(CONCAT11(param_2,param_2)),ZEXT216(CONCAT11(param_2,param_2)),0);\n    uVar3 = -1 << (sbyte)((uint)param_1 & 0xf);\n    pcVar7 = (char *)((int)param_1 - ((uint)param_1 & 0xf));\n    while( true ) {\n      auVar9[0] = -(*pcVar7 == '\\0');\n      auVar9[1] = -(pcVar7[1] == '\\0');\n      auVar9[2] = -(pcVar7[2] == '\\0');\n      auVar9[3] = -(pcVar7[3] == '\\0');\n      auVar9[4] = -(pcVar7[4] == '\\0');\n      auVar9[5] = -(pcVar7[5] == '\\0');\n      auVar9[6] = -(pcVar7[6] == '\\0');\n      auVar9[7] = -(pcVar7[7] == '\\0');\n      auVar9[8] = -(pcVar7[8] == '\\0');\n      auVar9[9] = -(pcVar7[9] == '\\0');\n      auVar9[10] = -(pcVar7[10] == '\\0');\n      auVar9[0xb] = -(pcVar7[0xb] == '\\0');\n      auVar9[0xc] = -(pcVar7[0xc] == '\\0');\n      auVar9[0xd] = -(pcVar7[0xd] == '\\0');\n      auVar9[0xe] = -(pcVar7[0xe] == '\\0');\n      auVar9[0xf] = -(pcVar7[0xf] == '\\0');\n      cVar2 = auVar10[0];\n      auVar8[0] = -(*pcVar7 == cVar2);\n      auVar8[1] = -(pcVar7[1] == auVar10[1]);\n      auVar8[2] = -(pcVar7[2] == auVar10[2]);\n      auVar8[3] = -(pcVar7[3] == auVar10[3]);\n      auVar8[4] = -(pcVar7[4] == auVar10[4]);\n      auVar8[5] = -(pcVar7[5] == auVar10[5]);\n      auVar8[6] = -(pcVar7[6] == auVar10[6]);\n      auVar8[7] = -(pcVar7[7] == auVar10[7]);\n      auVar8[8] = -(pcVar7[8] == cVar2);\n      auVar8[9] = -(pcVar7[9] == auVar10[1]);\n      auVar8[10] = -(pcVar7[10] == auVar10[2]);\n      auVar8[0xb] = -(pcVar7[0xb] == auVar10[3]);\n      auVar8[0xc] = -(pcVar7[0xc] == auVar10[4]);\n      auVar8[0xd] = -(pcVar7[0xd] == auVar10[5]);\n      auVar8[0xe] = -(pcVar7[0xe] == auVar10[6]);\n      auVar8[0xf] = -(pcVar7[0xf] == auVar10[7]);\n      auVar9 = auVar9 | auVar8;\n      uVar3 = (ushort)((ushort)(SUB161(auVar9 >> 7,0) & 1) |\n                       (ushort)(SUB161(auVar9 >> 0xf,0) & 1) << 1 |\n                       (ushort)(SUB161(auVar9 >> 0x17,0) & 1) << 2 |\n                       (ushort)(SUB161(auVar9 >> 0x1f,0) & 1) << 3 |\n                       (ushort)(SUB161(auVar9 >> 0x27,0) & 1) << 4 |\n                       (ushort)(SUB161(auVar9 >> 0x2f,0) & 1) << 5 |\n                       (ushort)(SUB161(auVar9 >> 0x37,0) & 1) << 6 |\n                       (ushort)(SUB161(auVar9 >> 0x3f,0) & 1) << 7 |\n                       (ushort)(SUB161(auVar9 >> 0x47,0) & 1) << 8 |\n                       (ushort)(SUB161(auVar9 >> 0x4f,0) & 1) << 9 |\n                       (ushort)(SUB161(auVar9 >> 0x57,0) & 1) << 10 |\n                       (ushort)(SUB161(auVar9 >> 0x5f,0) & 1) << 0xb |\n                       (ushort)(SUB161(auVar9 >> 0x67,0) & 1) << 0xc |\n                       (ushort)(SUB161(auVar9 >> 0x6f,0) & 1) << 0xd |\n                       (ushort)(SUB161(auVar9 >> 0x77,0) & 1) << 0xe |\n                      (ushort)(byte)(auVar9[0xf] >> 7) << 0xf) & uVar3;\n      if (uVar3 != 0) break;\n      uVar3 = 0xffffffff;\n      pcVar7 = pcVar7 + 0x10;\n    }\n    iVar1 = 0;\n    if (uVar3 != 0) {\n      for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n      }\n    }\n    puVar4 = (uint *)(pcVar7 + iVar1);\n    if (cVar2 != (char)*puVar4) {\n      puVar4 = (uint *)0x0;\n    }\n    return puVar4;\n  }\n  uVar3 = (uint)param_1 & 3;\n  while (uVar3 != 0) {\n    if ((char)*param_1 == param_2) {\n      return param_1;\n    }\n    if ((char)*param_1 == '\\0') {\n      return (uint *)0x0;\n    }\n    uVar3 = (uint)((int)param_1 + 1) & 3;\n    param_1 = (uint *)((int)param_1 + 1);\n  }\n  while( true ) {\n    while( true ) {\n      uVar3 = *param_1;\n      uVar6 = uVar3 ^ CONCAT22(CONCAT11(param_2,param_2),CONCAT11(param_2,param_2));\n      uVar5 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;\n      puVar4 = param_1 + 1;\n      if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n      param_1 = puVar4;\n      if ((uVar5 & 0x81010100) != 0) {\n        if ((uVar5 & 0x1010100) != 0) {\n          return (uint *)0x0;\n        }\n        if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {\n          return (uint *)0x0;\n        }\n      }\n    }\n    uVar3 = *param_1;\n    if ((char)uVar3 == param_2) {\n      return param_1;\n    }\n    if ((char)uVar3 == '\\0') {\n      return (uint *)0x0;\n    }\n    cVar2 = (char)(uVar3 >> 8);\n    if (cVar2 == param_2) {\n      return (uint *)((int)param_1 + 1);\n    }\n    if (cVar2 == '\\0') break;\n    cVar2 = (char)(uVar3 >> 0x10);\n    if (cVar2 == param_2) {\n      return (uint *)((int)param_1 + 2);\n    }\n    if (cVar2 == '\\0') {\n      return (uint *)0x0;\n    }\n    cVar2 = (char)(uVar3 >> 0x18);\n    if (cVar2 == param_2) {\n      return (uint *)((int)param_1 + 3);\n    }\n    param_1 = puVar4;\n    if (cVar2 == '\\0') {\n      return (uint *)0x0;\n    }\n  }\n  return (uint *)0x0;\n}\n\n"
    },
    {
      "name": "FUN_0042279b",
      "entry": "0042279b",
      "c": "\nundefined1 (*) [16] __cdecl FUN_0042279b(undefined1 (*param_1) [16],ushort param_2)\n\n{\n  undefined1 *puVar1;\n  undefined1 (*pauVar2) [16];\n  int iVar3;\n  undefined1 (*pauVar4) [16];\n  bool bVar5;\n  bool bVar6;\n  \n  pauVar4 = (undefined1 (*) [16])0x0;\n  pauVar2 = param_1;\n  if (DAT_00461d20 < 2) {\n    do {\n      puVar1 = *pauVar2;\n      pauVar4 = (undefined1 (*) [16])(*pauVar2 + 2);\n      pauVar2 = pauVar4;\n    } while (*(short *)puVar1 != 0);\n    do {\n      pauVar4 = (undefined1 (*) [16])(pauVar4[-1] + 0xe);\n      if (pauVar4 == param_1) break;\n    } while (*(ushort *)*pauVar4 != param_2);\n    if (*(ushort *)*pauVar4 != param_2) {\n      pauVar4 = (undefined1 (*) [16])0x0;\n    }\n  }\n  else {\n    for (; ((uint)(*param_1 + 1) & 0xe) != 0; param_1 = (undefined1 (*) [16])(*param_1 + 2)) {\n      if (*(ushort *)*param_1 == param_2) {\n        pauVar4 = param_1;\n      }\n      if (*(ushort *)*param_1 == 0) {\n        return pauVar4;\n      }\n    }\n    bVar5 = param_2 != 0;\n    bVar6 = param_2 == 0;\n    if (bVar6) {\n      while (iVar3 = pcmpistri(ZEXT416(0xffff0001),*param_1,0x15), !bVar6) {\n        param_1 = param_1 + 1;\n        bVar6 = param_1 == (undefined1 (*) [16])0x0;\n      }\n      pauVar4 = (undefined1 (*) [16])(*param_1 + iVar3 * 2);\n    }\n    else {\n      while( true ) {\n        iVar3 = pcmpistri(ZEXT216(param_2),*param_1,0x41);\n        if (bVar5) {\n          pauVar4 = (undefined1 (*) [16])(*param_1 + iVar3 * 2);\n        }\n        if (bVar6) break;\n        bVar5 = (undefined1 (*) [16])0xffffffef < param_1;\n        param_1 = param_1 + 1;\n        bVar6 = param_1 == (undefined1 (*) [16])0x0;\n      }\n    }\n  }\n  return pauVar4;\n}\n\n"
    },
    {
      "name": "___std_exception_copy",
      "entry": "0042283c",
      "c": "\n/* Library Function - Single Match\n    ___std_exception_copy\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___std_exception_copy(undefined4 *param_1,undefined4 *param_2)\n\n{\n  char *pcVar1;\n  char cVar2;\n  char *_Dst;\n  char *pcVar3;\n  char *_Memory;\n  \n  if ((*(char *)(param_1 + 1) == '\\0') || (pcVar3 = (char *)*param_1, pcVar3 == (char *)0x0)) {\n    *param_2 = *param_1;\n    *(undefined1 *)(param_2 + 1) = 0;\n  }\n  else {\n    pcVar1 = pcVar3 + 1;\n    do {\n      cVar2 = *pcVar3;\n      pcVar3 = pcVar3 + 1;\n    } while (cVar2 != '\\0');\n    _Dst = (char *)FUN_00423e33((size_t)(pcVar3 + (1 - (int)pcVar1)));\n    _Memory = _Dst;\n    if (_Dst != (char *)0x0) {\n      _strcpy_s(_Dst,(rsize_t)(pcVar3 + (1 - (int)pcVar1)),(char *)*param_1);\n      _Memory = (char *)0x0;\n      *param_2 = _Dst;\n      *(undefined1 *)(param_2 + 1) = 1;\n    }\n    FID_conflict__free(_Memory);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___std_exception_destroy",
      "entry": "0042289f",
      "c": "\n/* Library Function - Single Match\n    ___std_exception_destroy\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___std_exception_destroy(undefined4 *param_1)\n\n{\n  if (*(char *)(param_1 + 1) != '\\0') {\n    FID_conflict__free((void *)*param_1);\n  }\n  *param_1 = 0;\n  *(undefined1 *)(param_1 + 1) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "_ValidateLocalCookies",
      "entry": "004228c0",
      "c": "\n/* Library Function - Single Match\n    _ValidateLocalCookies\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl _ValidateLocalCookies(int *param_1,int param_2)\n\n{\n  if (*param_1 != -2) {\n    FUN_0041fbbc(param_1[1] + param_2 ^ *(uint *)(*param_1 + param_2));\n  }\n  FUN_0041fbbc(param_1[3] + param_2 ^ *(uint *)(param_1[2] + param_2));\n  return;\n}\n\n"
    },
    {
      "name": "__except_handler4",
      "entry": "00422900",
      "c": "\n/* Library Function - Single Match\n    __except_handler4\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 __cdecl __except_handler4(PEXCEPTION_RECORD param_1,PVOID param_2,int param_3)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  undefined *puVar3;\n  DWORD DVar4;\n  int iVar5;\n  BOOL BVar6;\n  undefined4 uVar7;\n  int iVar8;\n  uint uVar9;\n  PEXCEPTION_RECORD local_20;\n  int local_1c;\n  int *local_18;\n  int local_14;\n  undefined4 local_10;\n  int *local_c;\n  char local_5;\n  \n  local_5 = '\\0';\n  local_10 = 1;\n  DVar4 = __filter_x86_sse2_floating_point_exception_default(param_1->ExceptionCode);\n  param_1->ExceptionCode = DVar4;\n  iVar8 = (int)param_2 + 0x10;\n  local_c = (int *)(*(uint *)((int)param_2 + 8) ^ DAT_0043e7ac);\n  local_14 = iVar8;\n  _ValidateLocalCookies(local_c,iVar8);\n  ___except_validate_context_record(param_3);\n  uVar9 = *(uint *)((int)param_2 + 0xc);\n  if ((param_1->ExceptionFlags & 0x66) == 0) {\n    local_20 = param_1;\n    local_1c = param_3;\n    *(PEXCEPTION_RECORD **)((int)param_2 + -4) = &local_20;\n    if (uVar9 == 0xfffffffe) {\n      return local_10;\n    }\n    do {\n      iVar5 = uVar9 * 3 + 4;\n      uVar1 = local_c[iVar5];\n      local_18 = local_c + iVar5;\n      if ((undefined *)local_18[1] != (undefined *)0x0) {\n        iVar5 = _EH4_CallFilterFunc((undefined *)local_18[1]);\n        local_5 = '\\x01';\n        if (iVar5 < 0) {\n          local_10 = 0;\n          goto LAB_004229c4;\n        }\n        if (0 < iVar5) {\n          if (((param_1->ExceptionCode == 0xe06d7363) &&\n              (PTR____DestructExceptionObject_004358dc != (undefined *)0x0)) &&\n             (BVar6 = __IsNonwritableInCurrentImage((PBYTE)&PTR____DestructExceptionObject_004358dc)\n             , puVar3 = PTR____DestructExceptionObject_004358dc, BVar6 != 0)) {\n            (*(code *)PTR_guard_check_icall_00433278)(param_1,1);\n            (*(code *)puVar3)();\n            iVar8 = local_14;\n          }\n          _EH4_GlobalUnwind2(param_2,param_1);\n          if (*(uint *)((int)param_2 + 0xc) != uVar9) {\n            _EH4_LocalUnwind((int)param_2,uVar9,iVar8,&DAT_0043e7ac);\n          }\n          *(uint *)((int)param_2 + 0xc) = uVar1;\n          _ValidateLocalCookies(local_c,iVar8);\n          _EH4_TransferToHandler((undefined *)local_18[2]);\n          pcVar2 = (code *)swi(3);\n          uVar7 = (*pcVar2)();\n          return uVar7;\n        }\n      }\n      uVar9 = uVar1;\n    } while (uVar1 != 0xfffffffe);\n    if (local_5 == '\\0') {\n      return local_10;\n    }\n  }\n  else {\n    if (uVar9 == 0xfffffffe) {\n      return local_10;\n    }\n    _EH4_LocalUnwind((int)param_2,0xfffffffe,iVar8,&DAT_0043e7ac);\n  }\nLAB_004229c4:\n  _ValidateLocalCookies(local_c,iVar8);\n  return local_10;\n}\n\n"
    },
    {
      "name": "___vcrt_initialize",
      "entry": "00422a5e",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_initialize\n   \n   Library: Visual Studio 2019 Release */\n\nuint ___vcrt_initialize(void)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  \n  uVar1 = ___vcrt_initialize_locks();\n  if ((char)uVar1 != '\\0') {\n    uVar2 = ___vcrt_initialize_ptd();\n    if ((char)uVar2 != '\\0') {\n      return CONCAT31((int3)((uint)uVar2 >> 8),1);\n    }\n    uVar1 = ___vcrt_uninitialize_locks();\n  }\n  return uVar1 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "___vcrt_uninitialize",
      "entry": "00422a7d",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_uninitialize\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 __cdecl ___vcrt_uninitialize(char param_1)\n\n{\n  undefined4 in_EAX;\n  \n  if (param_1 == '\\0') {\n    ___vcrt_uninitialize_ptd();\n    in_EAX = ___vcrt_uninitialize_locks();\n  }\n  return CONCAT31((int3)((uint)in_EAX >> 8),1);\n}\n\n"
    },
    {
      "name": "___std_type_info_compare",
      "entry": "00422a94",
      "c": "\n/* Library Function - Single Match\n    ___std_type_info_compare\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nuint __cdecl ___std_type_info_compare(int param_1,int param_2)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  byte *pbVar3;\n  bool bVar4;\n  \n  if (param_1 != param_2) {\n    pbVar3 = (byte *)(param_2 + 5);\n    pbVar2 = (byte *)(param_1 + 5);\n    do {\n      bVar1 = *pbVar2;\n      bVar4 = bVar1 < *pbVar3;\n      if (bVar1 != *pbVar3) {\nLAB_00422ac9:\n        return -(uint)bVar4 | 1;\n      }\n      if (bVar1 == 0) {\n        return 0;\n      }\n      bVar1 = pbVar2[1];\n      bVar4 = bVar1 < pbVar3[1];\n      if (bVar1 != pbVar3[1]) goto LAB_00422ac9;\n      pbVar2 = pbVar2 + 2;\n      pbVar3 = pbVar3 + 2;\n    } while (bVar1 != 0);\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00422ad0",
      "entry": "00422ad0",
      "c": "\nvoid FUN_00422ad0(undefined *param_1)\n\n{\n  if ((param_1 != (undefined *)0x0) && (param_1 != &DAT_00462060)) {\n    FID_conflict__free(param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___vcrt_getptd",
      "entry": "00422aec",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_getptd\n   \n   Library: Visual Studio 2019 Release */\n\nvoid ___vcrt_getptd(void)\n\n{\n  code *pcVar1;\n  LPVOID pvVar2;\n  int iVar3;\n  BOOL BVar4;\n  \n  pvVar2 = ___vcrt_getptd_noexit();\n  if (pvVar2 != (LPVOID)0x0) {\n    return;\n  }\n  iVar3 = ___acrt_get_sigabrt_handler();\n  if (iVar3 != 0) {\n    _raise(0x16);\n  }\n  if ((DAT_0043e7f0 & 2) != 0) {\n    BVar4 = IsProcessorFeaturePresent(0x17);\n    if (BVar4 != 0) {\n      pcVar1 = (code *)swi(0x29);\n      (*pcVar1)();\n    }\n    ___acrt_call_reportfault(3,0x40000015,1);\n  }\n  __exit(3);\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "___vcrt_getptd_noexit",
      "entry": "00422afa",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_getptd_noexit\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nLPVOID ___vcrt_getptd_noexit(void)\n\n{\n  DWORD dwErrCode;\n  LPVOID pvVar1;\n  int iVar2;\n  LPVOID pvVar3;\n  LPVOID _Memory;\n  \n  if (DAT_0043e7d0 == 0xffffffff) {\n    return (LPVOID)0x0;\n  }\n  dwErrCode = GetLastError();\n  pvVar1 = (LPVOID)___vcrt_FlsGetValue(DAT_0043e7d0);\n  if (pvVar1 == (LPVOID)0xffffffff) {\nLAB_00422b3a:\n    pvVar1 = (LPVOID)0x0;\n    goto LAB_00422b80;\n  }\n  if (pvVar1 != (LPVOID)0x0) goto LAB_00422b80;\n  iVar2 = ___vcrt_FlsSetValue(DAT_0043e7d0,(LPVOID)0xffffffff);\n  if (iVar2 == 0) goto LAB_00422b3a;\n  pvVar3 = (LPVOID)FUN_00428dc1(1,0x28);\n  if (pvVar3 == (LPVOID)0x0) {\nLAB_00422b62:\n    ___vcrt_FlsSetValue(DAT_0043e7d0,(LPVOID)0x0);\n    pvVar1 = (LPVOID)0x0;\n    _Memory = pvVar3;\n  }\n  else {\n    iVar2 = ___vcrt_FlsSetValue(DAT_0043e7d0,pvVar3);\n    if (iVar2 == 0) goto LAB_00422b62;\n    _Memory = (void *)0x0;\n    pvVar1 = pvVar3;\n  }\n  FID_conflict__free(_Memory);\nLAB_00422b80:\n  SetLastError(dwErrCode);\n  return pvVar1;\n}\n\n"
    },
    {
      "name": "___vcrt_initialize_ptd",
      "entry": "00422b8c",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_initialize_ptd\n   \n   Library: Visual Studio 2019 Release */\n\nuint ___vcrt_initialize_ptd(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = ___vcrt_FlsAlloc(FUN_00422ad0);\n  DAT_0043e7d0 = uVar1;\n  if (uVar1 != 0xffffffff) {\n    iVar2 = ___vcrt_FlsSetValue(uVar1,&DAT_00462060);\n    if (iVar2 != 0) {\n      return CONCAT31((int3)((uint)iVar2 >> 8),1);\n    }\n    uVar1 = ___vcrt_uninitialize_ptd();\n  }\n  return uVar1 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "___vcrt_uninitialize_ptd",
      "entry": "00422bbf",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_uninitialize_ptd\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 ___vcrt_uninitialize_ptd(void)\n\n{\n  DWORD DVar1;\n  \n  DVar1 = DAT_0043e7d0;\n  if (DAT_0043e7d0 != 0xffffffff) {\n    DVar1 = ___vcrt_FlsFree(DAT_0043e7d0);\n    DAT_0043e7d0 = 0xffffffff;\n  }\n  return CONCAT31((int3)(DVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "BuildCatchObjectHelperInternal<class___FrameHandler3>",
      "entry": "00422bda",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    int __cdecl BuildCatchObjectHelperInternal<class __FrameHandler3>(struct EHExceptionRecord\n   *,void *,struct _s_HandlerType const *,struct _s_CatchableType const *)\n   \n   Library: Visual Studio 2019 Release */\n\nint __cdecl\nBuildCatchObjectHelperInternal<class___FrameHandler3>\n          (EHExceptionRecord *param_1,void *param_2,_s_HandlerType *param_3,\n          _s_CatchableType *param_4)\n\n{\n  int iVar1;\n  code *pcVar2;\n  uint uVar3;\n  uint *puVar4;\n  void *local_14;\n  \n  pcVar2 = DAT_0046205c;\n  if (((param_3->pType == (TypeDescriptor *)0x0) || (*(char *)&param_3->pType[1].pVFTable == '\\0'))\n     || ((param_3->dispCatchObj == 0 && (-1 < (int)param_3->adjectives)))) {\n    ExceptionList = local_14;\n    return 0;\n  }\n  uVar3 = param_3->adjectives;\n  if (-1 < (int)uVar3) {\n    param_2 = (void *)((int)param_2 + param_3->dispCatchObj + 0xc);\n  }\n  if ((((char)uVar3 < '\\0') && (((byte)*param_4 & 0x10) != 0)) && (DAT_0046205c != (code *)0x0)) {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    uVar3 = (*pcVar2)();\n  }\n  else {\n    if ((uVar3 & 8) == 0) {\n      if (((byte)*param_4 & 1) == 0) {\n        iVar1 = *(int *)(param_1 + 0x18);\n        if (*(int *)(param_4 + 0x18) == 0) {\n          if ((iVar1 != 0) && ((uint *)param_2 != (uint *)0x0)) {\n            uVar3 = *(uint *)(param_4 + 0x14);\n            puVar4 = (uint *)___AdjustPointer(iVar1,(int *)(param_4 + 8));\n            FUN_00420320((uint *)param_2,puVar4,uVar3);\n            ExceptionList = local_14;\n            return 0;\n          }\n        }\n        else if ((iVar1 != 0) && ((uint *)param_2 != (uint *)0x0)) {\n          ExceptionList = local_14;\n          return (((byte)*param_4 & 4) != 0) + 1;\n        }\n        goto LAB_00422d12;\n      }\n      if ((*(int *)(param_1 + 0x18) == 0) || ((uint *)param_2 == (uint *)0x0)) goto LAB_00422d12;\n      FUN_00420320((uint *)param_2,*(uint **)(param_1 + 0x18),*(uint *)(param_4 + 0x14));\n      if (*(int *)(param_4 + 0x14) != 4) {\n        ExceptionList = local_14;\n        return 0;\n      }\n                    /* WARNING: Load size is inaccurate */\n      if (*param_2 == 0) {\n        ExceptionList = local_14;\n        return 0;\n      }\n                    /* WARNING: Load size is inaccurate */\n      uVar3 = *param_2;\n      goto LAB_00422ca1;\n    }\n    uVar3 = *(uint *)(param_1 + 0x18);\n  }\n  if ((uVar3 == 0) || ((uint *)param_2 == (uint *)0x0)) {\nLAB_00422d12:\n                    /* WARNING: Subroutine does not return */\n    _abort();\n  }\n  *(uint *)param_2 = uVar3;\nLAB_00422ca1:\n  uVar3 = ___AdjustPointer(uVar3,(int *)(param_4 + 8));\n  *(uint *)param_2 = uVar3;\n  ExceptionList = local_14;\n  return 0;\n}\n\n"
    },
    {
      "name": "BuildCatchObjectInternal<class___FrameHandler3>",
      "entry": "00422d18",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    void __cdecl BuildCatchObjectInternal<class __FrameHandler3>(struct EHExceptionRecord *,void\n   *,struct _s_HandlerType const *,struct _s_CatchableType const *)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl\nBuildCatchObjectInternal<class___FrameHandler3>\n          (EHExceptionRecord *param_1,void *param_2,_s_HandlerType *param_3,\n          _s_CatchableType *param_4)\n\n{\n  int iVar1;\n  void *pvVar2;\n  void *pvVar3;\n  void *local_14;\n  \n  pvVar3 = param_2;\n  if (-1 < (int)param_3->adjectives) {\n    pvVar3 = (void *)((int)param_2 + param_3->dispCatchObj + 0xc);\n  }\n  iVar1 = BuildCatchObjectHelperInternal<class___FrameHandler3>(param_1,param_2,param_3,param_4);\n  if (iVar1 == 1) {\n    pvVar2 = (void *)___AdjustPointer(*(int *)(param_1 + 0x18),(int *)(param_4 + 8));\n    _CallMemberFunction1(pvVar3,*(void **)(param_4 + 0x18),pvVar2);\n  }\n  else if (iVar1 == 2) {\n    pvVar2 = (void *)___AdjustPointer(*(int *)(param_1 + 0x18),(int *)(param_4 + 8));\n    _CallMemberFunction2(pvVar3,*(void **)(param_4 + 0x18),pvVar2,1);\n  }\n  ExceptionList = local_14;\n  return;\n}\n\n"
    },
    {
      "name": "CatchIt<class___FrameHandler3>",
      "entry": "00422db1",
      "c": "\n/* Library Function - Single Match\n    void __cdecl CatchIt<class __FrameHandler3>(struct EHExceptionRecord *,struct EHRegistrationNode\n   *,struct _CONTEXT *,void *,struct _s_FuncInfo const *,struct _s_HandlerType const *,struct\n   _s_CatchableType const *,struct _s_TryBlockMapEntry const *,int,struct EHRegistrationNode\n   *,unsigned char,unsigned char)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl\nCatchIt<class___FrameHandler3>\n          (EHExceptionRecord *param_1,EHRegistrationNode *param_2,_CONTEXT *param_3,void *param_4,\n          _s_FuncInfo *param_5,_s_HandlerType *param_6,_s_CatchableType *param_7,\n          _s_TryBlockMapEntry *param_8,int param_9,EHRegistrationNode *param_10,uchar param_11,\n          uchar param_12)\n\n{\n  void *pvVar1;\n  \n  if (param_7 != (_s_CatchableType *)0x0) {\n    BuildCatchObjectInternal<class___FrameHandler3>(param_1,param_2,param_6,param_7);\n  }\n  if (param_10 == (EHRegistrationNode *)0x0) {\n    param_10 = param_2;\n  }\n  _UnwindNestedFrames(param_10,param_1);\n  __FrameHandler3::FrameUnwindToState(param_2,param_4,param_5,param_8->tryLow);\n  __FrameHandler3::SetState(param_2,param_5,param_8->tryHigh + 1);\n  pvVar1 = (void *)FUN_004234f2((int)param_1,(int)param_2,param_3,param_5,param_6->addressOfHandler,\n                                param_9,0x100);\n  if (pvVar1 != (void *)0x0) {\n    _JumpToContinuation(pvVar1,param_2);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00422e31",
      "entry": "00422e31",
      "c": "\nvoid __cdecl\nFUN_00422e31(EHExceptionRecord *param_1,EHRegistrationNode *param_2,_CONTEXT *param_3,\n            _s_FuncInfo *param_4,_s_FuncInfo *param_5,uchar param_6,int param_7,\n            EHRegistrationNode *param_8)\n\n{\n  void *pvVar1;\n  bool bVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  uint uVar6;\n  byte *pbVar7;\n  _s_FuncInfo *p_Var8;\n  __ehstate_t *p_Var9;\n  _s_TryBlockMapEntry *p_Var10;\n  int *piVar11;\n  _s_TryBlockMapEntry local_68;\n  _s_HandlerType local_54;\n  int *local_44;\n  _s_FuncInfo *local_40 [2];\n  _s_FuncInfo *local_38;\n  _s_FuncInfo *local_34;\n  undefined4 local_30;\n  int *local_2c;\n  int local_28;\n  int *local_24;\n  int local_20;\n  uint local_1c;\n  HandlerType *local_18;\n  int local_14;\n  _s_FuncInfo *local_10;\n  void *local_c;\n  _CONTEXT *local_8;\n  \n  local_14 = 0;\n  local_1c = local_1c & 0xffffff00;\n  local_c = (void *)__FrameHandler3::GetCurrentState(param_2,param_4,param_5);\n  if (((int)local_c < -1) || (param_5->maxState <= (int)local_c)) goto LAB_004231d0;\n  if (((*(int *)param_1 != -0x1f928c9d) || (*(int *)(param_1 + 0x10) != 3)) ||\n     ((((*(int *)(param_1 + 0x14) != 0x19930520 && (*(int *)(param_1 + 0x14) != 0x19930521)) &&\n       (*(int *)(param_1 + 0x14) != 0x19930522)) || (*(int *)(param_1 + 0x1c) != 0)))) {\n    local_8 = param_3;\n    goto LAB_00422f7f;\n  }\n  iVar3 = ___vcrt_getptd();\n  if (*(int *)(iVar3 + 0x10) == 0) {\n    return;\n  }\n  iVar3 = ___vcrt_getptd();\n  param_1 = *(EHExceptionRecord **)(iVar3 + 0x10);\n  iVar3 = ___vcrt_getptd();\n  local_1c = CONCAT31(local_1c._1_3_,1);\n  local_8 = *(_CONTEXT **)(iVar3 + 0x14);\n  if ((param_1 == (EHExceptionRecord *)0x0) ||\n     ((((*(int *)param_1 == -0x1f928c9d && (*(int *)(param_1 + 0x10) == 3)) &&\n       ((*(int *)(param_1 + 0x14) == 0x19930520 ||\n        ((*(int *)(param_1 + 0x14) == 0x19930521 || (*(int *)(param_1 + 0x14) == 0x19930522)))))) &&\n      (*(int *)(param_1 + 0x1c) == 0)))) goto LAB_004231d0;\n  iVar3 = ___vcrt_getptd();\n  if (*(int *)(iVar3 + 0x1c) == 0) {\nLAB_00422f7f:\n    local_34 = param_5;\n    local_30 = 0;\n    if (((*(int *)param_1 == -0x1f928c9d) && (*(int *)(param_1 + 0x10) == 3)) &&\n       ((*(int *)(param_1 + 0x14) == 0x19930520 ||\n        ((*(int *)(param_1 + 0x14) == 0x19930521 || (*(int *)(param_1 + 0x14) == 0x19930522)))))) {\n      if (param_5->nTryBlocks != 0) {\n        __FrameHandler3::GetRangeOfTrysToCheck\n                  ((TryBlockMap *)&local_44,(int)&local_34,local_c,param_4,(int)param_5);\n        local_2c = local_44;\n        local_10 = local_40[0];\n        if (local_40[0] < local_38) {\n          local_20 = (int)local_40[0] * 0x14;\n          p_Var8 = local_40[0];\n          do {\n            pvVar1 = local_c;\n            p_Var9 = (__ehstate_t *)(*(int *)(*local_2c + 0x10) + local_20);\n            p_Var10 = &local_68;\n            local_10 = p_Var8;\n            for (iVar3 = 5; iVar3 != 0; iVar3 = iVar3 + -1) {\n              p_Var10->tryLow = *p_Var9;\n              p_Var9 = p_Var9 + 1;\n              p_Var10 = (_s_TryBlockMapEntry *)&p_Var10->tryHigh;\n            }\n            if (((local_68.tryLow <= (int)pvVar1) && ((int)pvVar1 <= local_68.tryHigh)) &&\n               (local_14 = 0, local_68.nCatches != 0)) {\n              pbVar7 = *(byte **)(param_1 + 0x1c);\n              local_28 = **(int **)(pbVar7 + 0xc);\n              local_24 = *(int **)(pbVar7 + 0xc) + 1;\n              local_18 = local_68.pHandlerArray;\n              do {\n                local_54.adjectives = local_18->adjectives;\n                local_54.pType = local_18->pType;\n                local_54.dispCatchObj = local_18->dispCatchObj;\n                local_54.addressOfHandler = local_18->addressOfHandler;\n                piVar11 = local_24;\n                p_Var8 = local_10;\n                for (iVar3 = local_28; local_10 = p_Var8, 0 < iVar3; iVar3 = iVar3 + -1) {\n                  iVar5 = FID_conflict____TypeMatch((byte *)&local_54,(byte *)*piVar11,pbVar7);\n                  if (iVar5 != 0) {\n                    CatchIt<class___FrameHandler3>\n                              (param_1,param_2,local_8,param_4,param_5,&local_54,\n                               (_s_CatchableType *)*piVar11,&local_68,param_7,param_8,\n                               (uchar)local_1c,param_6);\n                    p_Var8 = local_10;\n                    goto LAB_004230ba;\n                  }\n                  pbVar7 = *(byte **)(param_1 + 0x1c);\n                  piVar11 = piVar11 + 1;\n                  p_Var8 = local_10;\n                }\n                local_14 = local_14 + 1;\n                local_18 = local_18 + 1;\n              } while (local_14 != local_68.nCatches);\n            }\nLAB_004230ba:\n            p_Var8 = (_s_FuncInfo *)((int)&p_Var8->magicNumber_and_bbtFlags + 1);\n            local_20 = local_20 + 0x14;\n            local_10 = p_Var8;\n          } while (p_Var8 < local_38);\n        }\n      }\n      if (param_6 != '\\0') {\n        ___DestructExceptionObject((int *)param_1);\n      }\n      if (0x19930520 < (param_5->magicNumber_and_bbtFlags & 0x1fffffff)) {\n        uVar6 = (uint)param_5->EHFlags >> 2;\n        if (param_5->pESTypeList != (ESTypeList *)0x0) {\n          if ((uVar6 & 1) != 0) goto LAB_00423113;\n          uVar4 = FUN_0042384a((int)param_1,&param_5->pESTypeList->nCount);\n          if ((char)uVar4 != '\\0') goto LAB_0042315f;\n          goto LAB_00423194;\n        }\n        if (((uVar6 & 1) != 0) && (param_7 == 0)) {\nLAB_00423113:\n          iVar3 = ___vcrt_getptd();\n          *(EHExceptionRecord **)(iVar3 + 0x10) = param_1;\n          iVar3 = ___vcrt_getptd();\n          *(_CONTEXT **)(iVar3 + 0x14) = local_8;\n          goto LAB_0042316f;\n        }\n      }\n    }\n    else if (param_5->nTryBlocks != 0) {\n      if (param_6 != '\\0') goto LAB_004231d0;\n      FindHandlerForForeignException<class___FrameHandler3>\n                (param_1,param_2,local_8,param_4,param_5,(int)local_c,param_7,param_8);\n    }\nLAB_0042315f:\n    iVar3 = ___vcrt_getptd();\n    if (*(int *)(iVar3 + 0x1c) == 0) {\n      return;\n    }\n  }\n  else {\n    iVar3 = ___vcrt_getptd();\n    local_10 = *(_s_FuncInfo **)(iVar3 + 0x1c);\n    iVar3 = ___vcrt_getptd();\n    *(undefined4 *)(iVar3 + 0x1c) = 0;\n    uVar4 = FUN_0042384a((int)param_1,(int *)local_10);\n    p_Var8 = local_10;\n    if ((char)uVar4 != '\\0') goto LAB_00422f7f;\n    param_8 = (EHRegistrationNode *)0x0;\n    param_5 = p_Var8;\n    if (0 < (int)local_10->magicNumber_and_bbtFlags) {\n      do {\n        bVar2 = type_info::operator==\n                          (*(type_info **)(param_8 + p_Var8->maxState + 4),\n                           (type_info *)&std::bad_exception::RTTI_Type_Descriptor);\n        if (bVar2) goto LAB_00423174;\n        param_8 = param_8 + 0x10;\n        local_14 = local_14 + 1;\n      } while (local_14 < (int)p_Var8->magicNumber_and_bbtFlags);\n    }\nLAB_0042316f:\n    terminate();\nLAB_00423174:\n    ___DestructExceptionObject((int *)param_1);\n    FUN_004234bb(local_40);\n    __CxxThrowException_8((int *)local_40,&DAT_0043c284);\nLAB_00423194:\n    iVar3 = ___vcrt_getptd();\n    *(EHExceptionRecord **)(iVar3 + 0x10) = param_1;\n    iVar3 = ___vcrt_getptd();\n    *(_CONTEXT **)(iVar3 + 0x14) = local_8;\n    if (param_8 == (EHRegistrationNode *)0x0) {\n      param_8 = param_2;\n    }\n    _UnwindNestedFrames(param_8,param_1);\n    __FrameHandler3::FrameUnwindToEmptyState(param_2,param_4,param_5);\n    uVar4 = FUN_00423907((int)param_5);\n    FUN_004236c1(uVar4);\n  }\nLAB_004231d0:\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "FindHandlerForForeignException<class___FrameHandler3>",
      "entry": "004231d6",
      "c": "\n/* Library Function - Single Match\n    void __cdecl FindHandlerForForeignException<class __FrameHandler3>(struct EHExceptionRecord\n   *,struct EHRegistrationNode *,struct _CONTEXT *,void *,struct _s_FuncInfo const *,int,int,struct\n   EHRegistrationNode *)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl\nFindHandlerForForeignException<class___FrameHandler3>\n          (EHExceptionRecord *param_1,EHRegistrationNode *param_2,_CONTEXT *param_3,void *param_4,\n          _s_FuncInfo *param_5,int param_6,int param_7,EHRegistrationNode *param_8)\n\n{\n  int iVar1;\n  PVOID pvVar2;\n  _s_HandlerType *p_Var3;\n  uint uVar4;\n  __ehstate_t *p_Var5;\n  _s_TryBlockMapEntry *p_Var6;\n  _s_TryBlockMapEntry local_3c;\n  int *local_28;\n  uint local_24;\n  uint local_1c;\n  _s_FuncInfo *local_18;\n  undefined4 local_14;\n  int *local_10;\n  int local_c;\n  uint local_8;\n  \n  if (*(int *)param_1 != -0x7ffffffd) {\n    iVar1 = ___vcrt_getptd();\n    if (*(int *)(iVar1 + 8) != 0) {\n      pvVar2 = EncodePointer((PVOID)0x0);\n      iVar1 = ___vcrt_getptd();\n      if ((((*(PVOID *)(iVar1 + 8) != pvVar2) && (*(int *)param_1 != -0x1fbcb0b3)) &&\n          (*(int *)param_1 != -0x1fbcbcae)) &&\n         (iVar1 = FUN_00420961((int *)param_1,(undefined4 *)param_2,param_3,param_4,param_5,param_7,\n                               param_8), iVar1 != 0)) {\n        return;\n      }\n    }\n    local_18 = param_5;\n    local_14 = 0;\n    if (param_5->nTryBlocks == 0) {\n                    /* WARNING: Subroutine does not return */\n      _abort();\n    }\n    __FrameHandler3::GetRangeOfTrysToCheck\n              ((TryBlockMap *)&local_28,(int)&local_18,(void *)param_6,(_s_FuncInfo *)param_4,\n               (int)param_5);\n    local_10 = local_28;\n    if (local_24 < local_1c) {\n      local_c = local_24 * 0x14;\n      uVar4 = local_24;\n      do {\n        p_Var5 = (__ehstate_t *)(*(int *)(*local_10 + 0x10) + local_c);\n        p_Var6 = &local_3c;\n        local_8 = uVar4;\n        for (iVar1 = 5; iVar1 != 0; iVar1 = iVar1 + -1) {\n          p_Var6->tryLow = *p_Var5;\n          p_Var5 = p_Var5 + 1;\n          p_Var6 = (_s_TryBlockMapEntry *)&p_Var6->tryHigh;\n        }\n        if ((local_3c.tryLow <= param_6) && (param_6 <= local_3c.tryHigh)) {\n          p_Var3 = local_3c.pHandlerArray + local_3c.nCatches + -1;\n          if (((p_Var3->pType == (TypeDescriptor *)0x0) ||\n              (*(char *)&p_Var3->pType[1].pVFTable == '\\0')) && ((p_Var3->adjectives & 0x40) == 0))\n          {\n            CatchIt<class___FrameHandler3>\n                      (param_1,param_2,param_3,param_4,param_5,p_Var3,(_s_CatchableType *)0x0,\n                       &local_3c,param_7,param_8,'\\x01','\\0');\n            uVar4 = local_8;\n          }\n        }\n        uVar4 = uVar4 + 1;\n        local_c = local_c + 0x14;\n      } while (uVar4 < local_1c);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FID_conflict:___TypeMatch",
      "entry": "0042330c",
      "c": "\n/* Library Function - Multiple Matches With Different Base Names\n    int __cdecl TypeMatchHelper<struct _s_HandlerType const >(struct _s_HandlerType const *,struct\n   _s_CatchableType const *,struct _s_ThrowInfo const *)\n    int __cdecl TypeMatchHelper<class __FrameHandler3>(struct _s_HandlerType const *,struct\n   _s_CatchableType const *,struct _s_ThrowInfo const *)\n    ___TypeMatch\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 __cdecl FID_conflict____TypeMatch(byte *param_1,byte *param_2,byte *param_3)\n\n{\n  byte bVar1;\n  int iVar2;\n  byte *pbVar3;\n  uint uVar4;\n  byte *pbVar5;\n  undefined4 uVar6;\n  bool bVar7;\n  \n  iVar2 = *(int *)(param_1 + 4);\n  if (((iVar2 == 0) || (pbVar5 = (byte *)(iVar2 + 8), *pbVar5 == 0)) ||\n     (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0)))) {\n    uVar6 = 1;\n  }\n  else {\n    uVar6 = 0;\n    if (iVar2 != *(int *)(param_2 + 4)) {\n      pbVar3 = (byte *)(*(int *)(param_2 + 4) + 8);\n      do {\n        bVar1 = *pbVar5;\n        bVar7 = bVar1 < *pbVar3;\n        if (bVar1 != *pbVar3) {\nLAB_0042335d:\n          uVar4 = -(uint)bVar7 | 1;\n          goto LAB_00423362;\n        }\n        if (bVar1 == 0) break;\n        bVar1 = pbVar5[1];\n        bVar7 = bVar1 < pbVar3[1];\n        if (bVar1 != pbVar3[1]) goto LAB_0042335d;\n        pbVar5 = pbVar5 + 2;\n        pbVar3 = pbVar3 + 2;\n      } while (bVar1 != 0);\n      uVar4 = 0;\nLAB_00423362:\n      if (uVar4 != 0) {\n        return 0;\n      }\n    }\n    if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n       ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) &&\n        (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n      uVar6 = 1;\n    }\n  }\n  return uVar6;\n}\n\n"
    },
    {
      "name": "__InternalCxxFrameHandler<class___FrameHandler3>",
      "entry": "0042339a",
      "c": "\n/* Library Function - Single Match\n    enum _EXCEPTION_DISPOSITION __cdecl __InternalCxxFrameHandler<class __FrameHandler3>(struct\n   EHExceptionRecord *,struct EHRegistrationNode *,struct _CONTEXT *,void *,struct _s_FuncInfo const\n   *,int,struct EHRegistrationNode *,unsigned char)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\n_EXCEPTION_DISPOSITION __cdecl\n__InternalCxxFrameHandler<class___FrameHandler3>\n          (EHExceptionRecord *param_1,EHRegistrationNode *param_2,_CONTEXT *param_3,void *param_4,\n          _s_FuncInfo *param_5,int param_6,EHRegistrationNode *param_7,uchar param_8)\n\n{\n  code *pcVar1;\n  int iVar2;\n  uint uVar3;\n  _EXCEPTION_DISPOSITION _Var4;\n  \n  ___except_validate_context_record((int)param_3);\n  iVar2 = ___vcrt_getptd();\n  if ((((*(int *)(iVar2 + 0x20) != 0) || (*(int *)param_1 == -0x1f928c9d)) ||\n      (*(int *)param_1 == -0x7fffffda)) ||\n     (((param_5->magicNumber_and_bbtFlags & 0x1fffffff) < 0x19930522 ||\n      ((param_5->EHFlags & 1) == 0)))) {\n    if (((byte)param_1[4] & 0x66) == 0) {\n      if (((param_5->nTryBlocks != 0) ||\n          ((uVar3 = param_5->magicNumber_and_bbtFlags & 0x1fffffff, 0x19930520 < uVar3 &&\n           (param_5->pESTypeList != (ESTypeList *)0x0)))) ||\n         ((0x19930521 < uVar3 && (((uint)param_5->EHFlags >> 2 & 1) != 0)))) {\n        if ((((*(int *)param_1 == -0x1f928c9d) && (2 < *(uint *)(param_1 + 0x10))) &&\n            (0x19930522 < *(uint *)(param_1 + 0x14))) &&\n           (pcVar1 = *(code **)(*(int *)(param_1 + 0x1c) + 8), pcVar1 != (code *)0x0)) {\n          (*(code *)PTR_guard_check_icall_00433278)\n                    (param_1,param_2,param_3,param_4,param_5,param_6,param_7,param_8);\n          _Var4 = (*pcVar1)();\n          return _Var4;\n        }\n        FUN_00422e31(param_1,param_2,param_3,(_s_FuncInfo *)param_4,param_5,param_8,param_6,param_7)\n        ;\n      }\n    }\n    else if ((param_5->maxState != 0) && (param_6 == 0)) {\n      __FrameHandler3::FrameUnwindToEmptyState(param_2,param_4,param_5);\n    }\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_004234a0",
      "entry": "004234a0",
      "c": "\nundefined4 * __thiscall FUN_004234a0(void *this,int param_1)\n\n{\n  FUN_00412210(this,param_1);\n  *(undefined ***)this = std::bad_exception::vftable;\n  return (undefined4 *)this;\n}\n\n"
    },
    {
      "name": "FUN_004234bb",
      "entry": "004234bb",
      "c": "\nundefined4 * __fastcall FUN_004234bb(undefined4 *param_1)\n\n{\n  param_1[1] = 0;\n  param_1[2] = 0;\n  param_1[1] = \"bad exception\";\n  *param_1 = std::bad_exception::vftable;\n  return param_1;\n}\n\n"
    },
    {
      "name": "operator==",
      "entry": "004234d3",
      "c": "\n/* Library Function - Single Match\n    public: bool __thiscall type_info::operator==(class type_info const &)const \n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nbool __thiscall type_info::operator==(type_info *this,type_info *param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = ___std_type_info_compare((int)(this + 4),(int)(param_1 + 4));\n  return (bool)('\\x01' - (uVar1 != 0));\n}\n\n"
    },
    {
      "name": "FUN_004234f2",
      "entry": "004234f2",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n\nundefined4 __cdecl\nFUN_004234f2(int param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,\n            int param_6,int param_7)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_50 [2];\n  undefined4 local_48;\n  undefined4 local_44;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 *local_38;\n  undefined4 local_34;\n  undefined4 local_20;\n  void *local_14;\n  undefined4 uStack_c;\n  undefined *local_8;\n  \n  local_8 = &DAT_0043c1c8;\n  uStack_c = 0x4234fe;\n  local_20 = param_5;\n  local_44 = 0;\n  local_34 = *(undefined4 *)(param_2 + -4);\n  local_38 = __CreateFrameInfo(local_50,*(undefined4 *)(param_1 + 0x18));\n  iVar1 = ___vcrt_getptd();\n  local_3c = *(undefined4 *)(iVar1 + 0x10);\n  iVar1 = ___vcrt_getptd();\n  local_40 = *(undefined4 *)(iVar1 + 0x14);\n  iVar1 = ___vcrt_getptd();\n  *(int *)(iVar1 + 0x10) = param_1;\n  iVar1 = ___vcrt_getptd();\n  *(undefined4 *)(iVar1 + 0x14) = param_3;\n  local_48 = 1;\n  local_8 = (undefined *)0x1;\n  uVar2 = FUN_00420904(param_2,param_4,param_5,param_6,param_7);\n  local_8 = (undefined *)0xfffffffe;\n  local_48 = 0;\n  local_20 = uVar2;\n  FUN_00423645();\n  ExceptionList = local_14;\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_00423645",
      "entry": "00423645",
      "c": "\nvoid FUN_00423645(void)\n\n{\n  int iVar1;\n  int unaff_EBX;\n  int unaff_EBP;\n  int *unaff_ESI;\n  \n  *(undefined4 *)(*(int *)(unaff_EBP + 0xc) + -4) = *(undefined4 *)(unaff_EBP + -0x30);\n  __FindAndUnlinkFrame(*(int *)(unaff_EBP + -0x34));\n  iVar1 = ___vcrt_getptd();\n  *(undefined4 *)(iVar1 + 0x10) = *(undefined4 *)(unaff_EBP + -0x38);\n  iVar1 = ___vcrt_getptd();\n  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(unaff_EBP + -0x3c);\n  if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n      ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))\n       ))) && ((*(int *)(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n    iVar1 = __IsExceptionObjectToBeDestroyed(unaff_ESI[6]);\n    if (iVar1 != 0) {\n      ___DestructExceptionObject(unaff_ESI);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004236c1",
      "entry": "004236c1",
      "c": "\n/* WARNING: Function: __EH_prolog3_catch replaced with injection: EH_prolog3 */\n\nvoid FUN_004236c1(undefined4 param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = ___vcrt_getptd();\n  if (*(int *)(iVar1 + 0x1c) == 0) {\n    unexpected();\n    iVar1 = ___vcrt_getptd();\n    *(undefined4 *)(iVar1 + 0x1c) = param_1;\n    __CxxThrowException_8((int *)0x0,(byte *)0x0);\n  }\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "Catch_All@004236e1",
      "entry": "004236e1",
      "c": "\nvoid Catch_All_004236e1(void)\n\n{\n  int iVar1;\n  int unaff_EBP;\n  \n  iVar1 = ___vcrt_getptd();\n  *(undefined4 *)(iVar1 + 0x1c) = *(undefined4 *)(unaff_EBP + 8);\n  __CxxThrowException_8((int *)0x0,(byte *)0x0);\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "ExFilterRethrow",
      "entry": "00423700",
      "c": "\n/* Library Function - Single Match\n    int __cdecl ExFilterRethrow(struct _EXCEPTION_POINTERS *)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nint __cdecl ExFilterRethrow(_EXCEPTION_POINTERS *param_1)\n\n{\n  PEXCEPTION_RECORD pEVar1;\n  int iVar2;\n  \n  pEVar1 = param_1->ExceptionRecord;\n  if ((((pEVar1->ExceptionCode == 0xe06d7363) && (pEVar1->NumberParameters == 3)) &&\n      ((pEVar1->ExceptionInformation[0] == 0x19930520 ||\n       ((pEVar1->ExceptionInformation[0] == 0x19930521 ||\n        (pEVar1->ExceptionInformation[0] == 0x19930522)))))) &&\n     (pEVar1->ExceptionInformation[2] == 0)) {\n    iVar2 = ___vcrt_getptd();\n    *(undefined4 *)(iVar2 + 0x20) = 1;\n    return 1;\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FrameUnwindToEmptyState",
      "entry": "0042374a",
      "c": "\n/* Library Function - Single Match\n    public: static void __cdecl __FrameHandler3::FrameUnwindToEmptyState(struct EHRegistrationNode\n   *,void *,struct _s_FuncInfo const *)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl\n__FrameHandler3::FrameUnwindToEmptyState\n          (EHRegistrationNode *param_1,void *param_2,_s_FuncInfo *param_3)\n\n{\n  FrameUnwindToState(param_1,param_2,param_3,-1);\n  return;\n}\n\n"
    },
    {
      "name": "FrameUnwindToState",
      "entry": "00423762",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    public: static void __cdecl __FrameHandler3::FrameUnwindToState(struct EHRegistrationNode *,void\n   *,struct _s_FuncInfo const *,int)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl\n__FrameHandler3::FrameUnwindToState\n          (EHRegistrationNode *param_1,void *param_2,_s_FuncInfo *param_3,int param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  void *local_14;\n  \n  iVar1 = GetCurrentState(param_1,param_2,param_3);\n  iVar2 = ___vcrt_getptd();\n  *(int *)(iVar2 + 0x18) = *(int *)(iVar2 + 0x18) + 1;\n  while (iVar2 = iVar1, iVar2 != param_4) {\n    if ((iVar2 < 0) || (param_3->maxState <= iVar2)) goto LAB_00423844;\n    iVar1 = param_3->pUnwindMap[iVar2].toState;\n    if (param_3->pUnwindMap[iVar2].action != (action *)0x0) {\n      SetState(param_1,param_3,iVar1);\n      __CallSettingFrame_12(param_3->pUnwindMap[iVar2].action,param_1,0x103);\n    }\n  }\n  FUN_00423830();\n  if (iVar2 == param_4) {\n    SetState(param_1,param_3,iVar2);\n    ExceptionList = local_14;\n    return;\n  }\nLAB_00423844:\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "FUN_00423830",
      "entry": "00423830",
      "c": "\nvoid FUN_00423830(void)\n\n{\n  int iVar1;\n  \n  iVar1 = ___vcrt_getptd();\n  if (0 < *(int *)(iVar1 + 0x18)) {\n    iVar1 = ___vcrt_getptd();\n    *(int *)(iVar1 + 0x18) = *(int *)(iVar1 + 0x18) + -1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042384a",
      "entry": "0042384a",
      "c": "\nundefined4 __cdecl FUN_0042384a(int param_1,int *param_2)\n\n{\n  byte *pbVar1;\n  int iVar2;\n  int iVar3;\n  int *in_EAX;\n  int iVar4;\n  int *piVar5;\n  undefined1 uVar6;\n  int iVar7;\n  int local_c;\n  int local_8;\n  \n  if (param_2 == (int *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    _abort();\n  }\n  iVar7 = *param_2;\n  uVar6 = 0;\n  if (0 < iVar7) {\n    local_8 = 0;\n    pbVar1 = *(byte **)(param_1 + 0x1c);\n    piVar5 = *(int **)(pbVar1 + 0xc);\n    iVar2 = *piVar5;\n    in_EAX = piVar5 + 1;\n    uVar6 = 0;\n    do {\n      if (0 < iVar2) {\n        iVar3 = param_2[1];\n        piVar5 = in_EAX;\n        local_c = iVar2;\n        do {\n          iVar4 = FID_conflict____TypeMatch((byte *)(iVar3 + local_8),(byte *)*piVar5,pbVar1);\n          if (iVar4 != 0) {\n            uVar6 = 1;\n            break;\n          }\n          local_c = local_c + -1;\n          piVar5 = piVar5 + 1;\n        } while (0 < local_c);\n      }\n      local_8 = local_8 + 0x10;\n      iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n  }\n  return CONCAT31((int3)((uint)in_EAX >> 8),uVar6);\n}\n\n"
    },
    {
      "name": "_CallMemberFunction1",
      "entry": "004238e4",
      "c": "\n/* Library Function - Single Match\n    void __stdcall _CallMemberFunction1(void * const,void * const,void * const)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid _CallMemberFunction1(void *param_1,void *param_2,void *param_3)\n\n{\n  (*(code *)param_2)(param_3);\n  return;\n}\n\n"
    },
    {
      "name": "_CallMemberFunction2",
      "entry": "004238f4",
      "c": "\n/* Library Function - Single Match\n    void __stdcall _CallMemberFunction2(void * const,void * const,void * const,int)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid _CallMemberFunction2(void *param_1,void *param_2,void *param_3,int param_4)\n\n{\n  (*(code *)param_2)(param_3,param_4);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00423907",
      "entry": "00423907",
      "c": "\nundefined4 __cdecl FUN_00423907(int param_1)\n\n{\n  return *(undefined4 *)(param_1 + 0x1c);\n}\n\n"
    },
    {
      "name": "__CallSettingFrame@12",
      "entry": "00423920",
      "c": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n/* Library Function - Single Match\n    __CallSettingFrame@12\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __CallSettingFrame_12(undefined4 param_1,undefined4 param_2,int param_3)\n\n{\n  code *pcVar1;\n  \n  pcVar1 = (code *)FUN_00423de0(param_3);\n  (*pcVar1)();\n  if (param_3 == 0x100) {\n    param_3 = 2;\n  }\n  FUN_00423de0(param_3);\n  return;\n}\n\n"
    },
    {
      "name": "___except_validate_context_record",
      "entry": "0042396c",
      "c": "\n/* Library Function - Single Match\n    ___except_validate_context_record\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl ___except_validate_context_record(int param_1)\n\n{\n  code *pcVar1;\n  \n  if ((code *)PTR_guard_check_icall_00433278 != guard_check_icall) {\n    if ((*(uint *)(param_1 + 0xc4) < *(uint *)((int)Self + 8)) ||\n       (*(uint *)((int)Self + 4) < *(uint *)(param_1 + 0xc4))) {\n      pcVar1 = (code *)swi(0x29);\n      (*pcVar1)();\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004239a0",
      "entry": "004239a0",
      "c": "\nvoid __cdecl FUN_004239a0(uint *param_1,int param_2,uint param_3)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  void *pvStack_28;\n  code *pcStack_24;\n  uint local_20;\n  uint uStack_1c;\n  int iStack_18;\n  uint *puStack_14;\n  \n  puStack_14 = param_1;\n  iStack_18 = param_2;\n  uStack_1c = param_3;\n  pcStack_24 = FUN_00423a40;\n  pvStack_28 = ExceptionList;\n  local_20 = DAT_0043e7ac ^ (uint)&pvStack_28;\n  ExceptionList = &pvStack_28;\n  while( true ) {\n    uVar2 = *(uint *)(param_2 + 0xc);\n    if ((uVar2 == 0xfffffffe) || ((param_3 != 0xfffffffe && (uVar2 <= param_3)))) break;\n    puVar1 = (undefined4 *)((*(uint *)(param_2 + 8) ^ *param_1) + 0x10 + uVar2 * 0xc);\n    *(undefined4 *)(param_2 + 0xc) = *puVar1;\n    if (puVar1[1] == 0) {\n      __NLG_Notify(0x101);\n      FUN_00423e10();\n    }\n  }\n  ExceptionList = pvStack_28;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00423a40",
      "entry": "00423a40",
      "c": "\nundefined4 __cdecl FUN_00423a40(int param_1,uint param_2,undefined4 param_3,uint *param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  uVar1 = 1;\n  if ((*(uint *)(param_1 + 4) & 6) != 0) {\n    iVar2 = FUN_0041fbbc(*(uint *)(param_2 + 8) ^ param_2);\n    FUN_004239a0(*(uint **)(iVar2 + 0x14),*(int *)(iVar2 + 0x10),*(uint *)(iVar2 + 0xc));\n    *param_4 = param_2;\n    uVar1 = 3;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "_EH4_CallFilterFunc",
      "entry": "00423a90",
      "c": "\n/* Library Function - Single Match\n    @_EH4_CallFilterFunc@8\n   \n   Library: Visual Studio 2019 Release\n   __fastcall _EH4_CallFilterFunc,8 */\n\nvoid __fastcall _EH4_CallFilterFunc(undefined *param_1)\n\n{\n  (*(code *)param_1)();\n  return;\n}\n\n"
    },
    {
      "name": "_EH4_TransferToHandler",
      "entry": "00423ab0",
      "c": "\n/* Library Function - Single Match\n    @_EH4_TransferToHandler@8\n   \n   Library: Visual Studio 2019 Release\n   __fastcall _EH4_TransferToHandler,8 */\n\nvoid __fastcall _EH4_TransferToHandler(undefined *UNRECOVERED_JUMPTABLE)\n\n{\n  __NLG_Notify(1);\n                    /* WARNING: Could not recover jumptable at 0x00423ac7. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n"
    },
    {
      "name": "_EH4_GlobalUnwind2",
      "entry": "00423ad0",
      "c": "\n/* Library Function - Single Match\n    @_EH4_GlobalUnwind2@8\n   \n   Library: Visual Studio 2019 Release\n   __fastcall _EH4_GlobalUnwind2,8 */\n\nvoid __fastcall _EH4_GlobalUnwind2(PVOID param_1,PEXCEPTION_RECORD param_2)\n\n{\n  RtlUnwind(param_1,(PVOID)0x423ae5,param_2,(PVOID)0x0);\n  return;\n}\n\n"
    },
    {
      "name": "_EH4_LocalUnwind",
      "entry": "00423af0",
      "c": "\n/* Library Function - Single Match\n    @_EH4_LocalUnwind@16\n   \n   Library: Visual Studio 2019 Release\n   __fastcall _EH4_LocalUnwind,16 */\n\nvoid __fastcall _EH4_LocalUnwind(int param_1,uint param_2,undefined4 param_3,uint *param_4)\n\n{\n  FUN_004239a0(param_4,param_1,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "___vcrt_initialize_locks",
      "entry": "00423b07",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_initialize_locks\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 ___vcrt_initialize_locks(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  LPCRITICAL_SECTION p_Var3;\n  \n  p_Var3 = (LPCRITICAL_SECTION)&DAT_00462088;\n  uVar2 = 0;\n  do {\n    iVar1 = ___vcrt_InitializeCriticalSectionEx(p_Var3,4000,0);\n    if (iVar1 == 0) {\n      uVar2 = ___vcrt_uninitialize_locks();\n      return uVar2 & 0xffffff00;\n    }\n    DAT_004620a0 = DAT_004620a0 + 1;\n    uVar2 = uVar2 + 0x18;\n    p_Var3 = p_Var3 + 1;\n  } while (uVar2 < 0x18);\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "___vcrt_uninitialize_locks",
      "entry": "00423b43",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_uninitialize_locks\n   \n   Library: Visual Studio 2019 Release */\n\nundefined4 ___vcrt_uninitialize_locks(void)\n\n{\n  undefined4 in_EAX;\n  undefined4 extraout_EAX;\n  int iVar1;\n  LPCRITICAL_SECTION lpCriticalSection;\n  \n  if (DAT_004620a0 != 0) {\n    lpCriticalSection = (LPCRITICAL_SECTION)(&DAT_00462070 + DAT_004620a0 * 0x18);\n    iVar1 = DAT_004620a0;\n    do {\n      DeleteCriticalSection(lpCriticalSection);\n      DAT_004620a0 = DAT_004620a0 + -1;\n      lpCriticalSection = lpCriticalSection + -1;\n      iVar1 = iVar1 + -1;\n      in_EAX = extraout_EAX;\n    } while (iVar1 != 0);\n  }\n  return CONCAT31((int3)((uint)in_EAX >> 8),1);\n}\n\n"
    },
    {
      "name": "try_get_first_available_module",
      "entry": "00423b72",
      "c": "\n/* Library Function - Single Match\n    struct HINSTANCE__ * __cdecl try_get_first_available_module(enum `anonymous\n   namespace'::module_id const * const,enum `anonymous namespace'::module_id const * const)\n   \n   Library: Visual Studio 2019 Release */\n\nHINSTANCE__ * __cdecl try_get_first_available_module(module_id *param_1,module_id *param_2)\n\n{\n  int *piVar1;\n  HINSTANCE__ *pHVar2;\n  LPCWSTR lpLibFileName;\n  HMODULE hLibModule;\n  DWORD DVar3;\n  int iVar4;\n  \n  do {\n    if (param_1 == param_2) {\n      return (HINSTANCE__ *)0x0;\n    }\n    piVar1 = (int *)(&DAT_004620e0 + *param_1 * 4);\n    pHVar2 = (HINSTANCE__ *)*piVar1;\n    if (pHVar2 == (HINSTANCE__ *)0x0) {\n      lpLibFileName = (LPCWSTR)(&PTR_u_<pi_ms_win_core_fibers_l1_1_1_004362b4)[*param_1];\n      hLibModule = LoadLibraryExW(lpLibFileName,(HANDLE)0x0,0x800);\n      if ((hLibModule != (HMODULE)0x0) ||\n         (((DVar3 = GetLastError(), DVar3 == 0x57 &&\n           (iVar4 = _wcsncmp(lpLibFileName,L\"api-ms-\",7), iVar4 != 0)) &&\n          (hLibModule = LoadLibraryExW(lpLibFileName,(HANDLE)0x0,0), hLibModule != (HMODULE)0x0))))\n      {\n        LOCK();\n        iVar4 = *piVar1;\n        *piVar1 = (int)hLibModule;\n        UNLOCK();\n        if (iVar4 == 0) {\n          return hLibModule;\n        }\n        FreeLibrary(hLibModule);\n        return hLibModule;\n      }\n      LOCK();\n      *piVar1 = -1;\n      UNLOCK();\n    }\n    else if (pHVar2 != (HINSTANCE__ *)0xffffffff) {\n      return pHVar2;\n    }\n    param_1 = param_1 + 1;\n  } while( true );\n}\n\n"
    },
    {
      "name": "try_get_function",
      "entry": "00423c0d",
      "c": "\n/* Library Function - Single Match\n    void * __cdecl try_get_function(enum `anonymous namespace'::function_id,char const * const,enum\n   A0x9d0f8d90::module_id const * const,enum A0x9d0f8d90::module_id const * const)\n   \n   Library: Visual Studio 2019 Release */\n\nvoid * __cdecl\ntry_get_function(function_id param_1,char *param_2,module_id *param_3,module_id *param_4)\n\n{\n  int *piVar1;\n  void *pvVar2;\n  HINSTANCE__ *hModule;\n  FARPROC pFVar3;\n  \n  piVar1 = (int *)(&DAT_004620ec + param_1 * 4);\n  pvVar2 = (void *)*piVar1;\n  if (pvVar2 != (void *)0xffffffff) {\n    if (pvVar2 != (void *)0x0) {\n      return pvVar2;\n    }\n    hModule = try_get_first_available_module(param_3,param_4);\n    if ((hModule != (HINSTANCE__ *)0x0) &&\n       (pFVar3 = GetProcAddress(hModule,param_2), pFVar3 != (FARPROC)0x0)) {\n      LOCK();\n      *piVar1 = (int)pFVar3;\n      UNLOCK();\n      return pFVar3;\n    }\n    LOCK();\n    *piVar1 = -1;\n    UNLOCK();\n  }\n  return (void *)0x0;\n}\n\n"
    },
    {
      "name": "___vcrt_FlsAlloc",
      "entry": "00423c57",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_FlsAlloc\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl ___vcrt_FlsAlloc(undefined4 param_1)\n\n{\n  code *pcVar1;\n  \n  pcVar1 = (code *)try_get_function(0,\"FlsAlloc\",(module_id *)&DAT_00436348,(module_id *)\"FlsAlloc\")\n  ;\n  if (pcVar1 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1);\n    (*pcVar1)();\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00423c8c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  TlsAlloc();\n  return;\n}\n\n"
    },
    {
      "name": "___vcrt_FlsFree",
      "entry": "00423c92",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_FlsFree\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl ___vcrt_FlsFree(DWORD param_1)\n\n{\n  code *pcVar1;\n  \n  pcVar1 = (code *)try_get_function(1,\"FlsFree\",(module_id *)&DAT_0043635c,(module_id *)\"FlsFree\");\n  if (pcVar1 == (code *)0x0) {\n    TlsFree(param_1);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___vcrt_FlsGetValue",
      "entry": "00423ccd",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_FlsGetValue\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl ___vcrt_FlsGetValue(DWORD param_1)\n\n{\n  code *pcVar1;\n  \n  pcVar1 = (code *)try_get_function(2,\"FlsGetValue\",(module_id *)&DAT_0043636c,\n                                    (module_id *)\"FlsGetValue\");\n  if (pcVar1 == (code *)0x0) {\n    TlsGetValue(param_1);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___vcrt_FlsSetValue",
      "entry": "00423d08",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_FlsSetValue\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl ___vcrt_FlsSetValue(DWORD param_1,LPVOID param_2)\n\n{\n  code *pcVar1;\n  \n  pcVar1 = (code *)try_get_function(3,\"FlsSetValue\",(module_id *)&DAT_00436380,\n                                    (module_id *)\"FlsSetValue\");\n  if (pcVar1 == (code *)0x0) {\n    TlsSetValue(param_1,param_2);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___vcrt_InitializeCriticalSectionEx",
      "entry": "00423d46",
      "c": "\n/* Library Function - Single Match\n    ___vcrt_InitializeCriticalSectionEx\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl\n___vcrt_InitializeCriticalSectionEx(LPCRITICAL_SECTION param_1,DWORD param_2,undefined4 param_3)\n\n{\n  code *pcVar1;\n  \n  pcVar1 = (code *)try_get_function(4,\"InitializeCriticalSectionEx\",(module_id *)&DAT_00436394,\n                                    (module_id *)\"InitializeCriticalSectionEx\");\n  if (pcVar1 == (code *)0x0) {\n    InitializeCriticalSectionAndSpinCount(param_1,param_2);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1,param_2,param_3);\n    (*pcVar1)();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "unexpected",
      "entry": "00423d8d",
      "c": "\n/* Library Function - Single Match\n    _unexpected\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl unexpected(void)\n\n{\n  code *pcVar1;\n  int iVar2;\n  \n  iVar2 = ___vcrt_getptd();\n  pcVar1 = *(code **)(iVar2 + 4);\n  if (pcVar1 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n  terminate();\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "GetCurrentState",
      "entry": "00423daa",
      "c": "\n/* Library Function - Single Match\n    public: static int __cdecl __FrameHandler3::GetCurrentState(struct EHRegistrationNode *,void\n   *,struct _s_FuncInfo const *)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nint __cdecl\n__FrameHandler3::GetCurrentState(EHRegistrationNode *param_1,void *param_2,_s_FuncInfo *param_3)\n\n{\n  if (param_3->maxState < 0x81) {\n    return (int)(char)param_1[8];\n  }\n  return *(int *)(param_1 + 8);\n}\n\n"
    },
    {
      "name": "SetState",
      "entry": "00423dc7",
      "c": "\n/* Library Function - Single Match\n    public: static void __cdecl __FrameHandler3::SetState(struct EHRegistrationNode *,struct\n   _s_FuncInfo const *,int)\n   \n   Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl __FrameHandler3::SetState(EHRegistrationNode *param_1,_s_FuncInfo *param_2,int param_3)\n\n{\n  *(int *)(param_1 + 8) = param_3;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00423de0",
      "entry": "00423de0",
      "c": "\nundefined4 __fastcall FUN_00423de0(undefined4 param_1)\n\n{\n  undefined4 in_EAX;\n  undefined4 unaff_EBP;\n  \n  DAT_0043e7e8 = param_1;\n  DAT_0043e7e4 = in_EAX;\n  DAT_0043e7ec = unaff_EBP;\n  return in_EAX;\n}\n\n"
    },
    {
      "name": "__NLG_Notify",
      "entry": "00423df0",
      "c": "\n/* Library Function - Single Match\n    __NLG_Notify\n   \n   Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual\n   Studio 2019 Release */\n\nvoid __NLG_Notify(ulong param_1)\n\n{\n  undefined4 in_EAX;\n  undefined4 unaff_EBP;\n  \n  DAT_0043e7e8 = param_1;\n  DAT_0043e7e4 = in_EAX;\n  DAT_0043e7ec = unaff_EBP;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00423e10",
      "entry": "00423e10",
      "c": "\nvoid FUN_00423e10(void)\n\n{\n  code *in_EAX;\n  \n  (*in_EAX)();\n  return;\n}\n\n"
    },
    {
      "name": "_wcslen",
      "entry": "00423e13",
      "c": "\n/* Library Function - Single Match\n    _wcslen\n   \n   Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release, Visual Studio 2015 Release,\n   Visual Studio 2019 Release */\n\nsize_t __cdecl _wcslen(wchar_t *_Str)\n\n{\n  wchar_t wVar1;\n  wchar_t *pwVar2;\n  \n  pwVar2 = _Str;\n  do {\n    wVar1 = *pwVar2;\n    pwVar2 = pwVar2 + 1;\n  } while (wVar1 != L'\\0');\n  return ((int)pwVar2 - (int)_Str >> 1) - 1;\n}\n\n"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "00423e2e",
      "c": "\nvoid __cdecl FID_conflict__free(void *_Memory)\n\n{\n  BOOL BVar1;\n  int *piVar2;\n  DWORD DVar3;\n  int iVar4;\n  \n  if (_Memory != (void *)0x0) {\n    BVar1 = HeapFree(DAT_004626e4,0,_Memory);\n    if (BVar1 == 0) {\n      piVar2 = __errno();\n      DVar3 = GetLastError();\n      iVar4 = FID_conflict____acrt_errno_from_os_error(DVar3);\n      *piVar2 = iVar4;\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00423e33",
      "entry": "00423e33",
      "c": "\nvoid FUN_00423e33(size_t param_1)\n\n{\n  __malloc_base(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00423e3e",
      "entry": "00423e3e",
      "c": "\nvoid FUN_00423e3e(void *param_1,uint param_2)\n\n{\n  __realloc_base(param_1,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "_wcscmp",
      "entry": "00423e49",
      "c": "\n/* Library Function - Single Match\n    _wcscmp\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _wcscmp(wchar_t *_Str1,wchar_t *_Str2)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  \n  uVar3 = (uint)(ushort)*_Str2;\n  iVar1 = (ushort)*_Str1 - uVar3;\n  if (iVar1 == 0) {\n    iVar2 = (int)_Str1 - (int)_Str2;\n    do {\n      if ((short)uVar3 == 0) break;\n      _Str2 = _Str2 + 1;\n      uVar3 = (uint)(ushort)*_Str2;\n      iVar1 = *(ushort *)(iVar2 + (int)_Str2) - uVar3;\n    } while (iVar1 == 0);\n  }\n  if (iVar1 < 0) {\n    return -1;\n  }\n  return (uint)(0 < iVar1);\n}\n\n"
    },
    {
      "name": "_strlen",
      "entry": "00423e90",
      "c": "\n/* Library Function - Single Match\n    _strlen\n   \n   Library: Visual Studio */\n\nsize_t __cdecl _strlen(char *_Str)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  uint *puVar3;\n  \n  uVar1 = (uint)_Str & 3;\n  puVar2 = (uint *)_Str;\n  while (uVar1 != 0) {\n    uVar1 = *puVar2;\n    puVar2 = (uint *)((int)puVar2 + 1);\n    if ((char)uVar1 == '\\0') goto LAB_00423ef3;\n    uVar1 = (uint)puVar2 & 3;\n  }\n  do {\n    do {\n      puVar3 = puVar2;\n      puVar2 = puVar3 + 1;\n    } while (((*puVar3 ^ 0xffffffff ^ *puVar3 + 0x7efefeff) & 0x81010100) == 0);\n    uVar1 = *puVar3;\n    if ((char)uVar1 == '\\0') {\n      return (int)puVar3 - (int)_Str;\n    }\n    if ((char)(uVar1 >> 8) == '\\0') {\n      return (size_t)((int)puVar3 + (1 - (int)_Str));\n    }\n    if ((uVar1 & 0xff0000) == 0) {\n      return (size_t)((int)puVar3 + (2 - (int)_Str));\n    }\n  } while ((uVar1 & 0xff000000) != 0);\nLAB_00423ef3:\n  return (size_t)((int)puVar2 + (-1 - (int)_Str));\n}\n\n"
    },
    {
      "name": "common_vsprintf<class___crt_stdio_output::standard_base,char>",
      "entry": "00423f1b",
      "c": "\n/* WARNING: Type propagation algorithm not settling */\n/* Library Function - Single Match\n    int __cdecl common_vsprintf<class __crt_stdio_output::standard_base,char>(unsigned __int64,char\n   * const,unsigned int,char const * const,struct __crt_locale_pointers * const,char * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\ncommon_vsprintf<class___crt_stdio_output::standard_base,char>\n          (__uint64 param_1,char *param_2,uint param_3,char *param_4,__crt_locale_pointers *param_5,\n          char *param_6)\n\n{\n  char *******pppppppcVar1;\n  int *piVar2;\n  int iVar3;\n  int local_488;\n  undefined1 local_484 [8];\n  char local_47c;\n  uint local_478;\n  char *******local_474;\n  uint local_470;\n  uint local_46c;\n  undefined4 local_468;\n  char *******local_464;\n  output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n  local_460 [64];\n  formatting_buffer local_420 [1048];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  local_464 = (char *******)param_2;\n  if ((param_4 == (char *)0x0) || ((param_3 != 0 && (param_2 == (char *)0x0)))) {\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    FUN_00429087();\n    goto LAB_0042406c;\n  }\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_488,param_5);\n  pppppppcVar1 = local_464;\n  local_478 = (uint)param_1 & 2;\n  local_474 = local_464;\n  local_470 = param_3;\n  local_46c = 0;\n  if (((param_1 & 2) != 0) || (local_468 = 0, local_464 == (char *******)0x0)) {\n    local_468 = 1;\n  }\n  local_464 = (char *******)&local_474;\n  output_processor<>(local_460,&local_464,(uint)param_1,param_1._4_4_,param_4,local_484,param_6);\n  iVar3 = __crt_stdio_output::\n          output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n          ::process(local_460);\n  if (pppppppcVar1 != (char *******)0x0) {\n    if ((param_1 & 1) == 0) {\n      if (local_478 == 0) {\n        if (param_3 != 0) {\n          if (local_46c != param_3) goto LAB_00424044;\nLAB_00424091:\n          *(undefined1 *)((int)pppppppcVar1 + (param_3 - 1)) = 0;\n        }\n      }\n      else if (param_3 != 0) {\n        if (-1 < iVar3) {\n          if (local_46c == param_3) goto LAB_00424091;\n          goto LAB_00424044;\n        }\n        *(undefined1 *)pppppppcVar1 = 0;\n      }\n    }\n    else if (((param_3 != 0) || (iVar3 == 0)) && (local_46c != param_3)) {\nLAB_00424044:\n      *(undefined1 *)((int)pppppppcVar1 + local_46c) = 0;\n    }\n  }\n  __crt_stdio_output::formatting_buffer::~formatting_buffer(local_420);\n  if (local_47c != '\\0') {\n    *(uint *)(local_488 + 0x350) = *(uint *)(local_488 + 0x350) & 0xfffffffd;\n  }\nLAB_0042406c:\n  iVar3 = FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return iVar3;\n}\n\n"
    },
    {
      "name": "common_vsprintf<class___crt_stdio_output::standard_base,wchar_t>",
      "entry": "00424097",
      "c": "\n/* WARNING: Type propagation algorithm not settling */\n/* Library Function - Single Match\n    int __cdecl common_vsprintf<class __crt_stdio_output::standard_base,wchar_t>(unsigned\n   __int64,wchar_t * const,unsigned int,wchar_t const * const,struct __crt_locale_pointers *\n   const,char * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\ncommon_vsprintf<class___crt_stdio_output::standard_base,wchar_t>\n          (__uint64 param_1,wchar_t *param_2,uint param_3,wchar_t *param_4,\n          __crt_locale_pointers *param_5,char *param_6)\n\n{\n  wchar_t *******pppppppwVar1;\n  int *piVar2;\n  int iVar3;\n  int local_488;\n  undefined1 local_484 [8];\n  char local_47c;\n  uint local_478;\n  wchar_t *******local_474;\n  uint local_470;\n  uint local_46c;\n  undefined4 local_468;\n  wchar_t *******local_464;\n  output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n  local_460 [64];\n  formatting_buffer local_420 [1048];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  local_464 = (wchar_t *******)param_2;\n  if ((param_4 == (wchar_t *)0x0) || ((param_3 != 0 && (param_2 == (wchar_t *)0x0)))) {\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    FUN_00429087();\n    goto LAB_004241ee;\n  }\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_488,param_5);\n  pppppppwVar1 = local_464;\n  local_478 = (uint)param_1 & 2;\n  local_474 = local_464;\n  local_470 = param_3;\n  local_46c = 0;\n  if (((param_1 & 2) != 0) || (local_468 = 0, local_464 == (wchar_t *******)0x0)) {\n    local_468 = 1;\n  }\n  local_464 = (wchar_t *******)&local_474;\n  output_processor<>(local_460,&local_464,(uint)param_1,param_1._4_4_,param_4,local_484,param_6);\n  iVar3 = __crt_stdio_output::\n          output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n          ::process(local_460);\n  if (pppppppwVar1 != (wchar_t *******)0x0) {\n    if ((param_1 & 1) == 0) {\n      if (local_478 == 0) {\n        if (param_3 != 0) {\n          if (local_46c != param_3) goto LAB_004241c3;\nLAB_00424213:\n          *(undefined2 *)((int)pppppppwVar1 + (param_3 - 1) * 2) = 0;\n        }\n      }\n      else if (param_3 != 0) {\n        if (-1 < iVar3) {\n          if (local_46c == param_3) goto LAB_00424213;\n          goto LAB_004241c3;\n        }\n        *(undefined2 *)pppppppwVar1 = 0;\n      }\n    }\n    else if (((param_3 != 0) || (iVar3 == 0)) && (local_46c != param_3)) {\nLAB_004241c3:\n      *(undefined2 *)((int)pppppppwVar1 + local_46c * 2) = 0;\n    }\n  }\n  __crt_stdio_output::formatting_buffer::~formatting_buffer(local_420);\n  if (local_47c != '\\0') {\n    *(uint *)(local_488 + 0x350) = *(uint *)(local_488 + 0x350) & 0xfffffffd;\n  }\nLAB_004241ee:\n  iVar3 = FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return iVar3;\n}\n\n"
    },
    {
      "name": "count<char>",
      "entry": "0042421c",
      "c": "\n/* Library Function - Single Match\n    public: unsigned int __thiscall __crt_stdio_output::formatting_buffer::count<char>(void)const \n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nuint __thiscall __crt_stdio_output::formatting_buffer::count<char>(formatting_buffer *this)\n\n{\n  if (*(int *)(this + 0x404) == 0) {\n    return 0x200;\n  }\n  return *(uint *)(this + 0x400) >> 1;\n}\n\n"
    },
    {
      "name": "ensure_buffer_is_big_enough<char>",
      "entry": "00424234",
      "c": "\n/* Library Function - Single Match\n    public: bool __thiscall\n   __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>(unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __thiscall\n__crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>\n          (formatting_buffer *this,uint param_1)\n\n{\n  uint uVar1;\n  int *piVar2;\n  bool bVar3;\n  formatting_buffer *local_8;\n  \n  local_8 = this;\n  if (((uint)(0xffffffff / (ulonglong)param_1) & 0xfffffffe) < 2) {\n    piVar2 = __errno();\n    *piVar2 = 0xc;\n    bVar3 = false;\n  }\n  else {\n    uVar1 = param_1 * 2;\n    if (((*(int *)(this + 0x404) == 0) && (uVar1 < 0x401)) || (uVar1 <= *(uint *)(this + 0x400))) {\n      bVar3 = true;\n    }\n    else {\n      local_8 = (formatting_buffer *)__malloc_base(uVar1);\n      bVar3 = local_8 != (formatting_buffer *)0x0;\n      if (bVar3) {\n        __crt_unique_heap_ptr<char,struct___crt_internal_free_policy>::operator=\n                  ((__crt_unique_heap_ptr<char,struct___crt_internal_free_policy> *)(this + 0x404),\n                   (__crt_unique_heap_ptr<char,struct___crt_internal_free_policy> *)&local_8);\n        *(uint *)(this + 0x400) = uVar1;\n      }\n      FID_conflict__free(local_8);\n    }\n  }\n  return bVar3;\n}\n\n"
    },
    {
      "name": "is_wide_character_specifier<char>",
      "entry": "004242ba",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl __crt_stdio_output::is_wide_character_specifier<char>(unsigned __int64,char,enum\n   __crt_stdio_output::length_modifier)\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nbool __cdecl\n__crt_stdio_output::is_wide_character_specifier<char>\n          (__uint64 param_1,char param_2,length_modifier param_3)\n\n{\n  bool bVar1;\n  \n  if (param_3 != 2) {\n    if ((param_3 == 3) || (param_3 == 0xc)) {\n      return true;\n    }\n    if (param_3 != 0xd) {\n      if ((param_2 == 'c') || (param_2 == 's')) {\n        bVar1 = true;\n      }\n      else {\n        bVar1 = false;\n      }\n      return !bVar1;\n    }\n  }\n  return false;\n}\n\n"
    },
    {
      "name": "is_wide_character_specifier<wchar_t>",
      "entry": "004242fa",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl __crt_stdio_output::is_wide_character_specifier<wchar_t>(unsigned\n   __int64,wchar_t,enum __crt_stdio_output::length_modifier)\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nbool __cdecl\n__crt_stdio_output::is_wide_character_specifier<wchar_t>\n          (__uint64 param_1,wchar_t param_2,length_modifier param_3)\n\n{\n  bool bVar1;\n  \n  if (param_3 == 2) {\n    return false;\n  }\n  if (((param_3 != 3) && (param_3 != 0xc)) && (param_3 != 0xd)) {\n    bVar1 = false;\n    if ((param_2 == L'c') || (param_2 == L's')) {\n      bVar1 = true;\n    }\n    return ((param_1 & 4) != 0) == bVar1;\n  }\n  return true;\n}\n\n"
    },
    {
      "name": "scratch_data<char>",
      "entry": "00424349",
      "c": "\n/* Library Function - Single Match\n    public: char * __thiscall __crt_stdio_output::formatting_buffer::scratch_data<char>(void)\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nchar * __thiscall __crt_stdio_output::formatting_buffer::scratch_data<char>(formatting_buffer *this)\n\n{\n  int iVar1;\n  uint uVar2;\n  formatting_buffer *pfVar3;\n  \n  iVar1 = *(int *)(this + 0x404);\n  uVar2 = count<char>(this);\n  if (iVar1 == 0) {\n    pfVar3 = this + uVar2;\n  }\n  else {\n    pfVar3 = (formatting_buffer *)(uVar2 + iVar1);\n  }\n  return (char *)pfVar3;\n}\n\n"
    },
    {
      "name": "type_case_integer_parse_into_buffer<>",
      "entry": "00424367",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_integer_parse_into_buffer<unsigned int>(unsigned int,unsigned int,bool)\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_integer_parse_into_buffer<unsigned int>(unsigned int,unsigned int,bool)\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned\n   int>(unsigned int,unsigned int,bool)\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::type_case_integer_parse_into_buffer<unsigned int>(unsigned int,unsigned int,bool)\n     12 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\ntype_case_integer_parse_into_buffer<>(void *this,uint param_1,uint param_2,char param_3)\n\n{\n  uint uVar1;\n  char cVar2;\n  formatting_buffer *pfVar3;\n  \n  pfVar3 = *(formatting_buffer **)((int)this + 0x444);\n  if (*(formatting_buffer **)((int)this + 0x444) == (formatting_buffer *)0x0) {\n    pfVar3 = (formatting_buffer *)((int)this + 0x40);\n  }\n  uVar1 = __crt_stdio_output::formatting_buffer::count<char>\n                    ((formatting_buffer *)((int)this + 0x40));\n  *(formatting_buffer **)((int)this + 0x34) = pfVar3 + (uVar1 - 1);\n  while ((0 < *(int *)((int)this + 0x28) || (param_1 != 0))) {\n    cVar2 = (char)(param_1 % param_2) + '0';\n    *(int *)((int)this + 0x28) = *(int *)((int)this + 0x28) + -1;\n    if ('9' < cVar2) {\n      cVar2 = cVar2 + ((param_3 == '\\0') - 1U & 0xe0) + 0x27;\n    }\n    **(char **)((int)this + 0x34) = cVar2;\n    *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + -1;\n    param_1 = param_1 / param_2;\n  }\n  *(int *)((int)this + 0x38) = (int)(pfVar3 + (uVar1 - 1)) - *(int *)((int)this + 0x34);\n  *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + 1;\n  return;\n}\n\n"
    },
    {
      "name": "type_case_integer_parse_into_buffer<>",
      "entry": "004243dc",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_integer_parse_into_buffer<unsigned __int64>(unsigned __int64,unsigned int,bool)\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_integer_parse_into_buffer<unsigned __int64>(unsigned __int64,unsigned int,bool)\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned\n   __int64>(unsigned __int64,unsigned int,bool)\n    private: void __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::type_case_integer_parse_into_buffer<unsigned __int64>(unsigned __int64,unsigned int,bool)\n     12 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\ntype_case_integer_parse_into_buffer<>(void *this,longlong param_1,uint param_2,char param_3)\n\n{\n  uint uVar1;\n  char extraout_CL;\n  char cVar2;\n  formatting_buffer *pfVar3;\n  \n  pfVar3 = *(formatting_buffer **)((int)this + 0x444);\n  if (*(formatting_buffer **)((int)this + 0x444) == (formatting_buffer *)0x0) {\n    pfVar3 = (formatting_buffer *)((int)this + 0x40);\n  }\n  uVar1 = __crt_stdio_output::formatting_buffer::count<char>\n                    ((formatting_buffer *)((int)this + 0x40));\n  *(formatting_buffer **)((int)this + 0x34) = pfVar3 + (uVar1 - 1);\n  while( true ) {\n    if ((*(int *)((int)this + 0x28) < 1) && (param_1 == 0)) break;\n    *(int *)((int)this + 0x28) = *(int *)((int)this + 0x28) + -1;\n    param_1 = __aulldvrm((uint)param_1,(uint)((ulonglong)param_1 >> 0x20),param_2,0);\n    cVar2 = extraout_CL + '0';\n    if ('9' < cVar2) {\n      cVar2 = cVar2 + ((param_3 == '\\0') - 1U & 0xe0) + 0x27;\n    }\n    **(char **)((int)this + 0x34) = cVar2;\n    *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + -1;\n  }\n  *(int *)((int)this + 0x38) = (int)(pfVar3 + (uVar1 - 1)) - *(int *)((int)this + 0x34);\n  *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + 1;\n  return;\n}\n\n"
    },
    {
      "name": "write_multiple_characters<class___crt_stdio_output::string_output_adapter<char>,char>",
      "entry": "00424464",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __crt_stdio_output::write_multiple_characters<class\n   __crt_stdio_output::string_output_adapter<char>,char>(class\n   __crt_stdio_output::string_output_adapter<char> const &,char,int,int * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__crt_stdio_output::\nwrite_multiple_characters<class___crt_stdio_output::string_output_adapter<char>,char>\n          (string_output_adapter<char> *param_1,char param_2,int param_3,int *param_4)\n\n{\n  int iVar1;\n  \n  iVar1 = 0;\n  if (0 < param_3) {\n    do {\n      string_output_adapter<char>::write_character(param_1,param_2,param_4);\n      if (*param_4 == -1) {\n        return;\n      }\n      iVar1 = iVar1 + 1;\n    } while (iVar1 < param_3);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "write_multiple_characters<class___crt_stdio_output::string_output_adapter<wchar_t>,char>",
      "entry": "00424490",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __crt_stdio_output::write_multiple_characters<class\n   __crt_stdio_output::string_output_adapter<wchar_t>,char>(class\n   __crt_stdio_output::string_output_adapter<wchar_t> const &,char,int,int * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__crt_stdio_output::\nwrite_multiple_characters<class___crt_stdio_output::string_output_adapter<wchar_t>,char>\n          (string_output_adapter<wchar_t> *param_1,char param_2,int param_3,int *param_4)\n\n{\n  int iVar1;\n  \n  iVar1 = 0;\n  if (0 < param_3) {\n    do {\n      string_output_adapter<wchar_t>::write_character(param_1,(short)param_2,param_4);\n      if (*param_4 == -1) {\n        return;\n      }\n      iVar1 = iVar1 + 1;\n    } while (iVar1 < param_3);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "common_data<char>",
      "entry": "004244c1",
      "c": "\n/* Library Function - Single Match\n    protected: __thiscall __crt_stdio_output::common_data<char>::common_data<char>(void)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\ncommon_data<char> * __thiscall\n__crt_stdio_output::common_data<char>::common_data<char>(common_data<char> *this)\n\n{\n  *(undefined4 *)this = 0;\n  *(undefined4 *)(this + 4) = 0;\n  *(undefined4 *)(this + 8) = 0;\n  *(undefined4 *)(this + 0xc) = 0;\n  *(undefined4 *)(this + 0x10) = 0;\n  *(undefined4 *)(this + 0x14) = 0;\n  *(undefined4 *)(this + 0x18) = 0;\n  *(undefined4 *)(this + 0x1c) = 0;\n  *(undefined4 *)(this + 0x20) = 0;\n  *(undefined4 *)(this + 0x24) = 0;\n  *(undefined4 *)(this + 0x28) = 0;\n  *(undefined2 *)(this + 0x30) = 0;\n  *(undefined4 *)(this + 0x38) = 0;\n  this[0x3c] = (common_data<char>)0x0;\n  *(undefined4 *)(this + 0x440) = 0;\n  *(undefined4 *)(this + 0x444) = 0;\n  return this;\n}\n\n"
    },
    {
      "name": "common_data<wchar_t>",
      "entry": "00424508",
      "c": "\n/* Library Function - Single Match\n    protected: __thiscall __crt_stdio_output::common_data<wchar_t>::common_data<wchar_t>(void)\n   \n   Library: Visual Studio 2015 Release */\n\ncommon_data<wchar_t> * __thiscall\n__crt_stdio_output::common_data<wchar_t>::common_data<wchar_t>(common_data<wchar_t> *this)\n\n{\n  *(undefined4 *)this = 0;\n  *(undefined2 *)(this + 0x32) = 0;\n  *(undefined4 *)(this + 4) = 0;\n  *(undefined4 *)(this + 8) = 0;\n  *(undefined4 *)(this + 0xc) = 0;\n  *(undefined4 *)(this + 0x10) = 0;\n  *(undefined4 *)(this + 0x14) = 0;\n  *(undefined4 *)(this + 0x18) = 0;\n  *(undefined4 *)(this + 0x1c) = 0;\n  *(undefined4 *)(this + 0x20) = 0;\n  *(undefined4 *)(this + 0x24) = 0;\n  *(undefined4 *)(this + 0x28) = 0;\n  this[0x30] = (common_data<wchar_t>)0x0;\n  *(undefined4 *)(this + 0x38) = 0;\n  this[0x3c] = (common_data<wchar_t>)0x0;\n  *(undefined4 *)(this + 0x440) = 0;\n  *(undefined4 *)(this + 0x444) = 0;\n  return this;\n}\n\n"
    },
    {
      "name": "output_adapter_data<>",
      "entry": "00424554",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    protected: __thiscall __crt_stdio_output::output_adapter_data<char,class\n   __crt_stdio_output::stream_output_adapter<char> >::output_adapter_data<char,class\n   __crt_stdio_output::stream_output_adapter<char> >(class\n   __crt_stdio_output::stream_output_adapter<char> const &,unsigned __int64,char const *\n   const,struct __crt_locale_pointers * const,char * const)\n    protected: __thiscall __crt_stdio_output::output_adapter_data<char,class\n   __crt_stdio_output::string_output_adapter<char> >::output_adapter_data<char,class\n   __crt_stdio_output::string_output_adapter<char> >(class\n   __crt_stdio_output::string_output_adapter<char> const &,unsigned __int64,char const *\n   const,struct __crt_locale_pointers * const,char * const)\n   \n   Library: Visual Studio 2015 Release */\n\ncommon_data<char> * __thiscall\noutput_adapter_data<>\n          (void *this,undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n          undefined4 param_5,undefined4 param_6)\n\n{\n  __crt_stdio_output::common_data<char>::common_data<char>((common_data<char> *)this);\n  *(undefined4 *)((int)this + 0x448) = *param_1;\n  *(undefined4 *)this = param_2;\n  *(undefined4 *)((int)this + 4) = param_3;\n  *(undefined4 *)((int)this + 8) = param_5;\n  *(undefined4 *)((int)this + 0x10) = param_4;\n  *(undefined4 *)((int)this + 0x14) = param_6;\n  return (common_data<char> *)this;\n}\n\n"
    },
    {
      "name": "output_adapter_data<>",
      "entry": "00424590",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    protected: __thiscall __crt_stdio_output::output_adapter_data<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> >::output_adapter_data<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> >(class\n   __crt_stdio_output::stream_output_adapter<wchar_t> const &,unsigned __int64,wchar_t const *\n   const,struct __crt_locale_pointers * const,char * const)\n    protected: __thiscall __crt_stdio_output::output_adapter_data<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> >::output_adapter_data<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> >(class\n   __crt_stdio_output::string_output_adapter<wchar_t> const &,unsigned __int64,wchar_t const *\n   const,struct __crt_locale_pointers * const,char * const)\n   \n   Library: Visual Studio 2015 Release */\n\ncommon_data<wchar_t> * __thiscall\noutput_adapter_data<>\n          (void *this,undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n          undefined4 param_5,undefined4 param_6)\n\n{\n  __crt_stdio_output::common_data<wchar_t>::common_data<wchar_t>((common_data<wchar_t> *)this);\n  *(undefined4 *)((int)this + 0x448) = *param_1;\n  *(undefined4 *)this = param_2;\n  *(undefined4 *)((int)this + 4) = param_3;\n  *(undefined4 *)((int)this + 8) = param_5;\n  *(undefined4 *)((int)this + 0x10) = param_4;\n  *(undefined4 *)((int)this + 0x14) = param_6;\n  return (common_data<wchar_t> *)this;\n}\n\n"
    },
    {
      "name": "output_processor<>",
      "entry": "004245cc",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    public: __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::string_output_adapter<char> > >::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::string_output_adapter<char> > >(class\n   __crt_stdio_output::string_output_adapter<char> const &,unsigned __int64,char const *\n   const,struct __crt_locale_pointers * const,char * const)\n    public: __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::output_processor<char,class __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >(class __crt_stdio_output::string_output_adapter<char> const &,unsigned __int64,char const *\n   const,struct __crt_locale_pointers * const,char * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid * __thiscall\noutput_processor<>(void *this,undefined4 *param_1,undefined4 param_2,undefined4 param_3,\n                  undefined4 param_4,undefined4 param_5,undefined4 param_6)\n\n{\n  int *piVar1;\n  \n  output_adapter_data<>(this,param_1,param_2,param_3,param_4,param_5,param_6);\n  *(undefined4 *)((int)this + 0x450) = 0;\n  piVar1 = __errno();\n  *(int **)((int)this + 0xc) = piVar1;\n  return this;\n}\n\n"
    },
    {
      "name": "output_processor<>",
      "entry": "00424601",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    public: __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >(class\n   __crt_stdio_output::string_output_adapter<wchar_t> const &,unsigned __int64,wchar_t const *\n   const,struct __crt_locale_pointers * const,char * const)\n    public: __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >(class\n   __crt_stdio_output::string_output_adapter<wchar_t> const &,unsigned __int64,wchar_t const *\n   const,struct __crt_locale_pointers * const,char * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid * __thiscall\noutput_processor<>(void *this,undefined4 *param_1,undefined4 param_2,undefined4 param_3,\n                  undefined4 param_4,undefined4 param_5,undefined4 param_6)\n\n{\n  int *piVar1;\n  \n  output_adapter_data<>(this,param_1,param_2,param_3,param_4,param_5,param_6);\n  *(undefined4 *)((int)this + 0x450) = 0;\n  piVar1 = __errno();\n  *(int **)((int)this + 0xc) = piVar1;\n  return this;\n}\n\n"
    },
    {
      "name": "_LocaleUpdate",
      "entry": "00424636",
      "c": "\n/* Library Function - Single Match\n    public: __thiscall _LocaleUpdate::_LocaleUpdate(struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\n_LocaleUpdate * __thiscall\n_LocaleUpdate::_LocaleUpdate(_LocaleUpdate *this,__crt_locale_pointers *param_1)\n\n{\n  uint uVar1;\n  undefined *puVar2;\n  __acrt_ptd *p_Var3;\n  \n  this[0xc] = (_LocaleUpdate)0x0;\n  if (param_1 == (__crt_locale_pointers *)0x0) {\n    if (DAT_00462264 != 0) {\n      p_Var3 = ___acrt_getptd();\n      *(__acrt_ptd **)this = p_Var3;\n      *(int *)(this + 4) = *(int *)(p_Var3 + 0x4c);\n      *(int *)(this + 8) = *(int *)(p_Var3 + 0x48);\n      ___acrt_update_locale_info((int)p_Var3,(int *)(this + 4));\n      ___acrt_update_multibyte_info(*(int *)this,(int *)(this + 8));\n      uVar1 = *(uint *)(*(int *)this + 0x350);\n      if ((uVar1 & 2) != 0) {\n        return this;\n      }\n      *(uint *)(*(int *)this + 0x350) = uVar1 | 2;\n      this[0xc] = (_LocaleUpdate)0x1;\n      return this;\n    }\n    *(undefined **)(this + 4) = PTR_PTR_0043e960;\n    puVar2 = PTR_DAT_0043e964;\n  }\n  else {\n    *(undefined4 *)(this + 4) = *(undefined4 *)param_1;\n    puVar2 = *(undefined **)(param_1 + 4);\n  }\n  *(undefined **)(this + 8) = puVar2;\n  return this;\n}\n\n"
    },
    {
      "name": "~formatting_buffer",
      "entry": "004246b9",
      "c": "\n/* Library Function - Single Match\n    public: __thiscall __crt_stdio_output::formatting_buffer::~formatting_buffer(void)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall __crt_stdio_output::formatting_buffer::~formatting_buffer(formatting_buffer *this)\n\n{\n  FID_conflict__free(*(void **)(this + 0x404));\n  *(undefined4 *)(this + 0x404) = 0;\n  return;\n}\n\n"
    },
    {
      "name": "operator=",
      "entry": "004246d3",
      "c": "\n/* Library Function - Single Match\n    public: class __crt_unique_heap_ptr<char,struct __crt_internal_free_policy> & __thiscall\n   __crt_unique_heap_ptr<char,struct __crt_internal_free_policy>::operator=(class\n   __crt_unique_heap_ptr<char,struct __crt_internal_free_policy> &&)\n   \n   Library: Visual Studio 2015 Release */\n\n__crt_unique_heap_ptr<char,struct___crt_internal_free_policy> * __thiscall\n__crt_unique_heap_ptr<char,struct___crt_internal_free_policy>::operator=\n          (__crt_unique_heap_ptr<char,struct___crt_internal_free_policy> *this,\n          __crt_unique_heap_ptr<char,struct___crt_internal_free_policy> *param_1)\n\n{\n  FID_conflict__free(*(void **)this);\n  *(undefined4 *)this = 0;\n  *(undefined4 *)this = *(undefined4 *)param_1;\n  *(undefined4 *)param_1 = 0;\n  return this;\n}\n\n"
    },
    {
      "name": "crop_zeroes",
      "entry": "004246f7",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __crt_stdio_output::crop_zeroes(char *,struct __crt_locale_pointers * const)\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nvoid __cdecl __crt_stdio_output::crop_zeroes(char *param_1,__crt_locale_pointers *param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  for (; (*param_1 != '\\0' && (*param_1 != *(char *)**(undefined4 **)(*(int *)param_2 + 0x88)));\n      param_1 = param_1 + 1) {\n  }\n  if (*param_1 != '\\0') {\n    do {\n      param_1 = param_1 + 1;\n      cVar1 = *param_1;\n      pcVar2 = param_1;\n      if ((cVar1 == '\\0') || (cVar1 == 'e')) break;\n    } while (cVar1 != 'E');\n    do {\n      pcVar3 = pcVar2;\n      pcVar2 = pcVar3 + -1;\n    } while (*pcVar2 == '0');\n    if (*pcVar2 == *(char *)**(undefined4 **)(*(int *)param_2 + 0x88)) {\n      pcVar2 = pcVar3 + -2;\n    }\n    do {\n      cVar1 = *param_1;\n      pcVar2 = pcVar2 + 1;\n      param_1 = param_1 + 1;\n      *pcVar2 = cVar1;\n    } while (cVar1 != '\\0');\n  }\n  return;\n}\n\n"
    },
    {
      "name": "find_next_state",
      "entry": "0042474e",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: enum __crt_stdio_output::state __thiscall\n   __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::find_next_state(char,enum __crt_stdio_output::state)const \n    private: enum __crt_stdio_output::state __thiscall\n   __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::find_next_state(char,enum __crt_stdio_output::state)const \n   \n   Library: Visual Studio 2015 Release */\n\nbyte find_next_state(char param_1,int param_2)\n\n{\n  uint uVar1;\n  \n  if ((byte)(param_1 - 0x20U) < 0x5b) {\n    uVar1 = (byte)(&DAT_00436398)[param_1] & 0xf;\n  }\n  else {\n    uVar1 = 0;\n  }\n  return (byte)(&DAT_004363b8)[uVar1 * 8 + param_2] >> 4;\n}\n\n"
    },
    {
      "name": "find_next_state",
      "entry": "00424780",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: enum __crt_stdio_output::state __thiscall\n   __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::find_next_state(wchar_t,enum\n   __crt_stdio_output::state)const \n    private: enum __crt_stdio_output::state __thiscall\n   __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::find_next_state(wchar_t,enum\n   __crt_stdio_output::state)const \n   \n   Library: Visual Studio 2015 Release */\n\nbyte find_next_state(ushort param_1,int param_2)\n\n{\n  uint uVar1;\n  \n  if ((ushort)(param_1 - 0x20) < 0x5b) {\n    uVar1 = (byte)(&DAT_00436398)[param_1] & 0xf;\n  }\n  else {\n    uVar1 = 0;\n  }\n  return (byte)(&DAT_004363b8)[uVar1 * 8 + param_2] >> 4;\n}\n\n"
    },
    {
      "name": "force_decimal_point",
      "entry": "004247b4",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __crt_stdio_output::force_decimal_point(char *,struct __crt_locale_pointers *\n   const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __crt_stdio_output::force_decimal_point(char *param_1,__crt_locale_pointers *param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  byte bVar3;\n  bool bVar4;\n  \n  iVar2 = _tolower((int)*param_1);\n  bVar4 = iVar2 == 0x65;\n  while (!bVar4) {\n    param_1 = (char *)((byte *)param_1 + 1);\n    iVar2 = _isdigit((uint)(byte)*param_1);\n    bVar4 = iVar2 == 0;\n  }\n  iVar2 = _tolower((int)*param_1);\n  if (iVar2 == 0x78) {\n    param_1 = (char *)((byte *)param_1 + 2);\n  }\n  bVar3 = *param_1;\n  *param_1 = *(byte *)**(undefined4 **)(*(int *)param_2 + 0x88);\n  do {\n    param_1 = (char *)((byte *)param_1 + 1);\n    bVar1 = *param_1;\n    *param_1 = bVar3;\n    bVar3 = bVar1;\n  } while (*param_1 != 0);\n  return;\n}\n\n"
    },
    {
      "name": "parse_int_from_format_string",
      "entry": "00424810",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::console_output_adapter<char> > >::parse_int_from_format_string(int * const)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::console_output_adapter<char> >\n   >::parse_int_from_format_string(int * const)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::stream_output_adapter<char> > >::parse_int_from_format_string(int * const)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::parse_int_from_format_string(int * const)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nuint __thiscall parse_int_from_format_string(void *this,long *param_1)\n\n{\n  int *piVar1;\n  int iVar2;\n  long lVar3;\n  uint uVar4;\n  int *piVar5;\n  int *local_8;\n  \n  piVar1 = *(int **)((int)this + 0xc);\n  iVar2 = *piVar1;\n  *piVar1 = 0;\n  local_8 = (int *)0x0;\n  lVar3 = _strtol((char *)(*(int *)((int)this + 0x10) + -1),(char **)&local_8,10);\n  *param_1 = lVar3;\n  piVar5 = *(int **)((int)this + 0xc);\n  if ((**(int **)((int)this + 0xc) == 0x22) ||\n     (piVar5 = local_8, local_8 < *(int **)((int)this + 0x10))) {\n    uVar4 = (uint)piVar5 & 0xffffff00;\n  }\n  else {\n    *(int **)((int)this + 0x10) = local_8;\n    uVar4 = CONCAT31((int3)((uint)local_8 >> 8),1);\n  }\n  if ((*piVar1 == 0) && (iVar2 != 0)) {\n    *piVar1 = iVar2;\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "parse_int_from_format_string",
      "entry": "0042486c",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::parse_int_from_format_string(int *\n   const)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::parse_int_from_format_string(int *\n   const)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::parse_int_from_format_string(int * const)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::parse_int_from_format_string(int * const)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nuint __thiscall parse_int_from_format_string(void *this,long *param_1)\n\n{\n  int *piVar1;\n  int iVar2;\n  long lVar3;\n  uint uVar4;\n  wchar_t *pwVar5;\n  wchar_t *local_8;\n  \n  piVar1 = *(int **)((int)this + 0xc);\n  iVar2 = *piVar1;\n  *piVar1 = 0;\n  local_8 = (wchar_t *)0x0;\n  lVar3 = _wcstol((wchar_t *)(*(int *)((int)this + 0x10) + -2),&local_8,10);\n  *param_1 = lVar3;\n  pwVar5 = *(wchar_t **)((int)this + 0xc);\n  if ((*(int *)*(wchar_t **)((int)this + 0xc) == 0x22) ||\n     (pwVar5 = local_8, local_8 < *(wchar_t **)((int)this + 0x10))) {\n    uVar4 = (uint)pwVar5 & 0xffffff00;\n  }\n  else {\n    *(wchar_t **)((int)this + 0x10) = local_8;\n    uVar4 = CONCAT31((int3)((uint)local_8 >> 8),1);\n  }\n  if ((*piVar1 == 0) && (iVar2 != 0)) {\n    *piVar1 = iVar2;\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "process",
      "entry": "004248ca",
      "c": "\n/* Library Function - Single Match\n    public: int __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::process(void)\n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n__crt_stdio_output::\noutput_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n::process(output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n          *this)\n\n{\n  output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n  oVar1;\n  bool bVar2;\n  byte bVar3;\n  char cVar4;\n  int *piVar5;\n  int iVar6;\n  undefined3 extraout_var;\n  undefined4 uVar7;\n  \n  bVar2 = __crt_strtox::c_string_character_source<wchar_t>::validate\n                    ((c_string_character_source<wchar_t> *)(this + 0x448));\n  if (!bVar2) {\n    return -1;\n  }\n  if (*(int *)(this + 0x10) == 0) {\nLAB_004248ef:\n    piVar5 = __errno();\n    *piVar5 = 0x16;\n    FUN_00429087();\nswitchD_0042493a_default:\n    iVar6 = -1;\n  }\n  else {\nLAB_004249aa:\n    *(int *)(this + 0x450) = *(int *)(this + 0x450) + 1;\n    if (*(int *)(this + 0x450) != 2) {\n      *(undefined4 *)(this + 0x38) = 0;\n      *(undefined4 *)(this + 0x1c) = 0;\nLAB_00424997:\n      oVar1 = **(output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                 **)(this + 0x10);\n      this[0x31] = oVar1;\n      if (oVar1 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x0) {\n        *(int *)(this + 0x10) = *(int *)(this + 0x10) + 1;\n        if (*(int *)(this + 0x18) < 0) goto LAB_004249aa;\n        bVar3 = find_next_state((char)this[0x31],*(int *)(this + 0x1c));\n        iVar6 = CONCAT31(extraout_var,bVar3);\n        *(int *)(this + 0x1c) = iVar6;\n        if (iVar6 == 8) goto LAB_004248ef;\n        switch(iVar6) {\n        case 0:\n          uVar7 = state_case_normal((int)this);\n          cVar4 = (char)uVar7;\n          break;\n        case 1:\n          *(undefined4 *)(this + 0x28) = 0xffffffff;\n          *(undefined4 *)(this + 0x24) = 0;\n          this[0x30] = (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                        )0x0;\n          *(undefined4 *)(this + 0x20) = 0;\n          *(undefined4 *)(this + 0x2c) = 0;\n          this[0x3c] = (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                        )0x0;\n          goto LAB_00424997;\n        case 2:\n          uVar7 = state_case_flag((int)this);\n          cVar4 = (char)uVar7;\n          break;\n        case 3:\n          uVar7 = state_case_width(this);\n          cVar4 = (char)uVar7;\n          break;\n        case 4:\n          goto switchD_0042493a_caseD_4;\n        case 5:\n          uVar7 = state_case_precision(this);\n          cVar4 = (char)uVar7;\n          break;\n        case 6:\n          cVar4 = state_case_size(this);\n          break;\n        case 7:\n          cVar4 = state_case_type(this);\n          break;\n        default:\n          goto switchD_0042493a_default;\n        }\n        if (cVar4 == '\\0') goto switchD_0042493a_default;\n        goto LAB_00424997;\n      }\n      *(int *)(this + 0x10) = *(int *)(this + 0x10) + 1;\n      goto LAB_004249aa;\n    }\n    iVar6 = *(int *)(this + 0x18);\n  }\n  return iVar6;\nswitchD_0042493a_caseD_4:\n  *(undefined4 *)(this + 0x28) = 0;\n  goto LAB_00424997;\n}\n\n"
    },
    {
      "name": "process",
      "entry": "004249e6",
      "c": "\n/* Library Function - Single Match\n    public: int __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::process(void)\n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n__crt_stdio_output::\noutput_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n::process(output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n          *this)\n\n{\n  short sVar1;\n  bool bVar2;\n  byte bVar3;\n  char cVar4;\n  int *piVar5;\n  int iVar6;\n  undefined3 extraout_var;\n  undefined4 uVar7;\n  \n  bVar2 = __crt_strtox::c_string_character_source<wchar_t>::validate\n                    ((c_string_character_source<wchar_t> *)(this + 0x448));\n  if (!bVar2) {\n    return -1;\n  }\n  if (*(int *)(this + 0x10) == 0) {\nLAB_00424a0b:\n    piVar5 = __errno();\n    *piVar5 = 0x16;\n    FUN_00429087();\nswitchD_00424a57_default:\n    iVar6 = -1;\n  }\n  else {\nLAB_00424acb:\n    *(int *)(this + 0x450) = *(int *)(this + 0x450) + 1;\n    if (*(int *)(this + 0x450) != 2) {\n      *(undefined4 *)(this + 0x38) = 0;\n      *(undefined4 *)(this + 0x1c) = 0;\nLAB_00424ab4:\n      sVar1 = **(short **)(this + 0x10);\n      *(short *)(this + 0x32) = sVar1;\n      if (sVar1 != 0) {\n        *(int *)(this + 0x10) = *(int *)(this + 0x10) + 2;\n        if (*(int *)(this + 0x18) < 0) goto LAB_00424acb;\n        bVar3 = find_next_state(*(ushort *)(this + 0x32),*(int *)(this + 0x1c));\n        iVar6 = CONCAT31(extraout_var,bVar3);\n        *(int *)(this + 0x1c) = iVar6;\n        if (iVar6 == 8) goto LAB_00424a0b;\n        switch(iVar6) {\n        case 0:\n          uVar7 = state_case_normal((int)this);\n          cVar4 = (char)uVar7;\n          break;\n        case 1:\n          *(undefined4 *)(this + 0x28) = 0xffffffff;\n          *(undefined4 *)(this + 0x24) = 0;\n          this[0x30] = (output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n                        )0x0;\n          *(undefined4 *)(this + 0x20) = 0;\n          *(undefined4 *)(this + 0x2c) = 0;\n          this[0x3c] = (output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n                        )0x0;\n          goto LAB_00424ab4;\n        case 2:\n          uVar7 = state_case_flag((int)this);\n          cVar4 = (char)uVar7;\n          break;\n        case 3:\n          uVar7 = state_case_width(this);\n          cVar4 = (char)uVar7;\n          break;\n        case 4:\n          goto switchD_00424a57_caseD_4;\n        case 5:\n          uVar7 = state_case_precision(this);\n          cVar4 = (char)uVar7;\n          break;\n        case 6:\n          cVar4 = state_case_size(this);\n          break;\n        case 7:\n          cVar4 = state_case_type(this);\n          break;\n        default:\n          goto switchD_00424a57_default;\n        }\n        if (cVar4 == '\\0') goto switchD_00424a57_default;\n        goto LAB_00424ab4;\n      }\n      *(int *)(this + 0x10) = *(int *)(this + 0x10) + 2;\n      goto LAB_00424acb;\n    }\n    iVar6 = *(int *)(this + 0x18);\n  }\n  return iVar6;\nswitchD_00424a57_caseD_4:\n  *(undefined4 *)(this + 0x28) = 0;\n  goto LAB_00424ab4;\n}\n\n"
    },
    {
      "name": "state_case_flag",
      "entry": "00424b06",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::state_case_flag(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_flag(void)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall state_case_flag(int param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (int)*(char *)(param_1 + 0x31);\n  if (iVar1 == 0x20) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 2;\n    iVar1 = 0;\n  }\n  else if (iVar1 == 0x23) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 0x20;\n    iVar1 = 0;\n  }\n  else if (iVar1 == 0x2b) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 1;\n    iVar1 = 0;\n  }\n  else if (iVar1 == 0x2d) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 4;\n    iVar1 = 0;\n  }\n  else {\n    iVar1 = iVar1 + -0x30;\n    if (iVar1 == 0) {\n      *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 8;\n    }\n  }\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "state_case_flag",
      "entry": "00424b43",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::state_case_flag(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_flag(void)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall state_case_flag(int param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = (uint)*(ushort *)(param_1 + 0x32);\n  if (uVar1 == 0x20) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 2;\n    iVar2 = 0;\n  }\n  else if (uVar1 == 0x23) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 0x20;\n    iVar2 = 0;\n  }\n  else if (uVar1 == 0x2b) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 1;\n    iVar2 = 0;\n  }\n  else if (uVar1 == 0x2d) {\n    *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 4;\n    iVar2 = 0;\n  }\n  else {\n    iVar2 = uVar1 - 0x30;\n    if (iVar2 == 0) {\n      *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 8;\n    }\n  }\n  return CONCAT31((int3)((uint)iVar2 >> 8),1);\n}\n\n"
    },
    {
      "name": "state_case_normal",
      "entry": "00424b80",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::state_case_normal(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_normal(void)\n   \n   Library: Visual Studio 2015 Release */\n\nuint __fastcall state_case_normal(int param_1)\n\n{\n  uint uVar1;\n  int *piVar2;\n  \n  uVar1 = state_case_normal_common(param_1);\n  if ((char)uVar1 == '\\0') {\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    uVar1 = FUN_00429087();\n    return uVar1 & 0xffffff00;\n  }\n  return CONCAT31((int3)(uVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "state_case_normal",
      "entry": "00424b9f",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::state_case_normal(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_normal(void)\n   \n   Library: Visual Studio 2015 Release */\n\nuint __fastcall state_case_normal(int param_1)\n\n{\n  char cVar1;\n  undefined3 extraout_var;\n  int *piVar2;\n  uint uVar3;\n  \n  cVar1 = state_case_normal_common(param_1);\n  if (cVar1 == '\\0') {\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    uVar3 = FUN_00429087();\n    return uVar3 & 0xffffff00;\n  }\n  return CONCAT31(extraout_var,1);\n}\n\n"
    },
    {
      "name": "state_case_normal_common",
      "entry": "00424bbe",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::string_output_adapter<char> > >::state_case_normal_common(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_normal_common(void)\n   \n   Library: Visual Studio 2015 Release */\n\nuint __fastcall state_case_normal_common(int param_1)\n\n{\n  uint uVar1;\n  undefined3 extraout_var;\n  \n  uVar1 = state_case_normal_tchar(param_1);\n  if ((char)uVar1 == '\\0') {\n    return uVar1;\n  }\n  __crt_stdio_output::string_output_adapter<char>::write_character\n            ((string_output_adapter<char> *)(param_1 + 0x448),*(char *)(param_1 + 0x31),\n             (int *)(param_1 + 0x18));\n  return CONCAT31(extraout_var,1);\n}\n\n"
    },
    {
      "name": "state_case_normal_common",
      "entry": "00424be8",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_normal_common(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_normal_common(void)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined1 __fastcall state_case_normal_common(int param_1)\n\n{\n  *(undefined1 *)(param_1 + 0x3c) = 1;\n  __crt_stdio_output::string_output_adapter<wchar_t>::write_character\n            ((string_output_adapter<wchar_t> *)(param_1 + 0x448),*(wchar_t *)(param_1 + 0x32),\n             (int *)(param_1 + 0x18));\n  return 1;\n}\n\n"
    },
    {
      "name": "state_case_normal_tchar",
      "entry": "00424c03",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::string_output_adapter<char> > >::state_case_normal_tchar(char)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::positional_parameter_base<char,class\n   __crt_stdio_output::string_output_adapter<char> > >::state_case_normal_tchar(char)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_normal_tchar(char)\n   \n   Library: Visual Studio 2015 Release */\n\nuint __fastcall state_case_normal_tchar(int param_1)\n\n{\n  int *piVar1;\n  uint uVar2;\n  undefined1 *puVar3;\n  \n  *(undefined1 *)(param_1 + 0x3c) = 0;\n  puVar3 = *(undefined1 **)**(undefined4 **)(param_1 + 8);\n  if ((*(ushort *)(puVar3 + (uint)*(byte *)(param_1 + 0x31) * 2) & 0x8000) != 0) {\n    __crt_stdio_output::string_output_adapter<char>::write_character\n              ((string_output_adapter<char> *)(param_1 + 0x448),*(byte *)(param_1 + 0x31),\n               (int *)(param_1 + 0x18));\n    *(undefined1 *)(param_1 + 0x31) = **(undefined1 **)(param_1 + 0x10);\n    puVar3 = *(undefined1 **)(param_1 + 0x10) + 1;\n    *(undefined1 **)(param_1 + 0x10) = puVar3;\n    if (*(char *)(param_1 + 0x31) == '\\0') {\n      piVar1 = __errno();\n      *piVar1 = 0x16;\n      uVar2 = FUN_00429087();\n      return uVar2 & 0xffffff00;\n    }\n  }\n  return CONCAT31((int3)((uint)puVar3 >> 8),1);\n}\n\n"
    },
    {
      "name": "state_case_precision",
      "entry": "00424c64",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::state_case_precision(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_precision(void)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall state_case_precision(void *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if (*(char *)((int)param_1 + 0x31) != '*') {\n    uVar2 = parse_int_from_format_string(param_1,(long *)((int)param_1 + 0x28));\n    return uVar2;\n  }\n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  iVar1 = *(int *)(*(int *)((int)param_1 + 0x14) + -4);\n  *(int *)((int)param_1 + 0x28) = iVar1;\n  if (iVar1 < 0) {\n    *(undefined4 *)((int)param_1 + 0x28) = 0xffffffff;\n  }\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "state_case_precision",
      "entry": "00424c8c",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::state_case_precision(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_precision(void)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall state_case_precision(void *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if (*(short *)((int)param_1 + 0x32) != 0x2a) {\n    uVar2 = parse_int_from_format_string(param_1,(long *)((int)param_1 + 0x28));\n    return uVar2;\n  }\n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  iVar1 = *(int *)(*(int *)((int)param_1 + 0x14) + -4);\n  *(int *)((int)param_1 + 0x28) = iVar1;\n  if (iVar1 < 0) {\n    *(undefined4 *)((int)param_1 + 0x28) = 0xffffffff;\n  }\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "state_case_size",
      "entry": "00424cb5",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::state_case_size(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_size(void)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __fastcall\nstate_case_size(output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                *param_1)\n\n{\n  output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n  oVar1;\n  char cVar2;\n  char *pcVar3;\n  bool bVar4;\n  int *piVar5;\n  \n  oVar1 = param_1[0x31];\n  if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                )0x46) {\n    if ((*(uint *)param_1 & 8) == 0) {\n      *(undefined4 *)(param_1 + 0x1c) = 7;\n      bVar4 = __crt_stdio_output::\n              output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n              ::state_case_type(param_1);\n      return bVar4;\n    }\n  }\n  else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                     )0x4e) {\n    if ((*(uint *)param_1 & 8) == 0) {\n      *(undefined4 *)(param_1 + 0x1c) = 8;\nLAB_00424ced:\n      piVar5 = __errno();\n      *piVar5 = 0x16;\n      FUN_00429087();\n      return false;\n    }\n  }\n  else {\n    if (*(int *)(param_1 + 0x2c) != 0) goto LAB_00424ced;\n    if ((char)oVar1 < 'k') {\n      if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x6a) {\n        *(undefined4 *)(param_1 + 0x2c) = 5;\n      }\n      else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                         )0x49) {\n        pcVar3 = *(char **)(param_1 + 0x10);\n        cVar2 = *pcVar3;\n        if ((cVar2 == '3') && (pcVar3[1] == '2')) {\n          *(undefined4 *)(param_1 + 0x2c) = 10;\n          *(char **)(param_1 + 0x10) = pcVar3 + 2;\n        }\n        else if ((cVar2 == '6') && (pcVar3[1] == '4')) {\n          *(undefined4 *)(param_1 + 0x2c) = 0xb;\n          *(char **)(param_1 + 0x10) = pcVar3 + 2;\n        }\n        else if ((((cVar2 == 'd') || (cVar2 == 'i')) || (cVar2 == 'o')) ||\n                (((cVar2 == 'u' || (cVar2 == 'x')) || (cVar2 == 'X')))) {\n          *(undefined4 *)(param_1 + 0x2c) = 9;\n        }\n      }\n      else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                         )0x4c) {\n        *(undefined4 *)(param_1 + 0x2c) = 8;\n      }\n      else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                         )0x54) {\n        *(undefined4 *)(param_1 + 0x2c) = 0xd;\n      }\n      else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                         )0x68) {\n        if (**(char **)(param_1 + 0x10) == 'h') {\n          *(undefined4 *)(param_1 + 0x2c) = 1;\n          *(char **)(param_1 + 0x10) = *(char **)(param_1 + 0x10) + 1;\n        }\n        else {\n          *(undefined4 *)(param_1 + 0x2c) = 2;\n        }\n      }\n    }\n    else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                       )0x6c) {\n      if (**(char **)(param_1 + 0x10) == 'l') {\n        *(undefined4 *)(param_1 + 0x2c) = 4;\n        *(char **)(param_1 + 0x10) = *(char **)(param_1 + 0x10) + 1;\n      }\n      else {\n        *(undefined4 *)(param_1 + 0x2c) = 3;\n      }\n    }\n    else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                       )0x74) {\n      *(undefined4 *)(param_1 + 0x2c) = 7;\n    }\n    else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                       )0x77) {\n      *(undefined4 *)(param_1 + 0x2c) = 0xc;\n    }\n    else if (oVar1 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                       )0x7a) {\n      *(undefined4 *)(param_1 + 0x2c) = 6;\n    }\n  }\n  return true;\n}\n\n"
    },
    {
      "name": "state_case_size",
      "entry": "00424e1e",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::state_case_size(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_size(void)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __fastcall\nstate_case_size(output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n                *param_1)\n\n{\n  ushort uVar1;\n  short sVar2;\n  short *psVar3;\n  bool bVar4;\n  int *piVar5;\n  \n  uVar1 = *(ushort *)(param_1 + 0x32);\n  if (uVar1 == 0x46) {\n    if ((*(uint *)param_1 & 8) == 0) {\n      *(undefined4 *)(param_1 + 0x1c) = 7;\n      bVar4 = __crt_stdio_output::\n              output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n              ::state_case_type(param_1);\n      return bVar4;\n    }\n  }\n  else if (uVar1 == 0x4e) {\n    if ((*(uint *)param_1 & 8) == 0) {\n      *(undefined4 *)(param_1 + 0x1c) = 8;\nLAB_00424e59:\n      piVar5 = __errno();\n      *piVar5 = 0x16;\n      FUN_00429087();\n      return false;\n    }\n  }\n  else {\n    if (*(int *)(param_1 + 0x2c) != 0) goto LAB_00424e59;\n    if (uVar1 < 0x6b) {\n      if (uVar1 == 0x6a) {\n        *(undefined4 *)(param_1 + 0x2c) = 5;\n      }\n      else if (uVar1 == 0x49) {\n        psVar3 = *(short **)(param_1 + 0x10);\n        sVar2 = *psVar3;\n        if ((sVar2 == 0x33) && (psVar3[1] == 0x32)) {\n          *(undefined4 *)(param_1 + 0x2c) = 10;\n          *(short **)(param_1 + 0x10) = psVar3 + 2;\n        }\n        else if ((sVar2 == 0x36) && (psVar3[1] == 0x34)) {\n          *(undefined4 *)(param_1 + 0x2c) = 0xb;\n          *(short **)(param_1 + 0x10) = psVar3 + 2;\n        }\n        else if ((((sVar2 == 100) || (sVar2 == 0x69)) || (sVar2 == 0x6f)) ||\n                (((sVar2 == 0x75 || (sVar2 == 0x78)) || (sVar2 == 0x58)))) {\n          *(undefined4 *)(param_1 + 0x2c) = 9;\n        }\n      }\n      else if (uVar1 == 0x4c) {\n        *(undefined4 *)(param_1 + 0x2c) = 8;\n      }\n      else if (uVar1 == 0x54) {\n        *(undefined4 *)(param_1 + 0x2c) = 0xd;\n      }\n      else if (uVar1 == 0x68) {\n        if (**(short **)(param_1 + 0x10) == 0x68) {\n          *(undefined4 *)(param_1 + 0x2c) = 1;\n          *(short **)(param_1 + 0x10) = *(short **)(param_1 + 0x10) + 1;\n        }\n        else {\n          *(undefined4 *)(param_1 + 0x2c) = 2;\n        }\n      }\n    }\n    else if (uVar1 == 0x6c) {\n      if (**(short **)(param_1 + 0x10) == 0x6c) {\n        *(undefined4 *)(param_1 + 0x2c) = 4;\n        *(short **)(param_1 + 0x10) = *(short **)(param_1 + 0x10) + 1;\n      }\n      else {\n        *(undefined4 *)(param_1 + 0x2c) = 3;\n      }\n    }\n    else if (uVar1 == 0x74) {\n      *(undefined4 *)(param_1 + 0x2c) = 7;\n    }\n    else if (uVar1 == 0x77) {\n      *(undefined4 *)(param_1 + 0x2c) = 0xc;\n    }\n    else if (uVar1 == 0x7a) {\n      *(undefined4 *)(param_1 + 0x2c) = 6;\n    }\n  }\n  return true;\n}\n\n"
    },
    {
      "name": "state_case_type",
      "entry": "00424f9a",
      "c": "\n/* Library Function - Single Match\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_type(void)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __thiscall\n__crt_stdio_output::\noutput_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n::state_case_type(output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                  *this)\n\n{\n  output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n  *poVar1;\n  output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n  oVar2;\n  bool bVar3;\n  char cVar4;\n  undefined4 uVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  undefined4 local_8;\n  \n  iVar6 = 1;\n  oVar2 = this[0x31];\n  local_8 = this;\n  if ((char)oVar2 < 'e') {\n    if (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                  )0x64) {\nLAB_0042504b:\n      *(uint *)(this + 0x20) = *(uint *)(this + 0x20) | 0x10;\n      goto LAB_0042504f;\n    }\n    if ('X' < (char)oVar2) {\n      if (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x5a) {\n        uVar5 = type_case_Z((__uint64 *)this);\n        cVar4 = (char)uVar5;\n        goto LAB_00424fe7;\n      }\n      if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x61) {\n        if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                      )0x63) {\n          return false;\n        }\nLAB_0042500b:\n        uVar5 = type_case_c_tchar((__uint64 *)this);\n        cVar4 = (char)uVar5;\n        goto LAB_00424fe7;\n      }\nLAB_0042505b:\n      uVar5 = type_case_a((uint *)this);\n      cVar4 = (char)uVar5;\n      goto LAB_00424fe7;\n    }\n    if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                  )0x58) {\n      if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x41) {\n        if (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                      )0x43) goto LAB_0042500b;\n        if ((char)oVar2 < 'E') {\n          return false;\n        }\n        if ('G' < (char)oVar2) {\n          if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                        )0x53) {\n            return false;\n          }\n          goto LAB_00424fe0;\n        }\n      }\n      goto LAB_0042505b;\n    }\n    cVar4 = '\\x01';\nLAB_00424ff7:\n    uVar8 = 0x10;\n  }\n  else {\n    if ((char)oVar2 < 'q') {\n      if (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x70) {\n        cVar4 = type_case_p(this);\n        goto LAB_00424fe7;\n      }\n      if ((char)oVar2 < 'h') goto LAB_0042505b;\n      if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x69) {\n        if (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                      )0x6e) {\n          uVar8 = type_case_n((int)this);\n          cVar4 = (char)uVar8;\n        }\n        else {\n          if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                        )0x6f) {\n            return false;\n          }\n          cVar4 = type_case_o(this);\n        }\n        goto LAB_00424fe7;\n      }\n      goto LAB_0042504b;\n    }\n    if (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                  )0x73) {\nLAB_00424fe0:\n      uVar5 = type_case_s((__uint64 *)this);\n      cVar4 = (char)uVar5;\n      goto LAB_00424fe7;\n    }\n    if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                  )0x75) {\n      if (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                    )0x78) {\n        return false;\n      }\n      cVar4 = '\\0';\n      goto LAB_00424ff7;\n    }\nLAB_0042504f:\n    cVar4 = '\\0';\n    uVar8 = 10;\n  }\n  uVar8 = type_case_integer(this,uVar8,cVar4);\n  cVar4 = (char)uVar8;\nLAB_00424fe7:\n  if (cVar4 == '\\0') {\n    return false;\n  }\n  if (this[0x30] !=\n      (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n       )0x0) {\n    return true;\n  }\n  uVar8 = *(uint *)(this + 0x20);\n  local_8 = (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n             *)((uint)local_8 & 0xff000000);\n  iVar7 = 0;\n  if ((uVar8 >> 4 & 1) != 0) {\n    iVar7 = iVar6;\n    if ((uVar8 >> 6 & 1) == 0) {\n      if ((uVar8 & 1) == 0) {\n        iVar7 = 0;\n        if ((uVar8 >> 1 & 1) != 0) {\n          local_8 = (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                     *)CONCAT31(local_8._1_3_,0x20);\n          iVar7 = iVar6;\n        }\n      }\n      else {\n        local_8 = (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                   *)CONCAT31(local_8._1_3_,0x2b);\n      }\n    }\n    else {\n      local_8 = (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                 *)CONCAT31(local_8._1_3_,0x2d);\n    }\n  }\n  oVar2 = this[0x31];\n  if (((oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                  )0x78) &&\n      (oVar2 != (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                 )0x58)) || ((uVar8 >> 5 & 1) == 0)) {\n    iVar6 = 0;\n  }\n  if ((oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                 )0x61) ||\n     (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                )0x41)) {\n    bVar3 = true;\n  }\n  else {\n    bVar3 = false;\n  }\n  if (((char)iVar6 != '\\0') || (bVar3)) {\n    *(undefined1 *)((int)&local_8 + iVar7) = 0x30;\n    if ((oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                   )0x58) ||\n       (oVar2 == (output_processor<char,class___crt_stdio_output::string_output_adapter<char>,class___crt_stdio_output::standard_base<char,class___crt_stdio_output::string_output_adapter<char>_>_>\n                  )0x41)) {\n      bVar3 = true;\n    }\n    else {\n      bVar3 = false;\n    }\n    *(byte *)((int)&local_8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n    iVar7 = iVar7 + 2;\n  }\n  iVar6 = (*(int *)(this + 0x24) - *(int *)(this + 0x38)) - iVar7;\n  if ((uVar8 & 0xc) == 0) {\n    write_multiple_characters<class___crt_stdio_output::string_output_adapter<char>,char>\n              ((string_output_adapter<char> *)(this + 0x448),' ',iVar6,(int *)(this + 0x18));\n  }\n  string_output_adapter<char>::write_string\n            ((string_output_adapter<char> *)(this + 0x448),(char *)&local_8,iVar7,\n             (int *)(this + 0x18),*(int **)(this + 0xc));\n  poVar1 = this + 0x18;\n  if (((*(uint *)(this + 0x20) >> 3 & 1) != 0) && ((*(uint *)(this + 0x20) >> 2 & 1) == 0)) {\n    write_multiple_characters<class___crt_stdio_output::string_output_adapter<char>,char>\n              ((string_output_adapter<char> *)(this + 0x448),'0',iVar6,(int *)poVar1);\n  }\n  write_stored_string_tchar((int)this);\n  if ((-1 < *(int *)poVar1) && ((*(uint *)(this + 0x20) >> 2 & 1) != 0)) {\n    write_multiple_characters<class___crt_stdio_output::string_output_adapter<char>,char>\n              ((string_output_adapter<char> *)(this + 0x448),' ',iVar6,(int *)poVar1);\n  }\n  return true;\n}\n\n"
    },
    {
      "name": "state_case_type",
      "entry": "004251c9",
      "c": "\n/* Library Function - Single Match\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_type(void)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __thiscall\n__crt_stdio_output::\noutput_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n::state_case_type(output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n                  *this)\n\n{\n  output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n  *poVar1;\n  short sVar2;\n  bool bVar3;\n  bool bVar4;\n  char cVar5;\n  undefined1 uVar6;\n  undefined4 uVar7;\n  int iVar8;\n  ushort uVar9;\n  int iVar10;\n  uint uVar11;\n  undefined4 local_10;\n  undefined2 local_c;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  iVar8 = 0;\n  uVar9 = *(ushort *)(this + 0x32);\n  if (uVar9 < 0x65) {\n    if (uVar9 == 100) {\nLAB_00425288:\n      *(uint *)(this + 0x20) = *(uint *)(this + 0x20) | 0x10;\nLAB_0042528c:\n      cVar5 = '\\0';\n      uVar11 = 10;\nLAB_0042528f:\n      uVar11 = type_case_integer(this,uVar11,cVar5);\n      cVar5 = (char)uVar11;\n    }\n    else if (uVar9 < 0x59) {\n      if (uVar9 == 0x58) {\n        cVar5 = '\\x01';\nLAB_00425234:\n        uVar11 = 0x10;\n        goto LAB_0042528f;\n      }\n      if (uVar9 != 0x41) {\n        if (uVar9 == 0x43) goto LAB_00425248;\n        if (uVar9 < 0x45) goto LAB_00425416;\n        if (0x47 < uVar9) {\n          if (uVar9 != 0x53) goto LAB_00425416;\n          goto LAB_0042521c;\n        }\n      }\nLAB_00425298:\n      uVar7 = type_case_a((uint *)this);\n      cVar5 = (char)uVar7;\n    }\n    else if (uVar9 == 0x5a) {\n      uVar7 = type_case_Z((__uint64 *)this);\n      cVar5 = (char)uVar7;\n    }\n    else {\n      if (uVar9 == 0x61) goto LAB_00425298;\n      if (uVar9 != 99) goto LAB_00425416;\nLAB_00425248:\n      uVar7 = type_case_c_tchar((__uint64 *)this);\n      cVar5 = (char)uVar7;\n    }\n  }\n  else if (uVar9 < 0x71) {\n    if (uVar9 == 0x70) {\n      cVar5 = type_case_p(this);\n    }\n    else {\n      if (uVar9 < 0x68) goto LAB_00425298;\n      if (uVar9 == 0x69) goto LAB_00425288;\n      if (uVar9 == 0x6e) {\n        uVar11 = type_case_n((int)this);\n        cVar5 = (char)uVar11;\n      }\n      else {\n        if (uVar9 != 0x6f) goto LAB_00425416;\n        cVar5 = type_case_o(this);\n      }\n    }\n  }\n  else {\n    if (uVar9 != 0x73) {\n      if (uVar9 != 0x75) {\n        if (uVar9 != 0x78) goto LAB_00425416;\n        cVar5 = '\\0';\n        goto LAB_00425234;\n      }\n      goto LAB_0042528c;\n    }\nLAB_0042521c:\n    uVar7 = type_case_s((__uint64 *)this);\n    cVar5 = (char)uVar7;\n  }\n  if ((cVar5 == '\\0') ||\n     (this[0x30] !=\n      (output_processor<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>,class___crt_stdio_output::standard_base<wchar_t,class___crt_stdio_output::string_output_adapter<wchar_t>_>_>\n       )0x0)) goto LAB_00425416;\n  uVar11 = *(uint *)(this + 0x20);\n  local_10 = 0;\n  local_c = 0;\n  if ((uVar11 >> 4 & 1) != 0) {\n    if ((uVar11 >> 6 & 1) == 0) {\n      if ((uVar11 & 1) == 0) {\n        if ((uVar11 >> 1 & 1) == 0) goto LAB_00425316;\n        uVar9 = 0x20;\n      }\n      else {\n        uVar9 = 0x2b;\n      }\n    }\n    else {\n      uVar9 = 0x2d;\n    }\n    local_10 = (uint)uVar9;\n    iVar8 = 1;\n  }\nLAB_00425316:\n  sVar2 = *(short *)(this + 0x32);\n  if (((sVar2 == 0x78) || (sVar2 == 0x58)) && ((uVar11 >> 5 & 1) != 0)) {\n    bVar3 = true;\n  }\n  else {\n    bVar3 = false;\n  }\n  if ((sVar2 == 0x61) || (sVar2 == 0x41)) {\n    bVar4 = true;\n  }\n  else {\n    bVar4 = false;\n  }\n  if ((bVar3) || (bVar4)) {\n    *(undefined2 *)((int)&local_10 + iVar8 * 2) = 0x30;\n    if ((sVar2 == 0x58) || (sVar2 == 0x41)) {\n      bVar3 = true;\n    }\n    else {\n      bVar3 = false;\n    }\n    *(short *)((int)&local_10 + iVar8 * 2 + 2) = (short)(char)((!bVar3 - 1U & 0xe0) + 0x78);\n    iVar8 = iVar8 + 2;\n  }\n  iVar10 = (*(int *)(this + 0x24) - *(int *)(this + 0x38)) - iVar8;\n  if ((uVar11 & 0xc) == 0) {\n    write_multiple_characters<class___crt_stdio_output::string_output_adapter<wchar_t>,char>\n              ((string_output_adapter<wchar_t> *)(this + 0x448),' ',iVar10,(int *)(this + 0x18));\n  }\n  string_output_adapter<wchar_t>::write_string\n            ((string_output_adapter<wchar_t> *)(this + 0x448),(wchar_t *)&local_10,iVar8,\n             (int *)(this + 0x18),*(int **)(this + 0xc));\n  poVar1 = this + 0x18;\n  if (((*(uint *)(this + 0x20) >> 3 & 1) != 0) && ((*(uint *)(this + 0x20) >> 2 & 1) == 0)) {\n    write_multiple_characters<class___crt_stdio_output::string_output_adapter<wchar_t>,char>\n              ((string_output_adapter<wchar_t> *)(this + 0x448),'0',iVar10,(int *)poVar1);\n  }\n  write_stored_string_tchar((uint)this);\n  if ((-1 < *(int *)poVar1) && ((*(uint *)(this + 0x20) >> 2 & 1) != 0)) {\n    write_multiple_characters<class___crt_stdio_output::string_output_adapter<wchar_t>,char>\n              ((string_output_adapter<wchar_t> *)(this + 0x448),' ',iVar10,(int *)poVar1);\n  }\nLAB_00425416:\n  uVar6 = FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return (bool)uVar6;\n}\n\n"
    },
    {
      "name": "state_case_width",
      "entry": "00425426",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::state_case_width(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::state_case_width(void)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall state_case_width(void *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if (*(char *)((int)param_1 + 0x31) != '*') {\n    uVar2 = parse_int_from_format_string(param_1,(long *)((int)param_1 + 0x24));\n    return uVar2;\n  }\n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  iVar1 = *(int *)(*(int *)((int)param_1 + 0x14) + -4);\n  *(int *)((int)param_1 + 0x24) = iVar1;\n  if (iVar1 < 0) {\n    *(uint *)((int)param_1 + 0x20) = *(uint *)((int)param_1 + 0x20) | 4;\n    *(int *)((int)param_1 + 0x24) = -*(int *)((int)param_1 + 0x24);\n  }\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "state_case_width",
      "entry": "00425451",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::state_case_width(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::state_case_width(void)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall state_case_width(void *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if (*(short *)((int)param_1 + 0x32) != 0x2a) {\n    uVar2 = parse_int_from_format_string(param_1,(long *)((int)param_1 + 0x24));\n    return uVar2;\n  }\n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  iVar1 = *(int *)(*(int *)((int)param_1 + 0x14) + -4);\n  *(int *)((int)param_1 + 0x24) = iVar1;\n  if (iVar1 < 0) {\n    *(uint *)((int)param_1 + 0x20) = *(uint *)((int)param_1 + 0x20) | 4;\n    *(int *)((int)param_1 + 0x24) = -*(int *)((int)param_1 + 0x24);\n  }\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "to_integer_size",
      "entry": "0042547d",
      "c": "\n/* Library Function - Single Match\n    unsigned int __cdecl __crt_stdio_output::to_integer_size(enum\n   __crt_stdio_output::length_modifier)\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl __crt_stdio_output::to_integer_size(length_modifier param_1)\n\n{\n  uint uStack_8;\n  \n  switch(param_1) {\n  case 0:\n  case 3:\n  case 6:\n  case 7:\n  case 9:\n  case 10:\n    uStack_8 = 4;\n    break;\n  case 1:\n    return 1;\n  case 2:\n    uStack_8 = 2;\n    break;\n  case 4:\n  case 5:\n  case 0xb:\n    uStack_8 = 8;\n    break;\n  default:\n    return 0;\n  }\n  return uStack_8;\n}\n\n"
    },
    {
      "name": "type_case_Z",
      "entry": "004254d9",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::console_output_adapter<char> > >::type_case_Z(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_Z(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::stream_output_adapter<char> > >::type_case_Z(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::type_case_Z(void)\n     6 names - too many to list\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_Z(__uint64 *param_1)\n\n{\n  ushort *puVar1;\n  int iVar2;\n  bool bVar3;\n  uint uVar4;\n  \n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  uVar4 = *(uint *)((int)param_1 + 0x14);\n  puVar1 = *(ushort **)(uVar4 - 4);\n  if ((puVar1 == (ushort *)0x0) || (iVar2 = *(int *)(puVar1 + 2), iVar2 == 0)) {\n    *(char **)((int)param_1 + 0x34) = \"(null)\";\n    *(undefined4 *)(param_1 + 7) = 6;\n  }\n  else {\n    bVar3 = __crt_stdio_output::is_wide_character_specifier<char>\n                      (*param_1,*(char *)((int)param_1 + 0x31),\n                       *(length_modifier *)((int)param_1 + 0x2c));\n    *(int *)((int)param_1 + 0x34) = iVar2;\n    uVar4 = (uint)*puVar1;\n    if (bVar3) {\n      uVar4 = (uint)(*puVar1 >> 1);\n      *(uint *)(param_1 + 7) = uVar4;\n      *(undefined1 *)((int)param_1 + 0x3c) = 1;\n      goto LAB_00425536;\n    }\n    *(uint *)(param_1 + 7) = uVar4;\n  }\n  *(undefined1 *)((int)param_1 + 0x3c) = 0;\nLAB_00425536:\n  return CONCAT31((int3)(uVar4 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_Z",
      "entry": "0042553c",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_Z(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_Z(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_Z(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_Z(void)\n     6 names - too many to list\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_Z(__uint64 *param_1)\n\n{\n  ushort *puVar1;\n  int iVar2;\n  bool bVar3;\n  uint uVar4;\n  \n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  uVar4 = *(uint *)((int)param_1 + 0x14);\n  puVar1 = *(ushort **)(uVar4 - 4);\n  if ((puVar1 == (ushort *)0x0) || (iVar2 = *(int *)(puVar1 + 2), iVar2 == 0)) {\n    *(char **)((int)param_1 + 0x34) = \"(null)\";\n    *(undefined4 *)(param_1 + 7) = 6;\n  }\n  else {\n    bVar3 = __crt_stdio_output::is_wide_character_specifier<wchar_t>\n                      (*param_1,*(wchar_t *)((int)param_1 + 0x32),\n                       *(length_modifier *)((int)param_1 + 0x2c));\n    *(int *)((int)param_1 + 0x34) = iVar2;\n    uVar4 = (uint)*puVar1;\n    if (bVar3) {\n      uVar4 = (uint)(*puVar1 >> 1);\n      *(uint *)(param_1 + 7) = uVar4;\n      *(undefined1 *)((int)param_1 + 0x3c) = 1;\n      goto LAB_00425599;\n    }\n    *(uint *)(param_1 + 7) = uVar4;\n  }\n  *(undefined1 *)((int)param_1 + 0x3c) = 0;\nLAB_00425599:\n  return CONCAT31((int3)(uVar4 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_a",
      "entry": "0042559f",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::console_output_adapter<char> > >::type_case_a(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_a(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::stream_output_adapter<char> > >::type_case_a(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::type_case_a(void)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_a(uint *param_1)\n\n{\n  formatting_buffer *this;\n  char *pcVar1;\n  char cVar2;\n  bool bVar3;\n  uint uVar4;\n  formatting_buffer *pfVar5;\n  int iVar6;\n  char *pcVar7;\n  uint uVar8;\n  char *pcVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  __crt_locale_pointers *p_Var13;\n  uint *local_c;\n  uint *local_8;\n  \n  param_1[8] = param_1[8] | 0x10;\n  if ((int)param_1[10] < 0) {\n    if ((*(char *)((int)param_1 + 0x31) == 'a') || (*(char *)((int)param_1 + 0x31) == 'A')) {\n      param_1[10] = 0xd;\n    }\n    else {\n      param_1[10] = 6;\n    }\n  }\n  else if ((param_1[10] == 0) &&\n          ((*(char *)((int)param_1 + 0x31) == 'g' || (*(char *)((int)param_1 + 0x31) == 'G')))) {\n    param_1[10] = 1;\n  }\n  this = (formatting_buffer *)(param_1 + 0x10);\n  local_c = param_1;\n  local_8 = param_1;\n  bVar3 = __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>\n                    (this,param_1[10] + 0x15d);\n  if (!bVar3) {\n    uVar4 = __crt_stdio_output::formatting_buffer::count<char>(this);\n    param_1[10] = uVar4 - 0x15d;\n  }\n  pfVar5 = (formatting_buffer *)param_1[0x111];\n  if ((formatting_buffer *)param_1[0x111] == (formatting_buffer *)0x0) {\n    pfVar5 = this;\n  }\n  param_1[0xd] = (uint)pfVar5;\n  param_1[5] = param_1[5] + 8;\n  local_c = *(uint **)(param_1[5] - 8);\n  local_8 = *(uint **)(param_1[5] - 4);\n  uVar4 = __crt_stdio_output::formatting_buffer::count<char>(this);\n  pfVar5 = (formatting_buffer *)param_1[0x111];\n  if ((formatting_buffer *)param_1[0x111] == (formatting_buffer *)0x0) {\n    pfVar5 = this;\n  }\n  p_Var13 = (__crt_locale_pointers *)param_1[2];\n  iVar6 = (int)*(char *)((int)param_1 + 0x31);\n  uVar12 = param_1[1];\n  uVar11 = *param_1;\n  uVar10 = param_1[10];\n  pcVar7 = __crt_stdio_output::formatting_buffer::scratch_data<char>(this);\n  uVar8 = __crt_stdio_output::formatting_buffer::count<char>(this);\n  ___acrt_fp_format((double *)&local_c,(char *)pfVar5,uVar8,pcVar7,uVar4,iVar6,uVar10,uVar11,uVar12,\n                    p_Var13);\n  if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n    __crt_stdio_output::force_decimal_point\n              ((char *)param_1[0xd],(__crt_locale_pointers *)param_1[2]);\n  }\n  if (((*(char *)((int)param_1 + 0x31) == 'g') || (*(char *)((int)param_1 + 0x31) == 'G')) &&\n     ((param_1[8] >> 5 & 1) == 0)) {\n    __crt_stdio_output::crop_zeroes((char *)param_1[0xd],(__crt_locale_pointers *)param_1[2]);\n  }\n  pcVar7 = (char *)param_1[0xd];\n  if (*pcVar7 == '-') {\n    param_1[8] = param_1[8] | 0x40;\n    pcVar7 = pcVar7 + 1;\n    param_1[0xd] = (uint)pcVar7;\n  }\n  pcVar9 = (char *)param_1[0xd];\n  cVar2 = *pcVar9;\n  if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n    *(undefined1 *)((int)param_1 + 0x31) = 0x73;\n  }\n  pcVar1 = pcVar9 + 1;\n  do {\n    cVar2 = *pcVar9;\n    pcVar9 = pcVar9 + 1;\n  } while (cVar2 != '\\0');\n  param_1[0xe] = (int)pcVar9 - (int)pcVar1;\n  return CONCAT31((int3)((uint)pcVar7 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_a",
      "entry": "004256f9",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_a(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_a(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_a(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_a(void)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_a(uint *param_1)\n\n{\n  formatting_buffer *this;\n  char cVar1;\n  bool bVar2;\n  uint uVar3;\n  formatting_buffer *pfVar4;\n  int iVar5;\n  char *pcVar6;\n  uint uVar7;\n  undefined3 uVar8;\n  char *pcVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  __crt_locale_pointers *p_Var13;\n  uint *local_c;\n  uint *local_8;\n  \n  param_1[8] = param_1[8] | 0x10;\n  if ((int)param_1[10] < 0) {\n    if ((*(short *)((int)param_1 + 0x32) == 0x61) || (*(short *)((int)param_1 + 0x32) == 0x41)) {\n      param_1[10] = 0xd;\n    }\n    else {\n      param_1[10] = 6;\n    }\n  }\n  else if ((param_1[10] == 0) &&\n          ((*(short *)((int)param_1 + 0x32) == 0x67 || (*(short *)((int)param_1 + 0x32) == 0x47))))\n  {\n    param_1[10] = 1;\n  }\n  this = (formatting_buffer *)(param_1 + 0x10);\n  local_c = param_1;\n  local_8 = param_1;\n  bVar2 = __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>\n                    (this,param_1[10] + 0x15d);\n  if (!bVar2) {\n    uVar3 = __crt_stdio_output::formatting_buffer::count<char>(this);\n    param_1[10] = uVar3 - 0x15d;\n  }\n  pfVar4 = (formatting_buffer *)param_1[0x111];\n  if ((formatting_buffer *)param_1[0x111] == (formatting_buffer *)0x0) {\n    pfVar4 = this;\n  }\n  param_1[0xd] = (uint)pfVar4;\n  param_1[5] = param_1[5] + 8;\n  local_c = *(uint **)(param_1[5] - 8);\n  local_8 = *(uint **)(param_1[5] - 4);\n  uVar3 = __crt_stdio_output::formatting_buffer::count<char>(this);\n  pfVar4 = (formatting_buffer *)param_1[0x111];\n  if ((formatting_buffer *)param_1[0x111] == (formatting_buffer *)0x0) {\n    pfVar4 = this;\n  }\n  p_Var13 = (__crt_locale_pointers *)param_1[2];\n  iVar5 = (int)*(char *)((int)param_1 + 0x32);\n  uVar12 = param_1[1];\n  uVar11 = *param_1;\n  uVar10 = param_1[10];\n  pcVar6 = __crt_stdio_output::formatting_buffer::scratch_data<char>(this);\n  uVar7 = __crt_stdio_output::formatting_buffer::count<char>(this);\n  ___acrt_fp_format((double *)&local_c,(char *)pfVar4,uVar7,pcVar6,uVar3,iVar5,uVar10,uVar11,uVar12,\n                    p_Var13);\n  if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n    __crt_stdio_output::force_decimal_point\n              ((char *)param_1[0xd],(__crt_locale_pointers *)param_1[2]);\n  }\n  if (((*(short *)((int)param_1 + 0x32) == 0x67) || (*(short *)((int)param_1 + 0x32) == 0x47)) &&\n     ((param_1[8] >> 5 & 1) == 0)) {\n    __crt_stdio_output::crop_zeroes((char *)param_1[0xd],(__crt_locale_pointers *)param_1[2]);\n  }\n  pcVar6 = (char *)param_1[0xd];\n  if (*pcVar6 == '-') {\n    param_1[8] = param_1[8] | 0x40;\n    pcVar6 = pcVar6 + 1;\n    param_1[0xd] = (uint)pcVar6;\n  }\n  pcVar9 = (char *)param_1[0xd];\n  cVar1 = *pcVar9;\n  uVar8 = (undefined3)((uint)pcVar6 >> 8);\n  if (((cVar1 == 'i') || (cVar1 == 'I')) || ((cVar1 == 'n' || (cVar1 == 'N')))) {\n    uVar8 = 0;\n    *(undefined2 *)((int)param_1 + 0x32) = 0x73;\n  }\n  pcVar6 = pcVar9 + 1;\n  do {\n    cVar1 = *pcVar9;\n    pcVar9 = pcVar9 + 1;\n  } while (cVar1 != '\\0');\n  param_1[0xe] = (int)pcVar9 - (int)pcVar6;\n  return CONCAT31(uVar8,1);\n}\n\n"
    },
    {
      "name": "type_case_c_tchar",
      "entry": "0042586b",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::console_output_adapter<char> > >::type_case_c_tchar(char)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_c_tchar(char)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::stream_output_adapter<char> > >::type_case_c_tchar(char)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::type_case_c_tchar(char)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_c_tchar(__uint64 *param_1)\n\n{\n  bool bVar1;\n  uint _SizeInBytes;\n  errno_t eVar2;\n  formatting_buffer *pfVar3;\n  formatting_buffer *this;\n  wchar_t _WCh;\n  \n  bVar1 = __crt_stdio_output::is_wide_character_specifier<char>\n                    (*param_1,*(char *)((int)param_1 + 0x31),\n                     *(length_modifier *)((int)param_1 + 0x2c));\n  this = (formatting_buffer *)(param_1 + 8);\n  if (bVar1) {\n    *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n    _WCh = *(wchar_t *)(*(int *)((int)param_1 + 0x14) + -4);\n    pfVar3 = *(formatting_buffer **)((int)param_1 + 0x444);\n    if (*(formatting_buffer **)((int)param_1 + 0x444) == (formatting_buffer *)0x0) {\n      pfVar3 = this;\n    }\n    _SizeInBytes = __crt_stdio_output::formatting_buffer::count<char>(this);\n    eVar2 = _wctomb_s((int *)(param_1 + 7),(char *)pfVar3,_SizeInBytes,_WCh);\n    if (eVar2 != 0) {\n      *(undefined1 *)(param_1 + 6) = 1;\n    }\n  }\n  else {\n    pfVar3 = *(formatting_buffer **)((int)param_1 + 0x444);\n    if (*(formatting_buffer **)((int)param_1 + 0x444) == (formatting_buffer *)0x0) {\n      pfVar3 = this;\n    }\n    *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n    *pfVar3 = *(formatting_buffer *)(*(int *)((int)param_1 + 0x14) + -4);\n    *(undefined4 *)(param_1 + 7) = 1;\n  }\n  pfVar3 = *(formatting_buffer **)((int)param_1 + 0x444);\n  if (pfVar3 != (formatting_buffer *)0x0) {\n    this = pfVar3;\n  }\n  *(formatting_buffer **)((int)param_1 + 0x34) = this;\n  return CONCAT31((int3)((uint)pfVar3 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_c_tchar",
      "entry": "004258fb",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_c_tchar(wchar_t)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_c_tchar(wchar_t)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_c_tchar(wchar_t)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_c_tchar(wchar_t)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_c_tchar(__uint64 *param_1)\n\n{\n  wchar_t wVar1;\n  bool bVar2;\n  int iVar3;\n  wchar_t *pwVar4;\n  wchar_t *pwVar5;\n  undefined4 local_8;\n  \n  *(undefined1 *)((int)param_1 + 0x3c) = 1;\n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  wVar1 = *(wchar_t *)(*(int *)((int)param_1 + 0x14) + -4);\n  local_8 = param_1;\n  bVar2 = __crt_stdio_output::is_wide_character_specifier<wchar_t>\n                    (*param_1,*(wchar_t *)((int)param_1 + 0x32),\n                     *(length_modifier *)((int)param_1 + 0x2c));\n  pwVar5 = (wchar_t *)(param_1 + 8);\n  if (bVar2) {\n    pwVar4 = *(wchar_t **)((int)param_1 + 0x444);\n    if (*(wchar_t **)((int)param_1 + 0x444) == (wchar_t *)0x0) {\n      pwVar4 = pwVar5;\n    }\n    *pwVar4 = wVar1;\n  }\n  else {\n    local_8._0_2_ = CONCAT11(bVar2,(char)wVar1);\n    pwVar4 = *(wchar_t **)((int)param_1 + 0x444);\n    if (*(wchar_t **)((int)param_1 + 0x444) == (wchar_t *)0x0) {\n      pwVar4 = pwVar5;\n    }\n    iVar3 = __mbtowc_l(pwVar4,(char *)&local_8,(*(_locale_t *)(param_1 + 1))->locinfo->lc_codepage,\n                       *(_locale_t *)(param_1 + 1));\n    if (iVar3 < 0) {\n      *(undefined1 *)(param_1 + 6) = 1;\n    }\n  }\n  pwVar4 = *(wchar_t **)((int)param_1 + 0x444);\n  if (pwVar4 != (wchar_t *)0x0) {\n    pwVar5 = pwVar4;\n  }\n  *(wchar_t **)((int)param_1 + 0x34) = pwVar5;\n  *(undefined4 *)(param_1 + 7) = 1;\n  return CONCAT31((int3)((uint)pwVar4 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_integer",
      "entry": "00425993",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_integer(unsigned int,bool)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_integer(unsigned int,bool)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_integer(unsigned int,bool)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_integer(unsigned int,bool)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nuint __thiscall type_case_integer(void *this,uint param_1,char param_2)\n\n{\n  uint uVar1;\n  int *piVar2;\n  char *pcVar3;\n  uint uVar4;\n  int iVar5;\n  bool bVar6;\n  \n  uVar1 = __crt_stdio_output::to_integer_size(*(length_modifier *)((int)this + 0x2c));\n  if (uVar1 == 1) {\n    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 4;\n    if ((*(uint *)((int)this + 0x20) >> 4 & 1) == 0) {\n      uVar4 = (uint)*(byte *)(*(int *)((int)this + 0x14) + -4);\n    }\n    else {\n      uVar4 = (uint)*(char *)(*(int *)((int)this + 0x14) + -4);\n    }\n  }\n  else if (uVar1 == 2) {\n    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 4;\n    if ((*(uint *)((int)this + 0x20) >> 4 & 1) == 0) {\n      uVar4 = (uint)*(ushort *)(*(int *)((int)this + 0x14) + -4);\n    }\n    else {\n      uVar4 = (uint)*(short *)(*(int *)((int)this + 0x14) + -4);\n    }\n  }\n  else {\n    if (uVar1 != 4) {\n      if (uVar1 != 8) {\n        piVar2 = __errno();\n        *piVar2 = 0x16;\n        uVar1 = FUN_00429087();\n        return uVar1 & 0xffffff00;\n      }\n      *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 8;\n      uVar4 = *(uint *)(*(int *)((int)this + 0x14) + -8);\n      iVar5 = *(int *)(*(int *)((int)this + 0x14) + -4);\n      goto LAB_00425a44;\n    }\n    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 4;\n    if ((*(uint *)((int)this + 0x20) >> 4 & 1) == 0) {\n      uVar4 = *(uint *)(*(int *)((int)this + 0x14) + -4);\n      iVar5 = 0;\n      goto LAB_00425a44;\n    }\n    uVar4 = *(uint *)(*(int *)((int)this + 0x14) + -4);\n  }\n  iVar5 = (int)uVar4 >> 0x1f;\nLAB_00425a44:\n  if ((((*(uint *)((int)this + 0x20) >> 4 & 1) != 0) && (iVar5 < 1)) && (iVar5 < 0)) {\n    bVar6 = uVar4 != 0;\n    uVar4 = -uVar4;\n    iVar5 = -(iVar5 + (uint)bVar6);\n    *(uint *)((int)this + 0x20) = *(uint *)((int)this + 0x20) | 0x40;\n  }\n  if (*(int *)((int)this + 0x28) < 0) {\n    *(undefined4 *)((int)this + 0x28) = 1;\n  }\n  else {\n    *(uint *)((int)this + 0x20) = *(uint *)((int)this + 0x20) & 0xfffffff7;\n    if (0x200 < *(int *)((int)this + 0x28)) {\n      *(undefined4 *)((int)this + 0x28) = 0x200;\n    }\n  }\n  if (uVar4 == 0 && iVar5 == 0) {\n    *(uint *)((int)this + 0x20) = *(uint *)((int)this + 0x20) & 0xffffffdf;\n  }\n  if (uVar1 == 8) {\n    type_case_integer_parse_into_buffer<>(this,CONCAT44(iVar5,uVar4),param_1,param_2);\n  }\n  else {\n    type_case_integer_parse_into_buffer<>(this,uVar4,param_1,param_2);\n  }\n  pcVar3 = (char *)(*(uint *)((int)this + 0x20) >> 7);\n  if ((((uint)pcVar3 & 1) != 0) &&\n     ((*(int *)((int)this + 0x38) == 0 || (pcVar3 = *(char **)((int)this + 0x34), *pcVar3 != '0'))))\n  {\n    *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + -1;\n    **(undefined1 **)((int)this + 0x34) = 0x30;\n    *(int *)((int)this + 0x38) = *(int *)((int)this + 0x38) + 1;\n  }\n  return CONCAT31((int3)((uint)pcVar3 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_n",
      "entry": "00425add",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_n(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_n(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_n(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_n(void)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nuint __fastcall type_case_n(int param_1)\n\n{\n  uint *puVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  \n  *(int *)(param_1 + 0x14) = *(int *)(param_1 + 0x14) + 4;\n  puVar1 = *(uint **)(*(int *)(param_1 + 0x14) + -4);\n  iVar2 = __get_printf_count_output();\n  if (iVar2 == 0) {\nLAB_00425af6:\n    piVar3 = __errno();\n    *piVar3 = 0x16;\n    uVar4 = FUN_00429087();\n    uVar4 = uVar4 & 0xffffff00;\n  }\n  else {\n    uVar4 = __crt_stdio_output::to_integer_size(*(length_modifier *)(param_1 + 0x2c));\n    if (uVar4 == 1) {\n      uVar4 = 0;\n      *(undefined1 *)puVar1 = *(undefined1 *)(param_1 + 0x18);\n    }\n    else if (uVar4 == 2) {\n      uVar4 = (uint)*(ushort *)(param_1 + 0x18);\n      *(ushort *)puVar1 = *(ushort *)(param_1 + 0x18);\n    }\n    else if (uVar4 == 4) {\n      uVar4 = *(uint *)(param_1 + 0x18);\n      *puVar1 = uVar4;\n    }\n    else {\n      if (uVar4 != 8) goto LAB_00425af6;\n      uVar4 = *(uint *)(param_1 + 0x18);\n      *puVar1 = uVar4;\n      puVar1[1] = (int)uVar4 >> 0x1f;\n    }\n    *(undefined1 *)(param_1 + 0x30) = 1;\n    uVar4 = CONCAT31((int3)(uVar4 >> 8),1);\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "type_case_o",
      "entry": "00425b51",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_o(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_o(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_o(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_o(void)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __fastcall type_case_o(void *param_1)\n\n{\n  if ((*(uint *)((int)param_1 + 0x20) >> 5 & 1) != 0) {\n    *(uint *)((int)param_1 + 0x20) = *(uint *)((int)param_1 + 0x20) | 0x80;\n  }\n  type_case_integer(param_1,8,'\\0');\n  return;\n}\n\n"
    },
    {
      "name": "type_case_p",
      "entry": "00425b70",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_p(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_p(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_p(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_p(void)\n     6 names - too many to list\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __fastcall type_case_p(void *param_1)\n\n{\n  *(undefined4 *)((int)param_1 + 0x28) = 8;\n  *(undefined4 *)((int)param_1 + 0x2c) = 10;\n  type_case_integer(param_1,0x10,'\\x01');\n  return;\n}\n\n"
    },
    {
      "name": "type_case_s",
      "entry": "00425b88",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::console_output_adapter<char> > >::type_case_s(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::console_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::console_output_adapter<char> >\n   >::type_case_s(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::stream_output_adapter<char> > >::type_case_s(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::stream_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> >\n   >::type_case_s(void)\n     6 names - too many to list\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_s(__uint64 *param_1)\n\n{\n  int iVar1;\n  bool bVar2;\n  uint uVar3;\n  \n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  uVar3 = (uint)param_1[5];\n  iVar1 = *(int *)(*(int *)((int)param_1 + 0x14) + -4);\n  *(int *)((int)param_1 + 0x34) = iVar1;\n  if (uVar3 == 0xffffffff) {\n    uVar3 = 0x7fffffff;\n  }\n  bVar2 = __crt_stdio_output::is_wide_character_specifier<char>\n                    (*param_1,*(char *)((int)param_1 + 0x31),\n                     *(length_modifier *)((int)param_1 + 0x2c));\n  if (bVar2) {\n    if (iVar1 == 0) {\n      *(wchar_t **)((int)param_1 + 0x34) = L\"(null)\";\n    }\n    *(undefined1 *)((int)param_1 + 0x3c) = 1;\n    uVar3 = FUN_00426a38(*(short **)((int)param_1 + 0x34),uVar3);\n  }\n  else {\n    if (iVar1 == 0) {\n      *(char **)((int)param_1 + 0x34) = \"(null)\";\n    }\n    uVar3 = FUN_00426911(*(char **)((int)param_1 + 0x34),uVar3);\n  }\n  *(uint *)(param_1 + 7) = uVar3;\n  return CONCAT31((int3)(uVar3 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_s",
      "entry": "00425bfb",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_s(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> > >::type_case_s(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_s(void)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> > >::type_case_s(void)\n     6 names - too many to list\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nundefined4 __fastcall type_case_s(__uint64 *param_1)\n\n{\n  int iVar1;\n  bool bVar2;\n  uint uVar3;\n  \n  *(int *)((int)param_1 + 0x14) = *(int *)((int)param_1 + 0x14) + 4;\n  uVar3 = (uint)param_1[5];\n  iVar1 = *(int *)(*(int *)((int)param_1 + 0x14) + -4);\n  *(int *)((int)param_1 + 0x34) = iVar1;\n  if (uVar3 == 0xffffffff) {\n    uVar3 = 0x7fffffff;\n  }\n  bVar2 = __crt_stdio_output::is_wide_character_specifier<wchar_t>\n                    (*param_1,*(wchar_t *)((int)param_1 + 0x32),\n                     *(length_modifier *)((int)param_1 + 0x2c));\n  if (bVar2) {\n    if (iVar1 == 0) {\n      *(wchar_t **)((int)param_1 + 0x34) = L\"(null)\";\n    }\n    *(undefined1 *)((int)param_1 + 0x3c) = 1;\n    uVar3 = FUN_00426a38(*(short **)((int)param_1 + 0x34),uVar3);\n  }\n  else {\n    if (iVar1 == 0) {\n      *(char **)((int)param_1 + 0x34) = \"(null)\";\n    }\n    uVar3 = type_case_s_compute_narrow_string_length(param_1,uVar3);\n  }\n  *(uint *)(param_1 + 7) = uVar3;\n  return CONCAT31((int3)(uVar3 >> 8),1);\n}\n\n"
    },
    {
      "name": "type_case_s_compute_narrow_string_length",
      "entry": "00425c6f",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: int __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> >\n   >::type_case_s_compute_narrow_string_length(int,wchar_t)const \n    private: int __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::console_output_adapter<wchar_t> >\n   >::type_case_s_compute_narrow_string_length(int,wchar_t)const \n    private: int __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> >\n   >::type_case_s_compute_narrow_string_length(int,wchar_t)const \n    private: int __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::stream_output_adapter<wchar_t> >\n   >::type_case_s_compute_narrow_string_length(int,wchar_t)const \n     6 names - too many to list\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nint __thiscall type_case_s_compute_narrow_string_length(void *this,int param_1)\n\n{\n  byte *pbVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  pbVar1 = *(byte **)((int)this + 0x34);\n  if (0 < param_1) {\n    do {\n      if (*pbVar1 == 0) {\n        return iVar2;\n      }\n      if ((*(ushort *)(*(int *)**(undefined4 **)((int)this + 8) + (uint)*pbVar1 * 2) & 0x8000) != 0)\n      {\n        pbVar1 = pbVar1 + 1;\n      }\n      pbVar1 = pbVar1 + 1;\n      iVar2 = iVar2 + 1;\n    } while (iVar2 < param_1);\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "validate",
      "entry": "00425caf",
      "c": "\n/* Library Function - Single Match\n    public: bool __thiscall __crt_strtox::c_string_character_source<wchar_t>::validate(void)const \n   \n   Library: Visual Studio 2015 Release */\n\nbool __thiscall\n__crt_strtox::c_string_character_source<wchar_t>::validate(c_string_character_source<wchar_t> *this)\n\n{\n  int *piVar1;\n  \n  if (*(int *)this == 0) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n    return false;\n  }\n  return true;\n}\n\n"
    },
    {
      "name": "write_character",
      "entry": "00425cca",
      "c": "\n/* Library Function - Single Match\n    public: bool __thiscall\n   __crt_stdio_output::string_output_adapter<char>::write_character(char,int * const)const \n   \n   Library: Visual Studio 2015 Release */\n\nbool __thiscall\n__crt_stdio_output::string_output_adapter<char>::write_character\n          (string_output_adapter<char> *this,char param_1,int *param_2)\n\n{\n  int iVar1;\n  undefined1 uVar2;\n  \n  iVar1 = *(int *)this;\n  if (*(int *)(iVar1 + 8) == *(int *)(iVar1 + 4)) {\n    if (*(char *)(iVar1 + 0xc) == '\\0') {\n      *param_2 = -1;\n    }\n    else {\n      *param_2 = *param_2 + 1;\n    }\n    uVar2 = *(undefined1 *)(*(int *)this + 0xc);\n  }\n  else {\n    *param_2 = *param_2 + 1;\n    *(int *)(*(int *)this + 8) = *(int *)(*(int *)this + 8) + 1;\n    *(char *)**(undefined4 **)this = param_1;\n    **(int **)this = **(int **)this + 1;\n    uVar2 = 1;\n  }\n  return (bool)uVar2;\n}\n\n"
    },
    {
      "name": "write_character",
      "entry": "00425d0c",
      "c": "\n/* Library Function - Single Match\n    public: bool __thiscall\n   __crt_stdio_output::string_output_adapter<wchar_t>::write_character(wchar_t,int * const)const \n   \n   Library: Visual Studio 2015 Release */\n\nbool __thiscall\n__crt_stdio_output::string_output_adapter<wchar_t>::write_character\n          (string_output_adapter<wchar_t> *this,wchar_t param_1,int *param_2)\n\n{\n  int iVar1;\n  undefined1 uVar2;\n  \n  iVar1 = *(int *)this;\n  if (*(int *)(iVar1 + 8) == *(int *)(iVar1 + 4)) {\n    if (*(char *)(iVar1 + 0xc) == '\\0') {\n      *param_2 = -1;\n    }\n    else {\n      *param_2 = *param_2 + 1;\n    }\n    uVar2 = *(undefined1 *)(*(int *)this + 0xc);\n  }\n  else {\n    *param_2 = *param_2 + 1;\n    *(int *)(*(int *)this + 8) = *(int *)(*(int *)this + 8) + 1;\n    *(wchar_t *)**(undefined4 **)this = param_1;\n    **(int **)this = **(int **)this + 2;\n    uVar2 = 1;\n  }\n  return (bool)uVar2;\n}\n\n"
    },
    {
      "name": "write_stored_string_tchar",
      "entry": "00425d51",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::format_validation_base<char,class\n   __crt_stdio_output::string_output_adapter<char> > >::write_stored_string_tchar(char)\n    private: bool __thiscall __crt_stdio_output::output_processor<char,class\n   __crt_stdio_output::string_output_adapter<char>,class\n   __crt_stdio_output::standard_base<char,class __crt_stdio_output::string_output_adapter<char> >\n   >::write_stored_string_tchar(char)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __fastcall write_stored_string_tchar(int param_1)\n\n{\n  wchar_t _WCh;\n  errno_t eVar1;\n  int iVar2;\n  wchar_t *pwVar3;\n  int local_14;\n  char local_10 [8];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  if ((*(char *)(param_1 + 0x3c) == '\\0') || (*(int *)(param_1 + 0x38) < 1)) {\n    __crt_stdio_output::string_output_adapter<char>::write_string\n              ((string_output_adapter<char> *)(param_1 + 0x448),*(char **)(param_1 + 0x34),\n               *(int *)(param_1 + 0x38),(int *)(param_1 + 0x18),*(int **)(param_1 + 0xc));\n  }\n  else {\n    pwVar3 = *(wchar_t **)(param_1 + 0x34);\n    iVar2 = 0;\n    if (*(int *)(param_1 + 0x38) != 0) {\n      do {\n        _WCh = *pwVar3;\n        pwVar3 = pwVar3 + 1;\n        local_14 = 0;\n        eVar1 = _wctomb_s(&local_14,local_10,6,_WCh);\n        if ((eVar1 != 0) || (local_14 == 0)) {\n          *(undefined4 *)(param_1 + 0x18) = 0xffffffff;\n          break;\n        }\n        __crt_stdio_output::string_output_adapter<char>::write_string\n                  ((string_output_adapter<char> *)(param_1 + 0x448),local_10,local_14,\n                   (int *)(param_1 + 0x18),*(int **)(param_1 + 0xc));\n        iVar2 = iVar2 + 1;\n      } while (iVar2 != *(int *)(param_1 + 0x38));\n    }\n  }\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "write_stored_string_tchar",
      "entry": "00425df8",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::format_validation_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::write_stored_string_tchar(wchar_t)\n    private: bool __thiscall __crt_stdio_output::output_processor<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t>,class\n   __crt_stdio_output::standard_base<wchar_t,class\n   __crt_stdio_output::string_output_adapter<wchar_t> > >::write_stored_string_tchar(wchar_t)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall write_stored_string_tchar(uint param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int extraout_EAX;\n  char *_SrcCh;\n  int iVar3;\n  uint local_8;\n  uint3 extraout_var;\n  \n  local_8 = param_1;\n  if ((*(char *)(param_1 + 0x3c) == '\\0') && (iVar2 = *(int *)(param_1 + 0x38), 0 < iVar2)) {\n    _SrcCh = *(char **)(param_1 + 0x34);\n    iVar3 = 0;\n    if (iVar2 != 0) {\n      do {\n        local_8 = local_8 & 0xffff0000;\n        iVar1 = __mbtowc_l((wchar_t *)&local_8,_SrcCh,\n                           (*(_locale_t *)(param_1 + 8))->locinfo->lc_codepage,\n                           *(_locale_t *)(param_1 + 8));\n        if (iVar1 < 1) {\n          *(undefined4 *)(param_1 + 0x18) = 0xffffffff;\n          iVar2 = iVar1;\n          break;\n        }\n        __crt_stdio_output::string_output_adapter<wchar_t>::write_character\n                  ((string_output_adapter<wchar_t> *)(param_1 + 0x448),(wchar_t)local_8,\n                   (int *)(param_1 + 0x18));\n        iVar2 = (uint)extraout_var << 8;\n        _SrcCh = _SrcCh + iVar1;\n        iVar3 = iVar3 + 1;\n      } while (iVar3 != *(int *)(param_1 + 0x38));\n    }\n  }\n  else {\n    __crt_stdio_output::string_output_adapter<wchar_t>::write_string\n              ((string_output_adapter<wchar_t> *)(param_1 + 0x448),*(wchar_t **)(param_1 + 0x34),\n               *(int *)(param_1 + 0x38),(int *)(param_1 + 0x18),*(int **)(param_1 + 0xc));\n    iVar2 = extraout_EAX;\n  }\n  return CONCAT31((int3)((uint)iVar2 >> 8),1);\n}\n\n"
    },
    {
      "name": "write_string",
      "entry": "00425e83",
      "c": "\n/* Library Function - Single Match\n    public: void __thiscall __crt_stdio_output::string_output_adapter<char>::write_string(char const\n   * const,int,int * const,int * const)const \n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\n__crt_stdio_output::string_output_adapter<char>::write_string\n          (string_output_adapter<char> *this,char *param_1,int param_2,int *param_3,int *param_4)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  uint uVar3;\n  \n  iVar1 = *param_4;\n  *param_4 = 0;\n  puVar2 = *(undefined4 **)this;\n  if (puVar2[2] == puVar2[1]) {\n    if (*(char *)(puVar2 + 3) == '\\0') {\n      *param_3 = -1;\n    }\n    else {\n      *param_3 = *param_3 + param_2;\n    }\n  }\n  else {\n    uVar3 = puVar2[1] - puVar2[2];\n    if ((uint)param_2 <= uVar3) {\n      uVar3 = param_2;\n    }\n    FUN_00420320((uint *)*puVar2,(uint *)param_1,uVar3);\n    **(int **)this = **(int **)this + uVar3;\n    *(int *)(*(int *)this + 8) = *(int *)(*(int *)this + 8) + uVar3;\n    if (*(char *)(*(int *)this + 0xc) == '\\0') {\n      if (uVar3 == param_2) {\n        *param_3 = *param_3 + uVar3;\n      }\n      else {\n        *param_3 = -1;\n      }\n    }\n    else {\n      *param_3 = *param_3 + param_2;\n    }\n  }\n  if ((*param_4 == 0) && (iVar1 != 0)) {\n    *param_4 = iVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "write_string",
      "entry": "00425f16",
      "c": "\n/* Library Function - Single Match\n    public: void __thiscall __crt_stdio_output::string_output_adapter<wchar_t>::write_string(wchar_t\n   const * const,int,int * const,int * const)const \n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\n__crt_stdio_output::string_output_adapter<wchar_t>::write_string\n          (string_output_adapter<wchar_t> *this,wchar_t *param_1,int param_2,int *param_3,\n          int *param_4)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  uint uVar3;\n  \n  iVar1 = *param_4;\n  *param_4 = 0;\n  puVar2 = *(undefined4 **)this;\n  if (puVar2[2] == puVar2[1]) {\n    if (*(char *)(puVar2 + 3) == '\\0') {\n      *param_3 = -1;\n    }\n    else {\n      *param_3 = *param_3 + param_2;\n    }\n  }\n  else {\n    uVar3 = puVar2[1] - puVar2[2];\n    if ((uint)param_2 <= uVar3) {\n      uVar3 = param_2;\n    }\n    FUN_00420320((uint *)*puVar2,(uint *)param_1,uVar3 * 2);\n    **(int **)this = **(int **)this + uVar3 * 2;\n    *(int *)(*(int *)this + 8) = *(int *)(*(int *)this + 8) + uVar3;\n    if (*(char *)(*(int *)this + 0xc) == '\\0') {\n      if (uVar3 == param_2) {\n        *param_3 = *param_3 + uVar3;\n      }\n      else {\n        *param_3 = -1;\n      }\n    }\n    else {\n      *param_3 = *param_3 + param_2;\n    }\n  }\n  if ((*param_4 == 0) && (iVar1 != 0)) {\n    *param_4 = iVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___stdio_common_vsprintf",
      "entry": "00425fb0",
      "c": "\n/* Library Function - Single Match\n    ___stdio_common_vsprintf\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n___stdio_common_vsprintf\n          (undefined4 param_1,undefined4 param_2,char *param_3,uint param_4,char *param_5,\n          __crt_locale_pointers *param_6,char *param_7)\n\n{\n  common_vsprintf<class___crt_stdio_output::standard_base,char>\n            (CONCAT44(param_2,param_1),param_3,param_4,param_5,param_6,param_7);\n  return;\n}\n\n"
    },
    {
      "name": "___stdio_common_vswprintf",
      "entry": "00425fd4",
      "c": "\n/* Library Function - Single Match\n    ___stdio_common_vswprintf\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n___stdio_common_vswprintf\n          (undefined4 param_1,undefined4 param_2,wchar_t *param_3,uint param_4,wchar_t *param_5,\n          __crt_locale_pointers *param_6,char *param_7)\n\n{\n  common_vsprintf<class___crt_stdio_output::standard_base,wchar_t>\n            (CONCAT44(param_2,param_1),param_3,param_4,param_5,param_6,param_7);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_clock",
      "entry": "00426000",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    ___acrt_initialize_clock\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nundefined4 ___acrt_initialize_clock(void)\n\n{\n  BOOL BVar1;\n  LARGE_INTEGER local_14;\n  LARGE_INTEGER local_c;\n  \n  BVar1 = QueryPerformanceFrequency(&local_c);\n  if (((BVar1 != 0) && (BVar1 = QueryPerformanceCounter(&local_14), BVar1 != 0)) &&\n     (local_c.s.LowPart != 0 || local_c.s.HighPart != 0)) {\n    _DAT_00462108 = local_c.s.LowPart;\n    _DAT_0046210c = local_c.s.HighPart;\n    _DAT_00462110 = local_14.s.LowPart;\n    _DAT_00462114 = local_14.s.HighPart;\n    return 0;\n  }\n  _DAT_00462110 = 0xffffffff;\n  _DAT_0046210c = 0xffffffff;\n  _DAT_00462108 = 0xffffffff;\n  _DAT_00462114 = 0xffffffff;\n  return 0;\n}\n\n"
    },
    {
      "name": "_wcscpy",
      "entry": "00426066",
      "c": "\n/* Library Function - Single Match\n    _wcscpy\n   \n   Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,\n   Visual Studio 2019 Release */\n\nwchar_t * __cdecl _wcscpy(wchar_t *_Dest,wchar_t *_Source)\n\n{\n  wchar_t wVar1;\n  int iVar2;\n  \n  iVar2 = (int)_Dest - (int)_Source;\n  do {\n    wVar1 = *_Source;\n    *(wchar_t *)(iVar2 + (int)_Source) = wVar1;\n    _Source = _Source + 1;\n  } while (wVar1 != L'\\0');\n  return _Dest;\n}\n\n"
    },
    {
      "name": "_wcsncmp",
      "entry": "00426088",
      "c": "\n/* Library Function - Single Match\n    _wcsncmp\n   \n   Library: Visual Studio 2019 Release */\n\nint __cdecl _wcsncmp(wchar_t *_Str1,wchar_t *_Str2,size_t _MaxCount)\n\n{\n  if (_MaxCount != 0) {\n    for (; ((_MaxCount = _MaxCount - 1, _MaxCount != 0 && (*_Str1 != L'\\0')) && (*_Str1 == *_Str2));\n        _Str1 = _Str1 + 1) {\n      _Str2 = _Str2 + 1;\n    }\n    return (uint)(ushort)*_Str1 - (uint)(ushort)*_Str2;\n  }\n  return _MaxCount;\n}\n\n"
    },
    {
      "name": "_wcsncpy",
      "entry": "004260c2",
      "c": "\n/* Library Function - Single Match\n    _wcsncpy\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nwchar_t * __cdecl _wcsncpy(wchar_t *_Dest,wchar_t *_Source,size_t _Count)\n\n{\n  wchar_t wVar1;\n  uint uVar2;\n  uint uVar3;\n  wchar_t *pwVar4;\n  \n  if (_Count != 0) {\n    pwVar4 = _Dest;\n    do {\n      wVar1 = *(wchar_t *)(((int)_Source - (int)_Dest) + (int)pwVar4);\n      *pwVar4 = wVar1;\n      pwVar4 = pwVar4 + 1;\n      if (wVar1 == L'\\0') break;\n      _Count = _Count - 1;\n    } while (_Count != 0);\n    if ((_Count != 0) && (uVar2 = _Count - 1, uVar2 != 0)) {\n      for (uVar3 = uVar2 >> 1; uVar3 != 0; uVar3 = uVar3 - 1) {\n        pwVar4[0] = L'\\0';\n        pwVar4[1] = L'\\0';\n        pwVar4 = pwVar4 + 2;\n      }\n      for (uVar2 = (uint)((uVar2 & 1) != 0); uVar2 != 0; uVar2 = uVar2 - 1) {\n        *pwVar4 = L'\\0';\n        pwVar4 = pwVar4 + 1;\n      }\n    }\n  }\n  return _Dest;\n}\n\n"
    },
    {
      "name": "_wcspbrk",
      "entry": "00426105",
      "c": "\n/* Library Function - Single Match\n    _wcspbrk\n   \n   Library: Visual Studio 2015 Release */\n\nwchar_t * __cdecl _wcspbrk(wchar_t *_Str,wchar_t *_Control)\n\n{\n  wchar_t *pwVar1;\n  wchar_t wVar2;\n  \n  if (*_Str != L'\\0') {\n    do {\n      if (*_Control != L'\\0') {\n        pwVar1 = _Control;\n        wVar2 = *_Control;\n        do {\n          if (wVar2 == *_Str) {\n            return _Str;\n          }\n          pwVar1 = pwVar1 + 1;\n          wVar2 = *pwVar1;\n        } while (wVar2 != L'\\0');\n      }\n      _Str = _Str + 1;\n    } while (*_Str != L'\\0');\n  }\n  return (wchar_t *)0x0;\n}\n\n"
    },
    {
      "name": "FUN_0042614a",
      "entry": "0042614a",
      "c": "\nint __cdecl FUN_0042614a(uint param_1)\n\n{\n  return (param_1 ^ (int)param_1 >> 0x1f) - ((int)param_1 >> 0x1f);\n}\n\n"
    },
    {
      "name": "_bsearch",
      "entry": "00426159",
      "c": "\n/* Library Function - Single Match\n    _bsearch\n   \n   Library: Visual Studio 2015 Release */\n\nvoid * __cdecl\n_bsearch(void *_Key,void *_Base,size_t _NumOfElements,size_t _SizeOfElements,\n        _PtFuncCompare *_PtFuncCompare)\n\n{\n  uint uVar1;\n  int *piVar2;\n  int iVar3;\n  void *pvVar4;\n  uint uVar5;\n  uint uVar6;\n  void *pvVar7;\n  uint uVar8;\n  void *in_stack_ffffffd8;\n  void *pvVar9;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  if ((((_Base == (void *)0x0) && (_NumOfElements != 0)) || (_SizeOfElements == 0)) ||\n     (_PtFuncCompare == (_PtFuncCompare *)0x0)) {\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    FUN_00429087();\n  }\n  else {\n    pvVar4 = (void *)((_NumOfElements - 1) * _SizeOfElements + (int)_Base);\n    while (_Base <= pvVar4) {\n      uVar5 = _NumOfElements >> 1;\n      if (uVar5 == 0) {\n        if (_NumOfElements != 0) {\n          pvVar4 = (void *)0x42621d;\n          (*(code *)PTR_guard_check_icall_00433278)(_Key,_Base);\n          (*_PtFuncCompare)(in_stack_ffffffd8,pvVar4);\n        }\n        break;\n      }\n      uVar8 = _NumOfElements & 1;\n      uVar6 = uVar5;\n      if (uVar8 == 0) {\n        uVar6 = uVar5 - 1;\n      }\n      pvVar7 = (void *)(uVar6 * _SizeOfElements + (int)_Base);\n      pvVar9 = (void *)0x4261cb;\n      (*(code *)PTR_guard_check_icall_00433278)(_Key,pvVar7);\n      iVar3 = (*_PtFuncCompare)(in_stack_ffffffd8,pvVar9);\n      if (iVar3 == 0) break;\n      _NumOfElements = uVar5;\n      if (iVar3 < 0) {\n        pvVar4 = (void *)((int)pvVar7 - _SizeOfElements);\n        if (uVar8 == 0) {\n          _NumOfElements = uVar5 - 1;\n        }\n      }\n      else {\n        _Base = (void *)((int)pvVar7 + _SizeOfElements);\n      }\n    }\n  }\n  pvVar4 = (void *)FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return pvVar4;\n}\n\n"
    },
    {
      "name": "shortsort",
      "entry": "00426230",
      "c": "\n/* Library Function - Single Match\n    void __cdecl shortsort(char *,char *,unsigned int,int (__cdecl*)(void const *,void const *))\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\nshortsort(char *param_1,char *param_2,uint param_3,_func_int_void_ptr_void_ptr *param_4)\n\n{\n  char *pcVar1;\n  char cVar2;\n  uint uVar3;\n  int iVar4;\n  char *pcVar5;\n  uint uVar6;\n  char *pcVar7;\n  void *in_stack_ffffffdc;\n  void *pvVar8;\n  \n  uVar3 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  if (param_1 < param_2) {\n    do {\n      pcVar7 = param_1;\n      for (pcVar5 = param_1 + param_3; pcVar5 <= param_2; pcVar5 = pcVar5 + param_3) {\n        pvVar8 = (void *)0x42626b;\n        (*(code *)PTR_guard_check_icall_00433278)(pcVar5,pcVar7);\n        iVar4 = (*param_4)(in_stack_ffffffdc,pvVar8);\n        if (0 < iVar4) {\n          pcVar7 = pcVar5;\n        }\n      }\n      if ((pcVar7 != param_2) && (pcVar5 = param_2, uVar6 = param_3, param_3 != 0)) {\n        do {\n          pcVar1 = pcVar5 + 1;\n          cVar2 = pcVar1[(int)(pcVar7 + (-1 - (int)param_2))];\n          pcVar1[(int)(pcVar7 + (-1 - (int)param_2))] = *pcVar5;\n          *pcVar5 = cVar2;\n          uVar6 = uVar6 - 1;\n          pcVar5 = pcVar1;\n        } while (uVar6 != 0);\n      }\n      param_2 = param_2 + -param_3;\n    } while (param_1 < param_2);\n  }\n  FUN_0041fbbc(uVar3 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "swap",
      "entry": "004262d0",
      "c": "\n/* Library Function - Single Match\n    void __cdecl swap(char *,char *,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl swap(char *param_1,char *param_2,uint param_3)\n\n{\n  char *pcVar1;\n  char cVar2;\n  char *pcVar3;\n  \n  if ((param_1 != param_2) && (pcVar3 = param_2, param_3 != 0)) {\n    do {\n      pcVar1 = pcVar3 + 1;\n      cVar2 = pcVar1[(int)(param_1 + (-1 - (int)param_2))];\n      pcVar1[(int)(param_1 + (-1 - (int)param_2))] = *pcVar3;\n      *pcVar3 = cVar2;\n      param_3 = param_3 - 1;\n      pcVar3 = pcVar1;\n    } while (param_3 != 0);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "_qsort",
      "entry": "00426310",
      "c": "\n/* Library Function - Single Match\n    _qsort\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n_qsort(void *_Base,size_t _NumOfElements,size_t _SizeOfElements,_PtFuncCompare *_PtFuncCompare)\n\n{\n  uint uVar1;\n  char cVar2;\n  int *piVar3;\n  int iVar4;\n  char *pcVar5;\n  char *pcVar6;\n  char *pcVar7;\n  size_t sVar8;\n  char *in_stack_fffffec4;\n  void *pvVar9;\n  char *pcVar10;\n  char *local_118;\n  char *local_114;\n  char *local_110;\n  int local_10c;\n  char *local_108;\n  undefined4 auStack_f8 [30];\n  undefined4 auStack_80 [30];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  local_108 = (char *)_Base;\n  if ((((_Base == (void *)0x0) && (_NumOfElements != 0)) || (_SizeOfElements == 0)) ||\n     (_PtFuncCompare == (_PtFuncCompare *)0x0)) {\n    piVar3 = __errno();\n    *piVar3 = 0x16;\n    FUN_00429087();\n    FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n    return;\n  }\n  local_10c = 0;\n  if (_NumOfElements < 2) {\nLAB_0042669a:\n    FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n    return;\n  }\n  pcVar5 = (char *)((_NumOfElements - 1) * _SizeOfElements + (int)_Base);\nLAB_00426395:\n  while (uVar1 = (uint)((int)pcVar5 - (int)local_108) / _SizeOfElements + 1, 8 < uVar1) {\n    pcVar7 = local_108 + (uVar1 >> 1) * _SizeOfElements;\n    pcVar6 = local_108;\n    pcVar10 = pcVar7;\n    (*(code *)PTR_guard_check_icall_00433278)();\n    pvVar9 = (void *)0x4263d4;\n    iVar4 = (*_PtFuncCompare)(pcVar6,pcVar10);\n    if (0 < iVar4) {\n      swap(local_108,pcVar7,_SizeOfElements);\n    }\n    pcVar6 = local_108;\n    pcVar10 = pcVar5;\n    (*(code *)PTR_guard_check_icall_00433278)();\n    iVar4 = (*_PtFuncCompare)(pcVar6,pcVar10);\n    if (0 < iVar4) {\n      swap(local_108,pcVar5,_SizeOfElements);\n    }\n    (*(code *)PTR_guard_check_icall_00433278)(pcVar7,pcVar5);\n    iVar4 = (*_PtFuncCompare)(in_stack_fffffec4,pvVar9);\n    local_110 = local_108;\n    local_118 = pcVar5;\n    local_114 = pcVar7;\n    if (0 < iVar4) {\n      in_stack_fffffec4 = (char *)0x426442;\n      swap(pcVar7,pcVar5,_SizeOfElements);\n    }\nLAB_00426460:\n    if (local_110 < pcVar7) {\n      do {\n        local_110 = local_110 + _SizeOfElements;\n        if (pcVar7 <= local_110) goto LAB_004264a1;\n        pvVar9 = (void *)0x42647e;\n        (*(code *)PTR_guard_check_icall_00433278)(local_110,pcVar7);\n        iVar4 = (*_PtFuncCompare)(in_stack_fffffec4,pvVar9);\n      } while (iVar4 < 1);\n      if (pcVar7 <= local_110) goto LAB_004264a1;\n    }\n    else {\nLAB_004264a1:\n      do {\n        local_110 = local_110 + _SizeOfElements;\n        if (pcVar5 < local_110) break;\n        pvVar9 = (void *)0x4264b1;\n        (*(code *)PTR_guard_check_icall_00433278)(local_110,pcVar7);\n        iVar4 = (*_PtFuncCompare)(in_stack_fffffec4,pvVar9);\n      } while (iVar4 < 1);\n    }\n    do {\n      local_118 = local_118 + -_SizeOfElements;\n      if (local_118 <= pcVar7) break;\n      pvVar9 = (void *)0x4264f6;\n      (*(code *)PTR_guard_check_icall_00433278)(local_118,pcVar7);\n      iVar4 = (*_PtFuncCompare)(in_stack_fffffec4,pvVar9);\n    } while (0 < iVar4);\n    if (local_110 <= local_118) {\n      pcVar6 = local_118;\n      sVar8 = _SizeOfElements;\n      if (local_110 != local_118) {\n        do {\n          pcVar7 = pcVar6 + 1;\n          cVar2 = pcVar7[(int)(local_110 + (-1 - (int)local_118))];\n          pcVar7[(int)(local_110 + (-1 - (int)local_118))] = *pcVar6;\n          *pcVar6 = cVar2;\n          sVar8 = sVar8 - 1;\n          pcVar6 = pcVar7;\n          pcVar7 = local_114;\n        } while (sVar8 != 0);\n      }\n      if (pcVar7 == local_118) {\n        local_114 = local_110;\n        pcVar7 = local_110;\n      }\n      goto LAB_00426460;\n    }\n    local_118 = local_118 + _SizeOfElements;\n    if (pcVar7 < local_118) {\n      do {\n        local_118 = local_118 + -_SizeOfElements;\n        if (local_118 <= pcVar7) goto LAB_004265b1;\n        pvVar9 = (void *)0x426594;\n        (*(code *)PTR_guard_check_icall_00433278)(local_118,pcVar7);\n        iVar4 = (*_PtFuncCompare)(in_stack_fffffec4,pvVar9);\n      } while (iVar4 == 0);\n      if (local_118 <= pcVar7) goto LAB_004265b1;\n    }\n    else {\nLAB_004265b1:\n      do {\n        local_118 = local_118 + -_SizeOfElements;\n        if (local_118 <= local_108) break;\n        pvVar9 = (void *)0x4265c5;\n        (*(code *)PTR_guard_check_icall_00433278)(local_118,pcVar7);\n        iVar4 = (*_PtFuncCompare)(in_stack_fffffec4,pvVar9);\n      } while (iVar4 == 0);\n    }\n    if ((int)local_118 - (int)local_108 < (int)pcVar5 - (int)local_110) goto LAB_0042662b;\n    if (local_108 < local_118) {\n      auStack_f8[local_10c] = local_108;\n      auStack_80[local_10c] = local_118;\n      local_10c = local_10c + 1;\n    }\n    local_108 = local_110;\n    if (pcVar5 <= local_110) goto LAB_00426672;\n  }\n  shortsort(local_108,pcVar5,_SizeOfElements,(_func_int_void_ptr_void_ptr *)_PtFuncCompare);\n  in_stack_fffffec4 = local_108;\n  goto LAB_00426672;\nLAB_0042662b:\n  if (local_110 < pcVar5) {\n    auStack_f8[local_10c] = local_110;\n    auStack_80[local_10c] = pcVar5;\n    local_10c = local_10c + 1;\n  }\n  pcVar5 = local_118;\n  if (local_118 <= local_108) {\nLAB_00426672:\n    local_10c = local_10c + -1;\n    if (-1 < local_10c) {\n      local_108 = (char *)auStack_f8[local_10c];\n      pcVar5 = (char *)auStack_80[local_10c];\n      goto LAB_00426395;\n    }\n    goto LAB_0042669a;\n  }\n  goto LAB_00426395;\n}\n\n"
    },
    {
      "name": "_strcmp",
      "entry": "004266b0",
      "c": "\n/* Library Function - Single Match\n    _strcmp\n   \n   Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017, Visual Studio 2019 */\n\nint __cdecl _strcmp(char *_Str1,char *_Str2)\n\n{\n  undefined2 uVar1;\n  undefined4 uVar2;\n  byte bVar3;\n  bool bVar4;\n  \n  if (((uint)_Str1 & 3) != 0) {\n    if (((uint)_Str1 & 1) != 0) {\n      bVar3 = *_Str1;\n      _Str1 = _Str1 + 1;\n      bVar4 = bVar3 < (byte)*_Str2;\n      if (bVar3 != *_Str2) goto LAB_004266f8;\n      _Str2 = _Str2 + 1;\n      if (bVar3 == 0) {\n        return 0;\n      }\n      if (((uint)_Str1 & 2) == 0) goto LAB_004266c0;\n    }\n    uVar1 = *(undefined2 *)_Str1;\n    _Str1 = _Str1 + 2;\n    bVar3 = (byte)uVar1;\n    bVar4 = bVar3 < (byte)*_Str2;\n    if (bVar3 != *_Str2) goto LAB_004266f8;\n    if (bVar3 == 0) {\n      return 0;\n    }\n    bVar3 = (byte)((ushort)uVar1 >> 8);\n    bVar4 = bVar3 < ((byte *)_Str2)[1];\n    if (bVar3 != ((byte *)_Str2)[1]) goto LAB_004266f8;\n    if (bVar3 == 0) {\n      return 0;\n    }\n    _Str2 = (char *)((byte *)_Str2 + 2);\n  }\nLAB_004266c0:\n  while( true ) {\n    uVar2 = *(undefined4 *)_Str1;\n    bVar3 = (byte)uVar2;\n    bVar4 = bVar3 < (byte)*_Str2;\n    if (bVar3 != *_Str2) break;\n    if (bVar3 == 0) {\n      return 0;\n    }\n    bVar3 = (byte)((uint)uVar2 >> 8);\n    bVar4 = bVar3 < ((byte *)_Str2)[1];\n    if (bVar3 != ((byte *)_Str2)[1]) break;\n    if (bVar3 == 0) {\n      return 0;\n    }\n    bVar3 = (byte)((uint)uVar2 >> 0x10);\n    bVar4 = bVar3 < ((byte *)_Str2)[2];\n    if (bVar3 != ((byte *)_Str2)[2]) break;\n    if (bVar3 == 0) {\n      return 0;\n    }\n    bVar3 = (byte)((uint)uVar2 >> 0x18);\n    bVar4 = bVar3 < ((byte *)_Str2)[3];\n    if (bVar3 != ((byte *)_Str2)[3]) break;\n    _Str2 = (char *)((byte *)_Str2 + 4);\n    _Str1 = _Str1 + 4;\n    if (bVar3 == 0) {\n      return 0;\n    }\n  }\nLAB_004266f8:\n  return -(uint)bVar4 | 1;\n}\n\n"
    },
    {
      "name": "_strncmp",
      "entry": "00426740",
      "c": "\n/* Library Function - Single Match\n    _strncmp\n   \n   Libraries: Visual Studio 2015, Visual Studio 2017, Visual Studio 2019 */\n\nint __cdecl _strncmp(char *_Str1,char *_Str2,size_t _MaxCount)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int iVar3;\n  bool bVar4;\n  \n  if (_MaxCount != 0) {\n    iVar3 = (int)_Str1 - (int)_Str2;\n    uVar2 = (uint)_Str2 & 3;\n    while( true ) {\n      if (uVar2 == 0) {\n        while ((((uint)((int)_Str2 + iVar3) & 0xfff) < 0xffd &&\n               (uVar2 = *(uint *)((int)_Str2 + iVar3), uVar2 == *(uint *)_Str2))) {\n          bVar4 = _MaxCount < 4;\n          _MaxCount = _MaxCount - 4;\n          if (bVar4 || _MaxCount == 0) {\n            return 0;\n          }\n          _Str2 = (char *)((int)_Str2 + 4);\n          if ((~uVar2 & uVar2 + 0xfefefeff & 0x80808080) != 0) {\n            return 0;\n          }\n        }\n      }\n      bVar1 = *(byte *)((int)_Str2 + iVar3);\n      if (bVar1 != (byte)*(uint *)_Str2) {\n        return -(uint)(bVar1 < (byte)*(uint *)_Str2) | 1;\n      }\n      if (bVar1 == 0) break;\n      _Str2 = (char *)((int)_Str2 + 1);\n      bVar4 = _MaxCount == 0;\n      _MaxCount = _MaxCount - 1;\n      if (bVar4 || _MaxCount == 0) {\n        return 0;\n      }\n      uVar2 = (uint)_Str2 & 3;\n    }\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "_strncpy",
      "entry": "004267c0",
      "c": "\n/* Library Function - Single Match\n    _strncpy\n   \n   Library: Visual Studio */\n\nchar * __cdecl _strncpy(char *_Dest,char *_Source,size_t _Count)\n\n{\n  uint uVar1;\n  uint uVar2;\n  char cVar3;\n  uint uVar4;\n  uint *puVar5;\n  \n  if (_Count == 0) {\n    return _Dest;\n  }\n  puVar5 = (uint *)_Dest;\n  if (((uint)_Source & 3) != 0) {\n    while( true ) {\n      uVar4 = *(uint *)_Source;\n      _Source = (char *)((int)_Source + 1);\n      *(char *)puVar5 = (char)uVar4;\n      puVar5 = (uint *)((int)puVar5 + 1);\n      _Count = _Count - 1;\n      if (_Count == 0) {\n        return _Dest;\n      }\n      if ((char)uVar4 == '\\0') break;\n      if (((uint)_Source & 3) == 0) {\n        uVar4 = _Count >> 2;\n        goto joined_r0x0042680c;\n      }\n    }\n    do {\n      if (((uint)puVar5 & 3) == 0) {\n        uVar4 = _Count >> 2;\n        cVar3 = '\\0';\n        if (uVar4 == 0) goto LAB_00426853;\n        goto LAB_004268c9;\n      }\n      *(char *)puVar5 = '\\0';\n      puVar5 = (uint *)((int)puVar5 + 1);\n      _Count = _Count - 1;\n    } while (_Count != 0);\n    return _Dest;\n  }\n  uVar4 = _Count >> 2;\n  if (uVar4 != 0) {\n    do {\n      uVar1 = *(uint *)_Source;\n      uVar2 = *(uint *)_Source;\n      _Source = (char *)((int)_Source + 4);\n      if (((uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff) & 0x81010100) != 0) {\n        if ((char)uVar2 == '\\0') {\n          *puVar5 = 0;\njoined_r0x004268c5:\n          while( true ) {\n            uVar4 = uVar4 - 1;\n            puVar5 = puVar5 + 1;\n            if (uVar4 == 0) break;\nLAB_004268c9:\n            *puVar5 = 0;\n          }\n          cVar3 = '\\0';\n          _Count = _Count & 3;\n          if (_Count != 0) goto LAB_00426853;\n          return _Dest;\n        }\n        if ((char)(uVar2 >> 8) == '\\0') {\n          *puVar5 = uVar2 & 0xff;\n          goto joined_r0x004268c5;\n        }\n        if ((uVar2 & 0xff0000) == 0) {\n          *puVar5 = uVar2 & 0xffff;\n          goto joined_r0x004268c5;\n        }\n        if ((uVar2 & 0xff000000) == 0) {\n          *puVar5 = uVar2;\n          goto joined_r0x004268c5;\n        }\n      }\n      *puVar5 = uVar2;\n      puVar5 = puVar5 + 1;\n      uVar4 = uVar4 - 1;\njoined_r0x0042680c:\n    } while (uVar4 != 0);\n    _Count = _Count & 3;\n    if (_Count == 0) {\n      return _Dest;\n    }\n  }\n  do {\n    cVar3 = (char)*(uint *)_Source;\n    _Source = (char *)((int)_Source + 1);\n    *(char *)puVar5 = cVar3;\n    puVar5 = (uint *)((int)puVar5 + 1);\n    if (cVar3 == '\\0') {\n      while (_Count = _Count - 1, _Count != 0) {\nLAB_00426853:\n        *(char *)puVar5 = cVar3;\n        puVar5 = (uint *)((int)puVar5 + 1);\n      }\n      return _Dest;\n    }\n    _Count = _Count - 1;\n  } while (_Count != 0);\n  return _Dest;\n}\n\n"
    },
    {
      "name": "__byteswap_ulong",
      "entry": "004268e4",
      "c": "\n/* Library Function - Single Match\n    __byteswap_ulong\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nulong __cdecl __byteswap_ulong(ulong _Long)\n\n{\n  return ((_Long & 0xff00) + _Long * 0x10000) * 0x100 + (_Long >> 8 & 0xff00) + (_Long >> 0x18);\n}\n\n"
    },
    {
      "name": "FUN_00426911",
      "entry": "00426911",
      "c": "\nuint __cdecl FUN_00426911(char *param_1,uint param_2)\n\n{\n  bool bVar1;\n  undefined1 auVar2 [32];\n  char *pcVar3;\n  uint uVar4;\n  undefined1 (*pauVar5) [32];\n  uint uVar6;\n  undefined1 (*pauVar7) [32];\n  char *pcVar8;\n  undefined1 auVar9 [16];\n  undefined1 in_ZMM1 [64];\n  undefined1 auVar10 [64];\n  \n  if (DAT_00461d20 < 5) {\n    if (DAT_00461d20 < 1) {\n      pcVar3 = param_1;\n      if (param_1 != param_1 + param_2) {\n        do {\n          if (*pcVar3 == '\\0') break;\n          pcVar3 = pcVar3 + 1;\n        } while (pcVar3 != param_1 + param_2);\n      }\n      uVar4 = (int)pcVar3 - (int)param_1;\n    }\n    else {\n      uVar6 = -(uint)(((uint)param_1 & 0xf) != 0) & 0x10 - ((uint)param_1 & 0xf);\n      if (param_2 < uVar6) {\n        uVar6 = param_2;\n      }\n      pcVar3 = param_1;\n      if (param_1 != param_1 + uVar6) {\n        do {\n          if (*pcVar3 == '\\0') break;\n          pcVar3 = pcVar3 + 1;\n        } while (pcVar3 != param_1 + uVar6);\n      }\n      uVar4 = (int)pcVar3 - (int)param_1;\n      if (uVar4 == uVar6) {\n        pcVar3 = param_1 + uVar4;\n        auVar10 = ZEXT4864(in_ZMM1._16_48_) << 0x80;\n        pcVar8 = pcVar3 + ((param_2 - uVar6) - (param_2 - uVar6 & 0xf));\n        for (; pcVar3 != pcVar8; pcVar3 = pcVar3 + 0x10) {\n          auVar9[0] = -(*pcVar3 == '\\0');\n          auVar9[1] = -(pcVar3[1] == '\\0');\n          auVar9[2] = -(pcVar3[2] == '\\0');\n          auVar9[3] = -(pcVar3[3] == '\\0');\n          auVar9[4] = -(pcVar3[4] == '\\0');\n          auVar9[5] = -(pcVar3[5] == '\\0');\n          auVar9[6] = -(pcVar3[6] == '\\0');\n          auVar9[7] = -(pcVar3[7] == '\\0');\n          auVar9[8] = -(pcVar3[8] == auVar10[8]);\n          auVar9[9] = -(pcVar3[9] == auVar10[9]);\n          auVar9[10] = -(pcVar3[10] == auVar10[10]);\n          auVar9[0xb] = -(pcVar3[0xb] == auVar10[0xb]);\n          auVar9[0xc] = -(pcVar3[0xc] == auVar10[0xc]);\n          auVar9[0xd] = -(pcVar3[0xd] == auVar10[0xd]);\n          auVar9[0xe] = -(pcVar3[0xe] == auVar10[0xe]);\n          bVar1 = pcVar3[0xf] == auVar10[0xf];\n          auVar9[0xf] = -bVar1;\n          if ((((((((((((((((auVar9 >> 7 & (undefined1  [16])0x1) != (undefined1  [16])0x0 ||\n                           (auVar9 >> 0xf & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                          (auVar9 >> 0x17 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                         (auVar9 >> 0x1f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                        (auVar9 >> 0x27 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                       (auVar9 >> 0x2f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                      (auVar9 >> 0x37 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                     (auVar9 >> 0x3f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                    (auVar9 >> 0x47 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                   (auVar9 >> 0x4f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                  (auVar9 >> 0x57 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                 (auVar9 >> 0x5f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                (auVar9 >> 0x67 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n               (auVar9 >> 0x6f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n              (auVar9 >> 0x77 & (undefined1  [16])0x1) != (undefined1  [16])0x0) || bVar1) break;\n        }\n        for (; (pcVar3 != param_1 + param_2 && (*pcVar3 != '\\0')); pcVar3 = pcVar3 + 1) {\n        }\n        uVar4 = (int)pcVar3 - (int)param_1;\n      }\n    }\n  }\n  else {\n    uVar6 = -(uint)(((uint)param_1 & 0x1f) != 0) & 0x20 - ((uint)param_1 & 0x1f);\n    if (param_2 < uVar6) {\n      uVar6 = param_2;\n    }\n    pcVar3 = param_1;\n    if (param_1 != param_1 + uVar6) {\n      do {\n        if (*pcVar3 == '\\0') break;\n        pcVar3 = pcVar3 + 1;\n      } while (pcVar3 != param_1 + uVar6);\n    }\n    uVar4 = (int)pcVar3 - (int)param_1;\n    if (uVar4 == uVar6) {\n      pauVar5 = (undefined1 (*) [32])(param_1 + uVar4);\n      pauVar7 = (undefined1 (*) [32])(((param_2 - uVar6) - (param_2 - uVar6 & 0x1f)) + (int)pauVar5)\n      ;\n      while ((pauVar5 != pauVar7 &&\n             (auVar2 = vpcmpeqb_avx2(ZEXT832(0) << 0x40,*pauVar5),\n             (((((((((((((((((((((((((((((((auVar2 >> 7 & (undefined1  [32])0x1) ==\n                                           (undefined1  [32])0x0 &&\n                                          (auVar2 >> 0xf & (undefined1  [32])0x1) ==\n                                          (undefined1  [32])0x0) &&\n                                         (auVar2 >> 0x17 & (undefined1  [32])0x1) ==\n                                         (undefined1  [32])0x0) &&\n                                        (auVar2 >> 0x1f & (undefined1  [32])0x1) ==\n                                        (undefined1  [32])0x0) &&\n                                       (auVar2 >> 0x27 & (undefined1  [32])0x1) ==\n                                       (undefined1  [32])0x0) &&\n                                      (auVar2 >> 0x2f & (undefined1  [32])0x1) ==\n                                      (undefined1  [32])0x0) &&\n                                     (auVar2 >> 0x37 & (undefined1  [32])0x1) ==\n                                     (undefined1  [32])0x0) &&\n                                    (auVar2 >> 0x3f & (undefined1  [32])0x1) ==\n                                    (undefined1  [32])0x0) &&\n                                   (auVar2 >> 0x47 & (undefined1  [32])0x1) == (undefined1  [32])0x0\n                                   ) && (auVar2 >> 0x4f & (undefined1  [32])0x1) ==\n                                        (undefined1  [32])0x0) &&\n                                 (auVar2 >> 0x57 & (undefined1  [32])0x1) == (undefined1  [32])0x0)\n                                && (auVar2 >> 0x5f & (undefined1  [32])0x1) == (undefined1  [32])0x0\n                                ) && (auVar2 >> 0x67 & (undefined1  [32])0x1) ==\n                                     (undefined1  [32])0x0) &&\n                              (auVar2 >> 0x6f & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                             (auVar2 >> 0x77 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                            SUB321(auVar2 >> 0x7f,0) == '\\0') &&\n                           (auVar2 >> 0x87 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                          (auVar2 >> 0x8f & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                         (auVar2 >> 0x97 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                        (auVar2 >> 0x9f & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                       (auVar2 >> 0xa7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                      (auVar2 >> 0xaf & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                     (auVar2 >> 0xb7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                    SUB321(auVar2 >> 0xbf,0) == '\\0') &&\n                   (auVar2 >> 199 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                  (auVar2 >> 0xcf & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                 (auVar2 >> 0xd7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                (auVar2 >> 0xdf & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n               (auVar2 >> 0xe7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n              (auVar2 >> 0xef & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n             (auVar2 >> 0xf7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) && -1 < auVar2[0x1f]\n             ))) {\n        pauVar5 = pauVar5 + 1;\n      }\n      for (; (pauVar5 != (undefined1 (*) [32])(param_1 + param_2) && ((*pauVar5)[0] != '\\0'));\n          pauVar5 = (undefined1 (*) [32])(*pauVar5 + 1)) {\n      }\n      uVar4 = (int)pauVar5 - (int)param_1;\n    }\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "FUN_00426a38",
      "entry": "00426a38",
      "c": "\nuint __cdecl FUN_00426a38(short *param_1,uint param_2)\n\n{\n  undefined1 (*pauVar1) [32];\n  short *psVar2;\n  undefined1 auVar3 [32];\n  uint uVar4;\n  undefined1 (*pauVar5) [32];\n  short *psVar6;\n  int iVar7;\n  uint uVar8;\n  undefined1 auVar9 [16];\n  undefined1 in_ZMM1 [64];\n  undefined1 auVar10 [64];\n  \n  psVar6 = param_1;\n  if (DAT_00461d20 < 5) {\n    if (DAT_00461d20 < 1) {\n      if (param_1 != param_1 + param_2) {\n        do {\n          if (*psVar6 == 0) break;\n          psVar6 = psVar6 + 1;\n        } while (psVar6 != param_1 + param_2);\n      }\n    }\n    else {\n      if (((uint)param_1 & 1) == 0) {\n        uVar8 = (-(uint)(((uint)param_1 & 0xf) != 0) & 0x10 - ((uint)param_1 & 0xf)) >> 1;\n        if (param_2 < uVar8) {\n          uVar8 = param_2;\n        }\n        if (param_1 != param_1 + uVar8) {\n          do {\n            if (*psVar6 == 0) break;\n            psVar6 = psVar6 + 1;\n          } while (psVar6 != param_1 + uVar8);\n        }\n        uVar4 = (int)psVar6 - (int)param_1 >> 1;\n        if (uVar4 != uVar8) {\n          return uVar4;\n        }\n        psVar6 = param_1 + uVar4;\n        auVar10 = ZEXT4864(in_ZMM1._16_48_) << 0x80;\n        psVar2 = psVar6 + ((param_2 - uVar8) - (param_2 - uVar8 & 0xf));\n        for (; psVar6 != psVar2; psVar6 = psVar6 + 8) {\n          auVar9._0_2_ = -(ushort)(*psVar6 == 0);\n          auVar9._2_2_ = -(ushort)(psVar6[1] == 0);\n          auVar9._4_2_ = -(ushort)(psVar6[2] == 0);\n          auVar9._6_2_ = -(ushort)(psVar6[3] == 0);\n          auVar9._8_2_ = -(ushort)(psVar6[4] == auVar10._8_2_);\n          auVar9._10_2_ = -(ushort)(psVar6[5] == auVar10._10_2_);\n          auVar9._12_2_ = -(ushort)(psVar6[6] == auVar10._12_2_);\n          auVar9._14_2_ = -(ushort)(psVar6[7] == auVar10._14_2_);\n          if ((((((((((((((((auVar9 >> 7 & (undefined1  [16])0x1) != (undefined1  [16])0x0 ||\n                           (auVar9 >> 0xf & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                          (auVar9 >> 0x17 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                         (auVar9 >> 0x1f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                        (auVar9 >> 0x27 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                       (auVar9 >> 0x2f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                      (auVar9 >> 0x37 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                     (auVar9 >> 0x3f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                    (auVar9 >> 0x47 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                   (auVar9 >> 0x4f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                  (auVar9 >> 0x57 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                 (auVar9 >> 0x5f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n                (auVar9 >> 0x67 & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n               (auVar9 >> 0x6f & (undefined1  [16])0x1) != (undefined1  [16])0x0) ||\n              (auVar9._14_2_ >> 7 & 1) != 0) || (auVar9._14_2_ & 0x8000) != 0) break;\n        }\n        for (; (psVar6 != param_1 + param_2 && (*psVar6 != 0)); psVar6 = psVar6 + 1) {\n        }\n        iVar7 = (int)psVar6 - (int)param_1;\n        goto LAB_00426be5;\n      }\n      if (param_1 != param_1 + param_2) {\n        do {\n          if (*psVar6 == 0) break;\n          psVar6 = psVar6 + 1;\n        } while (psVar6 != param_1 + param_2);\n      }\n    }\n  }\n  else {\n    if (((uint)param_1 & 1) == 0) {\n      uVar8 = (-(uint)(((uint)param_1 & 0x1f) != 0) & 0x20 - ((uint)param_1 & 0x1f)) >> 1;\n      if (param_2 < uVar8) {\n        uVar8 = param_2;\n      }\n      if (param_1 != param_1 + uVar8) {\n        do {\n          if (*psVar6 == 0) break;\n          psVar6 = psVar6 + 1;\n        } while (psVar6 != param_1 + uVar8);\n      }\n      uVar4 = (int)psVar6 - (int)param_1 >> 1;\n      if (uVar4 != uVar8) {\n        return uVar4;\n      }\n      pauVar5 = (undefined1 (*) [32])(param_1 + uVar4);\n      pauVar1 = (undefined1 (*) [32])\n                ((int)pauVar5 + ((param_2 - uVar8) - (param_2 - uVar8 & 0x1f)) * 2);\n      while ((pauVar5 != pauVar1 &&\n             (auVar3 = vpcmpeqw_avx2(ZEXT832(0) << 0x40,*pauVar5),\n             (((((((((((((((((((((((((((((((auVar3 >> 7 & (undefined1  [32])0x1) ==\n                                           (undefined1  [32])0x0 &&\n                                          (auVar3 >> 0xf & (undefined1  [32])0x1) ==\n                                          (undefined1  [32])0x0) &&\n                                         (auVar3 >> 0x17 & (undefined1  [32])0x1) ==\n                                         (undefined1  [32])0x0) &&\n                                        (auVar3 >> 0x1f & (undefined1  [32])0x1) ==\n                                        (undefined1  [32])0x0) &&\n                                       (auVar3 >> 0x27 & (undefined1  [32])0x1) ==\n                                       (undefined1  [32])0x0) &&\n                                      (auVar3 >> 0x2f & (undefined1  [32])0x1) ==\n                                      (undefined1  [32])0x0) &&\n                                     (auVar3 >> 0x37 & (undefined1  [32])0x1) ==\n                                     (undefined1  [32])0x0) &&\n                                    (auVar3 >> 0x3f & (undefined1  [32])0x1) ==\n                                    (undefined1  [32])0x0) &&\n                                   (auVar3 >> 0x47 & (undefined1  [32])0x1) == (undefined1  [32])0x0\n                                   ) && (auVar3 >> 0x4f & (undefined1  [32])0x1) ==\n                                        (undefined1  [32])0x0) &&\n                                 (auVar3 >> 0x57 & (undefined1  [32])0x1) == (undefined1  [32])0x0)\n                                && (auVar3 >> 0x5f & (undefined1  [32])0x1) == (undefined1  [32])0x0\n                                ) && (auVar3 >> 0x67 & (undefined1  [32])0x1) ==\n                                     (undefined1  [32])0x0) &&\n                              (auVar3 >> 0x6f & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                             (auVar3 >> 0x77 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                            SUB321(auVar3 >> 0x7f,0) == '\\0') &&\n                           (auVar3 >> 0x87 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                          (auVar3 >> 0x8f & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                         (auVar3 >> 0x97 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                        (auVar3 >> 0x9f & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                       (auVar3 >> 0xa7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                      (auVar3 >> 0xaf & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                     (auVar3 >> 0xb7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                    SUB321(auVar3 >> 0xbf,0) == '\\0') &&\n                   (auVar3 >> 199 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                  (auVar3 >> 0xcf & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                 (auVar3 >> 0xd7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n                (auVar3 >> 0xdf & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n               (auVar3 >> 0xe7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n              (auVar3 >> 0xef & (undefined1  [32])0x1) == (undefined1  [32])0x0) &&\n             (auVar3 >> 0xf7 & (undefined1  [32])0x1) == (undefined1  [32])0x0) && -1 < auVar3[0x1f]\n             ))) {\n        pauVar5 = pauVar5 + 1;\n      }\n      for (; (pauVar5 != (undefined1 (*) [32])(param_1 + param_2) && (*(short *)*pauVar5 != 0));\n          pauVar5 = (undefined1 (*) [32])(*pauVar5 + 2)) {\n      }\n      return (int)pauVar5 - (int)param_1 >> 1;\n    }\n    if (param_1 != param_1 + param_2) {\n      do {\n        if (*psVar6 == 0) break;\n        psVar6 = psVar6 + 1;\n      } while (psVar6 != param_1 + param_2);\n    }\n  }\n  iVar7 = (int)psVar6 - (int)param_1;\nLAB_00426be5:\n  return iVar7 >> 1;\n}\n\n"
    },
    {
      "name": "is_overflow_condition<unsigned_long>",
      "entry": "00426bef",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl __crt_strtox::is_overflow_condition<unsigned long>(unsigned int,unsigned long)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __cdecl __crt_strtox::is_overflow_condition<unsigned_long>(uint param_1,ulong param_2)\n\n{\n  if (((param_1 & 4) == 0) &&\n     (((param_1 & 1) == 0 ||\n      ((((param_1 & 2) == 0 || (param_2 < 0x80000001)) &&\n       (((param_1 & 2) != 0 || (param_2 < 0x80000000)))))))) {\n    return false;\n  }\n  return true;\n}\n\n"
    },
    {
      "name": "make_c_string_character_source<>",
      "entry": "00426c22",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    class __crt_strtox::c_string_character_source<char> __cdecl\n   __crt_strtox::make_c_string_character_source<char,std::nullptr_t>(char const *\n   const,std::nullptr_t)\n    class __crt_strtox::c_string_character_source<char> __cdecl\n   __crt_strtox::make_c_string_character_source<char,char * *>(char const * const,char * * const)\n    class __crt_strtox::c_string_character_source<wchar_t> __cdecl\n   __crt_strtox::make_c_string_character_source<wchar_t,std::nullptr_t>(wchar_t const *\n   const,std::nullptr_t)\n    class __crt_strtox::c_string_character_source<wchar_t> __cdecl\n   __crt_strtox::make_c_string_character_source<wchar_t,wchar_t * *>(wchar_t const * const,wchar_t *\n   * const)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid __cdecl\nmake_c_string_character_source<>(undefined4 *param_1,undefined4 param_2,undefined4 *param_3)\n\n{\n  *param_1 = param_2;\n  param_1[1] = param_3;\n  if (param_3 != (undefined4 *)0x0) {\n    *param_3 = param_2;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<char>_>",
      "entry": "00426c3d",
      "c": "\n/* Library Function - Single Match\n    unsigned long __cdecl __crt_strtox::parse_integer<unsigned long,class\n   __crt_strtox::c_string_character_source<char> >(struct __crt_locale_pointers * const,class\n   __crt_strtox::c_string_character_source<char>,int,bool)\n   \n   Library: Visual Studio 2015 Release */\n\nulong __cdecl\n__crt_strtox::parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<char>_>\n          (__crt_locale_pointers *param_1,byte *param_2,undefined4 *param_3,uint param_4,\n          char param_5)\n\n{\n  byte bVar1;\n  bool bVar2;\n  int *piVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  byte bVar7;\n  uint uVar8;\n  int local_2c;\n  localeinfo_struct local_28;\n  char local_20;\n  byte *local_1c;\n  uint local_18;\n  uint local_14;\n  uint local_10;\n  uint local_c;\n  byte local_8;\n  undefined3 uStack_7;\n  \n  bVar2 = c_string_character_source<wchar_t>::validate\n                    ((c_string_character_source<wchar_t> *)&param_2);\n  uVar8 = param_4;\n  if (bVar2) {\n    if ((param_4 == 0) || ((1 < (int)param_4 && ((int)param_4 < 0x25)))) {\n      _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_2c,param_1);\n      local_10 = 0;\n      local_1c = param_2;\n      do {\n        bVar7 = *param_2;\n        param_2 = param_2 + 1;\n        _local_8 = CONCAT31(uStack_7,bVar7);\n        iVar4 = __ischartype_l((uint)bVar7,8,&local_28);\n      } while (iVar4 != 0);\n      local_c = (uint)(param_5 != '\\0');\n      if (bVar7 == 0x2d) {\n        local_c = local_c | 2;\nLAB_00426ce0:\n        bVar7 = *param_2;\n        param_2 = param_2 + 1;\n        _local_8 = CONCAT31(uStack_7,bVar7);\n      }\n      else if (bVar7 == 0x2b) goto LAB_00426ce0;\n      if ((uVar8 == 0) || (uVar8 == 0x10)) {\n        if ((byte)(bVar7 - 0x30) < 10) {\n          iVar4 = (char)bVar7 + -0x30;\n        }\n        else if ((byte)(bVar7 + 0x9f) < 0x1a) {\n          iVar4 = (char)bVar7 + -0x57;\n        }\n        else if ((byte)(bVar7 + 0xbf) < 0x1a) {\n          iVar4 = (char)bVar7 + -0x37;\n        }\n        else {\n          iVar4 = -1;\n        }\n        if (iVar4 == 0) {\n          bVar1 = *param_2;\n          local_14 = CONCAT31(local_14._1_3_,bVar1);\n          if ((bVar1 == 0x78) || (bVar1 == 0x58)) {\n            if (uVar8 == 0) {\n              uVar8 = 0x10;\n            }\n            bVar7 = param_2[1];\n            param_2 = param_2 + 2;\n            _local_8 = CONCAT31(uStack_7,bVar7);\n          }\n          else {\n            if (uVar8 == 0) {\n              uVar8 = 8;\n            }\n            param_2 = param_2 + 1;\n            c_string_character_source<char>::unget\n                      ((c_string_character_source<char> *)&param_2,bVar1);\n          }\n        }\n        else if (uVar8 == 0) {\n          uVar8 = 10;\n        }\n      }\n      local_14 = (uint)(0xffffffff / (ulonglong)uVar8);\n      local_18 = (uint)(0xffffffff % (ulonglong)uVar8);\n      while( true ) {\n        if ((byte)(bVar7 - 0x30) < 10) {\n          uVar5 = (int)(char)bVar7 - 0x30;\n        }\n        else if ((byte)(bVar7 + 0x9f) < 0x1a) {\n          uVar5 = (int)(char)bVar7 - 0x57;\n        }\n        else if ((byte)(bVar7 + 0xbf) < 0x1a) {\n          uVar5 = (int)(char)bVar7 - 0x37;\n        }\n        else {\n          uVar5 = 0xffffffff;\n        }\n        if ((uVar5 == 0xffffffff) || (uVar8 <= uVar5)) break;\n        uVar6 = local_c | 8;\n        if ((local_10 < local_14) || ((local_10 == local_14 && (uVar5 <= local_18)))) {\n          local_10 = local_10 * uVar8 + uVar5;\n        }\n        else {\n          uVar6 = local_c | 0xc;\n        }\n        bVar7 = *param_2;\n        param_2 = param_2 + 1;\n        _local_8 = CONCAT31(uStack_7,bVar7);\n        local_c = uVar6;\n      }\n      c_string_character_source<char>::unget\n                ((c_string_character_source<char> *)&param_2,(char)_local_8);\n      uVar5 = local_c;\n      uVar8 = local_10;\n      if ((local_c & 8) == 0) {\n        uVar8 = 0;\n        param_2 = local_1c;\n      }\n      else {\n        bVar2 = is_overflow_condition<unsigned_long>(local_c,local_10);\n        if (bVar2) {\n          piVar3 = __errno();\n          *piVar3 = 0x22;\n          if ((uVar5 & 1) == 0) {\n            uVar8 = 0xffffffff;\n          }\n          else if ((uVar5 & 2) == 0) {\n            uVar8 = 0x7fffffff;\n          }\n          else {\n            uVar8 = 0x80000000;\n          }\n        }\n        else if ((uVar5 & 2) != 0) {\n          uVar8 = -uVar8;\n        }\n      }\n      if (local_20 != '\\0') {\n        *(uint *)(local_2c + 0x350) = *(uint *)(local_2c + 0x350) & 0xfffffffd;\n      }\n      goto LAB_00426c76;\n    }\n    piVar3 = __errno();\n    *piVar3 = 0x16;\n    FUN_00429087();\n  }\n  uVar8 = 0;\nLAB_00426c76:\n  if (param_3 != (undefined4 *)0x0) {\n    *param_3 = param_2;\n  }\n  return uVar8;\n}\n\n"
    },
    {
      "name": "parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<wchar_t>_>",
      "entry": "00426e65",
      "c": "\n/* Library Function - Single Match\n    unsigned long __cdecl __crt_strtox::parse_integer<unsigned long,class\n   __crt_strtox::c_string_character_source<wchar_t> >(struct __crt_locale_pointers * const,class\n   __crt_strtox::c_string_character_source<wchar_t>,int,bool)\n   \n   Library: Visual Studio 2015 Release */\n\nulong __cdecl\n__crt_strtox::parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<wchar_t>_>\n          (__crt_locale_pointers *param_1,wchar_t *param_2,undefined4 *param_3,uint param_4,\n          char param_5)\n\n{\n  bool bVar1;\n  int *piVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  wchar_t wVar9;\n  int local_20 [3];\n  char local_14;\n  wchar_t *local_10;\n  uint local_c;\n  undefined4 local_8;\n  \n  bVar1 = c_string_character_source<wchar_t>::validate\n                    ((c_string_character_source<wchar_t> *)&param_2);\n  if (bVar1) {\n    if ((param_4 == 0) || ((1 < (int)param_4 && ((int)param_4 < 0x25)))) {\n      _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)local_20,param_1);\n      local_c = 0;\n      local_10 = param_2;\n      do {\n        wVar9 = *param_2;\n        param_2 = param_2 + 1;\n        iVar3 = _iswctype(wVar9,8);\n      } while (iVar3 != 0);\n      uVar7 = (uint)(param_5 != '\\0');\n      if (wVar9 == L'-') {\n        uVar7 = uVar7 | 2;\nLAB_00426efe:\n        wVar9 = *param_2;\n        param_2 = param_2 + 1;\n      }\n      else if (wVar9 == L'+') goto LAB_00426efe;\n      uVar6 = (uint)(ushort)wVar9;\n      local_8 = 0x19;\n      if ((param_4 != 0) && (param_4 != 0x10)) goto LAB_00427206;\n      if ((ushort)wVar9 < 0x30) goto LAB_00427189;\n      if ((ushort)wVar9 < 0x3a) {\n        iVar3 = uVar6 - 0x30;\nLAB_00427184:\n        if (iVar3 == -1) goto LAB_00427189;\n      }\n      else {\n        if (0xff0f < (ushort)wVar9) {\n          if ((ushort)wVar9 < 0xff1a) {\n            iVar3 = uVar6 - 0xff10;\n          }\n          else {\n            iVar3 = -1;\n          }\n          goto LAB_00427184;\n        }\n        if (0x65f < (ushort)wVar9) {\n          if ((ushort)wVar9 < 0x66a) {\n            iVar3 = uVar6 - 0x660;\n          }\n          else {\n            if ((ushort)wVar9 < 0x6f0) goto LAB_00427189;\n            if ((ushort)wVar9 < 0x6fa) {\n              iVar3 = uVar6 - 0x6f0;\n            }\n            else {\n              if ((ushort)wVar9 < 0x966) goto LAB_00427189;\n              if ((ushort)wVar9 < 0x970) {\n                iVar3 = uVar6 - 0x966;\n              }\n              else {\n                if ((ushort)wVar9 < 0x9e6) goto LAB_00427189;\n                if ((ushort)wVar9 < 0x9f0) {\n                  iVar3 = uVar6 - 0x9e6;\n                }\n                else {\n                  if ((ushort)wVar9 < 0xa66) goto LAB_00427189;\n                  if ((ushort)wVar9 < 0xa70) {\n                    iVar3 = uVar6 - 0xa66;\n                  }\n                  else {\n                    if ((ushort)wVar9 < 0xae6) goto LAB_00427189;\n                    if ((ushort)wVar9 < 0xaf0) {\n                      iVar3 = uVar6 - 0xae6;\n                    }\n                    else {\n                      if ((ushort)wVar9 < 0xb66) goto LAB_00427189;\n                      if ((ushort)wVar9 < 0xb70) {\n                        iVar3 = uVar6 - 0xb66;\n                      }\n                      else {\n                        if ((ushort)wVar9 < 0xc66) goto LAB_00427189;\n                        if ((ushort)wVar9 < 0xc70) {\n                          iVar3 = uVar6 - 0xc66;\n                        }\n                        else {\n                          if ((ushort)wVar9 < 0xce6) goto LAB_00427189;\n                          if ((ushort)wVar9 < 0xcf0) {\n                            iVar3 = uVar6 - 0xce6;\n                          }\n                          else {\n                            if ((ushort)wVar9 < 0xd66) goto LAB_00427189;\n                            if ((ushort)wVar9 < 0xd70) {\n                              iVar3 = uVar6 - 0xd66;\n                            }\n                            else {\n                              if ((ushort)wVar9 < 0xe50) goto LAB_00427189;\n                              if ((ushort)wVar9 < 0xe5a) {\n                                iVar3 = uVar6 - 0xe50;\n                              }\n                              else {\n                                if ((ushort)wVar9 < 0xed0) goto LAB_00427189;\n                                if ((ushort)wVar9 < 0xeda) {\n                                  iVar3 = uVar6 - 0xed0;\n                                }\n                                else {\n                                  if ((ushort)wVar9 < 0xf20) goto LAB_00427189;\n                                  if ((ushort)wVar9 < 0xf2a) {\n                                    iVar3 = uVar6 - 0xf20;\n                                  }\n                                  else {\n                                    if ((ushort)wVar9 < 0x1040) goto LAB_00427189;\n                                    if ((ushort)wVar9 < 0x104a) {\n                                      iVar3 = uVar6 - 0x1040;\n                                    }\n                                    else {\n                                      if ((ushort)wVar9 < 0x17e0) goto LAB_00427189;\n                                      if ((ushort)wVar9 < 0x17ea) {\n                                        iVar3 = uVar6 - 0x17e0;\n                                      }\n                                      else {\n                                        if (((ushort)wVar9 < 0x1810) || (0x1819 < (ushort)wVar9))\n                                        goto LAB_00427189;\n                                        iVar3 = uVar6 - 0x1810;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          goto LAB_00427184;\n        }\nLAB_00427189:\n        if ((((ushort)wVar9 < 0x41) || (0x5a < (ushort)wVar9)) && (0x19 < (ushort)(wVar9 + L'\uff9f')))\n        {\n          iVar3 = -1;\n        }\n        else {\n          uVar4 = uVar6;\n          if ((ushort)(wVar9 + L'\uff9f') < 0x1a) {\n            uVar4 = uVar6 - 0x20;\n          }\n          iVar3 = uVar4 - 0x37;\n        }\n      }\n      if (iVar3 == 0) {\n        wVar9 = *param_2;\n        if ((wVar9 == L'x') || (wVar9 == L'X')) {\n          if (param_4 == 0) {\n            param_4 = 0x10;\n          }\n          uVar6 = (uint)(ushort)param_2[1];\n          param_2 = param_2 + 2;\n        }\n        else {\n          if (param_4 == 0) {\n            param_4 = 8;\n          }\n          param_2 = param_2 + 1;\n          c_string_character_source<wchar_t>::unget\n                    ((c_string_character_source<wchar_t> *)&param_2,wVar9);\n        }\n      }\n      else if (param_4 == 0) {\n        param_4 = 10;\n      }\nLAB_00427206:\n      uVar4 = (uint)(0xffffffff / (ulonglong)param_4);\n      do {\n        wVar9 = (wchar_t)uVar6;\n        if ((ushort)wVar9 < 0x30) goto LAB_00427471;\n        if ((ushort)wVar9 < 0x3a) {\n          uVar5 = uVar6 - 0x30;\nLAB_0042746c:\n          if (uVar5 == 0xffffffff) goto LAB_00427471;\n        }\n        else {\n          if (0xff0f < (ushort)wVar9) {\n            if ((ushort)wVar9 < 0xff1a) {\n              uVar5 = uVar6 - 0xff10;\n            }\n            else {\n              uVar5 = 0xffffffff;\n            }\n            goto LAB_0042746c;\n          }\n          if (0x65f < (ushort)wVar9) {\n            if ((ushort)wVar9 < 0x66a) {\n              uVar5 = uVar6 - 0x660;\n            }\n            else {\n              if ((ushort)wVar9 < 0x6f0) goto LAB_00427471;\n              if ((ushort)wVar9 < 0x6fa) {\n                uVar5 = uVar6 - 0x6f0;\n              }\n              else {\n                if ((ushort)wVar9 < 0x966) goto LAB_00427471;\n                if ((ushort)wVar9 < 0x970) {\n                  uVar5 = uVar6 - 0x966;\n                }\n                else {\n                  if ((ushort)wVar9 < 0x9e6) goto LAB_00427471;\n                  if ((ushort)wVar9 < 0x9f0) {\n                    uVar5 = uVar6 - 0x9e6;\n                  }\n                  else {\n                    if ((ushort)wVar9 < 0xa66) goto LAB_00427471;\n                    if ((ushort)wVar9 < 0xa70) {\n                      uVar5 = uVar6 - 0xa66;\n                    }\n                    else {\n                      if ((ushort)wVar9 < 0xae6) goto LAB_00427471;\n                      if ((ushort)wVar9 < 0xaf0) {\n                        uVar5 = uVar6 - 0xae6;\n                      }\n                      else {\n                        if ((ushort)wVar9 < 0xb66) goto LAB_00427471;\n                        if ((ushort)wVar9 < 0xb70) {\n                          uVar5 = uVar6 - 0xb66;\n                        }\n                        else {\n                          if ((ushort)wVar9 < 0xc66) goto LAB_00427471;\n                          if ((ushort)wVar9 < 0xc70) {\n                            uVar5 = uVar6 - 0xc66;\n                          }\n                          else {\n                            if ((ushort)wVar9 < 0xce6) goto LAB_00427471;\n                            if ((ushort)wVar9 < 0xcf0) {\n                              uVar5 = uVar6 - 0xce6;\n                            }\n                            else {\n                              if ((ushort)wVar9 < 0xd66) goto LAB_00427471;\n                              if ((ushort)wVar9 < 0xd70) {\n                                uVar5 = uVar6 - 0xd66;\n                              }\n                              else {\n                                if ((ushort)wVar9 < 0xe50) goto LAB_00427471;\n                                if ((ushort)wVar9 < 0xe5a) {\n                                  uVar5 = uVar6 - 0xe50;\n                                }\n                                else {\n                                  if ((ushort)wVar9 < 0xed0) goto LAB_00427471;\n                                  if ((ushort)wVar9 < 0xeda) {\n                                    uVar5 = uVar6 - 0xed0;\n                                  }\n                                  else {\n                                    if ((ushort)wVar9 < 0xf20) goto LAB_00427471;\n                                    if ((ushort)wVar9 < 0xf2a) {\n                                      uVar5 = uVar6 - 0xf20;\n                                    }\n                                    else {\n                                      if ((ushort)wVar9 < 0x1040) goto LAB_00427471;\n                                      if ((ushort)wVar9 < 0x104a) {\n                                        uVar5 = uVar6 - 0x1040;\n                                      }\n                                      else {\n                                        if ((ushort)wVar9 < 0x17e0) goto LAB_00427471;\n                                        if ((ushort)wVar9 < 0x17ea) {\n                                          uVar5 = uVar6 - 0x17e0;\n                                        }\n                                        else {\n                                          if (((ushort)wVar9 < 0x1810) || (0x1819 < (ushort)wVar9))\n                                          goto LAB_00427471;\n                                          uVar5 = uVar6 - 0x1810;\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            goto LAB_0042746c;\n          }\nLAB_00427471:\n          if ((((ushort)wVar9 < 0x41) || (0x5a < (ushort)wVar9)) &&\n             ((ushort)local_8 < (ushort)(wVar9 + L'\uff9f'))) {\n            uVar5 = 0xffffffff;\n          }\n          else {\n            if ((ushort)(wVar9 + L'\uff9f') <= (ushort)local_8) {\n              uVar6 = uVar6 - 0x20;\n            }\n            uVar5 = uVar6 - 0x37;\n          }\n        }\n        if ((uVar5 == 0xffffffff) || (param_4 <= uVar5)) goto LAB_004274d7;\n        uVar8 = uVar7 | 8;\n        if ((local_c < uVar4) ||\n           ((local_c == uVar4 && (uVar5 <= (uint)(0xffffffff % (ulonglong)param_4))))) {\n          local_c = local_c * param_4 + uVar5;\n        }\n        else {\n          uVar8 = uVar7 | 0xc;\n        }\n        uVar6 = (uint)(ushort)*param_2;\n        param_2 = param_2 + 1;\n        uVar7 = uVar8;\n      } while( true );\n    }\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    FUN_00429087();\n  }\n  uVar6 = 0;\nLAB_00426ea0:\n  if (param_3 != (undefined4 *)0x0) {\n    *param_3 = param_2;\n  }\n  return uVar6;\nLAB_004274d7:\n  c_string_character_source<wchar_t>::unget((c_string_character_source<wchar_t> *)&param_2,wVar9);\n  uVar6 = local_c;\n  if ((uVar7 & 8) == 0) {\n    uVar6 = 0;\n    param_2 = local_10;\n  }\n  else {\n    bVar1 = is_overflow_condition<unsigned_long>(uVar7,local_c);\n    if (bVar1) {\n      piVar2 = __errno();\n      *piVar2 = 0x22;\n      if ((uVar7 & 1) == 0) {\n        uVar6 = 0xffffffff;\n      }\n      else if ((uVar7 & 2) == 0) {\n        uVar6 = 0x7fffffff;\n      }\n      else {\n        uVar6 = 0x80000000;\n      }\n    }\n    else if ((uVar7 & 2) != 0) {\n      uVar6 = -uVar6;\n    }\n  }\n  if (local_14 != '\\0') {\n    *(uint *)(local_20[0] + 0x350) = *(uint *)(local_20[0] + 0x350) & 0xfffffffd;\n  }\n  goto LAB_00426ea0;\n}\n\n"
    },
    {
      "name": "unget",
      "entry": "0042754a",
      "c": "\n/* Library Function - Single Match\n    public: void __thiscall __crt_strtox::c_string_character_source<char>::unget(char)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\n__crt_strtox::c_string_character_source<char>::unget\n          (c_string_character_source<char> *this,char param_1)\n\n{\n  int *piVar1;\n  \n  *(int *)this = *(int *)this + -1;\n  if ((param_1 != '\\0') && (**(char **)this != param_1)) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "unget",
      "entry": "00427572",
      "c": "\n/* Library Function - Single Match\n    public: void __thiscall __crt_strtox::c_string_character_source<wchar_t>::unget(wchar_t)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\n__crt_strtox::c_string_character_source<wchar_t>::unget\n          (c_string_character_source<wchar_t> *this,wchar_t param_1)\n\n{\n  int *piVar1;\n  \n  *(int *)this = *(int *)this + -2;\n  if ((param_1 != L'\\0') && (**(wchar_t **)this != param_1)) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__chvalidchk_l",
      "entry": "0042759e",
      "c": "\n/* Library Function - Single Match\n    __chvalidchk_l\n   \n   Library: Visual Studio 2015 Release */\n\nushort __cdecl __chvalidchk_l(int param_1,ushort param_2,undefined4 *param_3)\n\n{\n  ushort uVar1;\n  ushort *puVar2;\n  \n  if (param_3 == (undefined4 *)0x0) {\n    puVar2 = ___pctype_func();\n    uVar1 = puVar2[param_1];\n  }\n  else {\n    uVar1 = *(ushort *)(*(int *)*param_3 + param_1 * 2);\n  }\n  return uVar1 & param_2;\n}\n\n"
    },
    {
      "name": "__ischartype_l",
      "entry": "004275c8",
      "c": "\n/* Library Function - Single Match\n    __ischartype_l\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __ischartype_l(int param_1,int param_2,_locale_t param_3)\n\n{\n  if ((param_3 == (_locale_t)0x0) || ((int)param_3->locinfo->lc_codepage < 2)) {\n    __chvalidchk_l(param_1,(ushort)param_2,&param_3->locinfo);\n  }\n  else {\n    __isctype_l(param_1,param_2,param_3);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FID_conflict:_atoi",
      "entry": "004275fb",
      "c": "\n/* Library Function - Multiple Matches With Different Base Names\n    _atoi\n    _atol\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl FID_conflict__atoi(char *_Str)\n\n{\n  ulong uVar1;\n  undefined4 auStack_18 [2];\n  undefined4 uStack_10;\n  undefined4 uStack_c;\n  \n  uStack_c = 1;\n  uStack_10 = 10;\n  make_c_string_character_source<>(auStack_18,_Str,(undefined4 *)0x0);\n  uVar1 = __crt_strtox::\n          parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<char>_>(0);\n  return uVar1;\n}\n\n"
    },
    {
      "name": "__wcsdup",
      "entry": "00427625",
      "c": "\n/* Library Function - Single Match\n    __wcsdup\n   \n   Library: Visual Studio 2015 Release */\n\nwchar_t * __cdecl __wcsdup(wchar_t *_Str)\n\n{\n  rsize_t _SizeInWords;\n  wchar_t wVar1;\n  wchar_t *pwVar2;\n  errno_t eVar3;\n  \n  if (_Str == (wchar_t *)0x0) {\n    return (wchar_t *)0x0;\n  }\n  pwVar2 = _Str;\n  do {\n    wVar1 = *pwVar2;\n    pwVar2 = pwVar2 + 1;\n  } while (wVar1 != L'\\0');\n  _SizeInWords = ((int)pwVar2 - (int)(_Str + 1) >> 1) + 1;\n  pwVar2 = (wchar_t *)FUN_00423e33(_SizeInWords * 2);\n  if ((pwVar2 != (wchar_t *)0x0) && (eVar3 = _wcscpy_s(pwVar2,_SizeInWords,_Str), eVar3 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n  }\n  return pwVar2;\n}\n\n"
    },
    {
      "name": "_wcscat",
      "entry": "00427686",
      "c": "\n/* Library Function - Single Match\n    _wcscat\n   \n   Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,\n   Visual Studio 2019 Release */\n\nwchar_t * __cdecl _wcscat(wchar_t *_Dest,wchar_t *_Source)\n\n{\n  wchar_t wVar1;\n  wchar_t *pwVar2;\n  int iVar3;\n  \n  pwVar2 = _Dest;\n  wVar1 = *_Dest;\n  while (wVar1 != L'\\0') {\n    _Dest = _Dest + 1;\n    wVar1 = *_Dest;\n  }\n  iVar3 = (int)_Dest - (int)_Source;\n  do {\n    wVar1 = *_Source;\n    *(wchar_t *)(iVar3 + (int)_Source) = wVar1;\n    _Source = _Source + 1;\n  } while (wVar1 != L'\\0');\n  return pwVar2;\n}\n\n"
    },
    {
      "name": "common_tox_l<&bool___cdecl_internal_islower_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_upper(int,struct___crt_locale_pointers*_const)>",
      "entry": "004276b7",
      "c": "\n/* Library Function - Single Match\n    int __cdecl common_tox_l<&bool __cdecl internal_islower_l(int,struct __crt_locale_pointers *\n   const),&int __cdecl internal_map_upper(int,struct __crt_locale_pointers * const)>(int,unsigned\n   long,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\ncommon_tox_l<&bool___cdecl_internal_islower_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_upper(int,struct___crt_locale_pointers*_const)>\n          (int param_1,ulong param_2,__crt_locale_pointers *param_3)\n\n{\n  byte bVar1;\n  bool bVar2;\n  int iVar3;\n  int *piVar4;\n  int local_20;\n  localeinfo_struct local_1c;\n  char local_14;\n  uint local_10;\n  byte local_c [4];\n  undefined2 local_8;\n  undefined1 local_6;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_20,param_3);\n  if ((uint)param_1 < 0x100) {\n    bVar2 = internal_islower_l(param_1,(__crt_locale_pointers *)&local_1c);\n    if (bVar2) {\n      bVar1 = (local_1c.locinfo)->pcumap[param_1];\n      if (local_14 == '\\0') {\n        return (uint)bVar1;\n      }\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n      return (uint)bVar1;\n    }\n    if (local_14 == '\\0') {\n      return param_1;\n    }\n    *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    return param_1;\n  }\n  local_8 = 0;\n  local_6 = 0;\n  if (1 < (int)(local_1c.locinfo)->lc_codepage) {\n    local_10 = param_1 >> 8;\n    iVar3 = __isleadbyte_l(local_10 & 0xff,&local_1c);\n    if (iVar3 != 0) {\n      local_8 = CONCAT11((byte)param_1,(char)local_10);\n      local_6 = 0;\n      iVar3 = 2;\n      goto LAB_00427777;\n    }\n  }\n  piVar4 = __errno();\n  *piVar4 = 0x2a;\n  iVar3 = 1;\n  local_8 = (ushort)(byte)param_1;\nLAB_00427777:\n  local_c[0] = 0;\n  local_c[1] = 0;\n  local_c[2] = 0;\n  iVar3 = ___acrt_LCMapStringA\n                    ((__crt_locale_pointers *)&local_1c,(local_1c.locinfo)->locale_name[2],param_2,\n                     (char *)&local_8,iVar3,(char *)local_c,3,(local_1c.locinfo)->lc_collate_cp,1);\n  if (iVar3 == 0) {\n    if (local_14 != '\\0') {\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    }\n  }\n  else if (iVar3 == 1) {\n    param_1 = (int)local_c[0];\n    if (local_14 != '\\0') {\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    }\n  }\n  else {\n    param_1 = (int)CONCAT11(local_c[0],local_c[1]);\n    if (local_14 != '\\0') {\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    }\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "common_tox_l<&bool___cdecl_internal_isupper_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_lower(int,struct___crt_locale_pointers*_const)>",
      "entry": "00427801",
      "c": "\n/* Library Function - Single Match\n    int __cdecl common_tox_l<&bool __cdecl internal_isupper_l(int,struct __crt_locale_pointers *\n   const),&int __cdecl internal_map_lower(int,struct __crt_locale_pointers * const)>(int,unsigned\n   long,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\ncommon_tox_l<&bool___cdecl_internal_isupper_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_lower(int,struct___crt_locale_pointers*_const)>\n          (int param_1,ulong param_2,__crt_locale_pointers *param_3)\n\n{\n  byte bVar1;\n  bool bVar2;\n  int iVar3;\n  int *piVar4;\n  int local_20;\n  localeinfo_struct local_1c;\n  char local_14;\n  uint local_10;\n  byte local_c [4];\n  undefined2 local_8;\n  undefined1 local_6;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_20,param_3);\n  if ((uint)param_1 < 0x100) {\n    bVar2 = internal_isupper_l(param_1,(__crt_locale_pointers *)&local_1c);\n    if (bVar2) {\n      bVar1 = (local_1c.locinfo)->pclmap[param_1];\n      if (local_14 == '\\0') {\n        return (uint)bVar1;\n      }\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n      return (uint)bVar1;\n    }\n    if (local_14 == '\\0') {\n      return param_1;\n    }\n    *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    return param_1;\n  }\n  local_8 = 0;\n  local_6 = 0;\n  if (1 < (int)(local_1c.locinfo)->lc_codepage) {\n    local_10 = param_1 >> 8;\n    iVar3 = __isleadbyte_l(local_10 & 0xff,&local_1c);\n    if (iVar3 != 0) {\n      local_8 = CONCAT11((byte)param_1,(char)local_10);\n      local_6 = 0;\n      iVar3 = 2;\n      goto LAB_004278c1;\n    }\n  }\n  piVar4 = __errno();\n  *piVar4 = 0x2a;\n  iVar3 = 1;\n  local_8 = (ushort)(byte)param_1;\nLAB_004278c1:\n  local_c[0] = 0;\n  local_c[1] = 0;\n  local_c[2] = 0;\n  iVar3 = ___acrt_LCMapStringA\n                    ((__crt_locale_pointers *)&local_1c,(local_1c.locinfo)->locale_name[2],param_2,\n                     (char *)&local_8,iVar3,(char *)local_c,3,(local_1c.locinfo)->lc_collate_cp,1);\n  if (iVar3 == 0) {\n    if (local_14 != '\\0') {\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    }\n  }\n  else if (iVar3 == 1) {\n    param_1 = (int)local_c[0];\n    if (local_14 != '\\0') {\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    }\n  }\n  else {\n    param_1 = (int)CONCAT11(local_c[0],local_c[1]);\n    if (local_14 != '\\0') {\n      *(uint *)(local_20 + 0x350) = *(uint *)(local_20 + 0x350) & 0xfffffffd;\n    }\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "internal_islower_l",
      "entry": "0042794b",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl internal_islower_l(int,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __cdecl internal_islower_l(int param_1,__crt_locale_pointers *param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = __ischartype_l(param_1,2,(_locale_t)param_2);\n  return iVar1 != 0;\n}\n\n"
    },
    {
      "name": "internal_isupper_l",
      "entry": "00427968",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl internal_isupper_l(int,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __cdecl internal_isupper_l(int param_1,__crt_locale_pointers *param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = __ischartype_l(param_1,1,(_locale_t)param_2);\n  return iVar1 != 0;\n}\n\n"
    },
    {
      "name": "__tolower_l",
      "entry": "00427985",
      "c": "\n/* Library Function - Single Match\n    __tolower_l\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __tolower_l(int _C,_locale_t _Locale)\n\n{\n  int iVar1;\n  \n  iVar1 = common_tox_l<&bool___cdecl_internal_isupper_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_lower(int,struct___crt_locale_pointers*_const)>\n                    (_C,0x100,(__crt_locale_pointers *)_Locale);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "__toupper_l",
      "entry": "0042799f",
      "c": "\n/* Library Function - Single Match\n    __toupper_l\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __toupper_l(int _C,_locale_t _Locale)\n\n{\n  int iVar1;\n  \n  iVar1 = common_tox_l<&bool___cdecl_internal_islower_l(int,struct___crt_locale_pointers*_const),&int___cdecl_internal_map_upper(int,struct___crt_locale_pointers*_const)>\n                    (_C,0x200,(__crt_locale_pointers *)_Locale);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "_tolower",
      "entry": "004279b9",
      "c": "\n/* Library Function - Single Match\n    _tolower\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _tolower(int _C)\n\n{\n  if (DAT_00462264 == 0) {\n    if (_C - 0x41U < 0x1a) {\n      _C = _C + 0x20;\n    }\n  }\n  else {\n    _C = __tolower_l(_C,(_locale_t)0x0);\n  }\n  return _C;\n}\n\n"
    },
    {
      "name": "_toupper",
      "entry": "004279e9",
      "c": "\n/* Library Function - Single Match\n    _toupper\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _toupper(int _C)\n\n{\n  if (DAT_00462264 == 0) {\n    if (_C - 0x61U < 0x1a) {\n      _C = _C + -0x20;\n    }\n  }\n  else {\n    _C = __toupper_l(_C,(_locale_t)0x0);\n  }\n  return _C;\n}\n\n"
    },
    {
      "name": "initialize",
      "entry": "00427a19",
      "c": "\n/* Library Function - Single Match\n    public: void __thiscall __crt_state_management::dual_state_global<char * *>::initialize(char * *\n   const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\n__crt_state_management::dual_state_global<char**>::initialize\n          (dual_state_global<char**> *this,char **param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  uVar1 = ~-(uint)(this + 4 < this) & (uint)(this + 4 + (3 - (int)this)) >> 2;\n  if (uVar1 != 0) {\n    do {\n      uVar2 = uVar2 + 1;\n      *(char ***)this = param_1;\n      this = this + 4;\n    } while (uVar2 != uVar1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00427a4a",
      "entry": "00427a4a",
      "c": "\nvoid __cdecl FUN_00427a4a(char **param_1)\n\n{\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_00462118,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "__callnewh",
      "entry": "00427a5e",
      "c": "\n/* Library Function - Single Match\n    __callnewh\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __callnewh(size_t _Size)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  int iVar3;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)__query_new_handler();\n  if (pcVar2 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)(_Size);\n    (*pcVar2)();\n  }\n  iVar3 = FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return iVar3;\n}\n\n"
    },
    {
      "name": "__query_new_handler",
      "entry": "00427aa2",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    __query_new_handler\n   \n   Library: Visual Studio 2015 Release */\n\nuint __query_new_handler(void)\n\n{\n  byte bVar1;\n  uint uVar2;\n  \n  ___acrt_lock(0);\n  bVar1 = (byte)DAT_0043e7ac & 0x1f;\n  uVar2 = DAT_0043e7ac ^ _DAT_00462118;\n  FUN_00427aeb();\n  return uVar2 >> bVar1 | uVar2 << 0x20 - bVar1;\n}\n\n"
    },
    {
      "name": "FUN_00427aeb",
      "entry": "00427aeb",
      "c": "\nvoid FUN_00427aeb(void)\n\n{\n  ___acrt_unlock(0);\n  return;\n}\n\n"
    },
    {
      "name": "terminate",
      "entry": "00427af4",
      "c": "\n/* WARNING: Function: __SEH_prolog4_GS replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    _terminate\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl terminate(void)\n\n{\n  code *pcVar1;\n  __acrt_ptd *p_Var2;\n  \n  p_Var2 = ___acrt_getptd();\n  pcVar1 = *(code **)(p_Var2 + 0xc);\n  if (pcVar1 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "__seh_filter_exe",
      "entry": "00427b30",
      "c": "\n/* Library Function - Single Match\n    __seh_filter_exe\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __seh_filter_exe(uint param_1,undefined4 param_2)\n\n{\n  uint *puVar1;\n  code *pcVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  __acrt_ptd *p_Var6;\n  uint *puVar7;\n  uint *puVar8;\n  \n  uVar5 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  p_Var6 = ___acrt_getptd_noexit();\n  if (p_Var6 != (__acrt_ptd *)0x0) {\n    puVar1 = *(uint **)p_Var6;\n    for (puVar8 = puVar1; puVar8 != puVar1 + 0x24; puVar8 = puVar8 + 3) {\n      if (*puVar8 == param_1) goto LAB_00427b73;\n    }\n    puVar8 = (uint *)0x0;\nLAB_00427b73:\n    if ((puVar8 != (uint *)0x0) && (pcVar2 = (code *)puVar8[2], pcVar2 != (code *)0x0)) {\n      if (pcVar2 == (code *)&DAT_00000005) {\n        puVar8[2] = 0;\n      }\n      else if (pcVar2 != (code *)0x1) {\n        uVar3 = *(undefined4 *)(p_Var6 + 4);\n        *(undefined4 *)(p_Var6 + 4) = param_2;\n        if (puVar8[1] == 8) {\n          for (puVar7 = puVar1 + 9; puVar7 != puVar1 + 0x24; puVar7 = puVar7 + 3) {\n            puVar7[2] = 0;\n          }\n          uVar4 = *(undefined4 *)(p_Var6 + 8);\n          if (*puVar8 < 0xc0000092) {\n            if (*puVar8 == 0xc0000091) {\n              *(undefined4 *)(p_Var6 + 8) = 0x84;\n            }\n            else if (*puVar8 == 0xc000008d) {\n              *(undefined4 *)(p_Var6 + 8) = 0x82;\n            }\n            else if (*puVar8 == 0xc000008e) {\n              *(undefined4 *)(p_Var6 + 8) = 0x83;\n            }\n            else if (*puVar8 == 0xc000008f) {\n              *(undefined4 *)(p_Var6 + 8) = 0x86;\n            }\n            else if (*puVar8 == 0xc0000090) {\n              *(undefined4 *)(p_Var6 + 8) = 0x81;\n            }\n          }\n          else if (*puVar8 == 0xc0000092) {\n            *(undefined4 *)(p_Var6 + 8) = 0x8a;\n          }\n          else if (*puVar8 == 0xc0000093) {\n            *(undefined4 *)(p_Var6 + 8) = 0x85;\n          }\n          else if (*puVar8 == 0xc00002b4) {\n            *(undefined4 *)(p_Var6 + 8) = 0x8e;\n          }\n          else if (*puVar8 == 0xc00002b5) {\n            *(undefined4 *)(p_Var6 + 8) = 0x8d;\n          }\n          (*(code *)PTR_guard_check_icall_00433278)(8,*(undefined4 *)(p_Var6 + 8));\n          (*pcVar2)();\n          *(undefined4 *)(p_Var6 + 8) = uVar4;\n        }\n        else {\n          puVar8[2] = 0;\n          (*(code *)PTR_guard_check_icall_00433278)(puVar8[1]);\n          (*pcVar2)();\n        }\n        *(undefined4 *)(p_Var6 + 4) = uVar3;\n      }\n    }\n  }\n  FUN_0041fbbc(uVar5 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "__crt_fast_encode_pointer<>",
      "entry": "00427ca3",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    int (__cdecl*__cdecl __crt_fast_encode_pointer<int (__cdecl*)(void)>(int\n   (__cdecl*const)(void)))(void)\n    void (__cdecl** __cdecl __crt_fast_encode_pointer<void (__cdecl**)(void)>(void (__cdecl**\n   const)(void)))(void)\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl __crt_fast_encode_pointer<>(uint param_1)\n\n{\n  byte bVar1;\n  \n  bVar1 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n  return (param_1 >> bVar1 | param_1 << 0x20 - bVar1) ^ DAT_0043e7ac;\n}\n\n"
    },
    {
      "name": "atexit_exception_filter",
      "entry": "00427cc2",
      "c": "\n/* Library Function - Single Match\n    int __cdecl atexit_exception_filter(unsigned long)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl atexit_exception_filter(ulong param_1)\n\n{\n  return (uint)(param_1 == 0xe06d7363);\n}\n\n"
    },
    {
      "name": "common_exit",
      "entry": "00427cd5",
      "c": "\n/* WARNING: Function: __SEH_prolog4_GS replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    void __cdecl common_exit(int,enum _crt_exit_cleanup_mode,enum _crt_exit_return_mode)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl common_exit(int param_1,_crt_exit_cleanup_mode param_2,_crt_exit_return_mode param_3)\n\n{\n  byte bVar1;\n  byte bVar2;\n  bool bVar3;\n  uint uVar4;\n  undefined4 *local_18;\n  \n  if ((param_3 == 0) && (bVar3 = is_managed_app(), bVar3)) {\n    try_cor_exit_process(param_1);\n  }\n  ___acrt_lock(2);\n  if (DAT_00462124 != '\\0') goto LAB_00427dac;\n  LOCK();\n  DAT_0046211c = 1;\n  UNLOCK();\n  if (param_2 == 0) {\n    bVar2 = (byte)DAT_0043e7ac & 0x1f;\n    bVar1 = 0x20 - bVar2 & 0x1f;\n    if (DAT_00462120 != ((0U >> bVar1 | 0 << 0x20 - bVar1) ^ DAT_0043e7ac)) {\n      uVar4 = DAT_0043e7ac ^ DAT_00462120;\n      (*(code *)PTR_guard_check_icall_00433278)(0,0,0);\n      (*(code *)(uVar4 >> bVar2 | uVar4 << 0x20 - bVar2))();\n    }\nLAB_00427d71:\n    __execute_onexit_table();\n  }\n  else if (param_2 == 1) goto LAB_00427d71;\n  if (param_2 == 0) {\n    __initterm((undefined4 *)&DAT_004332d8,(undefined4 *)&DAT_004332e8);\n  }\n  __initterm((undefined4 *)&DAT_004332ec,(undefined4 *)&DAT_004332f0);\n  if (param_3 == 0) {\n    DAT_00462124 = '\\x01';\n  }\nLAB_00427dac:\n  FUN_00427ddf();\n  if (param_3 != 0) {\n    FUN_00432390();\n    return;\n  }\n  exit_or_terminate_process(param_1);\n  atexit_exception_filter(*(ulong *)*local_18);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00427ddf",
      "entry": "00427ddf",
      "c": "\nvoid FUN_00427ddf(void)\n\n{\n  ___acrt_unlock(2);\n  return;\n}\n\n"
    },
    {
      "name": "exit_or_terminate_process",
      "entry": "00427dee",
      "c": "\n/* Library Function - Single Match\n    void __cdecl exit_or_terminate_process(unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl exit_or_terminate_process(uint param_1)\n\n{\n  char cVar1;\n  HANDLE hProcess;\n  undefined4 in_ECX;\n  uint uExitCode;\n  \n  cVar1 = ___acrt_is_packaged_app(in_ECX);\n  if ((cVar1 != '\\0') && ((*(uint *)((int)ProcessEnvironmentBlock + 0x68) >> 8 & 1) == 0)) {\n    uExitCode = param_1;\n    hProcess = GetCurrentProcess();\n    TerminateProcess(hProcess,uExitCode);\n  }\n  try_cor_exit_process(param_1);\n                    /* WARNING: Subroutine does not return */\n  ExitProcess(param_1);\n}\n\n"
    },
    {
      "name": "is_managed_app",
      "entry": "00427e2f",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl is_managed_app(void)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __cdecl is_managed_app(void)\n\n{\n  HMODULE pHVar1;\n  int *piVar2;\n  \n  pHVar1 = GetModuleHandleW((LPCWSTR)0x0);\n  if ((((pHVar1 != (HMODULE)0x0) && ((short)pHVar1->unused == 0x5a4d)) &&\n      (piVar2 = (int *)((int)&pHVar1->unused + pHVar1[0xf].unused), *piVar2 == 0x4550)) &&\n     (((short)piVar2[6] == 0x10b && (0xe < (uint)piVar2[0x1d])))) {\n    return piVar2[0x3a] != 0;\n  }\n  return false;\n}\n\n"
    },
    {
      "name": "try_cor_exit_process",
      "entry": "00427e73",
      "c": "\n/* Library Function - Single Match\n    void __cdecl try_cor_exit_process(unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl try_cor_exit_process(uint param_1)\n\n{\n  BOOL BVar1;\n  FARPROC pFVar2;\n  HMODULE local_c;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  local_c = (HMODULE)0x0;\n  BVar1 = GetModuleHandleExW(0,L\"mscoree.dll\",&local_c);\n  if ((BVar1 != 0) && (pFVar2 = GetProcAddress(local_c,\"CorExitProcess\"), pFVar2 != (FARPROC)0x0)) {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1);\n    (*pFVar2)();\n  }\n  if (local_c != (HMODULE)0x0) {\n    FreeLibrary(local_c);\n  }\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00427edd",
      "entry": "00427edd",
      "c": "\nvoid __cdecl FUN_00427edd(undefined4 param_1)\n\n{\n  DAT_00462120 = param_1;\n  return;\n}\n\n"
    },
    {
      "name": "__cexit",
      "entry": "00427efb",
      "c": "\n/* Library Function - Single Match\n    __cexit\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl __cexit(void)\n\n{\n  common_exit(0,0,1);\n  return;\n}\n\n"
    },
    {
      "name": "__exit",
      "entry": "00427f0a",
      "c": "\n/* Library Function - Single Match\n    __exit\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __exit(int param_1)\n\n{\n  common_exit(param_1,2,0);\n  return;\n}\n\n"
    },
    {
      "name": "__register_thread_local_exe_atexit_callback",
      "entry": "00427f20",
      "c": "\n/* WARNING: Function: __SEH_prolog4_GS replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    __register_thread_local_exe_atexit_callback\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __register_thread_local_exe_atexit_callback(uint param_1)\n\n{\n  code *pcVar1;\n  byte bVar2;\n  __acrt_ptd *p_Var3;\n  \n  bVar2 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n  if (DAT_00462120 == ((0U >> bVar2 | 0 << 0x20 - bVar2) ^ DAT_0043e7ac)) {\n    DAT_00462120 = __crt_fast_encode_pointer<>(param_1);\n    return;\n  }\n  p_Var3 = ___acrt_getptd();\n  pcVar1 = *(code **)(p_Var3 + 0xc);\n  if (pcVar1 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar1)();\n  }\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "_exit",
      "entry": "00427f58",
      "c": "\n/* Library Function - Single Match\n    _exit\n   \n   Library: Visual Studio 2019 Release */\n\nvoid __cdecl _exit(int _Code)\n\n{\n  common_exit(_Code,0,0);\n  return;\n}\n\n"
    },
    {
      "name": "common_configure_argv<char>",
      "entry": "00427f6e",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    int __cdecl common_configure_argv<char>(enum _crt_argv_mode)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl common_configure_argv<char>(_crt_argv_mode param_1)\n\n{\n  int *piVar1;\n  char **ppcVar2;\n  char *pcVar3;\n  char **ppcVar4;\n  int iVar5;\n  uint local_10;\n  char **local_c;\n  uint local_8;\n  \n  if ((param_1 == 2) || (param_1 == 1)) {\n    ___acrt_initialize_multibyte();\n    iVar5 = 0;\n    GetModuleFileNameA((HMODULE)0x0,&DAT_00462128,0x104);\n    _DAT_004626e0 = &DAT_00462128;\n    if ((DAT_004626d8 == (char *)0x0) || (pcVar3 = DAT_004626d8, *DAT_004626d8 == '\\0')) {\n      pcVar3 = &DAT_00462128;\n    }\n    local_8 = 0;\n    local_10 = 0;\n    parse_command_line<char>(pcVar3,(char **)0x0,(char *)0x0,&local_8,&local_10);\n    ppcVar2 = (char **)___acrt_allocate_buffer_for_argv(local_8,local_10,1);\n    ppcVar4 = ppcVar2;\n    if (ppcVar2 == (char **)0x0) {\n      piVar1 = __errno();\n      iVar5 = 0xc;\n      *piVar1 = 0xc;\n    }\n    else {\n      parse_command_line<char>(pcVar3,ppcVar2,(char *)(ppcVar2 + local_8),&local_8,&local_10);\n      if (param_1 == 1) {\n        _DAT_004626cc = local_8 - 1;\n        ppcVar4 = (char **)0x0;\n        DAT_004626d0 = ppcVar2;\n      }\n      else {\n        local_c = (char **)0x0;\n        iVar5 = FUN_0042b643(ppcVar2,&local_c);\n        ppcVar2 = local_c;\n        if (iVar5 == 0) {\n          _DAT_004626cc = 0;\n          pcVar3 = *local_c;\n          while (pcVar3 != (char *)0x0) {\n            local_c = local_c + 1;\n            _DAT_004626cc = _DAT_004626cc + 1;\n            pcVar3 = *local_c;\n          }\n          local_c = (char **)0x0;\n          iVar5 = 0;\n          DAT_004626d0 = ppcVar2;\n        }\n        FID_conflict__free(local_c);\n        local_c = (char **)0x0;\n      }\n    }\n    FID_conflict__free(ppcVar4);\n  }\n  else {\n    piVar1 = __errno();\n    iVar5 = 0x16;\n    *piVar1 = 0x16;\n    FUN_00429087();\n  }\n  return iVar5;\n}\n\n"
    },
    {
      "name": "parse_command_line<char>",
      "entry": "00428092",
      "c": "\n/* Library Function - Single Match\n    void __cdecl parse_command_line<char>(char *,char * *,char *,unsigned int *,unsigned int *)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\nparse_command_line<char>(char *param_1,char **param_2,char *param_3,uint *param_4,uint *param_5)\n\n{\n  bool bVar1;\n  char cVar2;\n  uint uVar3;\n  int iVar4;\n  bool bVar5;\n  char *pcVar6;\n  char *pcVar7;\n  \n  *param_5 = 0;\n  *param_4 = 1;\n  if (param_2 != (char **)0x0) {\n    *param_2 = param_3;\n    param_2 = param_2 + 1;\n  }\n  bVar5 = false;\n  do {\n    if (*param_1 == '\\\"') {\n      bVar5 = !bVar5;\n      cVar2 = '\\\"';\n      pcVar6 = param_1 + 1;\n    }\n    else {\n      *param_5 = *param_5 + 1;\n      if (param_3 != (char *)0x0) {\n        *param_3 = *param_1;\n        param_3 = param_3 + 1;\n      }\n      cVar2 = *param_1;\n      pcVar6 = param_1 + 1;\n      iVar4 = __ismbblead((int)cVar2);\n      if (iVar4 != 0) {\n        *param_5 = *param_5 + 1;\n        if (param_3 != (char *)0x0) {\n          *param_3 = *pcVar6;\n          param_3 = param_3 + 1;\n        }\n        pcVar6 = param_1 + 2;\n      }\n      if (cVar2 == '\\0') {\n        pcVar6 = pcVar6 + -1;\n        goto LAB_00428122;\n      }\n    }\n    param_1 = pcVar6;\n  } while ((bVar5) || ((cVar2 != ' ' && (cVar2 != '\\t'))));\n  if (param_3 != (char *)0x0) {\n    param_3[-1] = '\\0';\n  }\nLAB_00428122:\n  bVar5 = false;\n  while (pcVar7 = pcVar6, *pcVar6 != '\\0') {\n    for (; (*pcVar7 == ' ' || (*pcVar7 == '\\t')); pcVar7 = pcVar7 + 1) {\n    }\n    if (*pcVar7 == '\\0') break;\n    if (param_2 != (char **)0x0) {\n      *param_2 = param_3;\n      param_2 = param_2 + 1;\n    }\n    *param_4 = *param_4 + 1;\n    while( true ) {\n      bVar1 = true;\n      uVar3 = 0;\n      for (; *pcVar7 == '\\\\'; pcVar7 = pcVar7 + 1) {\n        uVar3 = uVar3 + 1;\n      }\n      pcVar6 = pcVar7;\n      if (*pcVar7 == '\\\"') {\n        if (((uVar3 & 1) == 0) && ((!bVar5 || (pcVar6 = pcVar7 + 1, *pcVar6 != '\\\"')))) {\n          bVar1 = false;\n          bVar5 = !bVar5;\n          pcVar6 = pcVar7;\n        }\n        uVar3 = uVar3 >> 1;\n      }\n      while (uVar3 != 0) {\n        uVar3 = uVar3 - 1;\n        if (param_3 != (char *)0x0) {\n          *param_3 = '\\\\';\n          param_3 = param_3 + 1;\n        }\n        *param_5 = *param_5 + 1;\n      }\n      cVar2 = *pcVar6;\n      if ((cVar2 == '\\0') || ((!bVar5 && ((cVar2 == ' ' || (cVar2 == '\\t')))))) break;\n      if (bVar1) {\n        if (param_3 != (char *)0x0) {\n          *param_3 = cVar2;\n          param_3 = param_3 + 1;\n        }\n        iVar4 = __ismbblead((int)*pcVar6);\n        if (iVar4 != 0) {\n          pcVar6 = pcVar6 + 1;\n          *param_5 = *param_5 + 1;\n          if (param_3 != (char *)0x0) {\n            *param_3 = *pcVar6;\n            param_3 = param_3 + 1;\n          }\n        }\n        *param_5 = *param_5 + 1;\n      }\n      pcVar7 = pcVar6 + 1;\n    }\n    if (param_3 != (char *)0x0) {\n      *param_3 = '\\0';\n      param_3 = param_3 + 1;\n    }\n    *param_5 = *param_5 + 1;\n  }\n  if (param_2 != (char **)0x0) {\n    *param_2 = (char *)0x0;\n  }\n  *param_4 = *param_4 + 1;\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_allocate_buffer_for_argv",
      "entry": "00428207",
      "c": "\n/* Library Function - Single Match\n    ___acrt_allocate_buffer_for_argv\n   \n   Library: Visual Studio 2015 Release */\n\nLPVOID __cdecl ___acrt_allocate_buffer_for_argv(uint param_1,uint param_2,uint param_3)\n\n{\n  LPVOID pvVar1;\n  \n  if ((param_1 < 0x3fffffff) && (param_2 < (uint)(0xffffffff / (ulonglong)param_3))) {\n    if (param_2 * param_3 < param_1 * -4 - 1) {\n      pvVar1 = __calloc_base(param_2 * param_3 + param_1 * 4,1);\n      FID_conflict__free((void *)0x0);\n      return pvVar1;\n    }\n  }\n  return (LPVOID)0x0;\n}\n\n"
    },
    {
      "name": "FUN_0042825c",
      "entry": "0042825c",
      "c": "\nvoid __cdecl FUN_0042825c(_crt_argv_mode param_1)\n\n{\n  common_configure_argv<char>(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "common_initialize_environment_nolock<char>",
      "entry": "00428267",
      "c": "\n/* Library Function - Single Match\n    int __cdecl common_initialize_environment_nolock<char>(void)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl common_initialize_environment_nolock<char>(void)\n\n{\n  LPSTR _Memory;\n  char **ppcVar1;\n  int iVar2;\n  \n  if (DAT_00462230 != 0) {\n    return 0;\n  }\n  ___acrt_initialize_multibyte();\n  _Memory = ___dcrt_get_narrow_environment_from_os();\n  if (_Memory == (LPSTR)0x0) {\n    iVar2 = -1;\n  }\n  else {\n    ppcVar1 = create_environment<char>(_Memory);\n    if (ppcVar1 == (char **)0x0) {\n      iVar2 = -1;\n    }\n    else {\n      DAT_0046223c = ppcVar1;\n      __crt_state_management::dual_state_global<char**>::initialize\n                ((dual_state_global<char**> *)&DAT_00462230,ppcVar1);\n      iVar2 = 0;\n    }\n    FID_conflict__free((void *)0x0);\n  }\n  FID_conflict__free(_Memory);\n  return iVar2;\n}\n\n"
    },
    {
      "name": "create_environment<char>",
      "entry": "004282c0",
      "c": "\n/* Library Function - Single Match\n    char * * __cdecl create_environment<char>(char * const)\n   \n   Library: Visual Studio 2015 Release */\n\nchar ** __cdecl create_environment<char>(char *param_1)\n\n{\n  char cVar1;\n  char **ppcVar2;\n  char *_Dst;\n  errno_t eVar3;\n  char *pcVar4;\n  int iVar5;\n  char **local_8;\n  \n  iVar5 = 0;\n  cVar1 = *param_1;\n  pcVar4 = param_1;\n  while (cVar1 != '\\0') {\n    if (cVar1 != '=') {\n      iVar5 = iVar5 + 1;\n    }\n    do {\n      cVar1 = *pcVar4;\n      pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    cVar1 = *pcVar4;\n  }\n  ppcVar2 = (char **)__calloc_base(iVar5 + 1,4);\n  local_8 = ppcVar2;\n  if (ppcVar2 == (char **)0x0) {\nLAB_00428371:\n    ppcVar2 = (char **)0x0;\n  }\n  else {\n    for (; *param_1 != '\\0'; param_1 = param_1 + (int)pcVar4) {\n      pcVar4 = param_1;\n      do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n      } while (cVar1 != '\\0');\n      pcVar4 = pcVar4 + (1 - (int)(param_1 + 1));\n      if (*param_1 != '=') {\n        _Dst = (char *)__calloc_base((uint)pcVar4,1);\n        if (_Dst == (char *)0x0) {\n          free_environment<char>(ppcVar2);\n          FID_conflict__free((void *)0x0);\n          goto LAB_00428371;\n        }\n        eVar3 = _strcpy_s(_Dst,(rsize_t)pcVar4,param_1);\n        if (eVar3 != 0) {\n                    /* WARNING: Subroutine does not return */\n          __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n        }\n        *local_8 = _Dst;\n        local_8 = local_8 + 1;\n        FID_conflict__free((void *)0x0);\n      }\n    }\n  }\n  FID_conflict__free((void *)0x0);\n  return ppcVar2;\n}\n\n"
    },
    {
      "name": "free_environment<char>",
      "entry": "00428391",
      "c": "\n/* Library Function - Single Match\n    void __cdecl free_environment<char>(char * * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl free_environment<char>(char **param_1)\n\n{\n  char *_Memory;\n  char **ppcVar1;\n  \n  if (param_1 != (char **)0x0) {\n    _Memory = *param_1;\n    ppcVar1 = param_1;\n    while (_Memory != (char *)0x0) {\n      FID_conflict__free(_Memory);\n      ppcVar1 = ppcVar1 + 1;\n      _Memory = *ppcVar1;\n    }\n    FID_conflict__free(param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "uninitialize<>",
      "entry": "004283c0",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    public: void __thiscall __crt_state_management::dual_state_global<char * *>::uninitialize<void\n   (__cdecl&)(char * * &)>(void (__cdecl&)(char * * &))\n    public: void __thiscall __crt_state_management::dual_state_global<wchar_t *\n   *>::uninitialize<void (__cdecl&)(wchar_t * * &)>(void (__cdecl&)(wchar_t * * &))\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nvoid __thiscall uninitialize<>(void *this,undefined *param_1)\n\n{\n  void *pvVar1;\n  uint uVar2;\n  \n  uVar2 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pvVar1 = (void *)((int)this + 4);\n  for (; this != pvVar1; this = (void *)((int)this + 4)) {\n    (*(code *)PTR_guard_check_icall_00433278)(this);\n    (*(code *)param_1)();\n  }\n  FUN_0041fbbc(uVar2 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "uninitialize_environment_internal<>",
      "entry": "00428400",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    void __cdecl uninitialize_environment_internal<char>(char * * &)\n    void __cdecl uninitialize_environment_internal<wchar_t>(wchar_t * * &)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl uninitialize_environment_internal<>(undefined4 *param_1)\n\n{\n  if ((char **)*param_1 != DAT_0046223c) {\n    free_environment<char>((char **)*param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "uninitialize_environment_internal<>",
      "entry": "00428420",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    void __cdecl uninitialize_environment_internal<char>(char * * &)\n    void __cdecl uninitialize_environment_internal<wchar_t>(wchar_t * * &)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl uninitialize_environment_internal<>(undefined4 *param_1)\n\n{\n  if ((char **)*param_1 != DAT_00462238) {\n    free_environment<char>((char **)*param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___dcrt_uninitialize_environments_nolock",
      "entry": "0042843b",
      "c": "\n/* Library Function - Single Match\n    ___dcrt_uninitialize_environments_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___dcrt_uninitialize_environments_nolock(void)\n\n{\n  uninitialize<>(&DAT_00462230,uninitialize_environment_internal<>);\n  uninitialize<>(&DAT_00462234,uninitialize_environment_internal<>);\n  free_environment<char>(DAT_0046223c);\n  free_environment<char>(DAT_00462238);\n  return;\n}\n\n"
    },
    {
      "name": "common_initialize_environment_nolock<char>",
      "entry": "00428472",
      "c": "\nint __cdecl common_initialize_environment_nolock<char>(void)\n\n{\n  LPSTR _Memory;\n  char **ppcVar1;\n  int iVar2;\n  \n  if (DAT_00462230 != 0) {\n    return 0;\n  }\n  ___acrt_initialize_multibyte();\n  _Memory = ___dcrt_get_narrow_environment_from_os();\n  if (_Memory == (LPSTR)0x0) {\n    iVar2 = -1;\n  }\n  else {\n    ppcVar1 = create_environment<char>(_Memory);\n    if (ppcVar1 == (char **)0x0) {\n      iVar2 = -1;\n    }\n    else {\n      DAT_0046223c = ppcVar1;\n      __crt_state_management::dual_state_global<char**>::initialize\n                ((dual_state_global<char**> *)&DAT_00462230,ppcVar1);\n      iVar2 = 0;\n    }\n    FID_conflict__free((void *)0x0);\n  }\n  FID_conflict__free(_Memory);\n  return iVar2;\n}\n\n"
    },
    {
      "name": "operator()<class_<lambda_800076c951b434888f4765a74a194fcc>,class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>&,class_<lambda_6dbb1268764f43b569ce7b67e331d33a>_>",
      "entry": "00428477",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    public: int __thiscall __crt_seh_guarded_call<int>::operator()<class\n   <lambda_800076c951b434888f4765a74a194fcc>,class <lambda_4e60a939b0d047cfe11ddc22648dfba9> &,class\n   <lambda_6dbb1268764f43b569ce7b67e331d33a> >(class <lambda_800076c951b434888f4765a74a194fcc>\n   &&,class <lambda_4e60a939b0d047cfe11ddc22648dfba9> &,class\n   <lambda_6dbb1268764f43b569ce7b67e331d33a> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n__crt_seh_guarded_call<int>::\noperator()<class_<lambda_800076c951b434888f4765a74a194fcc>,class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>&,class_<lambda_6dbb1268764f43b569ce7b67e331d33a>_>\n          (__crt_seh_guarded_call<int> *this,<lambda_800076c951b434888f4765a74a194fcc> *param_1,\n          <lambda_4e60a939b0d047cfe11ddc22648dfba9> *param_2,\n          <lambda_6dbb1268764f43b569ce7b67e331d33a> *param_3)\n\n{\n  int iVar1;\n  \n  ___acrt_lock(*(int *)param_1);\n  iVar1 = <lambda_4e60a939b0d047cfe11ddc22648dfba9>::operator()(param_2);\n  FUN_004284bc();\n  return iVar1;\n}\n\n"
    },
    {
      "name": "FUN_004284bc",
      "entry": "004284bc",
      "c": "\nvoid FUN_004284bc(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "operator()<class_<lambda_995298e7d72eb4c2aab26c0585b3abe5>,class_<lambda_275893d493268fdec8709772e3fcec0e>&,class_<lambda_293819299cbf9a7022e18b56a874bb5c>_>",
      "entry": "004284c8",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    public: int __thiscall __crt_seh_guarded_call<int>::operator()<class\n   <lambda_995298e7d72eb4c2aab26c0585b3abe5>,class <lambda_275893d493268fdec8709772e3fcec0e> &,class\n   <lambda_293819299cbf9a7022e18b56a874bb5c> >(class <lambda_995298e7d72eb4c2aab26c0585b3abe5>\n   &&,class <lambda_275893d493268fdec8709772e3fcec0e> &,class\n   <lambda_293819299cbf9a7022e18b56a874bb5c> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n__crt_seh_guarded_call<int>::\noperator()<class_<lambda_995298e7d72eb4c2aab26c0585b3abe5>,class_<lambda_275893d493268fdec8709772e3fcec0e>&,class_<lambda_293819299cbf9a7022e18b56a874bb5c>_>\n          (__crt_seh_guarded_call<int> *this,<lambda_995298e7d72eb4c2aab26c0585b3abe5> *param_1,\n          <lambda_275893d493268fdec8709772e3fcec0e> *param_2,\n          <lambda_293819299cbf9a7022e18b56a874bb5c> *param_3)\n\n{\n  int iVar1;\n  \n  ___acrt_lock(*(int *)param_1);\n  iVar1 = <lambda_275893d493268fdec8709772e3fcec0e>::operator()(param_2);\n  FUN_0042850d();\n  return iVar1;\n}\n\n"
    },
    {
      "name": "FUN_0042850d",
      "entry": "0042850d",
      "c": "\nvoid FUN_0042850d(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_275893d493268fdec8709772e3fcec0e>_>",
      "entry": "00428519",
      "c": "\n/* Library Function - Single Match\n    int __cdecl __acrt_lock_and_call<class <lambda_275893d493268fdec8709772e3fcec0e> >(enum\n   __acrt_lock_id,class <lambda_275893d493268fdec8709772e3fcec0e> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\n__acrt_lock_and_call<class_<lambda_275893d493268fdec8709772e3fcec0e>_>\n          (__acrt_lock_id param_1,<lambda_275893d493268fdec8709772e3fcec0e> *param_2)\n\n{\n  int iVar1;\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  __crt_seh_guarded_call<int> local_5;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  iVar1 = __crt_seh_guarded_call<int>::\n          operator()<class_<lambda_995298e7d72eb4c2aab26c0585b3abe5>,class_<lambda_275893d493268fdec8709772e3fcec0e>&,class_<lambda_293819299cbf9a7022e18b56a874bb5c>_>\n                    (&local_5,(<lambda_995298e7d72eb4c2aab26c0585b3abe5> *)&local_10,param_2,\n                     (<lambda_293819299cbf9a7022e18b56a874bb5c> *)&local_c);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>_>",
      "entry": "00428541",
      "c": "\n/* Library Function - Single Match\n    int __cdecl __acrt_lock_and_call<class <lambda_4e60a939b0d047cfe11ddc22648dfba9> >(enum\n   __acrt_lock_id,class <lambda_4e60a939b0d047cfe11ddc22648dfba9> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\n__acrt_lock_and_call<class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>_>\n          (__acrt_lock_id param_1,<lambda_4e60a939b0d047cfe11ddc22648dfba9> *param_2)\n\n{\n  int iVar1;\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  __crt_seh_guarded_call<int> local_5;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  iVar1 = __crt_seh_guarded_call<int>::\n          operator()<class_<lambda_800076c951b434888f4765a74a194fcc>,class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>&,class_<lambda_6dbb1268764f43b569ce7b67e331d33a>_>\n                    (&local_5,(<lambda_800076c951b434888f4765a74a194fcc> *)&local_10,param_2,\n                     (<lambda_6dbb1268764f43b569ce7b67e331d33a> *)&local_c);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "operator()",
      "entry": "00428569",
      "c": "\n/* Library Function - Single Match\n    public: int __thiscall <lambda_275893d493268fdec8709772e3fcec0e>::operator()(void)const \n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n<lambda_275893d493268fdec8709772e3fcec0e>::operator()\n          (<lambda_275893d493268fdec8709772e3fcec0e> *this)\n\n{\n  uint *puVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint *puVar5;\n  int iVar6;\n  sbyte sVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint uVar10;\n  uint *_Memory;\n  uint local_18;\n  \n  uVar3 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  puVar8 = (uint *)**(int **)this;\n  if (puVar8 != (uint *)0x0) {\n    local_18 = DAT_0043e7ac & 0x1f;\n    sVar7 = (sbyte)local_18;\n    _Memory = (uint *)((*puVar8 ^ DAT_0043e7ac) >> sVar7 | (*puVar8 ^ DAT_0043e7ac) << 0x20 - sVar7)\n    ;\n    puVar8 = (uint *)((puVar8[1] ^ DAT_0043e7ac) >> sVar7 |\n                     (puVar8[1] ^ DAT_0043e7ac) << 0x20 - sVar7);\n    if ((_Memory != (uint *)0x0) && (puVar9 = puVar8, _Memory != (uint *)0xffffffff)) {\n      do {\n        sVar7 = (sbyte)local_18;\n        bVar2 = 0x20U - sVar7 & 0x1f;\n        uVar4 = (0U >> bVar2 | 0 << 0x20 - bVar2) ^ DAT_0043e7ac;\n        do {\n          puVar8 = puVar8 + -1;\n          if (puVar8 < _Memory) {\n            if (_Memory != (uint *)0xffffffff) {\n              FID_conflict__free(_Memory);\n            }\n            bVar2 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n            uVar4 = (0U >> bVar2 | 0 << 0x20 - bVar2) ^ DAT_0043e7ac;\n            *(uint *)**(undefined4 **)this = uVar4;\n            *(uint *)(**(int **)this + 4) = uVar4;\n            *(uint *)(**(int **)this + 8) = uVar4;\n            goto LAB_0042867a;\n          }\n        } while (*puVar8 == uVar4);\n        uVar10 = *puVar8 ^ DAT_0043e7ac;\n        *puVar8 = uVar4;\n        (*(code *)PTR_guard_check_icall_00433278)();\n        (*(code *)(uVar10 >> sVar7 | uVar10 << 0x20 - sVar7))();\n        local_18 = DAT_0043e7ac & 0x1f;\n        uVar10 = *(uint *)**(int **)this ^ DAT_0043e7ac;\n        uVar4 = ((uint *)**(int **)this)[1] ^ DAT_0043e7ac;\n        sVar7 = (sbyte)local_18;\n        puVar1 = (uint *)(uVar10 >> sVar7 | uVar10 << 0x20 - sVar7);\n        puVar5 = (uint *)(uVar4 >> sVar7 | uVar4 << 0x20 - sVar7);\n        if ((puVar1 != _Memory) || (puVar5 != puVar9)) {\n          puVar8 = puVar5;\n          _Memory = puVar1;\n          puVar9 = puVar5;\n        }\n      } while( true );\n    }\n  }\nLAB_0042867a:\n  iVar6 = FUN_0041fbbc(uVar3 ^ (uint)&stack0xfffffffc);\n  return iVar6;\n}\n\n"
    },
    {
      "name": "operator()",
      "entry": "00428689",
      "c": "\n/* Library Function - Single Match\n    public: int __thiscall <lambda_4e60a939b0d047cfe11ddc22648dfba9>::operator()(void)const \n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n<lambda_4e60a939b0d047cfe11ddc22648dfba9>::operator()\n          (<lambda_4e60a939b0d047cfe11ddc22648dfba9> *this)\n\n{\n  LPCVOID pvVar1;\n  uint uVar2;\n  uint uVar3;\n  byte bVar4;\n  uint *puVar5;\n  LPCVOID pvVar6;\n  uint *puVar7;\n  uint uVar8;\n  uint *puVar9;\n  \n  puVar5 = (uint *)**(int **)this;\n  if (puVar5 == (uint *)0x0) {\n    return -1;\n  }\n  bVar4 = (byte)DAT_0043e7ac & 0x1f;\n  puVar9 = (uint *)((puVar5[1] ^ DAT_0043e7ac) >> bVar4 | (puVar5[1] ^ DAT_0043e7ac) << 0x20 - bVar4\n                   );\n  puVar7 = (uint *)((puVar5[2] ^ DAT_0043e7ac) >> bVar4 | (puVar5[2] ^ DAT_0043e7ac) << 0x20 - bVar4\n                   );\n  pvVar6 = (LPCVOID)((*puVar5 ^ DAT_0043e7ac) >> bVar4 | (*puVar5 ^ DAT_0043e7ac) << 0x20 - bVar4);\n  pvVar1 = pvVar6;\n  if (puVar9 != puVar7) goto LAB_00428783;\n  uVar8 = (int)puVar7 - (int)pvVar6 >> 2;\n  uVar2 = 0x200;\n  if (uVar8 < 0x201) {\n    uVar2 = uVar8;\n  }\n  uVar2 = uVar2 + uVar8;\n  if (uVar2 == 0) {\n    uVar2 = 0x20;\n  }\n  if (uVar2 < uVar8) {\nLAB_0042870a:\n    uVar2 = uVar8 + 4;\n    pvVar1 = FUN_0042bfb3(pvVar6,uVar2,4);\n    FID_conflict__free((void *)0x0);\n    if (pvVar1 == (LPVOID)0x0) {\n      return -1;\n    }\n  }\n  else {\n    pvVar1 = FUN_0042bfb3(pvVar6,uVar2,4);\n    FID_conflict__free((void *)0x0);\n    if (pvVar1 == (LPVOID)0x0) goto LAB_0042870a;\n  }\n  puVar9 = (uint *)((int)pvVar1 + uVar8 * 4);\n  puVar7 = (uint *)((int)pvVar1 + uVar2 * 4);\n  bVar4 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n  uVar2 = (0U >> bVar4 | 0 << 0x20 - bVar4) ^ DAT_0043e7ac;\n  uVar8 = ~-(uint)(puVar7 < puVar9) & (uint)((int)puVar7 + (3 - (int)puVar9)) >> 2;\n  if (uVar8 != 0) {\n    uVar3 = 0;\n    puVar5 = puVar9;\n    do {\n      uVar3 = uVar3 + 1;\n      *puVar5 = uVar2;\n      puVar5 = puVar5 + 1;\n    } while (uVar3 != uVar8);\n  }\nLAB_00428783:\n  uVar2 = __crt_fast_encode_pointer<>(**(uint **)(this + 4));\n  *puVar9 = uVar2;\n  uVar2 = __crt_fast_encode_pointer<>((uint)pvVar1);\n  *(uint *)**(undefined4 **)this = uVar2;\n  uVar2 = __crt_fast_encode_pointer<>((uint)(puVar9 + 1));\n  *(uint *)(**(int **)this + 4) = uVar2;\n  uVar2 = __crt_fast_encode_pointer<>((uint)puVar7);\n  *(uint *)(**(int **)this + 8) = uVar2;\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_004287ca",
      "entry": "004287ca",
      "c": "\nvoid FUN_004287ca(void)\n\n{\n  __register_onexit_function();\n  return;\n}\n\n"
    },
    {
      "name": "__execute_onexit_table",
      "entry": "004287e0",
      "c": "\n/* Library Function - Single Match\n    __execute_onexit_table\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __execute_onexit_table(void)\n\n{\n  undefined1 *local_8;\n  \n  local_8 = &stack0x00000004;\n  __acrt_lock_and_call<class_<lambda_275893d493268fdec8709772e3fcec0e>_>\n            (2,(<lambda_275893d493268fdec8709772e3fcec0e> *)&local_8);\n  return;\n}\n\n"
    },
    {
      "name": "__initialize_onexit_table",
      "entry": "004287fd",
      "c": "\n/* Library Function - Single Match\n    __initialize_onexit_table\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __cdecl __initialize_onexit_table(uint *param_1)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  \n  if (param_1 == (uint *)0x0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    if (*param_1 == param_1[2]) {\n      bVar1 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n      uVar3 = (0U >> bVar1 | 0 << 0x20 - bVar1) ^ DAT_0043e7ac;\n      *param_1 = uVar3;\n      param_1[1] = uVar3;\n      param_1[2] = uVar3;\n    }\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "__register_onexit_function",
      "entry": "0042883a",
      "c": "\n/* Library Function - Single Match\n    __register_onexit_function\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __register_onexit_function(void)\n\n{\n  undefined1 *local_c;\n  undefined1 *local_8;\n  \n  local_c = &stack0x00000004;\n  local_8 = &stack0x00000008;\n  __acrt_lock_and_call<class_<lambda_4e60a939b0d047cfe11ddc22648dfba9>_>\n            (2,(<lambda_4e60a939b0d047cfe11ddc22648dfba9> *)&local_c);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00428860",
      "entry": "00428860",
      "c": "\nundefined1 FUN_00428860(void)\n\n{\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_00462288,&PTR_DAT_0043e8a8);\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_00428880",
      "entry": "00428880",
      "c": "\nundefined4 FUN_00428880(void)\n\n{\n  undefined4 uVar1;\n  \n  __initialize_onexit_table((uint *)&DAT_00462240);\n  uVar1 = __initialize_onexit_table((uint *)&DAT_0046224c);\n  return CONCAT31((int3)((uint)uVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "FUN_004288a0",
      "entry": "004288a0",
      "c": "\nundefined1 FUN_004288a0(void)\n\n{\n  ___dcrt_uninitialize_environments_nolock();\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_004288b0",
      "entry": "004288b0",
      "c": "\nundefined4 FUN_004288b0(void)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  char **ppcVar3;\n  \n  bVar1 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n  ppcVar3 = (char **)((0U >> bVar1 | 0 << 0x20 - bVar1) ^ DAT_0043e7ac);\n  FUN_00428ff8(ppcVar3);\n  FUN_00427a4a(ppcVar3);\n  ___acrt_initialize_signal_handlers(ppcVar3);\n  FUN_004289c9(ppcVar3);\n  uVar2 = FUN_00427edd(ppcVar3);\n  return CONCAT31((int3)((uint)uVar2 >> 8),1);\n}\n\n"
    },
    {
      "name": "FUN_004288f0",
      "entry": "004288f0",
      "c": "\nvoid FUN_004288f0(void)\n\n{\n  ___vcrt_uninitialize('\\0');\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00428900",
      "entry": "00428900",
      "c": "\nundefined4 FUN_00428900(void)\n\n{\n  int iVar1;\n  undefined4 extraout_EAX;\n  \n  LOCK();\n  iVar1 = *(int *)PTR_DAT_0043ee90;\n  *(int *)PTR_DAT_0043ee90 = iVar1 + -1;\n  UNLOCK();\n  if ((iVar1 + -1 == 0) && ((undefined4 *)PTR_DAT_0043ee90 != &DAT_0043ec70)) {\n    FID_conflict__free(PTR_DAT_0043ee90);\n    PTR_DAT_0043ee90 = (undefined *)&DAT_0043ec70;\n  }\n  FID_conflict__free(DAT_00462280);\n  DAT_00462280 = (void *)0x0;\n  FID_conflict__free(DAT_00462284);\n  DAT_00462284 = (void *)0x0;\n  FID_conflict__free(DAT_004626d0);\n  DAT_004626d0 = (void *)0x0;\n  FID_conflict__free(DAT_004626d4);\n  DAT_004626d4 = (void *)0x0;\n  return CONCAT31((int3)((uint)extraout_EAX >> 8),1);\n}\n\n"
    },
    {
      "name": "___acrt_initialize",
      "entry": "00428977",
      "c": "\n/* Library Function - Single Match\n    ___acrt_initialize\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_initialize(void)\n\n{\n  ___acrt_execute_initializers(&PTR_FUN_004364f8,&DAT_00436570);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_uninitialize",
      "entry": "00428989",
      "c": "\n/* Library Function - Single Match\n    ___acrt_uninitialize\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_uninitialize(void)\n\n{\n  ___acrt_execute_uninitializers(&PTR_FUN_004364f8,&DAT_00436570);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042899b",
      "entry": "0042899b",
      "c": "\nundefined4 FUN_0042899b(void)\n\n{\n  return DAT_00462258;\n}\n\n"
    },
    {
      "name": "FUN_004289a1",
      "entry": "004289a1",
      "c": "\nvoid __cdecl FUN_004289a1(undefined4 param_1)\n\n{\n  DAT_00462258 = param_1;\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_has_user_matherr",
      "entry": "004289b0",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    ___acrt_has_user_matherr\n   \n   Library: Visual Studio 2015 Release */\n\nbool ___acrt_has_user_matherr(void)\n\n{\n  byte bVar1;\n  \n  bVar1 = (byte)DAT_0043e7ac & 0x1f;\n  return (DAT_0043e7ac ^ _DAT_0046225c) >> bVar1 != 0 ||\n         (DAT_0043e7ac ^ _DAT_0046225c) << 0x20 - bVar1 != 0;\n}\n\n"
    },
    {
      "name": "FUN_004289c9",
      "entry": "004289c9",
      "c": "\nvoid __cdecl FUN_004289c9(char **param_1)\n\n{\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_0046225c,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_invoke_user_matherr",
      "entry": "004289e0",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    ___acrt_invoke_user_matherr\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_invoke_user_matherr(undefined4 param_1)\n\n{\n  uint uVar1;\n  byte bVar2;\n  code *pcVar3;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  bVar2 = (byte)DAT_0043e7ac & 0x1f;\n  pcVar3 = (code *)((DAT_0043e7ac ^ _DAT_0046225c) >> bVar2 |\n                   (DAT_0043e7ac ^ _DAT_0046225c) << 0x20 - bVar2);\n  if (pcVar3 != (code *)0x0) {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1);\n    (*pcVar3)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___setusermatherr",
      "entry": "00428a29",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    ___setusermatherr\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___setusermatherr(uint param_1)\n\n{\n  _DAT_0046225c = __crt_fast_encode_pointer<>(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "__get_narrow_winmain_command_line",
      "entry": "00428a3e",
      "c": "\n/* Library Function - Single Match\n    __get_narrow_winmain_command_line\n   \n   Library: Visual Studio 2015 Release */\n\nchar * __get_narrow_winmain_command_line(void)\n\n{\n  char cVar1;\n  bool bVar2;\n  int iVar3;\n  char *pcVar4;\n  \n  ___acrt_initialize_multibyte();\n  pcVar4 = DAT_004626d8;\n  if (DAT_004626d8 == (char *)0x0) {\n    pcVar4 = &DAT_00462260;\n  }\n  bVar2 = false;\n  do {\n    cVar1 = *pcVar4;\n    if (cVar1 < '!') {\n      if (cVar1 == '\\0') {\n        return pcVar4;\n      }\n      if (!bVar2) {\n        for (; (*pcVar4 != '\\0' && (*pcVar4 < '!')); pcVar4 = pcVar4 + 1) {\n        }\n        return pcVar4;\n      }\n    }\n    if (cVar1 == '\\\"') {\n      bVar2 = !bVar2;\n    }\n    iVar3 = __ismbblead((int)cVar1);\n    if (iVar3 != 0) {\n      pcVar4 = pcVar4 + 1;\n    }\n    pcVar4 = pcVar4 + 1;\n  } while( true );\n}\n\n"
    },
    {
      "name": "__initterm",
      "entry": "00428a91",
      "c": "\n/* Library Function - Single Match\n    __initterm\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __initterm(undefined4 *param_1,undefined4 *param_2)\n\n{\n  code *pcVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar2 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  uVar4 = 0;\n  uVar3 = ~-(uint)(param_2 < param_1) & (uint)((int)param_2 + (3 - (int)param_1)) >> 2;\n  if (uVar3 != 0) {\n    do {\n      pcVar1 = (code *)*param_1;\n      if (pcVar1 != (code *)0x0) {\n        (*(code *)PTR_guard_check_icall_00433278)();\n        (*pcVar1)();\n      }\n      param_1 = param_1 + 1;\n      uVar4 = uVar4 + 1;\n    } while (uVar4 != uVar3);\n  }\n  FUN_0041fbbc(uVar2 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "__initterm_e",
      "entry": "00428aed",
      "c": "\n/* Library Function - Single Match\n    __initterm_e\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __initterm_e(undefined4 *param_1,undefined4 *param_2)\n\n{\n  code *pcVar1;\n  uint uVar2;\n  int iVar3;\n  \n  uVar2 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  for (; param_1 != param_2; param_1 = param_1 + 1) {\n    pcVar1 = (code *)*param_1;\n    if (pcVar1 != (code *)0x0) {\n      (*(code *)PTR_guard_check_icall_00433278)();\n      iVar3 = (*pcVar1)();\n      if (iVar3 != 0) break;\n    }\n  }\n  FUN_0041fbbc(uVar2 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "__set_fmode",
      "entry": "00428b32",
      "c": "\n/* Library Function - Single Match\n    __set_fmode\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nerrno_t __cdecl __set_fmode(int _Mode)\n\n{\n  int *piVar1;\n  \n  if (((_Mode != 0x4000) && (_Mode != 0x8000)) && (_Mode != 0x10000)) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n    return 0x16;\n  }\n  LOCK();\n  DAT_004626f8 = _Mode;\n  UNLOCK();\n  return 0;\n}\n\n"
    },
    {
      "name": "___acrt_set_locale_changed",
      "entry": "00428b6f",
      "c": "\n/* Library Function - Single Match\n    ___acrt_set_locale_changed\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 ___acrt_set_locale_changed(void)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = DAT_00462264;\n  LOCK();\n  DAT_00462264 = 1;\n  UNLOCK();\n  return uVar1;\n}\n\n"
    },
    {
      "name": "___acrt_uninitialize_locale",
      "entry": "00428b80",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    ___acrt_uninitialize_locale\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_uninitialize_locale(void)\n\n{\n  if (DAT_00462288 != &PTR_DAT_0043e8a8) {\n    ___acrt_lock(4);\n    DAT_00462288 = __updatetlocinfoEx_nolock(&DAT_00462288,&PTR_DAT_0043e8a8);\n    FUN_00428bc9();\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00428bc9",
      "entry": "00428bc9",
      "c": "\nvoid FUN_00428bc9(void)\n\n{\n  ___acrt_unlock(4);\n  return;\n}\n\n"
    },
    {
      "name": "__configthreadlocale",
      "entry": "00428bd2",
      "c": "\n/* Library Function - Single Match\n    __configthreadlocale\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __configthreadlocale(int _Flag)\n\n{\n  uint uVar1;\n  __acrt_ptd *p_Var2;\n  int *piVar3;\n  uint uVar4;\n  \n  p_Var2 = ___acrt_getptd();\n  uVar1 = *(uint *)(p_Var2 + 0x350);\n  if (_Flag == -1) {\n    DAT_0043eef0 = 0xffffffff;\n  }\n  else if (_Flag != 0) {\n    if (_Flag == 1) {\n      uVar4 = uVar1 | 2;\n    }\n    else {\n      if (_Flag != 2) {\n        piVar3 = __errno();\n        *piVar3 = 0x16;\n        FUN_00429087();\n        return -1;\n      }\n      uVar4 = uVar1 & 0xfffffffd;\n    }\n    *(uint *)(p_Var2 + 0x350) = uVar4;\n  }\n  return ((uVar1 & 2) == 0) + 1;\n}\n\n"
    },
    {
      "name": "FUN_00428c34",
      "entry": "00428c34",
      "c": "\nundefined4 FUN_00428c34(void)\n\n{\n  return DAT_00462268;\n}\n\n"
    },
    {
      "name": "__set_new_mode",
      "entry": "00428c3a",
      "c": "\n/* Library Function - Single Match\n    __set_new_mode\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 __cdecl __set_new_mode(int param_1)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = DAT_00462268;\n  if ((param_1 != 0) && (param_1 != 1)) {\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    FUN_00429087();\n    return 0xffffffff;\n  }\n  LOCK();\n  DAT_00462268 = param_1;\n  UNLOCK();\n  return uVar1;\n}\n\n"
    },
    {
      "name": "FUN_00428c69",
      "entry": "00428c69",
      "c": "\nundefined * FUN_00428c69(void)\n\n{\n  return &DAT_0046226c;\n}\n\n"
    },
    {
      "name": "__controlfp_s",
      "entry": "00428c6f",
      "c": "\n/* Library Function - Single Match\n    __controlfp_s\n   \n   Library: Visual Studio 2015 Release */\n\nerrno_t __cdecl __controlfp_s(uint *_CurrentState,uint _NewValue,uint _Mask)\n\n{\n  int *piVar1;\n  errno_t eVar2;\n  uint uVar3;\n  \n  uVar3 = _Mask & 0xfff7ffff;\n  if ((_NewValue & uVar3 & 0xfcf0fce0) == 0) {\n    if (_CurrentState == (uint *)0x0) {\n      __control87(_NewValue,uVar3);\n    }\n    else {\n      uVar3 = __control87(_NewValue,uVar3);\n      *_CurrentState = uVar3;\n    }\n    eVar2 = 0;\n  }\n  else {\n    if (_CurrentState != (uint *)0x0) {\n      uVar3 = __control87(0,0);\n      *_CurrentState = uVar3;\n    }\n    piVar1 = __errno();\n    eVar2 = 0x16;\n    *piVar1 = 0x16;\n    FUN_00429087();\n  }\n  return eVar2;\n}\n\n"
    },
    {
      "name": "__strdup",
      "entry": "00428cce",
      "c": "\n/* Library Function - Single Match\n    __strdup\n   \n   Library: Visual Studio 2015 Release */\n\nchar * __cdecl __strdup(char *_Src)\n\n{\n  char cVar1;\n  char *_Dst;\n  errno_t eVar2;\n  char *pcVar3;\n  \n  if (_Src == (char *)0x0) {\n    return (char *)0x0;\n  }\n  pcVar3 = _Src;\n  do {\n    cVar1 = *pcVar3;\n    pcVar3 = pcVar3 + 1;\n  } while (cVar1 != '\\0');\n  _Dst = (char *)FUN_00423e33((size_t)(pcVar3 + (1 - (int)(_Src + 1))));\n  if ((_Dst != (char *)0x0) &&\n     (eVar2 = _strcpy_s(_Dst,(rsize_t)(pcVar3 + (1 - (int)(_Src + 1))),_Src), eVar2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n  }\n  return _Dst;\n}\n\n"
    },
    {
      "name": "_abort",
      "entry": "00428d24",
      "c": "\n/* Library Function - Single Match\n    _abort\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl _abort(void)\n\n{\n  code *pcVar1;\n  int iVar2;\n  BOOL BVar3;\n  \n  iVar2 = ___acrt_get_sigabrt_handler();\n  if (iVar2 != 0) {\n    _raise(0x16);\n  }\n  if ((DAT_0043e7f0 & 2) != 0) {\n    BVar3 = IsProcessorFeaturePresent(0x17);\n    if (BVar3 != 0) {\n      pcVar1 = (code *)swi(0x29);\n      (*pcVar1)();\n    }\n    ___acrt_call_reportfault(3,0x40000015,1);\n  }\n  __exit(3);\n  pcVar1 = (code *)swi(3);\n  (*pcVar1)();\n  return;\n}\n\n"
    },
    {
      "name": "_strcpy_s",
      "entry": "00428d67",
      "c": "\n/* Library Function - Single Match\n    _strcpy_s\n   \n   Library: Visual Studio 2015 Release */\n\nerrno_t __cdecl _strcpy_s(char *_Dst,rsize_t _SizeInBytes,char *_Src)\n\n{\n  char cVar1;\n  int *piVar2;\n  char *pcVar3;\n  int iVar4;\n  \n  if ((_Dst != (char *)0x0) && (_SizeInBytes != 0)) {\n    if (_Src != (char *)0x0) {\n      pcVar3 = _Dst;\n      do {\n        cVar1 = pcVar3[(int)_Src - (int)_Dst];\n        *pcVar3 = cVar1;\n        pcVar3 = pcVar3 + 1;\n        if (cVar1 == '\\0') break;\n        _SizeInBytes = _SizeInBytes - 1;\n      } while (_SizeInBytes != 0);\n      if (_SizeInBytes != 0) {\n        return 0;\n      }\n      *_Dst = '\\0';\n      piVar2 = __errno();\n      iVar4 = 0x22;\n      goto LAB_00428d8c;\n    }\n    *_Dst = '\\0';\n  }\n  piVar2 = __errno();\n  iVar4 = 0x16;\nLAB_00428d8c:\n  *piVar2 = iVar4;\n  FUN_00429087();\n  return iVar4;\n}\n\n"
    },
    {
      "name": "FUN_00428dc1",
      "entry": "00428dc1",
      "c": "\nvoid FUN_00428dc1(uint param_1,uint param_2)\n\n{\n  __calloc_base(param_1,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "FID_conflict:_free",
      "entry": "00428dcc",
      "c": "\n/* Library Function - Multiple Matches With Different Base Names\n    __free_base\n    _free\n   \n   Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,\n   Visual Studio 2019 Release */\n\nvoid __cdecl FID_conflict__free(void *_Memory)\n\n{\n  BOOL BVar1;\n  int *piVar2;\n  DWORD DVar3;\n  int iVar4;\n  \n  if (_Memory != (void *)0x0) {\n    BVar1 = HeapFree(DAT_004626e4,0,_Memory);\n    if (BVar1 == 0) {\n      piVar2 = __errno();\n      DVar3 = GetLastError();\n      iVar4 = FID_conflict____acrt_errno_from_os_error(DVar3);\n      *piVar2 = iVar4;\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__malloc_base",
      "entry": "00428e06",
      "c": "\n/* Library Function - Single Match\n    __malloc_base\n   \n   Library: Visual Studio 2015 Release */\n\nLPVOID __cdecl __malloc_base(size_t param_1)\n\n{\n  int iVar1;\n  LPVOID pvVar2;\n  int *piVar3;\n  \n  if (param_1 < 0xffffffe1) {\n    if (param_1 == 0) {\n      param_1 = 1;\n    }\n    do {\n      pvVar2 = HeapAlloc(DAT_004626e4,0,param_1);\n      if (pvVar2 != (LPVOID)0x0) {\n        return pvVar2;\n      }\n      iVar1 = FUN_00428c34();\n    } while ((iVar1 != 0) && (iVar1 = __callnewh(param_1), iVar1 != 0));\n  }\n  piVar3 = __errno();\n  *piVar3 = 0xc;\n  return (LPVOID)0x0;\n}\n\n"
    },
    {
      "name": "__realloc_base",
      "entry": "00428e54",
      "c": "\n/* Library Function - Single Match\n    __realloc_base\n   \n   Library: Visual Studio 2015 Release */\n\nLPVOID __cdecl __realloc_base(void *param_1,uint param_2)\n\n{\n  LPVOID pvVar1;\n  int *piVar2;\n  int iVar3;\n  \n  if (param_1 == (void *)0x0) {\n    pvVar1 = __malloc_base(param_2);\n  }\n  else {\n    if (param_2 == 0) {\n      FID_conflict__free(param_1);\n    }\n    else {\n      if (param_2 < 0xffffffe1) {\n        do {\n          pvVar1 = HeapReAlloc(DAT_004626e4,0,param_1,param_2);\n          if (pvVar1 != (LPVOID)0x0) {\n            return pvVar1;\n          }\n          iVar3 = FUN_00428c34();\n        } while ((iVar3 != 0) && (iVar3 = __callnewh(param_2), iVar3 != 0));\n      }\n      piVar2 = __errno();\n      *piVar2 = 0xc;\n    }\n    pvVar1 = (LPVOID)0x0;\n  }\n  return pvVar1;\n}\n\n"
    },
    {
      "name": "___acrt_call_reportfault",
      "entry": "00428ebd",
      "c": "\n/* Library Function - Single Match\n    ___acrt_call_reportfault\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_call_reportfault(int param_1,DWORD param_2,DWORD param_3)\n\n{\n  uint uVar1;\n  BOOL BVar2;\n  LONG LVar3;\n  _EXCEPTION_POINTERS local_32c;\n  EXCEPTION_RECORD local_324;\n  undefined4 local_2d4 [39];\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  if (param_1 != -1) {\n    FUN_0041fa46();\n  }\n  _memset(&local_324,0,0x50);\n  _memset(local_2d4,0,0x2cc);\n  local_32c.ExceptionRecord = &local_324;\n  local_32c.ContextRecord = (PCONTEXT)local_2d4;\n  local_2d4[0] = 0x10001;\n  local_324.ExceptionCode = param_2;\n  local_324.ExceptionFlags = param_3;\n  BVar2 = IsDebuggerPresent();\n  SetUnhandledExceptionFilter((LPTOP_LEVEL_EXCEPTION_FILTER)0x0);\n  LVar3 = UnhandledExceptionFilter(&local_32c);\n  if (((LVar3 == 0) && (BVar2 == 0)) && (param_1 != -1)) {\n    FUN_0041fa46();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00428ff8",
      "entry": "00428ff8",
      "c": "\nvoid __cdecl FUN_00428ff8(char **param_1)\n\n{\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_00462270,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "__invalid_parameter",
      "entry": "0042900c",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    __invalid_parameter\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__invalid_parameter(wchar_t *param_1,wchar_t *param_2,wchar_t *param_3,uint param_4,\n                   uintptr_t param_5)\n\n{\n  uint uVar1;\n  __acrt_ptd *p_Var2;\n  byte bVar3;\n  code *pcVar4;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  p_Var2 = ___acrt_getptd_noexit();\n  if (((p_Var2 == (__acrt_ptd *)0x0) || (pcVar4 = *(code **)(p_Var2 + 0x35c), pcVar4 == (code *)0x0)\n      ) && (bVar3 = (byte)DAT_0043e7ac & 0x1f,\n           pcVar4 = (code *)((DAT_0043e7ac ^ _DAT_00462270) >> bVar3 |\n                            (DAT_0043e7ac ^ _DAT_00462270) << 0x20 - bVar3), pcVar4 == (code *)0x0))\n  {\n                    /* WARNING: Subroutine does not return */\n    __invoke_watson(param_1,param_2,param_3,param_4,param_5);\n  }\n  (*(code *)PTR_guard_check_icall_00433278)(param_1,param_2,param_3,param_4,param_5);\n  (*pcVar4)();\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00429087",
      "entry": "00429087",
      "c": "\nvoid FUN_00429087(void)\n\n{\n  __invalid_parameter((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n  return;\n}\n\n"
    },
    {
      "name": "__invoke_watson",
      "entry": "00429097",
      "c": "\n/* Library Function - Single Match\n    __invoke_watson\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__invoke_watson(wchar_t *param_1,wchar_t *param_2,wchar_t *param_3,uint param_4,uintptr_t param_5)\n\n{\n  code *pcVar1;\n  BOOL BVar2;\n  HANDLE hProcess;\n  UINT uExitCode;\n  \n  BVar2 = IsProcessorFeaturePresent(0x17);\n  if (BVar2 != 0) {\n    pcVar1 = (code *)swi(0x29);\n    (*pcVar1)();\n  }\n  ___acrt_call_reportfault(2,0xc0000417,1);\n  uExitCode = 0xc0000417;\n  hProcess = GetCurrentProcess();\n  TerminateProcess(hProcess,uExitCode);\n  return;\n}\n\n"
    },
    {
      "name": "__isdigit_l",
      "entry": "004290ca",
      "c": "\n/* Library Function - Single Match\n    __isdigit_l\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __isdigit_l(int _C,_locale_t _Locale)\n\n{\n  int iVar1;\n  int local_14;\n  localeinfo_struct local_10;\n  char local_8;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,(__crt_locale_pointers *)_Locale);\n  iVar1 = __ischartype_l(_C,4,&local_10);\n  if (local_8 != '\\0') {\n    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "_isdigit",
      "entry": "00429102",
      "c": "\n/* Library Function - Single Match\n    _isdigit\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _isdigit(int _C)\n\n{\n  int iVar1;\n  \n  if (DAT_00462264 != 0) {\n    iVar1 = __isdigit_l(_C,(_locale_t)0x0);\n    return iVar1;\n  }\n  return *(ushort *)(PTR_DAT_0043e8a8 + _C * 2) & 4;\n}\n\n"
    },
    {
      "name": "FID_conflict:___acrt_errno_from_os_error",
      "entry": "0042912f",
      "c": "\n/* Library Function - Multiple Matches With Different Base Names\n    ___acrt_errno_from_os_error\n    __get_errno_from_oserr\n   \n   Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,\n   Visual Studio 2019 Release */\n\nint __cdecl FID_conflict____acrt_errno_from_os_error(ulong param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  do {\n    if (param_1 == (&DAT_00436570)[uVar1 * 2]) {\n      return *(int *)(&UNK_00436574 + uVar1 * 8);\n    }\n    uVar1 = uVar1 + 1;\n  } while (uVar1 < 0x2d);\n  if (param_1 - 0x13 < 0x12) {\n    return 0xd;\n  }\n  return (-(uint)(0xe < param_1 - 0xbc) & 0xe) + 8;\n}\n\n"
    },
    {
      "name": "___acrt_errno_map_os_error",
      "entry": "00429172",
      "c": "\n/* Library Function - Single Match\n    ___acrt_errno_map_os_error\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_errno_map_os_error(ulong param_1)\n\n{\n  ulong *puVar1;\n  int iVar2;\n  int *piVar3;\n  \n  puVar1 = ___doserrno();\n  *puVar1 = param_1;\n  iVar2 = FID_conflict____acrt_errno_from_os_error(param_1);\n  piVar3 = __errno();\n  *piVar3 = iVar2;\n  return;\n}\n\n"
    },
    {
      "name": "___doserrno",
      "entry": "00429195",
      "c": "\n/* Library Function - Single Match\n    ___doserrno\n   \n   Library: Visual Studio 2015 Release */\n\nulong * __cdecl ___doserrno(void)\n\n{\n  __acrt_ptd *p_Var1;\n  \n  p_Var1 = ___acrt_getptd_noexit();\n  if (p_Var1 == (__acrt_ptd *)0x0) {\n    return (ulong *)&DAT_0043e7f8;\n  }\n  return (ulong *)(p_Var1 + 0x14);\n}\n\n"
    },
    {
      "name": "__errno",
      "entry": "004291a8",
      "c": "\n/* Library Function - Single Match\n    __errno\n   \n   Library: Visual Studio 2015 Release */\n\nint * __cdecl __errno(void)\n\n{\n  __acrt_ptd *p_Var1;\n  \n  p_Var1 = ___acrt_getptd_noexit();\n  if (p_Var1 == (__acrt_ptd *)0x0) {\n    return (int *)&DAT_0043e7f4;\n  }\n  return (int *)(p_Var1 + 0x10);\n}\n\n"
    },
    {
      "name": "_strtol",
      "entry": "004291bb",
      "c": "\n/* Library Function - Single Match\n    _strtol\n   \n   Library: Visual Studio 2015 Release */\n\nlong __cdecl _strtol(char *_Str,char **_EndPtr,int _Radix)\n\n{\n  ulong uVar1;\n  undefined4 auStack_18 [2];\n  int iStack_10;\n  undefined4 uStack_c;\n  \n  uStack_c = 1;\n  iStack_10 = _Radix;\n  make_c_string_character_source<>(auStack_18,_Str,_EndPtr);\n  uVar1 = __crt_strtox::\n          parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<char>_>(0);\n  return uVar1;\n}\n\n"
    },
    {
      "name": "_wcstol",
      "entry": "004291e7",
      "c": "\n/* Library Function - Single Match\n    _wcstol\n   \n   Library: Visual Studio 2015 Release */\n\nlong __cdecl _wcstol(wchar_t *_Str,wchar_t **_EndPtr,int _Radix)\n\n{\n  ulong uVar1;\n  undefined4 auStack_18 [2];\n  int iStack_10;\n  undefined4 uStack_c;\n  \n  uStack_c = 1;\n  iStack_10 = _Radix;\n  make_c_string_character_source<>(auStack_18,_Str,_EndPtr);\n  uVar1 = __crt_strtox::\n          parse_integer<unsigned_long,class___crt_strtox::c_string_character_source<wchar_t>_>(0);\n  return uVar1;\n}\n\n"
    },
    {
      "name": "__mbtowc_l",
      "entry": "00429213",
      "c": "\n/* Library Function - Single Match\n    __mbtowc_l\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __mbtowc_l(wchar_t *_DstCh,char *_SrcCh,size_t _SrcSizeInBytes,_locale_t _Locale)\n\n{\n  int iVar1;\n  int *piVar2;\n  uint uVar3;\n  int local_14;\n  localeinfo_struct local_10;\n  char local_8;\n  \n  if ((_SrcCh == (char *)0x0) || (_SrcSizeInBytes == 0)) {\n    return 0;\n  }\n  if (*_SrcCh == '\\0') {\n    if (_DstCh == (wchar_t *)0x0) {\n      return 0;\n    }\n    *_DstCh = L'\\0';\n    return 0;\n  }\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,(__crt_locale_pointers *)_Locale);\n  if ((local_10.locinfo)->locale_name[2] == (wchar_t *)0x0) {\n    if (_DstCh != (wchar_t *)0x0) {\n      *_DstCh = (ushort)(byte)*_SrcCh;\n    }\n    uVar3 = 1;\n    goto LAB_004292f5;\n  }\n  iVar1 = __isleadbyte_l((uint)(byte)*_SrcCh,&local_10);\n  if (iVar1 == 0) {\n    uVar3 = 1;\n    iVar1 = MultiByteToWideChar((local_10.locinfo)->lc_collate_cp,9,_SrcCh,1,_DstCh,\n                                (uint)(_DstCh != (wchar_t *)0x0));\n    if (iVar1 != 0) goto LAB_004292f5;\nLAB_004292e7:\n    piVar2 = __errno();\n    uVar3 = 0xffffffff;\n    *piVar2 = 0x2a;\n  }\n  else {\n    if ((int)(local_10.locinfo)->lc_codepage < 2) {\nLAB_004292b4:\n      uVar3 = (local_10.locinfo)->lc_codepage;\nLAB_004292b7:\n      if ((_SrcSizeInBytes < uVar3) || (_SrcCh[1] == '\\0')) goto LAB_004292e7;\n    }\n    else {\n      uVar3 = (local_10.locinfo)->lc_codepage;\n      if ((int)_SrcSizeInBytes < (int)uVar3) goto LAB_004292b7;\n      iVar1 = MultiByteToWideChar((local_10.locinfo)->lc_collate_cp,9,_SrcCh,\n                                  (local_10.locinfo)->lc_codepage,_DstCh,\n                                  (uint)(_DstCh != (wchar_t *)0x0));\n      if (iVar1 == 0) goto LAB_004292b4;\n    }\n    uVar3 = (local_10.locinfo)->lc_codepage;\n  }\nLAB_004292f5:\n  if (local_8 != '\\0') {\n    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n    return uVar3;\n  }\n  return uVar3;\n}\n\n"
    },
    {
      "name": "_mbtowc",
      "entry": "0042930d",
      "c": "\n/* Library Function - Single Match\n    _mbtowc\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _mbtowc(wchar_t *_DstCh,char *_SrcCh,size_t _SrcSizeInBytes)\n\n{\n  int iVar1;\n  \n  iVar1 = __mbtowc_l(_DstCh,_SrcCh,_SrcSizeInBytes,(_locale_t)0x0);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "__wctomb_s_l",
      "entry": "00429327",
      "c": "\n/* Library Function - Single Match\n    __wctomb_s_l\n   \n   Library: Visual Studio 2015 Release */\n\nerrno_t __cdecl\n__wctomb_s_l(int *_SizeConverted,char *_MbCh,size_t _SizeInBytes,wchar_t _WCh,_locale_t _Locale)\n\n{\n  int *piVar1;\n  int iVar2;\n  DWORD DVar3;\n  errno_t eVar4;\n  int local_18;\n  int local_14;\n  char local_c;\n  BOOL local_8;\n  \n  if ((_MbCh == (char *)0x0) && (_SizeInBytes != 0)) {\n    if (_SizeConverted != (int *)0x0) {\n      *_SizeConverted = 0;\n    }\n    return 0;\n  }\n  if (_SizeConverted != (int *)0x0) {\n    *_SizeConverted = -1;\n  }\n  if (0x7fffffff < _SizeInBytes) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n    return 0x16;\n  }\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_18,(__crt_locale_pointers *)_Locale);\n  eVar4 = 0;\n  if (*(int *)(local_14 + 0xa8) == 0) {\n    if ((ushort)_WCh < 0x100) {\n      if (_MbCh != (char *)0x0) {\n        if (_SizeInBytes == 0) goto LAB_00429434;\n        *_MbCh = (char)_WCh;\n      }\n      if (_SizeConverted != (int *)0x0) {\n        *_SizeConverted = 1;\n      }\n      goto LAB_004293b4;\n    }\n    if ((_MbCh != (char *)0x0) && (_SizeInBytes != 0)) {\n      _memset(_MbCh,0,_SizeInBytes);\n    }\n  }\n  else {\n    local_8 = 0;\n    iVar2 = WideCharToMultiByte(*(UINT *)(local_14 + 8),0,&_WCh,1,_MbCh,_SizeInBytes,(LPCSTR)0x0,\n                                &local_8);\n    if (iVar2 == 0) {\n      DVar3 = GetLastError();\n      if (DVar3 == 0x7a) {\n        if ((_MbCh != (char *)0x0) && (_SizeInBytes != 0)) {\n          _memset(_MbCh,0,_SizeInBytes);\n        }\nLAB_00429434:\n        piVar1 = __errno();\n        eVar4 = 0x22;\n        *piVar1 = 0x22;\n        FUN_00429087();\n        goto LAB_004293b4;\n      }\n    }\n    else if (local_8 == 0) {\n      if (_SizeConverted != (int *)0x0) {\n        *_SizeConverted = iVar2;\n      }\n      goto LAB_004293b4;\n    }\n  }\n  piVar1 = __errno();\n  eVar4 = 0x2a;\n  *piVar1 = 0x2a;\nLAB_004293b4:\n  if (local_c != '\\0') {\n    *(uint *)(local_18 + 0x350) = *(uint *)(local_18 + 0x350) & 0xfffffffd;\n  }\n  return eVar4;\n}\n\n"
    },
    {
      "name": "_wctomb_s",
      "entry": "00429448",
      "c": "\n/* Library Function - Single Match\n    _wctomb_s\n   \n   Library: Visual Studio 2015 Release */\n\nerrno_t __cdecl _wctomb_s(int *_SizeConverted,char *_MbCh,rsize_t _SizeInBytes,wchar_t _WCh)\n\n{\n  errno_t eVar1;\n  \n  eVar1 = __wctomb_s_l(_SizeConverted,_MbCh,_SizeInBytes,_WCh,(_locale_t)0x0);\n  return eVar1;\n}\n\n"
    },
    {
      "name": "operator()<>",
      "entry": "00429465",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Multiple Matches With Same Base Name\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_3518db117f0e7cdb002338c5d3c47b6c>,class <lambda_b2ea41f6bbb362cd97d94c6828d90b61> &,class\n   <lambda_abdedf541bb04549bc734292b4a045d4> >(class <lambda_3518db117f0e7cdb002338c5d3c47b6c>\n   &&,class <lambda_b2ea41f6bbb362cd97d94c6828d90b61> &,class\n   <lambda_abdedf541bb04549bc734292b4a045d4> &&)\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_a7e850c220f1c8d1e6efeecdedd162c6>,class <lambda_46720907175c18b6c9d2717bc0d2d362> &,class\n   <lambda_9048902d66e8d99359bc9897bbb930a8> >(class <lambda_a7e850c220f1c8d1e6efeecdedd162c6>\n   &&,class <lambda_46720907175c18b6c9d2717bc0d2d362> &,class\n   <lambda_9048902d66e8d99359bc9897bbb930a8> &&)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid operator()<>(int *param_1,undefined4 *param_2)\n\n{\n  ___acrt_lock(*param_1);\n  replace_current_thread_locale_nolock\n            (*(__acrt_ptd **)*param_2,(__crt_locale_data *)**(undefined4 **)param_2[1]);\n  FUN_004294a9();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004294a9",
      "entry": "004294a9",
      "c": "\nvoid FUN_004294a9(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "operator()<>",
      "entry": "004294b5",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Multiple Matches With Same Base Name\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_38edbb1296d33220d7e4dd0ed76b244a>,class <lambda_5ce1d447e08cb34b2473517608e21441> &,class\n   <lambda_fb385d3da700c9147fc39e65dd577a8c> >(class <lambda_38edbb1296d33220d7e4dd0ed76b244a>\n   &&,class <lambda_5ce1d447e08cb34b2473517608e21441> &,class\n   <lambda_fb385d3da700c9147fc39e65dd577a8c> &&)\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_51b6e8b1eb166f2a3faf91f424b38130>,class <lambda_6250bd4b2a391816dd638c3bf72b0bcb> &,class\n   <lambda_0b5a4a3e68152e1d9b943535f5f47bed> >(class <lambda_51b6e8b1eb166f2a3faf91f424b38130>\n   &&,class <lambda_6250bd4b2a391816dd638c3bf72b0bcb> &,class\n   <lambda_0b5a4a3e68152e1d9b943535f5f47bed> &&)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid operator()<>(int *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  int *_Memory;\n  \n  ___acrt_lock(*param_1);\n  _Memory = *(int **)(*(int *)*param_2 + 0x48);\n  if (_Memory != (int *)0x0) {\n    LOCK();\n    iVar1 = *_Memory;\n    *_Memory = iVar1 + -1;\n    UNLOCK();\n    if ((iVar1 + -1 == 0) && (_Memory != &DAT_0043ec70)) {\n      FID_conflict__free(_Memory);\n    }\n  }\n  FUN_0042950a();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042950a",
      "entry": "0042950a",
      "c": "\nvoid FUN_0042950a(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "operator()<>",
      "entry": "00429516",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Multiple Matches With Same Base Name\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_5b71d36f03204c0beab531769a5b5694>,class <lambda_be2b3da3f62db62e9dad5dc70221a656> &,class\n   <lambda_8f9ce462984622f9bf76b59e2aaaf805> >(class <lambda_5b71d36f03204c0beab531769a5b5694>\n   &&,class <lambda_be2b3da3f62db62e9dad5dc70221a656> &,class\n   <lambda_8f9ce462984622f9bf76b59e2aaaf805> &&)\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_6affb1475c98b40b75cdec977db92e3c>,class <lambda_b8d4b9c228a6ecc3f80208dbb4b4a104> &,class\n   <lambda_608742c3c92a14382c1684fc64f96c88> >(class <lambda_6affb1475c98b40b75cdec977db92e3c>\n   &&,class <lambda_b8d4b9c228a6ecc3f80208dbb4b4a104> &,class\n   <lambda_608742c3c92a14382c1684fc64f96c88> &&)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid operator()<>(int *param_1,undefined4 *param_2)\n\n{\n  ___acrt_lock(*param_1);\n  replace_current_thread_locale_nolock(*(__acrt_ptd **)*param_2,(__crt_locale_data *)0x0);\n  FUN_00429555();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00429555",
      "entry": "00429555",
      "c": "\nvoid FUN_00429555(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "operator()<>",
      "entry": "00429561",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Multiple Matches With Same Base Name\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_15ade71b0218206bbe3333a0c9b79046>,class <lambda_da44e0f8b0f19ba52fefafb335991732> &,class\n   <lambda_207f2d024fc103971653565357d6cd41> >(class <lambda_15ade71b0218206bbe3333a0c9b79046>\n   &&,class <lambda_da44e0f8b0f19ba52fefafb335991732> &,class\n   <lambda_207f2d024fc103971653565357d6cd41> &&)\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_9df27f884b057bc3edfc946cb5b7cf47>,class <lambda_e69574bed617af4e071282c136b37893> &,class\n   <lambda_cc0d902bcbbeb830f749456577db4721> >(class <lambda_9df27f884b057bc3edfc946cb5b7cf47>\n   &&,class <lambda_e69574bed617af4e071282c136b37893> &,class\n   <lambda_cc0d902bcbbeb830f749456577db4721> &&)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid operator()<>(int *param_1,undefined4 *param_2)\n\n{\n  ___acrt_lock(*param_1);\n  LOCK();\n  **(int **)(*(int *)*param_2 + 0x48) = **(int **)(*(int *)*param_2 + 0x48) + 1;\n  UNLOCK();\n  FUN_0042959d();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042959d",
      "entry": "0042959d",
      "c": "\nvoid FUN_0042959d(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_6250bd4b2a391816dd638c3bf72b0bcb>_>",
      "entry": "004295a9",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __acrt_lock_and_call<class <lambda_6250bd4b2a391816dd638c3bf72b0bcb> >(enum\n   __acrt_lock_id,class <lambda_6250bd4b2a391816dd638c3bf72b0bcb> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__acrt_lock_and_call<class_<lambda_6250bd4b2a391816dd638c3bf72b0bcb>_>\n          (__acrt_lock_id param_1,<lambda_6250bd4b2a391816dd638c3bf72b0bcb> *param_2)\n\n{\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  operator()<>((int *)&local_10,(undefined4 *)param_2);\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_b2ea41f6bbb362cd97d94c6828d90b61>_>",
      "entry": "004295d1",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __acrt_lock_and_call<class <lambda_b2ea41f6bbb362cd97d94c6828d90b61> >(enum\n   __acrt_lock_id,class <lambda_b2ea41f6bbb362cd97d94c6828d90b61> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__acrt_lock_and_call<class_<lambda_b2ea41f6bbb362cd97d94c6828d90b61>_>\n          (__acrt_lock_id param_1,<lambda_b2ea41f6bbb362cd97d94c6828d90b61> *param_2)\n\n{\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  operator()<>((int *)&local_10,(undefined4 *)param_2);\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_be2b3da3f62db62e9dad5dc70221a656>_>",
      "entry": "004295f9",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __acrt_lock_and_call<class <lambda_be2b3da3f62db62e9dad5dc70221a656> >(enum\n   __acrt_lock_id,class <lambda_be2b3da3f62db62e9dad5dc70221a656> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__acrt_lock_and_call<class_<lambda_be2b3da3f62db62e9dad5dc70221a656>_>\n          (__acrt_lock_id param_1,<lambda_be2b3da3f62db62e9dad5dc70221a656> *param_2)\n\n{\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  operator()<>((int *)&local_10,(undefined4 *)param_2);\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_e69574bed617af4e071282c136b37893>_>",
      "entry": "00429621",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __acrt_lock_and_call<class <lambda_e69574bed617af4e071282c136b37893> >(enum\n   __acrt_lock_id,class <lambda_e69574bed617af4e071282c136b37893> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__acrt_lock_and_call<class_<lambda_e69574bed617af4e071282c136b37893>_>\n          (__acrt_lock_id param_1,<lambda_e69574bed617af4e071282c136b37893> *param_2)\n\n{\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  operator()<>((int *)&local_10,(undefined4 *)param_2);\n  return;\n}\n\n"
    },
    {
      "name": "construct_ptd",
      "entry": "00429649",
      "c": "\n/* Library Function - Single Match\n    void __cdecl construct_ptd(struct __acrt_ptd * const,struct __crt_locale_data * * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl construct_ptd(__acrt_ptd *param_1,__crt_locale_data **param_2)\n\n{\n  __acrt_ptd **local_c;\n  __acrt_ptd **local_8;\n  \n  *(undefined4 *)(param_1 + 0x18) = 1;\n  *(undefined **)param_1 = &DAT_00436430;\n  *(undefined4 *)(param_1 + 0x350) = 1;\n  *(undefined4 **)(param_1 + 0x48) = &DAT_0043ec70;\n  *(undefined2 *)(param_1 + 0x6c) = 0x43;\n  *(undefined2 *)(param_1 + 0x172) = 0x43;\n  *(undefined4 *)(param_1 + 0x34c) = 0;\n  local_8 = &param_1;\n  __acrt_lock_and_call<class_<lambda_e69574bed617af4e071282c136b37893>_>\n            (5,(<lambda_e69574bed617af4e071282c136b37893> *)&local_8);\n  local_c = &param_1;\n  local_8 = (__acrt_ptd **)&param_2;\n  __acrt_lock_and_call<class_<lambda_b2ea41f6bbb362cd97d94c6828d90b61>_>\n            (4,(<lambda_b2ea41f6bbb362cd97d94c6828d90b61> *)&local_c);\n  return;\n}\n\n"
    },
    {
      "name": "destroy_fls",
      "entry": "004296d0",
      "c": "\n/* Library Function - Single Match\n    void __stdcall destroy_fls(void *)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid destroy_fls(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    destroy_ptd((__acrt_ptd *)param_1);\n    FID_conflict__free(param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "destroy_ptd",
      "entry": "004296f1",
      "c": "\n/* Library Function - Single Match\n    void __cdecl destroy_ptd(struct __acrt_ptd * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl destroy_ptd(__acrt_ptd *param_1)\n\n{\n  __acrt_ptd **local_8;\n  \n  if (*(undefined **)param_1 != &DAT_00436430) {\n    FID_conflict__free(*(undefined **)param_1);\n  }\n  FID_conflict__free(*(void **)(param_1 + 0x3c));\n  FID_conflict__free(*(void **)(param_1 + 0x30));\n  FID_conflict__free(*(void **)(param_1 + 0x34));\n  FID_conflict__free(*(void **)(param_1 + 0x38));\n  FID_conflict__free(*(void **)(param_1 + 0x28));\n  FID_conflict__free(*(void **)(param_1 + 0x2c));\n  FID_conflict__free(*(void **)(param_1 + 0x40));\n  FID_conflict__free(*(void **)(param_1 + 0x44));\n  FID_conflict__free(*(void **)(param_1 + 0x360));\n  local_8 = &param_1;\n  __acrt_lock_and_call<class_<lambda_6250bd4b2a391816dd638c3bf72b0bcb>_>\n            (5,(<lambda_6250bd4b2a391816dd638c3bf72b0bcb> *)&local_8);\n  local_8 = &param_1;\n  __acrt_lock_and_call<class_<lambda_be2b3da3f62db62e9dad5dc70221a656>_>\n            (4,(<lambda_be2b3da3f62db62e9dad5dc70221a656> *)&local_8);\n  return;\n}\n\n"
    },
    {
      "name": "replace_current_thread_locale_nolock",
      "entry": "0042979a",
      "c": "\n/* Library Function - Single Match\n    void __cdecl replace_current_thread_locale_nolock(struct __acrt_ptd * const,struct\n   __crt_locale_data * const)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid __cdecl replace_current_thread_locale_nolock(__acrt_ptd *param_1,__crt_locale_data *param_2)\n\n{\n  undefined **ppuVar1;\n  \n  if (*(int *)(param_1 + 0x4c) != 0) {\n    ___acrt_release_locale_ref(*(int *)(param_1 + 0x4c));\n    ppuVar1 = *(undefined ***)(param_1 + 0x4c);\n    if (((ppuVar1 != DAT_00462288) && (ppuVar1 != &PTR_DAT_0043e8a8)) &&\n       (ppuVar1[3] == (undefined *)0x0)) {\n      ___acrt_free_locale(ppuVar1);\n    }\n  }\n  *(__crt_locale_data **)(param_1 + 0x4c) = param_2;\n  if (param_2 != (__crt_locale_data *)0x0) {\n    ___acrt_add_locale_ref((int)param_2);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_getptd",
      "entry": "004297e5",
      "c": "\n/* Library Function - Single Match\n    ___acrt_getptd\n   \n   Library: Visual Studio 2015 Release */\n\n__acrt_ptd * ___acrt_getptd(void)\n\n{\n  DWORD dwErrCode;\n  __acrt_ptd *_Memory;\n  int iVar1;\n  \n  dwErrCode = GetLastError();\n  if ((DAT_0043e7fc != 0xffffffff) &&\n     (_Memory = (__acrt_ptd *)___acrt_FlsGetValue_4(DAT_0043e7fc), _Memory != (__acrt_ptd *)0x0)) {\nLAB_00429850:\n    SetLastError(dwErrCode);\n    return _Memory;\n  }\n  _Memory = (__acrt_ptd *)__calloc_base(1,0x364);\n  if ((_Memory == (__acrt_ptd *)0x0) ||\n     (iVar1 = ___acrt_FlsSetValue_8(DAT_0043e7fc,_Memory), iVar1 == 0)) {\n    FID_conflict__free(_Memory);\n  }\n  else {\n    construct_ptd(_Memory,(__crt_locale_data **)&DAT_00462288);\n    FID_conflict__free((void *)0x0);\n    if (_Memory != (__acrt_ptd *)0x0) goto LAB_00429850;\n  }\n  SetLastError(dwErrCode);\n                    /* WARNING: Subroutine does not return */\n  _abort();\n}\n\n"
    },
    {
      "name": "___acrt_getptd_noexit",
      "entry": "00429869",
      "c": "\n/* Library Function - Single Match\n    ___acrt_getptd_noexit\n   \n   Library: Visual Studio 2015 Release */\n\n__acrt_ptd * ___acrt_getptd_noexit(void)\n\n{\n  DWORD dwErrCode;\n  __acrt_ptd *_Memory;\n  int iVar1;\n  \n  dwErrCode = GetLastError();\n  if ((DAT_0043e7fc != 0xffffffff) &&\n     (_Memory = (__acrt_ptd *)___acrt_FlsGetValue_4(DAT_0043e7fc), _Memory != (__acrt_ptd *)0x0)) {\nLAB_004298df:\n    SetLastError(dwErrCode);\n    return _Memory;\n  }\n  _Memory = (__acrt_ptd *)__calloc_base(1,0x364);\n  if (_Memory == (__acrt_ptd *)0x0) {\n    _Memory = (__acrt_ptd *)0x0;\n  }\n  else {\n    iVar1 = ___acrt_FlsSetValue_8(DAT_0043e7fc,_Memory);\n    if (iVar1 != 0) {\n      construct_ptd(_Memory,(__crt_locale_data **)&DAT_00462288);\n      FID_conflict__free((void *)0x0);\n      if (_Memory != (__acrt_ptd *)0x0) goto LAB_004298df;\n      goto LAB_004298d6;\n    }\n  }\n  FID_conflict__free(_Memory);\nLAB_004298d6:\n  SetLastError(dwErrCode);\n  return (__acrt_ptd *)0x0;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_ptd",
      "entry": "004298f0",
      "c": "\n/* Library Function - Single Match\n    ___acrt_initialize_ptd\n   \n   Library: Visual Studio 2015 Release */\n\nuint ___acrt_initialize_ptd(void)\n\n{\n  uint uVar1;\n  __acrt_ptd *p_Var2;\n  \n  uVar1 = ___acrt_FlsAlloc_4(destroy_fls);\n  DAT_0043e7fc = uVar1;\n  if (uVar1 != 0xffffffff) {\n    p_Var2 = ___acrt_getptd_noexit();\n    if (p_Var2 != (__acrt_ptd *)0x0) {\n      return CONCAT31((int3)((uint)p_Var2 >> 8),1);\n    }\n    uVar1 = ___acrt_uninitialize_ptd();\n  }\n  return uVar1 & 0xffffff00;\n}\n\n"
    },
    {
      "name": "___acrt_uninitialize_ptd",
      "entry": "00429920",
      "c": "\n/* Library Function - Single Match\n    ___acrt_uninitialize_ptd\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 ___acrt_uninitialize_ptd(void)\n\n{\n  DWORD DVar1;\n  \n  DVar1 = DAT_0043e7fc;\n  if (DAT_0043e7fc != 0xffffffff) {\n    DVar1 = ___acrt_FlsFree_4(DAT_0043e7fc);\n    DAT_0043e7fc = 0xffffffff;\n  }\n  return CONCAT31((int3)(DVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "___acrt_update_locale_info",
      "entry": "0042993a",
      "c": "\n/* Library Function - Single Match\n    ___acrt_update_locale_info\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_update_locale_info(int param_1,int *param_2)\n\n{\n  undefined **ppuVar1;\n  \n  if ((*param_2 != DAT_00462288) && ((*(uint *)(param_1 + 0x350) & DAT_0043eef0) == 0)) {\n    ppuVar1 = ___acrt_update_thread_locale_data();\n    *param_2 = (int)ppuVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_update_multibyte_info",
      "entry": "00429967",
      "c": "\n/* Library Function - Single Match\n    ___acrt_update_multibyte_info\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_update_multibyte_info(int param_1,int *param_2)\n\n{\n  int *piVar1;\n  \n  if (((undefined *)*param_2 != PTR_DAT_0043ee90) &&\n     ((*(uint *)(param_1 + 0x350) & DAT_0043eef0) == 0)) {\n    piVar1 = ___acrt_update_thread_multibyte_data();\n    *param_2 = (int)piVar1;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_fp_classify",
      "entry": "00429994",
      "c": "\n/* Library Function - Single Match\n    enum __acrt_fp_class __cdecl __acrt_fp_classify(double const &)\n   \n   Library: Visual Studio 2015 Release */\n\n__acrt_fp_class __cdecl __acrt_fp_classify(double *param_1)\n\n{\n  uint uVar1;\n  undefined4 uStack_14;\n  \n  uVar1 = *(uint *)((int)param_1 + 4);\n  if ((uVar1 >> 0x14 & 0x7ff) == 0x7ff) {\n    if (*(int *)param_1 == 0 && (uVar1 & 0xfffff) == 0) {\n      uStack_14 = 1;\n    }\n    else if ((((uVar1 & 0x80000000) == 0) || (*(int *)param_1 != 0)) ||\n            ((uVar1 & 0xfffff) != 0x80000)) {\n      if ((uVar1 & 0x80000) == 0) {\n        uStack_14 = 3;\n      }\n      else {\n        uStack_14 = 2;\n      }\n    }\n    else {\n      uStack_14 = 4;\n    }\n  }\n  else {\n    uStack_14 = 0;\n  }\n  return uStack_14;\n}\n\n"
    },
    {
      "name": "__acrt_fp_is_negative",
      "entry": "00429a00",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl __acrt_fp_is_negative(double const &)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __cdecl __acrt_fp_is_negative(double *param_1)\n\n{\n  return ((ulonglong)*param_1 & 0x8000000000000000) != 0;\n}\n\n"
    },
    {
      "name": "fp_format_a",
      "entry": "00429a1e",
      "c": "\n/* Library Function - Single Match\n    int __cdecl fp_format_a(double const * const,char *,unsigned int,char * const,unsigned\n   int,int,bool,unsigned int,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nfp_format_a(double *param_1,char *param_2,uint param_3,char *param_4,uint param_5,int param_6,\n           bool param_7,uint param_8,__crt_locale_pointers *param_9)\n\n{\n  int *piVar1;\n  int iVar2;\n  undefined1 (*pauVar3) [16];\n  uint uVar4;\n  char *pcVar5;\n  uint uVar6;\n  uint extraout_ECX;\n  uint extraout_ECX_00;\n  uint extraout_ECX_01;\n  uint uVar7;\n  char *_Dst;\n  char *pcVar8;\n  bool bVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  int local_34;\n  int local_30;\n  char local_28;\n  undefined4 local_24;\n  int local_20;\n  char *local_1c;\n  uint local_14;\n  uint local_10;\n  int local_c;\n  uint local_8;\n  \n  if (param_6 < 0) {\n    param_6 = 0;\n  }\n  *param_2 = '\\0';\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_34,param_9);\n  if (param_3 <= param_6 + 0xbU) {\n    piVar1 = __errno();\n    iVar2 = 0x22;\n    *piVar1 = 0x22;\n    FUN_00429087();\n    goto LAB_00429d08;\n  }\n  local_24 = *(undefined4 *)param_1;\n  if ((*(uint *)((int)param_1 + 4) >> 0x14 & 0x7ff) == 0x7ff) {\n    iVar2 = fp_format_e(param_1,param_2,param_3,param_4,param_5,param_6,false,param_8,\n                        (__crt_locale_pointers *)0x0);\n    if (iVar2 == 0) {\n      pauVar3 = FUN_00432430((undefined1 (*) [16])param_2,0x65);\n      if (pauVar3 != (undefined1 (*) [16])0x0) {\n        (*pauVar3)[0] = (!param_7 - 1U & 0xe0) + 0x70;\n        (*pauVar3)[3] = 0;\n      }\n      iVar2 = 0;\n    }\n    else {\n      *param_2 = '\\0';\n    }\n    goto LAB_00429d08;\n  }\n  if ((*(uint *)((int)param_1 + 4) & 0x80000000) != 0) {\n    *param_2 = '-';\n    param_2 = param_2 + 1;\n  }\n  local_10 = 0x3ff;\n  iVar2 = (!param_7 - 1 & 0xffffffe0) + 0x27;\n  if (((ulonglong)*param_1 & 0x7ff0000000000000) == 0) {\n    *param_2 = '0';\n    if (*(int *)param_1 == 0 && ((ulonglong)*param_1 & 0xfffff00000000) == 0) {\n      local_10 = 0;\n    }\n    else {\n      local_10 = 0x3fe;\n    }\n  }\n  else {\n    *param_2 = '1';\n  }\n  local_1c = param_2 + 1;\n  _Dst = param_2 + 2;\n  if (param_6 == 0) {\n    *local_1c = '\\0';\n  }\n  else {\n    *local_1c = *(char *)**(undefined4 **)(local_30 + 0x88);\n  }\n  local_20 = iVar2;\n  if ((((ulonglong)*param_1 & 0xfffff00000000) != 0) || (local_14 = 0, *(int *)param_1 != 0)) {\n    local_8 = 0;\n    local_c = 0x30;\n    local_14 = 0xf0000;\n    do {\n      if (param_6 < 1) break;\n      uVar10 = __aullshr((byte)local_c,*(uint *)((int)param_1 + 4) & local_14 & 0xfffff);\n      uVar4 = (uint)(ushort)((short)uVar10 + 0x30);\n      if (0x39 < uVar4) {\n        uVar4 = uVar4 + iVar2;\n      }\n      *_Dst = (char)uVar4;\n      _Dst = _Dst + 1;\n      local_8 = local_8 >> 4 | local_14 << 0x1c;\n      local_14 = local_14 >> 4;\n      local_c = local_c + -4;\n      param_6 = param_6 - 1;\n    } while (-1 < (short)local_c);\n    if ((-1 < (short)local_c) &&\n       (uVar10 = __aullshr((byte)local_c,*(uint *)((int)param_1 + 4) & local_14 & 0xfffff),\n       pcVar8 = _Dst, 8 < (ushort)uVar10)) {\n      while( true ) {\n        pcVar5 = pcVar8 + -1;\n        if ((*pcVar5 != 'f') && (*pcVar5 != 'F')) break;\n        *pcVar5 = '0';\n        pcVar8 = pcVar5;\n      }\n      if (pcVar5 == local_1c) {\n        pcVar8[-2] = pcVar8[-2] + '\\x01';\n      }\n      else if (*pcVar5 == '9') {\n        *pcVar5 = (char)local_20 + ':';\n      }\n      else {\n        *pcVar5 = *pcVar5 + '\\x01';\n      }\n    }\n  }\n  if (0 < param_6) {\n    _memset(_Dst,0x30,param_6);\n    _Dst = _Dst + param_6;\n  }\n  if (*local_1c == '\\0') {\n    _Dst = local_1c;\n  }\n  *_Dst = (!param_7 - 1U & 0xe0) + 0x70;\n  uVar10 = __aullshr(0x34,*(uint *)((int)param_1 + 4));\n  uVar4 = (uint)uVar10 & 0x7ff;\n  uVar6 = uVar4 - local_10;\n  uVar4 = (uint)(uVar4 < local_10);\n  uVar7 = -uVar4;\n  if (uVar4 == 0) {\n    _Dst[1] = '+';\n  }\n  else {\n    _Dst[1] = '-';\n    bVar9 = uVar6 != 0;\n    uVar6 = -uVar6;\n    uVar7 = -(uVar7 + bVar9);\n  }\n  pcVar5 = _Dst + 2;\n  *pcVar5 = '0';\n  pcVar8 = pcVar5;\n  if (-1 < (int)uVar7) {\n    if (((int)uVar7 < 1) && (uVar6 < 1000)) {\nLAB_00429cbb:\n      if (((int)uVar7 < 0) || (((int)uVar7 < 1 && (uVar6 < 100)))) goto LAB_00429cd9;\n    }\n    else {\n      uVar11 = __alldvrm(uVar6,uVar7,1000,0);\n      local_20 = (int)((ulonglong)uVar11 >> 0x20);\n      *pcVar5 = (char)uVar11 + '0';\n      pcVar8 = _Dst + 3;\n      uVar6 = extraout_ECX;\n      if (pcVar8 == pcVar5) goto LAB_00429cbb;\n    }\n    uVar11 = __alldvrm(uVar6,uVar7,100,0);\n    local_20 = (int)((ulonglong)uVar11 >> 0x20);\n    *pcVar8 = (char)uVar11 + '0';\n    pcVar8 = pcVar8 + 1;\n    uVar6 = extraout_ECX_00;\n  }\nLAB_00429cd9:\n  if ((pcVar8 != pcVar5) || ((-1 < (int)uVar7 && ((0 < (int)uVar7 || (9 < uVar6)))))) {\n    uVar11 = __alldvrm(uVar6,uVar7,10,0);\n    *pcVar8 = (char)uVar11 + '0';\n    pcVar8 = pcVar8 + 1;\n    uVar6 = extraout_ECX_01;\n  }\n  iVar2 = 0;\n  *pcVar8 = (char)uVar6 + '0';\n  pcVar8[1] = '\\0';\nLAB_00429d08:\n  if (local_28 != '\\0') {\n    *(uint *)(local_34 + 0x350) = *(uint *)(local_34 + 0x350) & 0xfffffffd;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "fp_format_e",
      "entry": "00429d21",
      "c": "\n/* Library Function - Single Match\n    int __cdecl fp_format_e(double const * const,char * const,unsigned int,char * const,unsigned\n   int,int,bool,unsigned int,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nfp_format_e(double *param_1,char *param_2,uint param_3,char *param_4,uint param_5,int param_6,\n           bool param_7,uint param_8,__crt_locale_pointers *param_9)\n\n{\n  int iVar1;\n  uint uVar2;\n  int local_10 [3];\n  \n  ___acrt_fltout(*(int *)param_1,*(uint *)((int)param_1 + 4),param_6 + 1,local_10,param_4,param_5);\n  uVar2 = 0xffffffff;\n  if (param_3 != 0xffffffff) {\n    uVar2 = (param_3 - (local_10[0] == 0x2d)) - (uint)(0 < param_6);\n  }\n  iVar1 = ___acrt_fp_strflt_to_string\n                    ((uint *)(param_2 + (uint)(0 < param_6) + (uint)(local_10[0] == 0x2d)),uVar2,\n                     param_6 + 1,(int)local_10);\n  if (iVar1 == 0) {\n    iVar1 = fp_format_e_internal\n                      (param_2,param_3,param_6,param_7,param_8,(_strflt *)local_10,false,param_9);\n  }\n  else {\n    *param_2 = '\\0';\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "fp_format_e_internal",
      "entry": "00429dbc",
      "c": "\n/* Library Function - Single Match\n    int __cdecl fp_format_e_internal(char * const,unsigned int,int,bool,unsigned int,struct _strflt\n   * const,bool,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nfp_format_e_internal\n          (char *param_1,uint param_2,int param_3,bool param_4,uint param_5,_strflt *param_6,\n          bool param_7,__crt_locale_pointers *param_8)\n\n{\n  int *piVar1;\n  char *_SizeInBytes;\n  errno_t eVar2;\n  int iVar3;\n  int iVar4;\n  char *pcVar5;\n  int local_14;\n  int local_10;\n  char local_8;\n  \n  iVar4 = param_3;\n  if (param_3 < 1) {\n    iVar4 = 0;\n  }\n  if (iVar4 + 9U < param_2) {\n    _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,param_8);\n    if (param_7) {\n      shift_bytes(param_1,param_2,param_1 + (*(int *)param_6 == 0x2d),(uint)(0 < param_3));\n    }\n    pcVar5 = param_1;\n    if (*(int *)param_6 == 0x2d) {\n      *param_1 = '-';\n      pcVar5 = param_1 + 1;\n    }\n    if (0 < param_3) {\n      *pcVar5 = pcVar5[1];\n      pcVar5 = pcVar5 + 1;\n      *pcVar5 = *(char *)**(undefined4 **)(local_10 + 0x88);\n    }\n    pcVar5 = pcVar5 + (uint)!param_7 + param_3;\n    _SizeInBytes = (char *)0xffffffff;\n    if (param_2 != 0xffffffff) {\n      _SizeInBytes = param_1 + (param_2 - (int)pcVar5);\n    }\n    eVar2 = _strcpy_s(pcVar5,(rsize_t)_SizeInBytes,\"e+000\");\n    if (eVar2 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n    }\n    if (param_4) {\n      *pcVar5 = 'E';\n    }\n    if (**(char **)(param_6 + 8) != '0') {\n      iVar4 = *(int *)(param_6 + 4) + -1;\n      if (iVar4 < 0) {\n        iVar4 = -iVar4;\n        pcVar5[1] = '-';\n      }\n      if (99 < iVar4) {\n        iVar3 = iVar4 / 100;\n        iVar4 = iVar4 % 100;\n        pcVar5[2] = pcVar5[2] + (char)iVar3;\n      }\n      if (9 < iVar4) {\n        iVar3 = iVar4 / 10;\n        iVar4 = iVar4 % 10;\n        pcVar5[3] = pcVar5[3] + (char)iVar3;\n      }\n      pcVar5[4] = pcVar5[4] + (char)iVar4;\n    }\n    if ((param_5 == 2) && ((char)*(uint *)(pcVar5 + 2) == '0')) {\n      FUN_00420320((uint *)(pcVar5 + 2),(uint *)(pcVar5 + 3),3);\n    }\n    if (local_8 != '\\0') {\n      *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n    }\n    iVar4 = 0;\n  }\n  else {\n    piVar1 = __errno();\n    iVar4 = 0x22;\n    *piVar1 = 0x22;\n    FUN_00429087();\n  }\n  return iVar4;\n}\n\n"
    },
    {
      "name": "fp_format_f",
      "entry": "00429f07",
      "c": "\n/* Library Function - Single Match\n    int __cdecl fp_format_f(double const * const,char * const,unsigned int,char * const,unsigned\n   int,int,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nfp_format_f(double *param_1,char *param_2,uint param_3,char *param_4,uint param_5,int param_6,\n           __crt_locale_pointers *param_7)\n\n{\n  int iVar1;\n  uint uVar2;\n  int local_10;\n  int local_c;\n  undefined4 uStack_8;\n  \n  local_10 = 0;\n  local_c = 0;\n  uStack_8 = 0;\n  ___acrt_fltout(*(int *)param_1,*(uint *)((int)param_1 + 4),param_6,&local_10,param_4,param_5);\n  uVar2 = 0xffffffff;\n  if (param_3 != 0xffffffff) {\n    uVar2 = param_3 - (local_10 == 0x2d);\n  }\n  iVar1 = ___acrt_fp_strflt_to_string\n                    ((uint *)(param_2 + (local_10 == 0x2d)),uVar2,local_c + param_6,(int)&local_10);\n  if (iVar1 == 0) {\n    iVar1 = fp_format_f_internal(param_2,param_3,param_6,(_strflt *)&local_10,false,param_7);\n  }\n  else {\n    *param_2 = '\\0';\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "fp_format_f_internal",
      "entry": "00429f94",
      "c": "\n/* Library Function - Single Match\n    int __cdecl fp_format_f_internal(char * const,unsigned int,int,struct _strflt *\n   const,bool,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nfp_format_f_internal\n          (char *param_1,uint param_2,int param_3,_strflt *param_4,bool param_5,\n          __crt_locale_pointers *param_6)\n\n{\n  int iVar1;\n  int iVar2;\n  char *pcVar3;\n  int local_14;\n  int local_10;\n  char local_8;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,param_6);\n  iVar1 = *(int *)(param_4 + 4);\n  if ((param_5) && (iVar1 + -1 == param_3)) {\n    iVar2 = *(int *)param_4;\n    (param_1 + (uint)(iVar2 == 0x2d) + iVar1 + -1)[0] = '0';\n    (param_1 + (uint)(iVar2 == 0x2d) + iVar1 + -1)[1] = '\\0';\n  }\n  pcVar3 = param_1;\n  if (*(int *)param_4 == 0x2d) {\n    *param_1 = '-';\n    pcVar3 = param_1 + 1;\n  }\n  if (*(int *)(param_4 + 4) < 1) {\n    shift_bytes(param_1,param_2,pcVar3,1);\n    *pcVar3 = '0';\n    pcVar3 = pcVar3 + 1;\n  }\n  else {\n    pcVar3 = pcVar3 + *(int *)(param_4 + 4);\n  }\n  if (0 < param_3) {\n    shift_bytes(param_1,param_2,pcVar3,1);\n    *pcVar3 = *(char *)**(undefined4 **)(local_10 + 0x88);\n    iVar1 = *(int *)(param_4 + 4);\n    if (iVar1 < 0) {\n      if ((param_5) || (-iVar1 < param_3)) {\n        param_3 = -iVar1;\n      }\n      shift_bytes(param_1,param_2,pcVar3 + 1,param_3);\n      _memset(pcVar3 + 1,0x30,param_3);\n    }\n  }\n  if (local_8 != '\\0') {\n    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "fp_format_g",
      "entry": "0042a06b",
      "c": "\n/* Library Function - Single Match\n    int __cdecl fp_format_g(double const * const,char * const,unsigned int,char * const,unsigned\n   int,int,bool,unsigned int,struct __crt_locale_pointers * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nfp_format_g(double *param_1,char *param_2,uint param_3,char *param_4,uint param_5,int param_6,\n           bool param_7,uint param_8,__crt_locale_pointers *param_9)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  int iVar3;\n  uint *puVar4;\n  bool bVar5;\n  int local_14;\n  int local_10;\n  undefined4 uStack_c;\n  int local_8;\n  \n  local_14 = 0;\n  local_10 = 0;\n  uStack_c = 0;\n  ___acrt_fltout(*(int *)param_1,*(uint *)((int)param_1 + 4),param_6,&local_14,param_4,param_5);\n  bVar5 = local_14 == 0x2d;\n  local_8 = local_10 + -1;\n  uVar2 = 0xffffffff;\n  if (param_3 != 0xffffffff) {\n    uVar2 = param_3 - bVar5;\n  }\n  iVar3 = ___acrt_fp_strflt_to_string((uint *)(param_2 + bVar5),uVar2,param_6,(int)&local_14);\n  if (iVar3 == 0) {\n    iVar3 = local_10 + -1;\n    if ((iVar3 < -4) || (param_6 <= iVar3)) {\n      iVar3 = fp_format_e_internal\n                        (param_2,param_3,param_6,param_7,param_8,(_strflt *)&local_14,true,param_9);\n    }\n    else {\n      puVar1 = (uint *)(param_2 + bVar5);\n      if (local_8 < iVar3) {\n        do {\n          puVar4 = puVar1;\n          puVar1 = (uint *)((int)puVar4 + 1);\n        } while ((char)*puVar4 != '\\0');\n        *(undefined1 *)((int)puVar4 + -1) = 0;\n      }\n      iVar3 = fp_format_f_internal(param_2,param_3,param_6,(_strflt *)&local_14,true,param_9);\n    }\n  }\n  else {\n    *param_2 = '\\0';\n  }\n  return iVar3;\n}\n\n"
    },
    {
      "name": "fp_format_nan_or_infinity",
      "entry": "0042a133",
      "c": "\n/* Library Function - Single Match\n    int __cdecl fp_format_nan_or_infinity(enum __acrt_fp_class,bool,char *,unsigned int,bool)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nfp_format_nan_or_infinity\n          (__acrt_fp_class param_1,bool param_2,char *param_3,uint param_4,bool param_5)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  errno_t eVar4;\n  uint uVar5;\n  char *pcVar6;\n  undefined *local_48 [4];\n  undefined *local_38;\n  undefined *local_34;\n  undefined *local_30;\n  undefined *local_2c;\n  char *local_28;\n  undefined *local_24;\n  char *local_20;\n  undefined *local_1c;\n  char *local_18;\n  undefined *local_14;\n  char *local_10;\n  undefined *local_c;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  if (param_4 < param_2 + 4) {\n    *param_3 = '\\0';\n  }\n  else {\n    if (param_2) {\n      *param_3 = '-';\n      param_3 = param_3 + 1;\n      param_4 = param_4 - 1;\n      *param_3 = '\\0';\n    }\n    local_28 = \"NAN(SNAN)\";\n    local_48[0] = &DAT_004366d8;\n    local_48[1] = &DAT_004366d8;\n    local_48[2] = &DAT_004366dc;\n    local_48[3] = &DAT_004366dc;\n    local_20 = \"nan(snan)\";\n    local_30 = &DAT_004366e4;\n    uVar5 = param_5 - 1 & 2;\n    local_2c = &DAT_004366e4;\n    local_1c = &DAT_004366e4;\n    local_c = &DAT_004366e4;\n    local_18 = \"NAN(IND)\";\n    local_38 = &DAT_004366e0;\n    local_34 = &DAT_004366e0;\n    local_24 = &DAT_004366e0;\n    local_14 = &DAT_004366e0;\n    local_10 = \"nan(ind)\";\n    pcVar6 = local_48[param_1 * 4 + -4 + uVar5];\n    pcVar1 = pcVar6 + 1;\n    do {\n      cVar2 = *pcVar6;\n      pcVar6 = pcVar6 + 1;\n    } while (cVar2 != '\\0');\n    eVar4 = _strcpy_s(param_3,param_4,\n                      local_48[((param_1 * 4 + -3) -\n                               (uint)((uint)((int)pcVar6 - (int)pcVar1) < param_4)) + uVar5]);\n    if (eVar4 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n    }\n  }\n  iVar3 = FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return iVar3;\n}\n\n"
    },
    {
      "name": "shift_bytes",
      "entry": "0042a22b",
      "c": "\n/* Library Function - Single Match\n    void __cdecl shift_bytes(char * const,unsigned int,char * const,int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl shift_bytes(char *param_1,uint param_2,char *param_3,int param_4)\n\n{\n  char cVar1;\n  char *pcVar2;\n  \n  if (param_4 != 0) {\n    pcVar2 = param_3;\n    do {\n      cVar1 = *pcVar2;\n      pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    FUN_00420320((uint *)(param_3 + param_4),(uint *)param_3,\n                 (uint)(pcVar2 + (1 - (int)(param_3 + 1))));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_fp_format",
      "entry": "0042a25f",
      "c": "\n/* Library Function - Single Match\n    ___acrt_fp_format\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\n___acrt_fp_format(double *param_1,char *param_2,uint param_3,char *param_4,uint param_5,int param_6,\n                 int param_7,uint param_8,undefined4 param_9,__crt_locale_pointers *param_10)\n\n{\n  bool bVar1;\n  int *piVar2;\n  __acrt_fp_class _Var3;\n  int iVar4;\n  uint uVar5;\n  bool local_8;\n  \n  if (param_2 == (char *)0x0) {\n    piVar2 = __errno();\n    iVar4 = 0x16;\n    *piVar2 = 0x16;\n    FUN_00429087();\n  }\n  else if (((param_3 == 0) || (param_4 == (char *)0x0)) || (param_5 == 0)) {\n    piVar2 = __errno();\n    iVar4 = 0x16;\n    *piVar2 = 0x16;\n    FUN_00429087();\n  }\n  else {\n    if (((param_6 == 0x41) || (param_6 == 0x45)) ||\n       ((param_6 == 0x46 || (local_8 = false, param_6 == 0x47)))) {\n      local_8 = true;\n    }\n    if (((param_8 & 8) == 0) && (_Var3 = __acrt_fp_classify(param_1), _Var3 != 0)) {\n      bVar1 = __acrt_fp_is_negative(param_1);\n      iVar4 = fp_format_nan_or_infinity(_Var3,bVar1,param_2,param_3,local_8);\n    }\n    else {\n      if ((param_8 & 0x10) == 0) {\n        uVar5 = 2;\n      }\n      else {\n        uVar5 = 3;\n      }\n      if (param_6 < 0x62) {\n        if ((param_6 == 0x61) || (param_6 == 0x41)) {\n          iVar4 = fp_format_a(param_1,param_2,param_3,param_4,param_5,param_7,local_8,uVar5,param_10\n                             );\n          return iVar4;\n        }\n        iVar4 = param_6 + -0x45;\n      }\n      else {\n        iVar4 = param_6 + -0x65;\n      }\n      if (iVar4 == 0) {\n        iVar4 = fp_format_e(param_1,param_2,param_3,param_4,param_5,param_7,local_8,uVar5,param_10);\n      }\n      else if (iVar4 == 1) {\n        iVar4 = fp_format_f(param_1,param_2,param_3,param_4,param_5,param_7,param_10);\n      }\n      else {\n        iVar4 = fp_format_g(param_1,param_2,param_3,param_4,param_5,param_7,local_8,uVar5,param_10);\n      }\n    }\n  }\n  return iVar4;\n}\n\n"
    },
    {
      "name": "__fileno",
      "entry": "0042a3a9",
      "c": "\n/* Library Function - Single Match\n    __fileno\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __fileno(FILE *_File)\n\n{\n  int *piVar1;\n  \n  if (_File == (FILE *)0x0) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n    return -1;\n  }\n  return _File->_file;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_stdio",
      "entry": "0042a3d0",
      "c": "\n/* Library Function - Single Match\n    ___acrt_initialize_stdio\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 ___acrt_initialize_stdio(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined **ppuVar3;\n  \n  uVar2 = 3;\n  if (DAT_00462274 == 0) {\n    uVar2 = 0x200;\n  }\n  else if (2 < (int)DAT_00462274) goto LAB_0042a3ef;\n  DAT_00462274 = uVar2;\nLAB_0042a3ef:\n  DAT_00462278 = __calloc_base(DAT_00462274,4);\n  FID_conflict__free((void *)0x0);\n  if (DAT_00462278 == (LPVOID)0x0) {\n    DAT_00462274 = 3;\n    DAT_00462278 = __calloc_base(3,4);\n    FID_conflict__free((void *)0x0);\n    if (DAT_00462278 == (LPVOID)0x0) {\n      return 0xffffffff;\n    }\n  }\n  uVar2 = 0;\n  ppuVar3 = (undefined **)&DAT_0043e800;\n  do {\n    ___acrt_InitializeCriticalSectionEx_12((LPCRITICAL_SECTION)(ppuVar3 + 8),4000,0);\n    *(undefined ***)((int)DAT_00462278 + uVar2 * 4) = ppuVar3;\n    iVar1 = *(int *)((&DAT_00462290)[(int)uVar2 >> 6] + 0x18 + (uVar2 & 0x3f) * 0x30);\n    if (((iVar1 == -1) || (iVar1 == -2)) || (iVar1 == 0)) {\n      ppuVar3[4] = (undefined *)0xfffffffe;\n    }\n    ppuVar3 = ppuVar3 + 0xe;\n    uVar2 = uVar2 + 1;\n  } while (ppuVar3 != &PTR_DAT_0043e8a8);\n  return 0;\n}\n\n"
    },
    {
      "name": "___acrt_uninitialize_stdio",
      "entry": "0042a4a0",
      "c": "\n/* Library Function - Single Match\n    ___acrt_uninitialize_stdio\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid ___acrt_uninitialize_stdio(void)\n\n{\n  int iVar1;\n  \n  __flushall();\n  __fcloseall();\n  iVar1 = 0;\n  do {\n    ___acrt_stdio_free_buffer_nolock(*(undefined4 **)(iVar1 + (int)DAT_00462278));\n    DeleteCriticalSection((LPCRITICAL_SECTION)(*(int *)(iVar1 + (int)DAT_00462278) + 0x20));\n    iVar1 = iVar1 + 4;\n  } while (iVar1 != 0xc);\n  FID_conflict__free(DAT_00462278);\n  DAT_00462278 = (void *)0x0;\n  return;\n}\n\n"
    },
    {
      "name": "__lock_file",
      "entry": "0042a4ec",
      "c": "\n/* Library Function - Single Match\n    __lock_file\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __lock_file(FILE *_File)\n\n{\n  EnterCriticalSection((LPCRITICAL_SECTION)(_File + 1));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042a500",
      "entry": "0042a500",
      "c": "\nvoid __cdecl FUN_0042a500(int param_1)\n\n{\n  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 0x20));\n  return;\n}\n\n"
    },
    {
      "name": "__get_printf_count_output",
      "entry": "0042a514",
      "c": "\n/* Library Function - Single Match\n    __get_printf_count_output\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nint __cdecl __get_printf_count_output(void)\n\n{\n  return (uint)(DAT_0046227c == (DAT_0043e7ac | 1));\n}\n\n"
    },
    {
      "name": "initialize_inherited_file_handles_nolock",
      "entry": "0042a529",
      "c": "\n/* Library Function - Single Match\n    void __cdecl initialize_inherited_file_handles_nolock(void)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl initialize_inherited_file_handles_nolock(void)\n\n{\n  HANDLE hFile;\n  DWORD DVar1;\n  int iVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint uVar5;\n  _STARTUPINFOW local_4c;\n  byte *local_8;\n  \n  GetStartupInfoW(&local_4c);\n  if ((local_4c.cbReserved2 != 0) && ((uint *)local_4c.lpReserved2 != (uint *)0x0)) {\n    uVar4 = *(uint *)local_4c.lpReserved2;\n    puVar3 = (uint *)((int)local_4c.lpReserved2 + 4);\n    local_8 = (byte *)((int)puVar3 + uVar4);\n    if (0x1fff < (int)uVar4) {\n      uVar4 = 0x2000;\n    }\n    ___acrt_lowio_ensure_fh_exists(uVar4);\n    if ((int)DAT_00462490 < (int)uVar4) {\n      uVar4 = DAT_00462490;\n    }\n    uVar5 = 0;\n    if (uVar4 != 0) {\n      do {\n        hFile = *(HANDLE *)local_8;\n        if ((((hFile != (HANDLE)0xffffffff) && (hFile != (HANDLE)0xfffffffe)) &&\n            ((*puVar3 & 1) != 0)) &&\n           (((*puVar3 & 8) != 0 || (DVar1 = GetFileType(hFile), DVar1 != 0)))) {\n          iVar2 = (uVar5 & 0x3f) * 0x30 + (&DAT_00462290)[(int)uVar5 >> 6];\n          *(undefined4 *)(iVar2 + 0x18) = *(undefined4 *)local_8;\n          *(byte *)(iVar2 + 0x28) = (byte)*puVar3;\n        }\n        uVar5 = uVar5 + 1;\n        local_8 = local_8 + 4;\n        puVar3 = (uint *)((int)puVar3 + 1);\n      } while (uVar5 != uVar4);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "initialize_stdio_handles_nolock",
      "entry": "0042a5df",
      "c": "\n/* Library Function - Single Match\n    void __cdecl initialize_stdio_handles_nolock(void)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl initialize_stdio_handles_nolock(void)\n\n{\n  HANDLE hFile;\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  DWORD nStdHandle;\n  \n  uVar3 = 0;\n  do {\n    iVar2 = (uVar3 & 0x3f) * 0x30 + (&DAT_00462290)[(int)uVar3 >> 6];\n    if ((*(int *)(iVar2 + 0x18) == -1) || (*(int *)(iVar2 + 0x18) == -2)) {\n      *(undefined1 *)(iVar2 + 0x28) = 0x81;\n      if (uVar3 == 0) {\n        nStdHandle = 0xfffffff6;\n      }\n      else if (uVar3 == 1) {\n        nStdHandle = 0xfffffff5;\n      }\n      else {\n        nStdHandle = 0xfffffff4;\n      }\n      hFile = GetStdHandle(nStdHandle);\n      if ((hFile == (HANDLE)0xffffffff) || (hFile == (HANDLE)0x0)) {\n        uVar1 = 0;\n      }\n      else {\n        uVar1 = GetFileType(hFile);\n      }\n      if (uVar1 == 0) {\n        *(byte *)(iVar2 + 0x28) = *(byte *)(iVar2 + 0x28) | 0x40;\n        *(undefined4 *)(iVar2 + 0x18) = 0xfffffffe;\n        if (DAT_00462278 != 0) {\n          *(undefined4 *)(*(int *)(DAT_00462278 + uVar3 * 4) + 0x10) = 0xfffffffe;\n        }\n      }\n      else {\n        *(HANDLE *)(iVar2 + 0x18) = hFile;\n        if ((uVar1 & 0xff) == 2) {\n          *(byte *)(iVar2 + 0x28) = *(byte *)(iVar2 + 0x28) | 0x40;\n        }\n        else if ((uVar1 & 0xff) == 3) {\n          *(byte *)(iVar2 + 0x28) = *(byte *)(iVar2 + 0x28) | 8;\n        }\n      }\n    }\n    else {\n      *(byte *)(iVar2 + 0x28) = *(byte *)(iVar2 + 0x28) | 0x80;\n    }\n    uVar3 = uVar3 + 1;\n  } while (uVar3 != 3);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_lowio",
      "entry": "0042a6a0",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    ___acrt_initialize_lowio\n   \n   Library: Visual Studio 2015 Release */\n\nbool ___acrt_initialize_lowio(void)\n\n{\n  int iVar1;\n  \n  ___acrt_lock(7);\n  iVar1 = ___acrt_lowio_ensure_fh_exists(0);\n  if (iVar1 == 0) {\n    initialize_inherited_file_handles_nolock();\n    initialize_stdio_handles_nolock();\n  }\n  FUN_0042a6ed();\n  return iVar1 == 0;\n}\n\n"
    },
    {
      "name": "FUN_0042a6ed",
      "entry": "0042a6ed",
      "c": "\nvoid FUN_0042a6ed(void)\n\n{\n  ___acrt_unlock(7);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_uninitialize_lowio",
      "entry": "0042a700",
      "c": "\n/* Library Function - Single Match\n    ___acrt_uninitialize_lowio\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 ___acrt_uninitialize_lowio(void)\n\n{\n  LPCRITICAL_SECTION p_Var1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  do {\n    p_Var1 = *(LPCRITICAL_SECTION *)((int)&DAT_00462290 + uVar2);\n    if (p_Var1 != (LPCRITICAL_SECTION)0x0) {\n      p_Var1 = (LPCRITICAL_SECTION)___acrt_lowio_destroy_handle_array(p_Var1);\n      *(undefined4 *)((int)&DAT_00462290 + uVar2) = 0;\n    }\n    uVar2 = uVar2 + 4;\n  } while (uVar2 < 0x200);\n  return CONCAT31((int3)((uint)p_Var1 >> 8),1);\n}\n\n"
    },
    {
      "name": "__acrt_stdio_free_stream",
      "entry": "0042a72c",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __acrt_stdio_free_stream(class __crt_stdio_stream)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __acrt_stdio_free_stream(undefined4 *param_1)\n\n{\n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  param_1[4] = 0xffffffff;\n  param_1[5] = 0;\n  param_1[6] = 0;\n  param_1[7] = 0;\n  LOCK();\n  param_1[3] = 0;\n  UNLOCK();\n  return;\n}\n\n"
    },
    {
      "name": "___pctype_func",
      "entry": "0042a767",
      "c": "\n/* Library Function - Single Match\n    ___pctype_func\n   \n   Library: Visual Studio 2015 Release */\n\nushort * __cdecl ___pctype_func(void)\n\n{\n  __acrt_ptd *p_Var1;\n  undefined4 *local_8;\n  \n  p_Var1 = ___acrt_getptd();\n  local_8 = *(undefined4 **)(p_Var1 + 0x4c);\n  ___acrt_update_locale_info((int)p_Var1,(int *)&local_8);\n  return (ushort *)*local_8;\n}\n\n"
    },
    {
      "name": "_iswctype",
      "entry": "0042a78d",
      "c": "\n/* Library Function - Single Match\n    _iswctype\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _iswctype(wint_t _C,wctype_t _Type)\n\n{\n  uint uVar1;\n  BOOL BVar2;\n  uint in_ECX;\n  WCHAR local_c;\n  undefined2 uStack_a;\n  uint local_8;\n  \n  if (_C == 0xffff) {\nLAB_0042a7a2:\n    uVar1 = 0;\n  }\n  else {\n    if (_C < 0x100) {\n      local_8._0_2_ = *(ushort *)(PTR_DAT_0043e96c + (uint)_C * 2);\n    }\n    else {\n      _local_c = CONCAT22((short)(in_ECX >> 0x10),_C);\n      local_8 = in_ECX & 0xffff0000;\n      BVar2 = GetStringTypeW(1,&local_c,1,(LPWORD)&local_8);\n      if (BVar2 == 0) goto LAB_0042a7a2;\n    }\n    uVar1 = (uint)((ushort)local_8 & _Type);\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "__isctype_l",
      "entry": "0042a7ec",
      "c": "\n/* Library Function - Single Match\n    __isctype_l\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __isctype_l(int _C,int _Type,_locale_t _Locale)\n\n{\n  int iVar1;\n  int local_24;\n  localeinfo_struct local_20;\n  char local_18;\n  CHAR local_14;\n  CHAR local_13;\n  undefined1 local_12;\n  WORD local_10 [4];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_24,(__crt_locale_pointers *)_Locale);\n  if (0x100 < _C + 1U) {\n    iVar1 = __isleadbyte_l(_C >> 8 & 0xff,&local_20);\n    if (iVar1 == 0) {\n      local_13 = '\\0';\n      iVar1 = 1;\n      local_14 = (CHAR)_C;\n    }\n    else {\n      local_12 = 0;\n      iVar1 = 2;\n      local_14 = (CHAR)((uint)_C >> 8);\n      local_13 = (CHAR)_C;\n    }\n    local_10[0] = 0;\n    local_10[1] = 0;\n    local_10[2] = 0;\n    iVar1 = ___acrt_GetStringTypeA\n                      ((__crt_locale_pointers *)&local_20,1,&local_14,iVar1,local_10,\n                       (local_20.locinfo)->lc_collate_cp,1);\n    if (iVar1 == 0) {\n      if (local_18 != '\\0') {\n        *(uint *)(local_24 + 0x350) = *(uint *)(local_24 + 0x350) & 0xfffffffd;\n      }\n      goto LAB_0042a8af;\n    }\n  }\n  if (local_18 != '\\0') {\n    *(uint *)(local_24 + 0x350) = *(uint *)(local_24 + 0x350) & 0xfffffffd;\n  }\nLAB_0042a8af:\n  iVar1 = FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "_wcscpy_s",
      "entry": "0042a8be",
      "c": "\n/* Library Function - Single Match\n    _wcscpy_s\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nerrno_t __cdecl _wcscpy_s(wchar_t *_Dst,rsize_t _SizeInWords,wchar_t *_Src)\n\n{\n  wchar_t wVar1;\n  int *piVar2;\n  wchar_t *pwVar3;\n  int iVar4;\n  \n  if ((_Dst != (wchar_t *)0x0) && (_SizeInWords != 0)) {\n    if (_Src != (wchar_t *)0x0) {\n      pwVar3 = _Dst;\n      do {\n        wVar1 = *(wchar_t *)(((int)_Src - (int)_Dst) + (int)pwVar3);\n        *pwVar3 = wVar1;\n        pwVar3 = pwVar3 + 1;\n        if (wVar1 == L'\\0') break;\n        _SizeInWords = _SizeInWords - 1;\n      } while (_SizeInWords != 0);\n      if (_SizeInWords != 0) {\n        return 0;\n      }\n      *_Dst = L'\\0';\n      piVar2 = __errno();\n      iVar4 = 0x22;\n      goto LAB_0042a8e5;\n    }\n    *_Dst = L'\\0';\n  }\n  piVar2 = __errno();\n  iVar4 = 0x16;\nLAB_0042a8e5:\n  *piVar2 = iVar4;\n  FUN_00429087();\n  return iVar4;\n}\n\n"
    },
    {
      "name": "__isleadbyte_l",
      "entry": "0042a922",
      "c": "\n/* Library Function - Single Match\n    __isleadbyte_l\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __isleadbyte_l(int _C,_locale_t _Locale)\n\n{\n  ushort uVar1;\n  int local_14;\n  int *local_10;\n  char local_8;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,(__crt_locale_pointers *)_Locale);\n  uVar1 = *(ushort *)(*local_10 + (_C & 0xffU) * 2);\n  if (local_8 != '\\0') {\n    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n  }\n  return uVar1 & 0x8000;\n}\n\n"
    },
    {
      "name": "__acrt_LCMapStringA_stat",
      "entry": "0042a95b",
      "c": "\n/* WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe */\n/* Library Function - Single Match\n    int __cdecl __acrt_LCMapStringA_stat(struct __crt_locale_pointers *,wchar_t const *,unsigned\n   long,char const *,int,char *,int,int,int)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\n__acrt_LCMapStringA_stat\n          (__crt_locale_pointers *param_1,wchar_t *param_2,ulong param_3,char *param_4,int param_5,\n          char *param_6,int param_7,int param_8,int param_9)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  LPCWSTR pWVar5;\n  LPCWSTR lpWideCharStr;\n  LPCWSTR pWVar6;\n  \n  uVar2 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  iVar4 = param_5;\n  if (0 < param_5) {\n    iVar3 = ___strncnt(param_4,param_5);\n    iVar4 = iVar3 + 1;\n    if (param_5 <= iVar3) {\n      iVar4 = iVar3;\n    }\n  }\n  if (param_8 == 0) {\n    param_8 = *(int *)(*(int *)param_1 + 8);\n  }\n  iVar3 = MultiByteToWideChar(param_8,(uint)(param_9 != 0) * 8 + 1,param_4,iVar4,(LPWSTR)0x0,0);\n  if (iVar3 == 0) goto LAB_0042ab53;\n  uVar1 = iVar3 * 2;\n  if ((uVar1 + 8 & -(uint)(uVar1 < uVar1 + 8)) == 0) {\n    lpWideCharStr = (LPCWSTR)0x0;\nLAB_0042aa28:\n    if (((lpWideCharStr != (LPCWSTR)0x0) &&\n        (iVar4 = MultiByteToWideChar(param_8,1,param_4,iVar4,lpWideCharStr,iVar3), iVar4 != 0)) &&\n       (iVar4 = ___acrt_LCMapStringEx_36(param_2,param_3,lpWideCharStr,iVar3,(LPWSTR)0x0,0,0,0,0),\n       iVar4 != 0)) {\n      if ((param_3 & 0x400) == 0) {\n        uVar1 = iVar4 * 2;\n        if ((uVar1 + 8 & -(uint)(uVar1 < uVar1 + 8)) == 0) {\n          pWVar5 = (LPCWSTR)0x0;\nLAB_0042ab05:\n          if ((pWVar5 != (LPCWSTR)0x0) &&\n             (iVar3 = ___acrt_LCMapStringEx_36\n                                (param_2,param_3,lpWideCharStr,iVar3,pWVar5,iVar4,0,0,0), iVar3 != 0\n             )) {\n            if (param_7 == 0) {\n              param_7 = 0;\n              param_6 = (LPSTR)0x0;\n            }\n            iVar4 = WideCharToMultiByte(param_8,0,pWVar5,iVar4,param_6,param_7,(LPCSTR)0x0,\n                                        (LPBOOL)0x0);\n            if (iVar4 != 0) {\n              __freea_crt((int)pWVar5);\n              goto LAB_0042ab4a;\n            }\n          }\n        }\n        else if ((-(uint)(uVar1 < uVar1 + 8) & uVar1 + 8) < 0x401) {\n          pWVar6 = (LPCWSTR)&stack0xffffffe8;\n          pWVar5 = (LPCWSTR)&stack0xffffffe8;\n          if (&stack0x00000000 != (undefined1 *)0x18) {\nLAB_0042aafe:\n            pWVar5 = pWVar6 + 4;\n            goto LAB_0042ab05;\n          }\n        }\n        else {\n          pWVar5 = (LPCWSTR)__malloc_base(-(uint)(uVar1 < uVar1 + 8) & uVar1 + 8);\n          if (pWVar5 != (LPCWSTR)0x0) {\n            pWVar5[0] = L'\\xdddd';\n            pWVar5[1] = L'\\0';\n            pWVar6 = pWVar5;\n            goto LAB_0042aafe;\n          }\n        }\n        __freea_crt((int)pWVar5);\n      }\n      else if ((param_7 != 0) && (iVar4 <= param_7)) {\n        ___acrt_LCMapStringEx_36(param_2,param_3,lpWideCharStr,iVar3,(LPWSTR)param_6,param_7,0,0,0);\n      }\n    }\n  }\n  else if ((-(uint)(uVar1 < uVar1 + 8) & uVar1 + 8) < 0x401) {\n    pWVar5 = (LPCWSTR)&stack0xffffffe8;\n    lpWideCharStr = (LPCWSTR)&stack0xffffffe8;\n    if (&stack0x00000000 != (undefined1 *)0x18) {\nLAB_0042aa21:\n      lpWideCharStr = pWVar5 + 4;\n      goto LAB_0042aa28;\n    }\n  }\n  else {\n    pWVar5 = (LPCWSTR)__malloc_base(-(uint)(uVar1 < uVar1 + 8) & uVar1 + 8);\n    lpWideCharStr = pWVar5;\n    if (pWVar5 != (LPCWSTR)0x0) {\n      pWVar5[0] = L'\\xdddd';\n      pWVar5[1] = L'\\0';\n      goto LAB_0042aa21;\n    }\n  }\nLAB_0042ab4a:\n  __freea_crt((int)lpWideCharStr);\nLAB_0042ab53:\n  iVar4 = FUN_0041fbbc(uVar2 ^ (uint)&stack0xfffffffc);\n  return iVar4;\n}\n\n"
    },
    {
      "name": "___acrt_LCMapStringA",
      "entry": "0042ab78",
      "c": "\n/* Library Function - Single Match\n    ___acrt_LCMapStringA\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n___acrt_LCMapStringA\n          (__crt_locale_pointers *param_1,wchar_t *param_2,ulong param_3,char *param_4,int param_5,\n          char *param_6,int param_7,int param_8,int param_9)\n\n{\n  int local_14;\n  __crt_locale_pointers local_10 [8];\n  char local_8;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,param_1);\n  __acrt_LCMapStringA_stat(local_10,param_2,param_3,param_4,param_5,param_6,param_7,param_8,param_9)\n  ;\n  if (local_8 != '\\0') {\n    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__freea_crt",
      "entry": "0042abc3",
      "c": "\n/* Library Function - Single Match\n    __freea_crt\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __freea_crt(int param_1)\n\n{\n  if ((param_1 != 0) && (*(int *)(param_1 + -8) == 0xdddd)) {\n    FID_conflict__free((int *)(param_1 + -8));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_locks",
      "entry": "0042abf0",
      "c": "\n/* Library Function - Single Match\n    ___acrt_initialize_locks\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 ___acrt_initialize_locks(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  LPCRITICAL_SECTION p_Var3;\n  \n  p_Var3 = (LPCRITICAL_SECTION)&DAT_00462498;\n  uVar2 = 0;\n  do {\n    iVar1 = ___acrt_InitializeCriticalSectionEx_12(p_Var3,4000,0);\n    if (iVar1 == 0) {\n      uVar2 = ___acrt_uninitialize_locks();\n      return uVar2 & 0xffffff00;\n    }\n    DAT_004625d0 = DAT_004625d0 + 1;\n    uVar2 = uVar2 + 0x18;\n    p_Var3 = p_Var3 + 1;\n  } while (uVar2 < 0x138);\n  return CONCAT31((int3)((uint)iVar1 >> 8),1);\n}\n\n"
    },
    {
      "name": "___acrt_lock",
      "entry": "0042ac31",
      "c": "\n/* Library Function - Single Match\n    ___acrt_lock\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_lock(int param_1)\n\n{\n  EnterCriticalSection((LPCRITICAL_SECTION)(&DAT_00462498 + param_1 * 0x18));\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_uninitialize_locks",
      "entry": "0042ac50",
      "c": "\n/* Library Function - Single Match\n    ___acrt_uninitialize_locks\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 ___acrt_uninitialize_locks(void)\n\n{\n  undefined4 in_EAX;\n  undefined4 extraout_EAX;\n  int iVar1;\n  LPCRITICAL_SECTION lpCriticalSection;\n  \n  if (DAT_004625d0 != 0) {\n    lpCriticalSection = (LPCRITICAL_SECTION)(&DAT_00462480 + DAT_004625d0 * 0x18);\n    iVar1 = DAT_004625d0;\n    do {\n      DeleteCriticalSection(lpCriticalSection);\n      DAT_004625d0 = DAT_004625d0 + -1;\n      lpCriticalSection = lpCriticalSection + -1;\n      iVar1 = iVar1 + -1;\n      in_EAX = extraout_EAX;\n    } while (iVar1 != 0);\n  }\n  return CONCAT31((int3)((uint)in_EAX >> 8),1);\n}\n\n"
    },
    {
      "name": "___acrt_unlock",
      "entry": "0042ac81",
      "c": "\n/* Library Function - Single Match\n    ___acrt_unlock\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_unlock(int param_1)\n\n{\n  LeaveCriticalSection((LPCRITICAL_SECTION)(&DAT_00462498 + param_1 * 0x18));\n  return;\n}\n\n"
    },
    {
      "name": "try_get_function",
      "entry": "0042ac98",
      "c": "\n/* Library Function - Single Match\n    void * __cdecl try_get_function(enum `anonymous namespace'::function_id,char const * const,enum\n   A0x9b56aee1::module_id const * const,enum A0x9b56aee1::module_id const * const)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid * __cdecl\ntry_get_function(function_id param_1,char *param_2,module_id *param_3,module_id *param_4)\n\n{\n  uint *puVar1;\n  HMODULE hModule;\n  FARPROC pFVar2;\n  uint uVar3;\n  byte bVar4;\n  void *pvVar5;\n  \n  puVar1 = &DAT_00462628 + param_1;\n  bVar4 = (byte)DAT_0043e7ac & 0x1f;\n  pvVar5 = (void *)((DAT_0043e7ac ^ *puVar1) >> bVar4 | (DAT_0043e7ac ^ *puVar1) << 0x20 - bVar4);\n  if (pvVar5 != (void *)0xffffffff) {\n    if (pvVar5 != (void *)0x0) {\n      return pvVar5;\n    }\n    if (param_3 != param_4) {\n      do {\n        hModule = try_get_module(*param_3);\n        if (hModule != (HMODULE)0x0) goto LAB_0042acf0;\n        param_3 = param_3 + 1;\n      } while (param_3 != param_4);\n    }\n    hModule = (HMODULE)0x0;\nLAB_0042acf0:\n    if ((hModule != (HMODULE)0x0) &&\n       (pFVar2 = GetProcAddress(hModule,param_2), pFVar2 != (FARPROC)0x0)) {\n      uVar3 = __crt_fast_encode_pointer<>((uint)pFVar2);\n      LOCK();\n      *puVar1 = uVar3;\n      UNLOCK();\n      return pFVar2;\n    }\n    bVar4 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n    LOCK();\n    *puVar1 = (0xffffffffU >> bVar4 | -1 << 0x20 - bVar4) ^ DAT_0043e7ac;\n    UNLOCK();\n  }\n  return (void *)0x0;\n}\n\n"
    },
    {
      "name": "try_get_module",
      "entry": "0042ad34",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    struct HINSTANCE__ * __cdecl try_get_module(enum `anonymous namespace'::module_id)\n    struct HINSTANCE__ * __cdecl try_get_module(enum `anonymous namespace'::module_id)\n   \n   Library: Visual Studio 2015 Release */\n\nHMODULE __cdecl try_get_module(int param_1)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  LPCWSTR lpLibFileName;\n  HMODULE hLibModule;\n  DWORD DVar3;\n  \n  puVar1 = &DAT_004625d8 + param_1;\n  uVar2 = *puVar1;\n  if (uVar2 == 0) {\n    lpLibFileName = (LPCWSTR)(&PTR_u_api_ms_win_appmodel_runtime_l1_1_004373f0)[param_1];\n    hLibModule = LoadLibraryExW(lpLibFileName,(HANDLE)0x0,0x800);\n    if (hLibModule == (HMODULE)0x0) {\n      DVar3 = GetLastError();\n      if (DVar3 == 0x57) {\n        hLibModule = LoadLibraryExW(lpLibFileName,(HANDLE)0x0,0);\n      }\n      else {\n        hLibModule = (HMODULE)0x0;\n      }\n      if (hLibModule == (HMODULE)0x0) {\n        LOCK();\n        *puVar1 = 0xffffffff;\n        UNLOCK();\n        return (HMODULE)0x0;\n      }\n    }\n    LOCK();\n    uVar2 = *puVar1;\n    *puVar1 = (uint)hLibModule;\n    UNLOCK();\n    if (uVar2 != 0) {\n      FreeLibrary(hLibModule);\n    }\n  }\n  else {\n    hLibModule = (HMODULE)(-(uint)(uVar2 != 0xffffffff) & uVar2);\n  }\n  return hLibModule;\n}\n\n"
    },
    {
      "name": "___acrt_FlsAlloc@4",
      "entry": "0042adaf",
      "c": "\n/* Library Function - Single Match\n    ___acrt_FlsAlloc@4\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_FlsAlloc_4(undefined4 param_1)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)try_get_function(3,\"FlsAlloc\",(module_id *)&DAT_00437938,(module_id *)\"FlsAlloc\")\n  ;\n  if (pcVar2 == (code *)0x0) {\n    TlsAlloc();\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1);\n    (*pcVar2)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_FlsFree@4",
      "entry": "0042ae05",
      "c": "\n/* Library Function - Single Match\n    ___acrt_FlsFree@4\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_FlsFree_4(DWORD param_1)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)try_get_function(4,\"FlsFree\",(module_id *)&DAT_0043794c,(module_id *)\"FlsFree\");\n  if (pcVar2 == (code *)0x0) {\n    TlsFree(param_1);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar2)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_FlsGetValue@4",
      "entry": "0042ae5b",
      "c": "\n/* Library Function - Single Match\n    ___acrt_FlsGetValue@4\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_FlsGetValue_4(DWORD param_1)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)try_get_function(5,\"FlsGetValue\",(module_id *)&DAT_0043795c,\n                                    (module_id *)\"FlsGetValue\");\n  if (pcVar2 == (code *)0x0) {\n    TlsGetValue(param_1);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar2)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_FlsSetValue@8",
      "entry": "0042aeb1",
      "c": "\n/* Library Function - Single Match\n    ___acrt_FlsSetValue@8\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_FlsSetValue_8(DWORD param_1,LPVOID param_2)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)try_get_function(6,\"FlsSetValue\",(module_id *)&DAT_00437970,\n                                    (module_id *)\"FlsSetValue\");\n  if (pcVar2 == (code *)0x0) {\n    TlsSetValue(param_1,param_2);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)();\n    (*pcVar2)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_InitializeCriticalSectionEx@12",
      "entry": "0042af0a",
      "c": "\n/* Library Function - Single Match\n    ___acrt_InitializeCriticalSectionEx@12\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_InitializeCriticalSectionEx_12\n               (LPCRITICAL_SECTION param_1,DWORD param_2,undefined4 param_3)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)try_get_function(0x14,\"InitializeCriticalSectionEx\",(module_id *)&DAT_004379a0,\n                                    (module_id *)\"InitializeCriticalSectionEx\");\n  if (pcVar2 == (code *)0x0) {\n    InitializeCriticalSectionAndSpinCount(param_1,param_2);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1,param_2,param_3);\n    (*pcVar2)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_LCMapStringEx@36",
      "entry": "0042af6c",
      "c": "\n/* Library Function - Single Match\n    ___acrt_LCMapStringEx@36\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_LCMapStringEx_36\n               (wchar_t *param_1,DWORD param_2,LPCWSTR param_3,int param_4,LPWSTR param_5,\n               int param_6,undefined4 param_7,undefined4 param_8,undefined4 param_9)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  LCID Locale;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)try_get_function(0x16,\"LCMapStringEx\",(module_id *)&DAT_004379c4,\n                                    (module_id *)\"LCMapStringEx\");\n  if (pcVar2 == (code *)0x0) {\n    Locale = ___acrt_LocaleNameToLCID_8(param_1,0);\n    LCMapStringW(Locale,param_2,param_3,param_4,param_5,param_6);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)\n              (param_1,param_2,param_3,param_4,param_5,param_6,param_7,param_8,param_9);\n    (*pcVar2)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_LocaleNameToLCID@8",
      "entry": "0042aff4",
      "c": "\n/* Library Function - Single Match\n    ___acrt_LocaleNameToLCID@8\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_LocaleNameToLCID_8(wchar_t *param_1,undefined4 param_2)\n\n{\n  uint uVar1;\n  code *pcVar2;\n  \n  uVar1 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  pcVar2 = (code *)try_get_function(0x18,\"LocaleNameToLCID\",(module_id *)&DAT_004379dc,\n                                    (module_id *)\"LocaleNameToLCID\");\n  if (pcVar2 == (code *)0x0) {\n    ___acrt_DownlevelLocaleNameToLCID(param_1);\n  }\n  else {\n    (*(code *)PTR_guard_check_icall_00433278)(param_1,param_2);\n    (*pcVar2)();\n  }\n  FUN_0041fbbc(uVar1 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_winapi_thunks",
      "entry": "0042b050",
      "c": "\n/* Library Function - Single Match\n    ___acrt_initialize_winapi_thunks\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 ___acrt_initialize_winapi_thunks(void)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int iVar3;\n  uint *puVar4;\n  \n  bVar1 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n  uVar2 = (0U >> bVar1 | 0 << 0x20 - bVar1) ^ DAT_0043e7ac;\n  puVar4 = &DAT_00462628;\n  for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n    *puVar4 = uVar2;\n    puVar4 = puVar4 + 1;\n  }\n  return CONCAT31((int3)(uVar2 >> 8),1);\n}\n\n"
    },
    {
      "name": "___acrt_is_packaged_app",
      "entry": "0042b076",
      "c": "\n/* Library Function - Single Match\n    ___acrt_is_packaged_app\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __fastcall ___acrt_is_packaged_app(undefined4 param_1)\n\n{\n  code *pcVar1;\n  int iVar2;\n  undefined4 local_c;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  local_c = param_1;\n  if (DAT_004626a8 == 0) {\n    pcVar1 = (code *)try_get_function(8,\"GetCurrentPackageId\",(module_id *)&DAT_00437984,\n                                      (module_id *)\"GetCurrentPackageId\");\n    if (pcVar1 != (code *)0x0) {\n      local_c = 0;\n      (*(code *)PTR_guard_check_icall_00433278)(&local_c,0);\n      iVar2 = (*pcVar1)();\n      if (iVar2 == 0x7a) {\n        LOCK();\n        DAT_004626a8 = 1;\n        UNLOCK();\n        goto LAB_0042b0ef;\n      }\n    }\n    LOCK();\n    DAT_004626a8 = 2;\n    UNLOCK();\n  }\nLAB_0042b0ef:\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_uninitialize_winapi_thunks",
      "entry": "0042b100",
      "c": "\n/* Library Function - Single Match\n    ___acrt_uninitialize_winapi_thunks\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined1 __cdecl ___acrt_uninitialize_winapi_thunks(char param_1)\n\n{\n  int *piVar1;\n  \n  if (param_1 == '\\0') {\n    piVar1 = &DAT_004625d8;\n    do {\n      if (*piVar1 != 0) {\n        if (*piVar1 != -1) {\n          FreeLibrary((HMODULE)*piVar1);\n        }\n        *piVar1 = 0;\n      }\n      piVar1 = piVar1 + 1;\n    } while (piVar1 != &DAT_00462628);\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "__calloc_base",
      "entry": "0042b136",
      "c": "\n/* Library Function - Single Match\n    __calloc_base\n   \n   Library: Visual Studio 2015 Release */\n\nLPVOID __cdecl __calloc_base(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  LPVOID pvVar2;\n  int *piVar3;\n  size_t dwBytes;\n  \n  if ((param_1 == 0) || (param_2 <= 0xffffffe0 / param_1)) {\n    dwBytes = param_1 * param_2;\n    if (dwBytes == 0) {\n      dwBytes = 1;\n    }\n    do {\n      pvVar2 = HeapAlloc(DAT_004626e4,8,dwBytes);\n      if (pvVar2 != (LPVOID)0x0) {\n        return pvVar2;\n      }\n      iVar1 = FUN_00428c34();\n    } while ((iVar1 != 0) && (iVar1 = __callnewh(dwBytes), iVar1 != 0));\n  }\n  piVar3 = __errno();\n  *piVar3 = 0xc;\n  return (LPVOID)0x0;\n}\n\n"
    },
    {
      "name": "FUN_0042b1a0",
      "entry": "0042b1a0",
      "c": "\nuint __cdecl FUN_0042b1a0(uint param_1,uint param_2)\n\n{\n  if (param_1 < param_2) {\n    return 0xffffffff;\n  }\n  return (uint)(param_2 < param_1);\n}\n\n"
    },
    {
      "name": "common_expand_argv_wildcards<char>",
      "entry": "0042b1b8",
      "c": "\n/* Library Function - Single Match\n    int __cdecl common_expand_argv_wildcards<char>(char * * const,char * * * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl common_expand_argv_wildcards<char>(char **param_1,char ***param_2)\n\n{\n  char *pcVar1;\n  char cVar2;\n  undefined4 *puVar3;\n  uint uVar4;\n  int *piVar5;\n  char *pcVar6;\n  int iVar7;\n  char **ppcVar8;\n  char *pcVar9;\n  undefined4 *puVar10;\n  undefined4 *puVar11;\n  undefined4 *local_24;\n  undefined4 *local_20;\n  undefined4 local_1c;\n  int local_18;\n  char **local_14;\n  char **local_10;\n  char *local_c;\n  undefined4 local_8;\n  \n  if (param_2 == (char ***)0x0) {\n    piVar5 = __errno();\n    iVar7 = 0x16;\n    *piVar5 = 0x16;\n    FUN_00429087();\n  }\n  else {\n    *param_2 = (char **)0x0;\n    local_24 = (undefined4 *)0x0;\n    local_20 = (undefined4 *)0x0;\n    local_1c = 0;\n    pcVar6 = *param_1;\n    puVar11 = local_24;\n    puVar3 = local_20;\n    while (local_24 = puVar11, local_20 = puVar3, pcVar6 != (char *)0x0) {\n      uVar4 = (uint)local_8 >> 0x18;\n      local_8 = (char *)CONCAT13((char)uVar4,0x3f2a);\n      pcVar6 = _strpbrk(*param_1,(char *)&local_8);\n      if (pcVar6 == (char *)0x0) {\n        iVar7 = copy_and_add_argument_to_buffer<char>\n                          (*param_1,(char *)0x0,0,(argument_list<char> *)&local_24);\n      }\n      else {\n        iVar7 = expand_argument_wildcards<char>(*param_1,pcVar6,(argument_list<char> *)&local_24);\n      }\n      if (iVar7 != 0) goto LAB_0042b32a;\n      param_1 = param_1 + 1;\n      puVar11 = local_24;\n      puVar3 = local_20;\n      pcVar6 = *param_1;\n    }\n    local_c = (char *)0x0;\n    local_8 = (char *)0x0;\n    local_10 = (char **)(((int)puVar3 - (int)puVar11 >> 2) + 1);\n    pcVar6 = (char *)(~-(uint)(puVar3 < puVar11) & ((int)puVar3 - (int)puVar11) + 3U >> 2);\n    if (pcVar6 != (char *)0x0) {\n      local_8 = (char *)0x0;\n      puVar10 = puVar11;\n      do {\n        pcVar9 = (char *)*puVar10;\n        pcVar1 = pcVar9 + 1;\n        do {\n          cVar2 = *pcVar9;\n          pcVar9 = pcVar9 + 1;\n        } while (cVar2 != '\\0');\n        local_8 = pcVar9 + (int)(local_8 + (1 - (int)pcVar1));\n        puVar10 = puVar10 + 1;\n        local_c = local_c + 1;\n      } while (local_c != pcVar6);\n    }\n    ppcVar8 = (char **)___acrt_allocate_buffer_for_argv((uint)local_10,(uint)local_8,1);\n    if (ppcVar8 == (char **)0x0) {\n      iVar7 = -1;\n    }\n    else {\n      local_10 = ppcVar8 + (int)local_10;\n      local_14 = local_10;\n      if (puVar11 != puVar3) {\n        local_18 = (int)ppcVar8 - (int)puVar11;\n        do {\n          local_c = (char *)*puVar11;\n          pcVar6 = local_c + 1;\n          do {\n            cVar2 = *local_c;\n            local_c = local_c + 1;\n          } while (cVar2 != '\\0');\n          local_c = local_c + (1 - (int)pcVar6);\n          iVar7 = FUN_0042f101((char *)local_10,\n                               (uint)((int)local_14 + ((int)local_8 - (int)local_10)),\n                               (char *)*puVar11,(uint)local_c);\n          if (iVar7 != 0) {\n                    /* WARNING: Subroutine does not return */\n            __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n          }\n          *(char ***)(local_18 + (int)puVar11) = local_10;\n          puVar11 = puVar11 + 1;\n          local_10 = (char **)((int)local_10 + (int)local_c);\n        } while (puVar11 != puVar3);\n      }\n      iVar7 = 0;\n      *param_2 = ppcVar8;\n    }\n    FID_conflict__free((void *)0x0);\nLAB_0042b32a:\n    _anon_FD16DE3C::argument_list<char>::~argument_list<char>((argument_list<char> *)&local_24);\n  }\n  return iVar7;\n}\n\n"
    },
    {
      "name": "copy_and_add_argument_to_buffer<char>",
      "entry": "0042b348",
      "c": "\n/* Library Function - Single Match\n    int __cdecl copy_and_add_argument_to_buffer<char>(char const * const,char const * const,unsigned\n   int,class `anonymous namespace'::argument_list<char> &)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\ncopy_and_add_argument_to_buffer<char>\n          (char *param_1,char *param_2,uint param_3,argument_list<char> *param_4)\n\n{\n  char cVar1;\n  char *pcVar2;\n  int iVar3;\n  char *pcVar4;\n  char *pcVar5;\n  \n  pcVar4 = param_1;\n  do {\n    cVar1 = *pcVar4;\n    pcVar4 = pcVar4 + 1;\n  } while (cVar1 != '\\0');\n  pcVar4 = pcVar4 + (1 - (int)(param_1 + 1));\n  if ((char *)(-1 - param_3) < pcVar4) {\n    iVar3 = 0xc;\n  }\n  else {\n    pcVar5 = pcVar4 + param_3 + 1;\n    pcVar2 = (char *)__calloc_base((uint)pcVar5,1);\n    if (param_3 != 0) {\n      iVar3 = FUN_0042f101(pcVar2,(uint)pcVar5,param_2,param_3);\n      if (iVar3 != 0) goto LAB_0042b3d1;\n    }\n    iVar3 = FUN_0042f101(pcVar2 + param_3,(int)pcVar5 - param_3,param_1,(uint)pcVar4);\n    if (iVar3 != 0) {\nLAB_0042b3d1:\n                    /* WARNING: Subroutine does not return */\n      __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n    }\n    iVar3 = append(param_4,pcVar2);\n    FID_conflict__free((void *)0x0);\n  }\n  return iVar3;\n}\n\n"
    },
    {
      "name": "expand_argument_wildcards<char>",
      "entry": "0042b3de",
      "c": "\n/* Library Function - Single Match\n    int __cdecl expand_argument_wildcards<char>(char * const,char * const,class `anonymous\n   namespace'::argument_list<char> &)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\nexpand_argument_wildcards<char>(char *param_1,char *param_2,argument_list<char> *param_3)\n\n{\n  uchar uVar1;\n  byte bVar2;\n  HANDLE hFindFile;\n  int iVar3;\n  int iVar4;\n  BOOL BVar5;\n  _WIN32_FIND_DATAA local_148;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  for (; (((param_2 != param_1 && (uVar1 = *param_2, uVar1 != '/')) && (uVar1 != '\\\\')) &&\n         (uVar1 != ':')); param_2 = (char *)__mbsdec((uchar *)param_1,(uchar *)param_2)) {\n  }\n  uVar1 = *param_2;\n  if ((uVar1 == ':') && (param_2 != param_1 + 1)) {\n    copy_and_add_argument_to_buffer<char>(param_1,(char *)0x0,0,param_3);\n  }\n  else {\n    if ((uVar1 == '/') || ((uVar1 == '\\\\' || (uVar1 == ':')))) {\n      bVar2 = 1;\n    }\n    else {\n      bVar2 = 0;\n    }\n    _memset(&local_148,0,0x140);\n    hFindFile = FindFirstFileExA(param_1,FindExInfoStandard,&local_148,FindExSearchNameMatch,\n                                 (LPVOID)0x0,0);\n    if (hFindFile == (HANDLE)0xffffffff) {\n      copy_and_add_argument_to_buffer<char>(param_1,(char *)0x0,0,param_3);\n    }\n    else {\n      iVar3 = *(int *)(param_3 + 4) - *(int *)param_3 >> 2;\n      do {\n        if (((local_148.cFileName[0] != '.') ||\n            ((local_148.cFileName[1] != '\\0' &&\n             ((local_148.cFileName[1] != '.' || (local_148.cFileName[2] != '\\0')))))) &&\n           (iVar4 = copy_and_add_argument_to_buffer<char>\n                              (local_148.cFileName,param_1,\n                               -(uint)bVar2 & (uint)((uchar *)param_2 + (1 - (int)param_1)),param_3)\n           , iVar4 != 0)) goto LAB_0042b4ae;\n        BVar5 = FindNextFileA(hFindFile,&local_148);\n      } while (BVar5 != 0);\n      iVar4 = *(int *)(param_3 + 4) - *(int *)param_3 >> 2;\n      if (iVar3 != iVar4) {\n        _qsort((void *)(*(int *)param_3 + iVar3 * 4),iVar4 - iVar3,4,FUN_0042b1a0);\n      }\n    }\nLAB_0042b4ae:\n    if (hFindFile != (HANDLE)0xffffffff) {\n      FindClose(hFindFile);\n    }\n  }\n  iVar3 = FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return iVar3;\n}\n\n"
    },
    {
      "name": "~argument_list<char>",
      "entry": "0042b562",
      "c": "\n/* Library Function - Single Match\n    public: __thiscall `anonymous namespace'::argument_list<char>::~argument_list<char>(void)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall _anon_FD16DE3C::argument_list<char>::~argument_list<char>(argument_list<char> *this)\n\n{\n  undefined4 *puVar1;\n  \n  for (puVar1 = *(undefined4 **)this; puVar1 != *(undefined4 **)(this + 4); puVar1 = puVar1 + 1) {\n    FID_conflict__free((void *)*puVar1);\n  }\n  FID_conflict__free(*(void **)this);\n  return;\n}\n\n"
    },
    {
      "name": "append",
      "entry": "0042b587",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    public: int __thiscall `anonymous namespace'::argument_list<char>::append(char * const)\n    public: int __thiscall `anonymous namespace'::argument_list<char>::append(char * const)\n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall append(void *this,void *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = expand_if_necessary((int *)this);\n  if (iVar1 == 0) {\n    **(undefined4 **)((int)this + 4) = param_1;\n    *(int *)((int)this + 4) = *(int *)((int)this + 4) + 4;\n    iVar1 = 0;\n  }\n  else {\n    FID_conflict__free(param_1);\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "expand_if_necessary",
      "entry": "0042b5bc",
      "c": "\n/* Library Function - Multiple Matches With Same Base Name\n    private: int __thiscall `anonymous namespace'::argument_list<char>::expand_if_necessary(void)\n    private: int __thiscall `anonymous namespace'::argument_list<char>::expand_if_necessary(void)\n    private: int __thiscall `anonymous namespace'::argument_list<wchar_t>::expand_if_necessary(void)\n    private: int __thiscall `anonymous namespace'::argument_list<wchar_t>::expand_if_necessary(void)\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __fastcall expand_if_necessary(int *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  LPVOID pvVar3;\n  uint uVar4;\n  \n  if (param_1[1] == param_1[2]) {\n    if (*param_1 == 0) {\n      pvVar3 = __calloc_base(4,4);\n      *param_1 = (int)pvVar3;\n      FID_conflict__free((void *)0x0);\n      iVar1 = *param_1;\n      if (iVar1 != 0) {\n        param_1[1] = iVar1;\n        param_1[2] = iVar1 + 0x10;\n        goto LAB_0042b5ca;\n      }\n    }\n    else {\n      uVar4 = param_1[2] - *param_1 >> 2;\n      if (uVar4 < 0x80000000) {\n        pvVar3 = FUN_0042bfb3((LPCVOID)*param_1,uVar4 * 2,4);\n        if (pvVar3 == (LPVOID)0x0) {\n          uVar2 = 0xc;\n        }\n        else {\n          *param_1 = (int)pvVar3;\n          param_1[1] = (int)((int)pvVar3 + uVar4 * 4);\n          param_1[2] = (int)((int)pvVar3 + uVar4 * 8);\n          uVar2 = 0;\n        }\n        FID_conflict__free((void *)0x0);\n        return uVar2;\n      }\n    }\n    uVar2 = 0xc;\n  }\n  else {\nLAB_0042b5ca:\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n"
    },
    {
      "name": "FUN_0042b643",
      "entry": "0042b643",
      "c": "\nvoid __cdecl FUN_0042b643(char **param_1,char ***param_2)\n\n{\n  common_expand_argv_wildcards<char>(param_1,param_2);\n  return;\n}\n\n"
    },
    {
      "name": "operator()<class_<lambda_978dc153c237d78434369da87b74ff60>,class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>&,class_<lambda_4a8533e2866a575feecb8298ce776b0d>_>",
      "entry": "0042b64e",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    public: void __thiscall __crt_seh_guarded_call<void>::operator()<class\n   <lambda_978dc153c237d78434369da87b74ff60>,class <lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> &,class\n   <lambda_4a8533e2866a575feecb8298ce776b0d> >(class <lambda_978dc153c237d78434369da87b74ff60>\n   &&,class <lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> &,class\n   <lambda_4a8533e2866a575feecb8298ce776b0d> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\n__crt_seh_guarded_call<void>::\noperator()<class_<lambda_978dc153c237d78434369da87b74ff60>,class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>&,class_<lambda_4a8533e2866a575feecb8298ce776b0d>_>\n          (__crt_seh_guarded_call<void> *this,<lambda_978dc153c237d78434369da87b74ff60> *param_1,\n          <lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> *param_2,\n          <lambda_4a8533e2866a575feecb8298ce776b0d> *param_3)\n\n{\n  ___acrt_lock(*(int *)param_1);\n  <lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>::operator()(param_2);\n  FUN_0042b685();\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042b685",
      "entry": "0042b685",
      "c": "\nvoid FUN_0042b685(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>_>",
      "entry": "0042b691",
      "c": "\n/* Library Function - Single Match\n    void __cdecl __acrt_lock_and_call<class <lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> >(enum\n   __acrt_lock_id,class <lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__acrt_lock_and_call<class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>_>\n          (__acrt_lock_id param_1,<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> *param_2)\n\n{\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  __crt_seh_guarded_call<void> local_5;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  __crt_seh_guarded_call<void>::\n  operator()<class_<lambda_978dc153c237d78434369da87b74ff60>,class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>&,class_<lambda_4a8533e2866a575feecb8298ce776b0d>_>\n            (&local_5,(<lambda_978dc153c237d78434369da87b74ff60> *)&local_10,param_2,\n             (<lambda_4a8533e2866a575feecb8298ce776b0d> *)&local_c);\n  return;\n}\n\n"
    },
    {
      "name": "operator()",
      "entry": "0042b6b9",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    public: void __thiscall <lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>::operator()(void)const \n   \n   Library: Visual Studio 2015 Release */\n\nvoid __thiscall\n<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>::operator()\n          (<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> *this)\n\n{\n  int iVar1;\n  \n  _DAT_004626b0 = *(undefined4 *)(*(int *)(**(int **)this + 0x48) + 4);\n  _DAT_004626b4 = *(undefined4 *)(*(int *)(**(int **)this + 0x48) + 8);\n  _DAT_004626ac = *(undefined4 *)(*(int *)(**(int **)this + 0x48) + 0x21c);\n  _memcpy_s(&DAT_004626b8,0xc,(void *)(*(int *)(**(int **)this + 0x48) + 0xc),0xc);\n  _memcpy_s(&DAT_0043ea68,0x101,(void *)(*(int *)(**(int **)this + 0x48) + 0x18),0x101);\n  _memcpy_s(&DAT_0043eb70,0x100,(void *)(*(int *)(**(int **)this + 0x48) + 0x119),0x100);\n  LOCK();\n  iVar1 = *(int *)PTR_DAT_0043ee90;\n  *(int *)PTR_DAT_0043ee90 = iVar1 + -1;\n  UNLOCK();\n  if ((iVar1 + -1 == 0) && ((undefined4 *)PTR_DAT_0043ee90 != &DAT_0043ec70)) {\n    FID_conflict__free(PTR_DAT_0043ee90);\n  }\n  PTR_DAT_0043ee90 = *(undefined **)(**(int **)this + 0x48);\n  LOCK();\n  **(int **)(**(int **)this + 0x48) = **(int **)(**(int **)this + 0x48) + 1;\n  UNLOCK();\n  return;\n}\n\n"
    },
    {
      "name": "CPtoLocaleName",
      "entry": "0042b77d",
      "c": "\n/* Library Function - Single Match\n    wchar_t const * __cdecl CPtoLocaleName(int)\n   \n   Library: Visual Studio 2015 Release */\n\nwchar_t * __cdecl CPtoLocaleName(int param_1)\n\n{\n  if (param_1 == 0x3a4) {\n    return (wchar_t *)PTR_u_ja_JP_004379f8;\n  }\n  if (param_1 == 0x3a8) {\n    return (wchar_t *)PTR_u_zh_CN_004379fc;\n  }\n  if (param_1 == 0x3b5) {\n    return (wchar_t *)PTR_u_ko_KR_00437a00;\n  }\n  if (param_1 != 0x3b6) {\n    return (wchar_t *)0x0;\n  }\n  return (wchar_t *)PTR_u_zh_TW_00437a04;\n}\n\n"
    },
    {
      "name": "getSystemCP",
      "entry": "0042b7bb",
      "c": "\n/* Library Function - Single Match\n    int __cdecl getSystemCP(int)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl getSystemCP(int param_1)\n\n{\n  int local_14;\n  int local_10;\n  char local_8;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,(__crt_locale_pointers *)0x0);\n  DAT_004626c4 = 0;\n  if (param_1 == -2) {\n    DAT_004626c4 = 1;\n    param_1 = GetOEMCP();\n  }\n  else if (param_1 == -3) {\n    DAT_004626c4 = 1;\n    param_1 = GetACP();\n  }\n  else if (param_1 == -4) {\n    DAT_004626c4 = 1;\n    param_1 = *(UINT *)(local_10 + 8);\n  }\n  if (local_8 != '\\0') {\n    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "setSBCS",
      "entry": "0042b82e",
      "c": "\n/* Library Function - Single Match\n    void __cdecl setSBCS(struct __crt_multibyte_data *)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl setSBCS(__crt_multibyte_data *param_1)\n\n{\n  int iVar1;\n  __crt_multibyte_data *p_Var2;\n  \n  p_Var2 = param_1 + 0x18;\n  _memset(p_Var2,0,0x101);\n  *(undefined4 *)(param_1 + 4) = 0;\n  *(undefined4 *)(param_1 + 8) = 0;\n  *(undefined4 *)(param_1 + 0x21c) = 0;\n  iVar1 = 0x101;\n  *(undefined4 *)(param_1 + 0xc) = 0;\n  *(undefined4 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x14) = 0;\n  do {\n    *p_Var2 = p_Var2[(int)&DAT_0043ec70 - (int)param_1];\n    p_Var2 = p_Var2 + 1;\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  p_Var2 = param_1 + 0x119;\n  iVar1 = 0x100;\n  do {\n    *p_Var2 = p_Var2[(int)&DAT_0043ec70 - (int)param_1];\n    p_Var2 = p_Var2 + 1;\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  return;\n}\n\n"
    },
    {
      "name": "setSBUpLow",
      "entry": "0042b893",
      "c": "\n/* Library Function - Single Match\n    void __cdecl setSBUpLow(struct __crt_multibyte_data *)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl setSBUpLow(__crt_multibyte_data *param_1)\n\n{\n  byte bVar1;\n  __crt_multibyte_data _Var2;\n  BOOL BVar3;\n  uint uVar4;\n  BYTE *pBVar5;\n  __crt_multibyte_data *p_Var6;\n  _cpinfo local_71c;\n  WORD local_708 [512];\n  __crt_multibyte_data local_308 [256];\n  __crt_multibyte_data local_208 [256];\n  CHAR local_108 [256];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  BVar3 = GetCPInfo(*(UINT *)(param_1 + 4),&local_71c);\n  if (BVar3 == 0) {\n    uVar4 = 0;\n    do {\n      p_Var6 = param_1 + uVar4 + 0x119;\n      if (p_Var6 + (-0x61 - (int)(param_1 + 0x119)) + 0x20 < (__crt_multibyte_data *)0x1a) {\n        param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x10);\n        _Var2 = (__crt_multibyte_data)((char)uVar4 + ' ');\nLAB_0042b9ff:\n        *p_Var6 = _Var2;\n      }\n      else {\n        if (p_Var6 + (-0x61 - (int)(param_1 + 0x119)) < (__crt_multibyte_data *)0x1a) {\n          param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x20);\n          _Var2 = (__crt_multibyte_data)((char)uVar4 + -0x20);\n          goto LAB_0042b9ff;\n        }\n        *p_Var6 = (__crt_multibyte_data)0x0;\n      }\n      uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x100);\n  }\n  else {\n    uVar4 = 0;\n    do {\n      local_108[uVar4] = (CHAR)uVar4;\n      uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x100);\n    pBVar5 = local_71c.LeadByte;\n    local_108[0] = ' ';\n    while (local_71c.LeadByte[0] != 0) {\n      bVar1 = pBVar5[1];\n      for (uVar4 = (uint)local_71c.LeadByte[0]; (uVar4 <= bVar1 && (uVar4 < 0x100));\n          uVar4 = uVar4 + 1) {\n        local_108[uVar4] = ' ';\n      }\n      pBVar5 = pBVar5 + 2;\n      local_71c.LeadByte[0] = *pBVar5;\n    }\n    ___acrt_GetStringTypeA\n              ((__crt_locale_pointers *)0x0,1,local_108,0x100,local_708,*(UINT *)(param_1 + 4),0);\n    ___acrt_LCMapStringA\n              ((__crt_locale_pointers *)0x0,*(wchar_t **)(param_1 + 0x21c),0x100,local_108,0x100,\n               (char *)local_208,0x100,*(int *)(param_1 + 4),0);\n    ___acrt_LCMapStringA\n              ((__crt_locale_pointers *)0x0,*(wchar_t **)(param_1 + 0x21c),0x200,local_108,0x100,\n               (char *)local_308,0x100,*(int *)(param_1 + 4),0);\n    uVar4 = 0;\n    do {\n      if ((local_708[uVar4] & 1) == 0) {\n        if ((local_708[uVar4] & 2) != 0) {\n          param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x20);\n          _Var2 = local_308[uVar4];\n          goto LAB_0042b9a6;\n        }\n        param_1[uVar4 + 0x119] = (__crt_multibyte_data)0x0;\n      }\n      else {\n        param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x10);\n        _Var2 = local_208[uVar4];\nLAB_0042b9a6:\n        param_1[uVar4 + 0x119] = _Var2;\n      }\n      uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x100);\n  }\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "setmbcp_internal",
      "entry": "0042ba27",
      "c": "\n/* Library Function - Single Match\n    int __cdecl setmbcp_internal(int,bool)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl setmbcp_internal(int param_1,bool param_2)\n\n{\n  int iVar1;\n  __crt_multibyte_data *p_Var2;\n  int *piVar3;\n  int iVar4;\n  undefined4 *puVar5;\n  __crt_multibyte_data *p_Var6;\n  __acrt_ptd **local_10 [2];\n  __acrt_ptd *local_8;\n  \n  local_8 = ___acrt_getptd();\n  ___acrt_update_thread_multibyte_data();\n  local_10[0] = (__acrt_ptd **)getSystemCP(param_1);\n  if (local_10[0] == *(__acrt_ptd ***)(*(int *)(local_8 + 0x48) + 4)) {\n    return 0;\n  }\n  p_Var2 = (__crt_multibyte_data *)__malloc_base(0x220);\n  if (p_Var2 != (__crt_multibyte_data *)0x0) {\n    puVar5 = *(undefined4 **)(local_8 + 0x48);\n    p_Var6 = p_Var2;\n    for (iVar4 = 0x88; iVar4 != 0; iVar4 = iVar4 + -1) {\n      *(undefined4 *)p_Var6 = *puVar5;\n      puVar5 = puVar5 + 1;\n      p_Var6 = p_Var6 + 4;\n    }\n    *(undefined4 *)p_Var2 = 0;\n    iVar4 = __setmbcp_nolock((int)local_10[0],p_Var2);\n    if (iVar4 != -1) {\n      if (!param_2) {\n        ___acrt_set_locale_changed();\n      }\n      piVar3 = *(int **)(local_8 + 0x48);\n      LOCK();\n      iVar1 = *piVar3;\n      *piVar3 = *piVar3 + -1;\n      UNLOCK();\n      if ((iVar1 == 1) && (*(undefined4 **)(local_8 + 0x48) != &DAT_0043ec70)) {\n        FID_conflict__free(*(void **)(local_8 + 0x48));\n      }\n      *(undefined4 *)p_Var2 = 1;\n      p_Var6 = (__crt_multibyte_data *)0x0;\n      *(__crt_multibyte_data **)(local_8 + 0x48) = p_Var2;\n      if ((((byte)local_8[0x350] & 2) == 0) && (((byte)DAT_0043eef0 & 1) == 0)) {\n        local_10[0] = &local_8;\n        __acrt_lock_and_call<class_<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>_>\n                  (5,(<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c> *)local_10);\n        if (param_2) {\n          PTR_DAT_0043e964 = PTR_DAT_0043ee90;\n        }\n      }\n      goto LAB_0042ba9e;\n    }\n    piVar3 = __errno();\n    *piVar3 = 0x16;\n  }\n  iVar4 = -1;\n  p_Var6 = p_Var2;\nLAB_0042ba9e:\n  FID_conflict__free(p_Var6);\n  return iVar4;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_multibyte",
      "entry": "0042bb30",
      "c": "\n/* Library Function - Single Match\n    ___acrt_initialize_multibyte\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 ___acrt_initialize_multibyte(void)\n\n{\n  int in_EAX;\n  \n  if (DAT_004626c8 == '\\0') {\n    in_EAX = setmbcp_internal(-3,true);\n    DAT_004626c8 = '\\x01';\n  }\n  return CONCAT31((int3)((uint)in_EAX >> 8),1);\n}\n\n"
    },
    {
      "name": "___acrt_update_thread_multibyte_data",
      "entry": "0042bb4e",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    ___acrt_update_thread_multibyte_data\n   \n   Library: Visual Studio 2015 Release */\n\nint * ___acrt_update_thread_multibyte_data(void)\n\n{\n  int iVar1;\n  __acrt_ptd *p_Var2;\n  int *_Memory;\n  \n  p_Var2 = ___acrt_getptd();\n  if (((*(uint *)(p_Var2 + 0x350) & DAT_0043eef0) == 0) || (*(int *)(p_Var2 + 0x4c) == 0)) {\n    ___acrt_lock(5);\n    _Memory = *(int **)(p_Var2 + 0x48);\n    if (_Memory != (int *)PTR_DAT_0043ee90) {\n      if (_Memory != (int *)0x0) {\n        LOCK();\n        iVar1 = *_Memory;\n        *_Memory = iVar1 + -1;\n        UNLOCK();\n        if ((iVar1 + -1 == 0) && (_Memory != &DAT_0043ec70)) {\n          FID_conflict__free(_Memory);\n        }\n      }\n      *(undefined **)(p_Var2 + 0x48) = PTR_DAT_0043ee90;\n      _Memory = (int *)PTR_DAT_0043ee90;\n      LOCK();\n      *(int *)PTR_DAT_0043ee90 = *(int *)PTR_DAT_0043ee90 + 1;\n      UNLOCK();\n    }\n    FUN_0042bbdf();\n  }\n  else {\n    _Memory = *(int **)(p_Var2 + 0x48);\n  }\n  if (_Memory == (int *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    _abort();\n  }\n  return _Memory;\n}\n\n"
    },
    {
      "name": "FUN_0042bbdf",
      "entry": "0042bbdf",
      "c": "\nvoid FUN_0042bbdf(void)\n\n{\n  ___acrt_unlock(5);\n  return;\n}\n\n"
    },
    {
      "name": "__setmbcp_nolock",
      "entry": "0042bbf0",
      "c": "\n/* Library Function - Single Match\n    __setmbcp_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __setmbcp_nolock(int param_1,__crt_multibyte_data *param_2)\n\n{\n  byte bVar1;\n  undefined2 uVar2;\n  uint uVar3;\n  uint uVar4;\n  BOOL BVar5;\n  BYTE *pBVar6;\n  __crt_multibyte_data *p_Var7;\n  wchar_t *pwVar8;\n  byte *pbVar9;\n  int iVar10;\n  byte *pbVar11;\n  undefined2 *puVar12;\n  uint uVar13;\n  int local_20;\n  _cpinfo local_1c;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  uVar3 = getSystemCP(param_1);\n  if (uVar3 != 0) {\n    uVar13 = 0;\n    uVar4 = 0;\n    local_20 = 0;\nLAB_0042bc2e:\n    if (*(uint *)((int)&DAT_0043e978 + uVar4) != uVar3) goto code_r0x0042bc3a;\n    _memset(param_2 + 0x18,0,0x101);\n    pbVar9 = (byte *)(local_20 * 0x30 + 0x43e988);\n    do {\n      bVar1 = *pbVar9;\n      pbVar11 = pbVar9;\n      while ((bVar1 != 0 && (bVar1 = pbVar11[1], bVar1 != 0))) {\n        for (uVar4 = (uint)*pbVar11; (uVar4 <= bVar1 && (uVar4 < 0x100)); uVar4 = uVar4 + 1) {\n          param_2[uVar4 + 0x19] =\n               (__crt_multibyte_data)((byte)param_2[uVar4 + 0x19] | (&DAT_0043e970)[uVar13]);\n          bVar1 = pbVar11[1];\n        }\n        pbVar11 = pbVar11 + 2;\n        bVar1 = *pbVar11;\n      }\n      uVar13 = uVar13 + 1;\n      pbVar9 = pbVar9 + 8;\n    } while (uVar13 < 4);\n    *(uint *)(param_2 + 4) = uVar3;\n    *(undefined4 *)(param_2 + 8) = 1;\n    pwVar8 = CPtoLocaleName(uVar3);\n    *(wchar_t **)(param_2 + 0x21c) = pwVar8;\n    p_Var7 = param_2 + 0xc;\n    puVar12 = (undefined2 *)(local_20 * 0x30 + 0x43e97c);\n    iVar10 = 6;\n    do {\n      uVar2 = *puVar12;\n      puVar12 = puVar12 + 1;\n      *(undefined2 *)p_Var7 = uVar2;\n      p_Var7 = p_Var7 + 2;\n      iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    goto LAB_0042bdc7;\n  }\n  setSBCS(param_2);\nLAB_0042bdd1:\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\ncode_r0x0042bc3a:\n  local_20 = local_20 + 1;\n  uVar4 = uVar4 + 0x30;\n  if (0xef < uVar4) goto code_r0x0042bc48;\n  goto LAB_0042bc2e;\ncode_r0x0042bc48:\n  if (((uVar3 != 65000) && (uVar3 != 0xfde9)) &&\n     (BVar5 = IsValidCodePage(uVar3 & 0xffff), BVar5 != 0)) {\n    BVar5 = GetCPInfo(uVar3,&local_1c);\n    if (BVar5 == 0) {\n      if (DAT_004626c4 != 0) {\n        setSBCS(param_2);\n      }\n    }\n    else {\n      _memset(param_2 + 0x18,0,0x101);\n      *(uint *)(param_2 + 4) = uVar3;\n      *(undefined4 *)(param_2 + 0x21c) = 0;\n      if (local_1c.MaxCharSize < 2) {\n        *(undefined4 *)(param_2 + 8) = 0;\n      }\n      else {\n        pBVar6 = local_1c.LeadByte;\n        while ((local_1c.LeadByte[0] != 0 && (bVar1 = pBVar6[1], bVar1 != 0))) {\n          for (uVar3 = (uint)*pBVar6; uVar3 <= bVar1; uVar3 = uVar3 + 1) {\n            param_2[uVar3 + 0x19] = (__crt_multibyte_data)((byte)param_2[uVar3 + 0x19] | 4);\n          }\n          pBVar6 = pBVar6 + 2;\n          local_1c.LeadByte[0] = *pBVar6;\n        }\n        p_Var7 = param_2 + 0x1a;\n        iVar10 = 0xfe;\n        do {\n          *p_Var7 = (__crt_multibyte_data)((byte)*p_Var7 | 8);\n          p_Var7 = p_Var7 + 1;\n          iVar10 = iVar10 + -1;\n        } while (iVar10 != 0);\n        pwVar8 = CPtoLocaleName(*(int *)(param_2 + 4));\n        *(wchar_t **)(param_2 + 0x21c) = pwVar8;\n        *(undefined4 *)(param_2 + 8) = 1;\n      }\n      *(undefined4 *)(param_2 + 0xc) = 0;\n      *(undefined4 *)(param_2 + 0x10) = 0;\n      *(undefined4 *)(param_2 + 0x14) = 0;\nLAB_0042bdc7:\n      setSBUpLow(param_2);\n    }\n  }\n  goto LAB_0042bdd1;\n}\n\n"
    },
    {
      "name": "_memcpy_s",
      "entry": "0042bde1",
      "c": "\n/* Library Function - Single Match\n    _memcpy_s\n   \n   Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017, Visual Studio 2019 */\n\nerrno_t __cdecl _memcpy_s(void *_Dst,rsize_t _DstSize,void *_Src,rsize_t _MaxCount)\n\n{\n  errno_t eVar1;\n  int *piVar2;\n  \n  if (_MaxCount == 0) {\n    eVar1 = 0;\n  }\n  else if (_Dst == (void *)0x0) {\n    piVar2 = __errno();\n    eVar1 = 0x16;\n    *piVar2 = 0x16;\n    FUN_00429087();\n  }\n  else if ((_Src == (void *)0x0) || (_DstSize < _MaxCount)) {\n    _memset(_Dst,0,_DstSize);\n    if (_Src == (void *)0x0) {\n      piVar2 = __errno();\n      eVar1 = 0x16;\n    }\n    else {\n      if (_MaxCount <= _DstSize) {\n        return 0x16;\n      }\n      piVar2 = __errno();\n      eVar1 = 0x22;\n    }\n    *piVar2 = eVar1;\n    FUN_00429087();\n  }\n  else {\n    FUN_00420320((uint *)_Dst,(uint *)_Src,_MaxCount);\n    eVar1 = 0;\n  }\n  return eVar1;\n}\n\n"
    },
    {
      "name": "x_ismbbtype_l",
      "entry": "0042be62",
      "c": "\n/* Library Function - Single Match\n    int __cdecl x_ismbbtype_l(struct __crt_locale_pointers *,unsigned int,int,int)\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual\n   Studio 2017 Release */\n\nint __cdecl x_ismbbtype_l(__crt_locale_pointers *param_1,uint param_2,int param_3,int param_4)\n\n{\n  uint uVar1;\n  int iVar2;\n  int local_14;\n  int *local_10;\n  int local_c;\n  char local_8;\n  \n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_14,param_1);\n  if ((*(byte *)(local_c + 0x19 + (param_2 & 0xff)) & (byte)param_4) == 0) {\n    iVar2 = 0;\n    if (param_3 == 0) {\n      uVar1 = 0;\n    }\n    else {\n      uVar1 = (uint)*(ushort *)(*local_10 + (param_2 & 0xff) * 2) & param_3;\n    }\n    if (uVar1 == 0) goto LAB_0042bea4;\n  }\n  iVar2 = 1;\nLAB_0042bea4:\n  if (local_8 != '\\0') {\n    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "__ismbblead",
      "entry": "0042bebb",
      "c": "\n/* Library Function - Single Match\n    __ismbblead\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __ismbblead(uint _C)\n\n{\n  int iVar1;\n  \n  iVar1 = x_ismbbtype_l((__crt_locale_pointers *)0x0,_C,0,4);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "FUN_0042bee0",
      "entry": "0042bee0",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_0042bee0(void)\n\n{\n  DAT_004626d8 = GetCommandLineA();\n  _DAT_004626dc = GetCommandLineW();\n  return CONCAT31((int3)((uint)_DAT_004626dc >> 8),1);\n}\n\n"
    },
    {
      "name": "find_end_of_double_null_terminated_sequence",
      "entry": "0042bef9",
      "c": "\n/* Library Function - Single Match\n    wchar_t const * __cdecl find_end_of_double_null_terminated_sequence(wchar_t const * const)\n   \n   Library: Visual Studio 2015 Release */\n\nwchar_t * __cdecl find_end_of_double_null_terminated_sequence(wchar_t *param_1)\n\n{\n  wchar_t wVar1;\n  wchar_t *pwVar2;\n  \n  wVar1 = *param_1;\n  while (wVar1 != L'\\0') {\n    pwVar2 = param_1;\n    do {\n      wVar1 = *pwVar2;\n      pwVar2 = pwVar2 + 1;\n    } while (wVar1 != L'\\0');\n    param_1 = param_1 + ((int)pwVar2 - (int)(param_1 + 1) >> 1) + 1;\n    wVar1 = *param_1;\n  }\n  return param_1 + 1;\n}\n\n"
    },
    {
      "name": "___dcrt_get_narrow_environment_from_os",
      "entry": "0042bf30",
      "c": "\n/* Library Function - Single Match\n    ___dcrt_get_narrow_environment_from_os\n   \n   Library: Visual Studio 2015 Release */\n\nLPSTR ___dcrt_get_narrow_environment_from_os(void)\n\n{\n  LPWCH lpWideCharStr;\n  wchar_t *pwVar1;\n  size_t cbMultiByte;\n  LPSTR lpMultiByteStr;\n  int iVar2;\n  LPSTR pCVar3;\n  \n  lpWideCharStr = GetEnvironmentStringsW();\n  if (lpWideCharStr != (LPWCH)0x0) {\n    pwVar1 = find_end_of_double_null_terminated_sequence(lpWideCharStr);\n    iVar2 = (int)pwVar1 - (int)lpWideCharStr >> 1;\n    cbMultiByte = WideCharToMultiByte(0,0,lpWideCharStr,iVar2,(LPSTR)0x0,0,(LPCSTR)0x0,(LPBOOL)0x0);\n    if (cbMultiByte != 0) {\n      lpMultiByteStr = (LPSTR)__malloc_base(cbMultiByte);\n      if (lpMultiByteStr == (LPSTR)0x0) {\nLAB_0042bf92:\n        pCVar3 = (LPSTR)0x0;\n      }\n      else {\n        iVar2 = WideCharToMultiByte(0,0,lpWideCharStr,iVar2,lpMultiByteStr,cbMultiByte,(LPCSTR)0x0,\n                                    (LPBOOL)0x0);\n        if (iVar2 == 0) goto LAB_0042bf92;\n        pCVar3 = lpMultiByteStr;\n        lpMultiByteStr = (LPSTR)0x0;\n      }\n      FID_conflict__free(lpMultiByteStr);\n      goto LAB_0042bf9f;\n    }\n  }\n  pCVar3 = (LPSTR)0x0;\nLAB_0042bf9f:\n  if (lpWideCharStr != (LPWCH)0x0) {\n    FreeEnvironmentStringsW(lpWideCharStr);\n  }\n  return pCVar3;\n}\n\n"
    },
    {
      "name": "FUN_0042bfb3",
      "entry": "0042bfb3",
      "c": "\nLPVOID __cdecl FUN_0042bfb3(LPCVOID param_1,uint param_2,uint param_3)\n\n{\n  int *piVar1;\n  LPVOID pvVar2;\n  SIZE_T SVar3;\n  uint uVar4;\n  \n  if ((param_2 == 0) || (param_3 <= 0xffffffe0 / param_2)) {\n    if (param_1 == (LPCVOID)0x0) {\n      SVar3 = 0;\n    }\n    else {\n      SVar3 = FUN_0042f20f(param_1);\n    }\n    uVar4 = param_2 * param_3;\n    pvVar2 = __realloc_base(param_1,uVar4);\n    if ((pvVar2 != (LPVOID)0x0) && (SVar3 < uVar4)) {\n      _memset((void *)((int)pvVar2 + SVar3),0,uVar4 - SVar3);\n    }\n  }\n  else {\n    piVar1 = __errno();\n    *piVar1 = 0xc;\n    pvVar2 = (LPVOID)0x0;\n  }\n  return pvVar2;\n}\n\n"
    },
    {
      "name": "FUN_0042c030",
      "entry": "0042c030",
      "c": "\nbool FUN_0042c030(void)\n\n{\n  DAT_004626e4 = GetProcessHeap();\n  return DAT_004626e4 != (HANDLE)0x0;\n}\n\n"
    },
    {
      "name": "FUN_0042c050",
      "entry": "0042c050",
      "c": "\nundefined1 FUN_0042c050(void)\n\n{\n  DAT_004626e4 = 0;\n  return 1;\n}\n\n"
    },
    {
      "name": "___acrt_execute_initializers",
      "entry": "0042c05a",
      "c": "\n/* Library Function - Single Match\n    ___acrt_execute_initializers\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_execute_initializers(undefined4 *param_1,undefined4 *param_2)\n\n{\n  undefined4 *puVar1;\n  code *pcVar2;\n  char cVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  \n  uVar4 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  puVar5 = param_1;\n  if (param_1 != param_2) {\n    do {\n      pcVar2 = (code *)*puVar5;\n      if (pcVar2 != (code *)0x0) {\n        (*(code *)PTR_guard_check_icall_00433278)();\n        cVar3 = (*pcVar2)();\n        if (cVar3 == '\\0') break;\n      }\n      puVar5 = puVar5 + 2;\n    } while (puVar5 != param_2);\n    if ((puVar5 != param_2) && (puVar5 != param_1)) {\n      puVar5 = puVar5 + -1;\n      do {\n        if ((puVar5[-1] != 0) && (pcVar2 = (code *)*puVar5, pcVar2 != (code *)0x0)) {\n          (*(code *)PTR_guard_check_icall_00433278)(0);\n          (*pcVar2)();\n        }\n        puVar1 = puVar5 + -1;\n        puVar5 = puVar5 + -2;\n      } while (puVar1 != param_1);\n    }\n  }\n  FUN_0041fbbc(uVar4 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_execute_uninitializers",
      "entry": "0042c0dd",
      "c": "\n/* Library Function - Single Match\n    ___acrt_execute_uninitializers\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_execute_uninitializers(undefined4 *param_1,undefined4 *param_2)\n\n{\n  undefined4 *puVar1;\n  code *pcVar2;\n  uint uVar3;\n  undefined4 *puVar4;\n  \n  uVar3 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  if (param_1 != param_2) {\n    puVar4 = param_2 + -1;\n    do {\n      pcVar2 = (code *)*puVar4;\n      if (pcVar2 != (code *)0x0) {\n        (*(code *)PTR_guard_check_icall_00433278)(0);\n        (*pcVar2)();\n      }\n      puVar1 = puVar4 + -1;\n      puVar4 = puVar4 + -2;\n    } while (puVar1 != param_1);\n  }\n  FUN_0041fbbc(uVar3 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "operator()<>",
      "entry": "0042c12a",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Multiple Matches With Same Base Name\n    public: void (__cdecl*__thiscall __crt_seh_guarded_call<void (__cdecl*)(int)>::operator()<class\n   <lambda_a048d3beccc847880fc8490e18b82769>,class <lambda_ec61778202f4f5fc7e7711acc23c3bca> &,class\n   <lambda_f7496a158712204296dd6628a163878e> >(class <lambda_a048d3beccc847880fc8490e18b82769>\n   &&,class <lambda_ec61778202f4f5fc7e7711acc23c3bca> &,class\n   <lambda_f7496a158712204296dd6628a163878e> &&))(int)\n    public: void (__cdecl*__thiscall __crt_seh_guarded_call<void (__cdecl*)(int)>::operator()<class\n   <lambda_cbab9ec6f41b0180b23cc171c22676b0>,class <lambda_44731a7d0e6d81c3e6aa82d741081786> &,class\n   <lambda_4b292cb8dd18144e164572427af410ab> >(class <lambda_cbab9ec6f41b0180b23cc171c22676b0>\n   &&,class <lambda_44731a7d0e6d81c3e6aa82d741081786> &,class\n   <lambda_4b292cb8dd18144e164572427af410ab> &&))(int)\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nuint operator()<>(int *param_1)\n\n{\n  byte bVar1;\n  uint uVar2;\n  \n  ___acrt_lock(*param_1);\n  bVar1 = (byte)DAT_0043e7ac & 0x1f;\n  uVar2 = DAT_0043e7ac ^ _DAT_004626f0;\n  FUN_0042c178();\n  return uVar2 >> bVar1 | uVar2 << 0x20 - bVar1;\n}\n\n"
    },
    {
      "name": "FUN_0042c178",
      "entry": "0042c178",
      "c": "\nvoid FUN_0042c178(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lock_and_call<class_<lambda_ec61778202f4f5fc7e7711acc23c3bca>_>",
      "entry": "0042c184",
      "c": "\n/* Library Function - Single Match\n    void (__cdecl*__cdecl __acrt_lock_and_call<class <lambda_ec61778202f4f5fc7e7711acc23c3bca>\n   >(enum __acrt_lock_id,class <lambda_ec61778202f4f5fc7e7711acc23c3bca> &&))(int)\n   \n   Library: Visual Studio 2015 Release */\n\n_func_void_int * __cdecl\n__acrt_lock_and_call<class_<lambda_ec61778202f4f5fc7e7711acc23c3bca>_>\n          (__acrt_lock_id param_1,<lambda_ec61778202f4f5fc7e7711acc23c3bca> *param_2)\n\n{\n  _func_void_int *p_Var1;\n  __acrt_lock_id local_10;\n  __acrt_lock_id local_c;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  p_Var1 = (_func_void_int *)operator()<>((int *)&local_10);\n  return p_Var1;\n}\n\n"
    },
    {
      "name": "get_global_action_nolock",
      "entry": "0042c1ac",
      "c": "\n/* Library Function - Single Match\n    void (__cdecl** __cdecl get_global_action_nolock(int))(int)\n   \n   Library: Visual Studio 2015 Release */\n\n_func_void_int ** __cdecl get_global_action_nolock(int param_1)\n\n{\n  if (param_1 == 2) {\n    return (_func_void_int **)&DAT_004626e8;\n  }\n  if (param_1 != 6) {\n    if (param_1 == 0xf) {\n      return (_func_void_int **)&DAT_004626f4;\n    }\n    if (param_1 == 0x15) {\n      return (_func_void_int **)&DAT_004626ec;\n    }\n    if (param_1 != 0x16) {\n      return (_func_void_int **)0x0;\n    }\n  }\n  return (_func_void_int **)&DAT_004626f0;\n}\n\n"
    },
    {
      "name": "siglookup",
      "entry": "0042c1ee",
      "c": "\n/* Library Function - Single Match\n    struct __crt_signal_action_t * __cdecl siglookup(int,struct __crt_signal_action_t * const)\n   \n   Library: Visual Studio 2015 Release */\n\n__crt_signal_action_t * __cdecl siglookup(int param_1,__crt_signal_action_t *param_2)\n\n{\n  __crt_signal_action_t *p_Var1;\n  \n  p_Var1 = param_2 + DAT_004364c0 * 0xc;\n  if (param_2 != p_Var1) {\n    do {\n      if (*(int *)(param_2 + 4) == param_1) {\n        return param_2;\n      }\n      param_2 = param_2 + 0xc;\n    } while (param_2 != p_Var1);\n  }\n  return (__crt_signal_action_t *)0x0;\n}\n\n"
    },
    {
      "name": "___acrt_get_sigabrt_handler",
      "entry": "0042c216",
      "c": "\n/* Library Function - Single Match\n    ___acrt_get_sigabrt_handler\n   \n   Library: Visual Studio 2015 Release */\n\nvoid ___acrt_get_sigabrt_handler(void)\n\n{\n  <lambda_ec61778202f4f5fc7e7711acc23c3bca> local_5;\n  \n  __acrt_lock_and_call<class_<lambda_ec61778202f4f5fc7e7711acc23c3bca>_>(3,&local_5);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_initialize_signal_handlers",
      "entry": "0042c22d",
      "c": "\n/* Library Function - Single Match\n    ___acrt_initialize_signal_handlers\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_initialize_signal_handlers(char **param_1)\n\n{\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_004626e8,param_1);\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_004626ec,param_1);\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_004626f0,param_1);\n  __crt_state_management::dual_state_global<char**>::initialize\n            ((dual_state_global<char**> *)&DAT_004626f4,param_1);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042c268",
      "entry": "0042c268",
      "c": "\nint FUN_0042c268(void)\n\n{\n  __acrt_ptd *p_Var1;\n  \n  p_Var1 = ___acrt_getptd();\n  return (int)(p_Var1 + 8);\n}\n\n"
    },
    {
      "name": "_raise",
      "entry": "0042c271",
      "c": "\n/* WARNING: Function: __SEH_prolog4_GS replaced with injection: SEH_prolog4 */\n/* Library Function - Single Match\n    _raise\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _raise(int _SigNum)\n\n{\n  __crt_signal_action_t *p_Var1;\n  int *piVar2;\n  undefined4 *puVar3;\n  int iVar4;\n  __acrt_ptd *p_Var5;\n  char extraout_CL;\n  char cVar6;\n  byte bVar7;\n  int iVar8;\n  _func_void_int *p_Var9;\n  __acrt_ptd *p_Var10;\n  undefined4 local_38;\n  int local_34;\n  char local_21;\n  \n  p_Var10 = (__acrt_ptd *)0x0;\n  local_38 = 0;\n  local_21 = '\\x01';\n  if (8 < _SigNum) {\n    if (_SigNum == 0xb) goto LAB_0042c2cb;\n    if ((_SigNum == 0xf) || ((0x14 < _SigNum && (_SigNum < 0x17)))) goto LAB_0042c2c0;\nLAB_0042c2f6:\n    piVar2 = __errno();\n    *piVar2 = 0x16;\n    FUN_00429087();\n    goto LAB_0042c473;\n  }\n  if (_SigNum == 8) {\nLAB_0042c2cb:\n    p_Var10 = ___acrt_getptd_noexit();\n    if (p_Var10 == (__acrt_ptd *)0x0) goto LAB_0042c473;\n    p_Var1 = siglookup(_SigNum,*(__crt_signal_action_t **)p_Var10);\n    if (p_Var1 == (__crt_signal_action_t *)0x0) goto LAB_0042c2f6;\n    p_Var1 = p_Var1 + 8;\n    cVar6 = '\\0';\n    local_21 = '\\0';\n  }\n  else {\n    if (_SigNum != 2) {\n      if (_SigNum == 4) goto LAB_0042c2cb;\n      if (_SigNum != 6) goto LAB_0042c2f6;\n    }\nLAB_0042c2c0:\n    p_Var1 = (__crt_signal_action_t *)get_global_action_nolock(_SigNum);\n    cVar6 = extraout_CL;\n  }\n  local_34 = 0;\n  if (cVar6 != '\\0') {\n    ___acrt_lock(3);\n    cVar6 = local_21;\n  }\n  if (cVar6 == '\\0') {\n    p_Var9 = *(_func_void_int **)p_Var1;\n    local_21 = '\\0';\n  }\n  else {\n    bVar7 = (byte)DAT_0043e7ac & 0x1f;\n    p_Var9 = (_func_void_int *)\n             ((DAT_0043e7ac ^ (uint)*(_func_void_int **)p_Var1) >> bVar7 |\n             (DAT_0043e7ac ^ (uint)*(_func_void_int **)p_Var1) << 0x20 - bVar7);\n  }\n  if (p_Var9 != (_func_void_int *)0x1) {\n    if (p_Var9 == (_func_void_int *)0x0) {\n      if (local_21 != '\\0') {\n        ___acrt_unlock(3);\n      }\n      __exit(3);\n    }\n    if (((_SigNum == 8) || (_SigNum == 0xb)) || (_SigNum == 4)) {\n      local_34 = *(int *)(p_Var10 + 4);\n      *(int *)(p_Var10 + 4) = 0;\n      if (_SigNum == 8) {\n        puVar3 = (undefined4 *)FUN_0042c268();\n        local_38 = *puVar3;\n        puVar3 = (undefined4 *)FUN_0042c268();\n        *puVar3 = 0x8c;\n        goto LAB_0042c3b2;\n      }\n    }\n    else {\nLAB_0042c3b2:\n      if (_SigNum == 8) {\n        iVar4 = DAT_004364c4 * 0xc + *(int *)p_Var10;\n        iVar8 = DAT_004364c8 * 0xc + iVar4;\n        for (; iVar4 != iVar8; iVar4 = iVar4 + 0xc) {\n          *(undefined4 *)(iVar4 + 8) = 0;\n        }\n        goto LAB_0042c3f4;\n      }\n    }\n    bVar7 = 0x20 - ((byte)DAT_0043e7ac & 0x1f) & 0x1f;\n    *(_func_void_int **)p_Var1 =\n         (_func_void_int *)((0U >> bVar7 | 0 << 0x20 - bVar7) ^ DAT_0043e7ac);\n  }\nLAB_0042c3f4:\n  FUN_0042c431();\n  if (p_Var9 != (_func_void_int *)0x1) {\n    if (_SigNum == 8) {\n      p_Var5 = ___acrt_getptd();\n      iVar4 = 0x42c41c;\n      (*(code *)PTR_guard_check_icall_00433278)(8,*(undefined4 *)(p_Var5 + 8));\n      (*p_Var9)(iVar4);\n    }\n    else {\n      iVar4 = 0x42c44a;\n      (*(code *)PTR_guard_check_icall_00433278)(_SigNum);\n      (*p_Var9)(iVar4);\n      if ((_SigNum != 0xb) && (_SigNum != 4)) goto LAB_0042c473;\n    }\n    *(int *)(p_Var10 + 4) = local_34;\n    if (_SigNum == 8) {\n      p_Var10 = ___acrt_getptd();\n      *(undefined4 *)(p_Var10 + 8) = local_38;\n    }\n  }\nLAB_0042c473:\n  iVar4 = FUN_00432390();\n  return iVar4;\n}\n\n"
    },
    {
      "name": "FUN_0042c431",
      "entry": "0042c431",
      "c": "\nvoid FUN_0042c431(void)\n\n{\n  int unaff_EBP;\n  \n  if (*(char *)(unaff_EBP + -0x1d) != '\\0') {\n    ___acrt_unlock(3);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_lowio_create_handle_array",
      "entry": "0042c479",
      "c": "\n/* Library Function - Single Match\n    ___acrt_lowio_create_handle_array\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 * ___acrt_lowio_create_handle_array(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  \n  puVar2 = (undefined4 *)__calloc_base(0x40,0x30);\n  if (puVar2 == (undefined4 *)0x0) {\n    puVar2 = (undefined4 *)0x0;\n  }\n  else if (puVar2 != puVar2 + 0x300) {\n    puVar3 = puVar2 + 8;\n    do {\n      ___acrt_InitializeCriticalSectionEx_12((LPCRITICAL_SECTION)(puVar3 + -8),4000,0);\n      puVar3[-2] = 0xffffffff;\n      *puVar3 = 0;\n      puVar3[1] = 0;\n      puVar1 = puVar3 + 4;\n      puVar3[2] = 0xa0a0000;\n      *(undefined1 *)(puVar3 + 3) = 10;\n      *(byte *)((int)puVar3 + 0xd) = *(byte *)((int)puVar3 + 0xd) & 0xf8;\n      *(undefined1 *)((int)puVar3 + 0xe) = 0;\n      puVar3 = puVar3 + 0xc;\n    } while (puVar1 != puVar2 + 0x300);\n  }\n  FID_conflict__free((void *)0x0);\n  return puVar2;\n}\n\n"
    },
    {
      "name": "___acrt_lowio_destroy_handle_array",
      "entry": "0042c4f3",
      "c": "\n/* Library Function - Single Match\n    ___acrt_lowio_destroy_handle_array\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_lowio_destroy_handle_array(LPCRITICAL_SECTION param_1)\n\n{\n  LPCRITICAL_SECTION lpCriticalSection;\n  \n  if (param_1 != (LPCRITICAL_SECTION)0x0) {\n    lpCriticalSection = param_1;\n    if (param_1 != param_1 + 0x80) {\n      do {\n        DeleteCriticalSection(lpCriticalSection);\n        lpCriticalSection = lpCriticalSection + 2;\n      } while (lpCriticalSection != param_1 + 0x80);\n    }\n    FID_conflict__free(param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_lowio_ensure_fh_exists",
      "entry": "0042c528",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    ___acrt_lowio_ensure_fh_exists\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __cdecl ___acrt_lowio_ensure_fh_exists(uint param_1)\n\n{\n  int *piVar1;\n  undefined4 *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  \n  if (param_1 < 0x2000) {\n    uVar4 = 0;\n    ___acrt_lock(7);\n    iVar5 = 0;\n    iVar3 = DAT_00462490;\n    while (iVar3 <= (int)param_1) {\n      if ((&DAT_00462290)[iVar5] == 0) {\n        puVar2 = ___acrt_lowio_create_handle_array();\n        (&DAT_00462290)[iVar5] = puVar2;\n        if (puVar2 == (undefined4 *)0x0) {\n          uVar4 = 0xc;\n          break;\n        }\n        iVar3 = DAT_00462490 + 0x40;\n        DAT_00462490 = iVar3;\n      }\n      iVar5 = iVar5 + 1;\n    }\n    FUN_0042c5b7();\n  }\n  else {\n    piVar1 = __errno();\n    uVar4 = 9;\n    *piVar1 = 9;\n    FUN_00429087();\n  }\n  return uVar4;\n}\n\n"
    },
    {
      "name": "FUN_0042c5b7",
      "entry": "0042c5b7",
      "c": "\nvoid FUN_0042c5b7(void)\n\n{\n  ___acrt_unlock(7);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_lowio_lock_fh",
      "entry": "0042c5c0",
      "c": "\n/* Library Function - Single Match\n    ___acrt_lowio_lock_fh\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_lowio_lock_fh(uint param_1)\n\n{\n  EnterCriticalSection\n            ((LPCRITICAL_SECTION)((param_1 & 0x3f) * 0x30 + (&DAT_00462290)[(int)param_1 >> 6]));\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_lowio_unlock_fh",
      "entry": "0042c5e3",
      "c": "\n/* Library Function - Single Match\n    ___acrt_lowio_unlock_fh\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_lowio_unlock_fh(uint param_1)\n\n{\n  LeaveCriticalSection\n            ((LPCRITICAL_SECTION)((param_1 & 0x3f) * 0x30 + (&DAT_00462290)[(int)param_1 >> 6]));\n  return;\n}\n\n"
    },
    {
      "name": "__free_osfhnd",
      "entry": "0042c606",
      "c": "\n/* Library Function - Single Match\n    __free_osfhnd\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __free_osfhnd(int param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  ulong *puVar3;\n  int iVar4;\n  DWORD nStdHandle;\n  \n  if ((-1 < param_1) && ((uint)param_1 < DAT_00462490)) {\n    iVar4 = (param_1 & 0x3fU) * 0x30;\n    if (((*(byte *)(iVar4 + 0x28 + (&DAT_00462290)[param_1 >> 6]) & 1) != 0) &&\n       (*(int *)(iVar4 + 0x18 + (&DAT_00462290)[param_1 >> 6]) != -1)) {\n      iVar1 = FUN_0042899b();\n      if (iVar1 == 1) {\n        if (param_1 == 0) {\n          nStdHandle = 0xfffffff6;\n        }\n        else if (param_1 == 1) {\n          nStdHandle = 0xfffffff5;\n        }\n        else {\n          if (param_1 != 2) goto LAB_0042c66c;\n          nStdHandle = 0xfffffff4;\n        }\n        SetStdHandle(nStdHandle,(HANDLE)0x0);\n      }\nLAB_0042c66c:\n      *(undefined4 *)(iVar4 + 0x18 + (&DAT_00462290)[param_1 >> 6]) = 0xffffffff;\n      return 0;\n    }\n  }\n  piVar2 = __errno();\n  *piVar2 = 9;\n  puVar3 = ___doserrno();\n  *puVar3 = 0;\n  return -1;\n}\n\n"
    },
    {
      "name": "__get_osfhandle",
      "entry": "0042c697",
      "c": "\n/* Library Function - Single Match\n    __get_osfhandle\n   \n   Library: Visual Studio 2015 Release */\n\nintptr_t __cdecl __get_osfhandle(int _FileHandle)\n\n{\n  ulong *puVar1;\n  int *piVar2;\n  int iVar3;\n  \n  if (_FileHandle == -2) {\n    puVar1 = ___doserrno();\n    *puVar1 = 0;\n    piVar2 = __errno();\n    *piVar2 = 9;\n  }\n  else {\n    if ((-1 < _FileHandle) && ((uint)_FileHandle < DAT_00462490)) {\n      iVar3 = (_FileHandle & 0x3fU) * 0x30;\n      if ((*(byte *)((&DAT_00462290)[_FileHandle >> 6] + 0x28 + iVar3) & 1) != 0) {\n        return *(intptr_t *)((&DAT_00462290)[_FileHandle >> 6] + 0x18 + iVar3);\n      }\n    }\n    puVar1 = ___doserrno();\n    *puVar1 = 0;\n    piVar2 = __errno();\n    *piVar2 = 9;\n    FUN_00429087();\n  }\n  return -1;\n}\n\n"
    },
    {
      "name": "___acrt_locale_free_monetary",
      "entry": "0042c701",
      "c": "\n/* Library Function - Single Match\n    ___acrt_locale_free_monetary\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid __cdecl ___acrt_locale_free_monetary(int param_1)\n\n{\n  if (param_1 != 0) {\n    if (*(undefined **)(param_1 + 0xc) != PTR_DAT_0043eeac) {\n      FID_conflict__free(*(undefined **)(param_1 + 0xc));\n    }\n    if (*(undefined **)(param_1 + 0x10) != PTR_DAT_0043eeb0) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x10));\n    }\n    if (*(undefined **)(param_1 + 0x14) != PTR_DAT_0043eeb4) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x14));\n    }\n    if (*(undefined **)(param_1 + 0x18) != PTR_DAT_0043eeb8) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x18));\n    }\n    if (*(undefined **)(param_1 + 0x1c) != PTR_DAT_0043eebc) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x1c));\n    }\n    if (*(undefined **)(param_1 + 0x20) != PTR_DAT_0043eec0) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x20));\n    }\n    if (*(undefined **)(param_1 + 0x24) != PTR_DAT_0043eec4) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x24));\n    }\n    if (*(undefined **)(param_1 + 0x38) != PTR_DAT_0043eed8) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x38));\n    }\n    if (*(undefined **)(param_1 + 0x3c) != PTR_DAT_0043eedc) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x3c));\n    }\n    if (*(undefined **)(param_1 + 0x40) != PTR_DAT_0043eee0) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x40));\n    }\n    if (*(undefined **)(param_1 + 0x44) != PTR_DAT_0043eee4) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x44));\n    }\n    if (*(undefined **)(param_1 + 0x48) != PTR_DAT_0043eee8) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x48));\n    }\n    if (*(undefined **)(param_1 + 0x4c) != PTR_DAT_0043eeec) {\n      FID_conflict__free(*(undefined **)(param_1 + 0x4c));\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_locale_free_numeric",
      "entry": "0042c7ff",
      "c": "\n/* Library Function - Single Match\n    ___acrt_locale_free_numeric\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid __cdecl ___acrt_locale_free_numeric(undefined4 *param_1)\n\n{\n  if (param_1 != (undefined4 *)0x0) {\n    if ((undefined *)*param_1 != PTR_DAT_0043eea0) {\n      FID_conflict__free((undefined *)*param_1);\n    }\n    if ((undefined *)param_1[1] != PTR_DAT_0043eea4) {\n      FID_conflict__free((undefined *)param_1[1]);\n    }\n    if ((undefined *)param_1[2] != PTR_DAT_0043eea8) {\n      FID_conflict__free((undefined *)param_1[2]);\n    }\n    if ((undefined *)param_1[0xc] != PTR_DAT_0043eed0) {\n      FID_conflict__free((undefined *)param_1[0xc]);\n    }\n    if ((undefined *)param_1[0xd] != PTR_DAT_0043eed4) {\n      FID_conflict__free((undefined *)param_1[0xd]);\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "free_crt_array_internal",
      "entry": "0042c868",
      "c": "\n/* Library Function - Single Match\n    void __cdecl free_crt_array_internal(void const * * const,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl free_crt_array_internal(void **param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  uVar1 = ~-(uint)(param_1 + param_2 < param_1) &\n          (uint)((int)(param_1 + param_2) + (3 - (int)param_1)) >> 2;\n  if (uVar1 != 0) {\n    do {\n      FID_conflict__free(*param_1);\n      uVar2 = uVar2 + 1;\n      param_1 = param_1 + 1;\n    } while (uVar2 != uVar1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_locale_free_time",
      "entry": "0042c8a4",
      "c": "\n/* Library Function - Single Match\n    ___acrt_locale_free_time\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___acrt_locale_free_time(void **param_1)\n\n{\n  if (param_1 != (void **)0x0) {\n    free_crt_array_internal(param_1,7);\n    free_crt_array_internal(param_1 + 7,7);\n    free_crt_array_internal(param_1 + 0xe,0xc);\n    free_crt_array_internal(param_1 + 0x1a,0xc);\n    free_crt_array_internal(param_1 + 0x26,2);\n    FID_conflict__free(param_1[0x28]);\n    FID_conflict__free(param_1[0x29]);\n    FID_conflict__free(param_1[0x2a]);\n    free_crt_array_internal(param_1 + 0x2d,7);\n    free_crt_array_internal(param_1 + 0x34,7);\n    free_crt_array_internal(param_1 + 0x3b,0xc);\n    free_crt_array_internal(param_1 + 0x47,0xc);\n    free_crt_array_internal(param_1 + 0x53,2);\n    FID_conflict__free(param_1[0x55]);\n    FID_conflict__free(param_1[0x56]);\n    FID_conflict__free(param_1[0x57]);\n    FID_conflict__free(param_1[0x58]);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_GetStringTypeA",
      "entry": "0042c988",
      "c": "\n/* WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe */\n/* Library Function - Single Match\n    ___acrt_GetStringTypeA\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n___acrt_GetStringTypeA\n          (__crt_locale_pointers *param_1,DWORD param_2,LPCSTR param_3,int param_4,LPWORD param_5,\n          UINT param_6,int param_7)\n\n{\n  uint _Size;\n  LPCWSTR lpWideCharStr;\n  int cchSrc;\n  LPCWSTR pWVar1;\n  int local_1c;\n  int local_18;\n  char local_10;\n  int local_c;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&local_1c,param_1);\n  if (param_6 == 0) {\n    param_6 = *(UINT *)(local_18 + 8);\n  }\n  local_c = MultiByteToWideChar(param_6,(uint)(param_7 != 0) * 8 + 1,param_3,param_4,(LPWSTR)0x0,0);\n  if (local_c == 0) goto LAB_0042ca7f;\n  _Size = local_c * 2;\n  if ((_Size + 8 & -(uint)(_Size < _Size + 8)) == 0) {\n    lpWideCharStr = (LPCWSTR)0x0;\nLAB_0042ca40:\n    if (lpWideCharStr != (LPCWSTR)0x0) {\n      _memset(lpWideCharStr,0,_Size);\n      cchSrc = MultiByteToWideChar(param_6,1,param_3,param_4,lpWideCharStr,local_c);\n      if (cchSrc != 0) {\n        GetStringTypeW(param_2,lpWideCharStr,cchSrc,param_5);\n      }\n    }\n  }\n  else if ((-(uint)(_Size < _Size + 8) & _Size + 8) < 0x401) {\n    pWVar1 = (LPCWSTR)&stack0xffffffd8;\n    lpWideCharStr = (LPCWSTR)&stack0xffffffd8;\n    if (&stack0x00000000 != (undefined1 *)0x28) {\nLAB_0042ca39:\n      lpWideCharStr = pWVar1 + 4;\n      goto LAB_0042ca40;\n    }\n  }\n  else {\n    lpWideCharStr = (LPCWSTR)__malloc_base(-(uint)(_Size < _Size + 8) & _Size + 8);\n    if (lpWideCharStr != (LPCWSTR)0x0) {\n      lpWideCharStr[0] = L'\\xdddd';\n      lpWideCharStr[1] = L'\\0';\n      pWVar1 = lpWideCharStr;\n      goto LAB_0042ca39;\n    }\n  }\n  __freea_crt((int)lpWideCharStr);\nLAB_0042ca7f:\n  if (local_10 != '\\0') {\n    *(uint *)(local_1c + 0x350) = *(uint *)(local_1c + 0x350) & 0xfffffffd;\n  }\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_add_locale_ref",
      "entry": "0042caa5",
      "c": "\n/* Library Function - Single Match\n    ___acrt_add_locale_ref\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___acrt_add_locale_ref(int param_1)\n\n{\n  int *piVar1;\n  undefined4 *puVar2;\n  int iVar3;\n  \n  LOCK();\n  *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + 1;\n  UNLOCK();\n  piVar1 = *(int **)(param_1 + 0x7c);\n  if (piVar1 != (int *)0x0) {\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    UNLOCK();\n  }\n  piVar1 = *(int **)(param_1 + 0x84);\n  if (piVar1 != (int *)0x0) {\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    UNLOCK();\n  }\n  piVar1 = *(int **)(param_1 + 0x80);\n  if (piVar1 != (int *)0x0) {\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    UNLOCK();\n  }\n  piVar1 = *(int **)(param_1 + 0x8c);\n  if (piVar1 != (int *)0x0) {\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    UNLOCK();\n  }\n  puVar2 = (undefined4 *)(param_1 + 0x28);\n  iVar3 = 6;\n  do {\n    if (((undefined *)puVar2[-2] != &DAT_0043e968) &&\n       (piVar1 = (int *)*puVar2, piVar1 != (int *)0x0)) {\n      LOCK();\n      *piVar1 = *piVar1 + 1;\n      UNLOCK();\n    }\n    if ((puVar2[-3] != 0) && (piVar1 = (int *)puVar2[-1], piVar1 != (int *)0x0)) {\n      LOCK();\n      *piVar1 = *piVar1 + 1;\n      UNLOCK();\n    }\n    puVar2 = puVar2 + 4;\n    iVar3 = iVar3 + -1;\n  } while (iVar3 != 0);\n  ___acrt_locale_add_lc_time_reference(*(undefined ***)(param_1 + 0x9c));\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_free_locale",
      "entry": "0042cb22",
      "c": "\n/* Library Function - Single Match\n    ___acrt_free_locale\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid __cdecl ___acrt_free_locale(void *param_1)\n\n{\n  int *piVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  int local_8;\n  \n  if ((((*(undefined ***)((int)param_1 + 0x88) != (undefined **)0x0) &&\n       (*(undefined ***)((int)param_1 + 0x88) != &PTR_DAT_0043eea0)) &&\n      (*(int **)((int)param_1 + 0x7c) != (int *)0x0)) && (**(int **)((int)param_1 + 0x7c) == 0)) {\n    piVar1 = *(int **)((int)param_1 + 0x84);\n    if ((piVar1 != (int *)0x0) && (*piVar1 == 0)) {\n      FID_conflict__free(piVar1);\n      ___acrt_locale_free_monetary(*(int *)((int)param_1 + 0x88));\n    }\n    piVar1 = *(int **)((int)param_1 + 0x80);\n    if ((piVar1 != (int *)0x0) && (*piVar1 == 0)) {\n      FID_conflict__free(piVar1);\n      ___acrt_locale_free_numeric(*(undefined4 **)((int)param_1 + 0x88));\n    }\n    FID_conflict__free(*(void **)((int)param_1 + 0x7c));\n    FID_conflict__free(*(void **)((int)param_1 + 0x88));\n  }\n  if ((*(int **)((int)param_1 + 0x8c) != (int *)0x0) && (**(int **)((int)param_1 + 0x8c) == 0)) {\n    FID_conflict__free((void *)(*(int *)((int)param_1 + 0x90) + -0xfe));\n    FID_conflict__free((void *)(*(int *)((int)param_1 + 0x94) + -0x80));\n    FID_conflict__free((void *)(*(int *)((int)param_1 + 0x98) + -0x80));\n    FID_conflict__free(*(void **)((int)param_1 + 0x8c));\n  }\n  ___acrt_locale_free_lc_time_if_unreferenced(*(undefined ***)((int)param_1 + 0x9c));\n  puVar2 = (undefined4 *)((int)param_1 + 0xa0);\n  local_8 = 6;\n  puVar3 = (undefined4 *)((int)param_1 + 0x28);\n  do {\n    if ((((undefined *)puVar3[-2] != &DAT_0043e968) &&\n        (piVar1 = (int *)*puVar3, piVar1 != (int *)0x0)) && (*piVar1 == 0)) {\n      FID_conflict__free(piVar1);\n      FID_conflict__free((void *)*puVar2);\n    }\n    if (((puVar3[-3] != 0) && (piVar1 = (int *)puVar3[-1], piVar1 != (int *)0x0)) && (*piVar1 == 0))\n    {\n      FID_conflict__free(piVar1);\n    }\n    puVar2 = puVar2 + 1;\n    puVar3 = puVar3 + 4;\n    local_8 = local_8 + -1;\n  } while (local_8 != 0);\n  FID_conflict__free(param_1);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_locale_add_lc_time_reference",
      "entry": "0042cc6c",
      "c": "\n/* Library Function - Single Match\n    ___acrt_locale_add_lc_time_reference\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined * __cdecl ___acrt_locale_add_lc_time_reference(undefined **param_1)\n\n{\n  undefined **ppuVar1;\n  undefined *puVar2;\n  \n  if ((param_1 != (undefined **)0x0) && (param_1 != &PTR_DAT_00436a80)) {\n    LOCK();\n    ppuVar1 = param_1 + 0x2c;\n    puVar2 = *ppuVar1;\n    *ppuVar1 = *ppuVar1 + 1;\n    UNLOCK();\n    return puVar2 + 1;\n  }\n  return (undefined *)0x7fffffff;\n}\n\n"
    },
    {
      "name": "___acrt_locale_free_lc_time_if_unreferenced",
      "entry": "0042cc95",
      "c": "\n/* Library Function - Single Match\n    ___acrt_locale_free_lc_time_if_unreferenced\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nvoid __cdecl ___acrt_locale_free_lc_time_if_unreferenced(undefined **param_1)\n\n{\n  if (((param_1 != (undefined **)0x0) && (param_1 != &PTR_DAT_00436a80)) &&\n     (param_1[0x2c] == (undefined *)0x0)) {\n    ___acrt_locale_free_time(param_1);\n    FID_conflict__free(param_1);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_locale_release_lc_time_reference",
      "entry": "0042ccc5",
      "c": "\n/* Library Function - Single Match\n    ___acrt_locale_release_lc_time_reference\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined * __cdecl ___acrt_locale_release_lc_time_reference(undefined **param_1)\n\n{\n  undefined **ppuVar1;\n  undefined *puVar2;\n  \n  if ((param_1 != (undefined **)0x0) && (param_1 != &PTR_DAT_00436a80)) {\n    LOCK();\n    ppuVar1 = param_1 + 0x2c;\n    puVar2 = *ppuVar1;\n    *ppuVar1 = *ppuVar1 + -1;\n    UNLOCK();\n    return puVar2 + -1;\n  }\n  return (undefined *)0x7fffffff;\n}\n\n"
    },
    {
      "name": "___acrt_release_locale_ref",
      "entry": "0042ccee",
      "c": "\n/* Library Function - Single Match\n    ___acrt_release_locale_ref\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___acrt_release_locale_ref(int param_1)\n\n{\n  int *piVar1;\n  undefined4 *puVar2;\n  int iVar3;\n  \n  if (param_1 != 0) {\n    LOCK();\n    *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + -1;\n    UNLOCK();\n    piVar1 = *(int **)(param_1 + 0x7c);\n    if (piVar1 != (int *)0x0) {\n      LOCK();\n      *piVar1 = *piVar1 + -1;\n      UNLOCK();\n    }\n    piVar1 = *(int **)(param_1 + 0x84);\n    if (piVar1 != (int *)0x0) {\n      LOCK();\n      *piVar1 = *piVar1 + -1;\n      UNLOCK();\n    }\n    piVar1 = *(int **)(param_1 + 0x80);\n    if (piVar1 != (int *)0x0) {\n      LOCK();\n      *piVar1 = *piVar1 + -1;\n      UNLOCK();\n    }\n    piVar1 = *(int **)(param_1 + 0x8c);\n    if (piVar1 != (int *)0x0) {\n      LOCK();\n      *piVar1 = *piVar1 + -1;\n      UNLOCK();\n    }\n    puVar2 = (undefined4 *)(param_1 + 0x28);\n    iVar3 = 6;\n    do {\n      if (((undefined *)puVar2[-2] != &DAT_0043e968) &&\n         (piVar1 = (int *)*puVar2, piVar1 != (int *)0x0)) {\n        LOCK();\n        *piVar1 = *piVar1 + -1;\n        UNLOCK();\n      }\n      if ((puVar2[-3] != 0) && (piVar1 = (int *)puVar2[-1], piVar1 != (int *)0x0)) {\n        LOCK();\n        *piVar1 = *piVar1 + -1;\n        UNLOCK();\n      }\n      puVar2 = puVar2 + 4;\n      iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    ___acrt_locale_release_lc_time_reference(*(undefined ***)(param_1 + 0x9c));\n  }\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_update_thread_locale_data",
      "entry": "0042cd6f",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    ___acrt_update_thread_locale_data\n   \n   Library: Visual Studio 2015 Release */\n\nundefined ** ___acrt_update_thread_locale_data(void)\n\n{\n  __acrt_ptd *p_Var1;\n  undefined **ppuVar2;\n  \n  p_Var1 = ___acrt_getptd();\n  if (((*(uint *)(p_Var1 + 0x350) & DAT_0043eef0) == 0) ||\n     (ppuVar2 = *(undefined ***)(p_Var1 + 0x4c), ppuVar2 == (undefined **)0x0)) {\n    ___acrt_lock(4);\n    ppuVar2 = __updatetlocinfoEx_nolock((undefined4 *)(p_Var1 + 0x4c),DAT_00462288);\n    FUN_0042cdd5();\n    if (ppuVar2 == (undefined **)0x0) {\n                    /* WARNING: Subroutine does not return */\n      _abort();\n    }\n  }\n  return ppuVar2;\n}\n\n"
    },
    {
      "name": "FUN_0042cdd5",
      "entry": "0042cdd5",
      "c": "\nvoid FUN_0042cdd5(void)\n\n{\n  ___acrt_unlock(4);\n  return;\n}\n\n"
    },
    {
      "name": "__updatetlocinfoEx_nolock",
      "entry": "0042cde6",
      "c": "\n/* Library Function - Single Match\n    __updatetlocinfoEx_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nundefined ** __cdecl __updatetlocinfoEx_nolock(undefined4 *param_1,undefined **param_2)\n\n{\n  undefined **ppuVar1;\n  \n  if ((param_2 == (undefined **)0x0) || (param_1 == (undefined4 *)0x0)) {\n    param_2 = (undefined **)0x0;\n  }\n  else {\n    ppuVar1 = (undefined **)*param_1;\n    if (ppuVar1 != param_2) {\n      *param_1 = param_2;\n      ___acrt_add_locale_ref((int)param_2);\n      if (((ppuVar1 != (undefined **)0x0) &&\n          (___acrt_release_locale_ref((int)ppuVar1), ppuVar1[3] == (undefined *)0x0)) &&\n         (ppuVar1 != &PTR_DAT_0043e8a8)) {\n        ___acrt_free_locale(ppuVar1);\n      }\n    }\n  }\n  return param_2;\n}\n\n"
    },
    {
      "name": "___hw_cw_sse2",
      "entry": "0042ce36",
      "c": "\n/* Library Function - Single Match\n    ___hw_cw_sse2\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl ___hw_cw_sse2(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar1 = 0;\n  if ((param_1 & 0x10) != 0) {\n    uVar1 = 0x80;\n  }\n  if ((param_1 & 8) != 0) {\n    uVar1 = uVar1 | 0x200;\n  }\n  if ((param_1 & 4) != 0) {\n    uVar1 = uVar1 | 0x400;\n  }\n  if ((param_1 & 2) != 0) {\n    uVar1 = uVar1 | 0x800;\n  }\n  if ((param_1 & 1) != 0) {\n    uVar1 = uVar1 | 0x1000;\n  }\n  if ((param_1 & 0x80000) != 0) {\n    uVar1 = uVar1 | 0x100;\n  }\n  uVar2 = param_1 & 0x300;\n  if (uVar2 != 0) {\n    if (uVar2 == 0x100) {\n      uVar1 = uVar1 | 0x2000;\n    }\n    else if (uVar2 == 0x200) {\n      uVar1 = uVar1 | 0x4000;\n    }\n    else if (uVar2 == 0x300) {\n      uVar1 = uVar1 | 0x6000;\n    }\n  }\n  uVar2 = param_1 & 0x3000000;\n  if (uVar2 == 0x1000000) {\n    uVar1 = uVar1 | 0x8040;\n  }\n  else {\n    if (uVar2 == 0x2000000) {\n      return uVar1 | 0x40;\n    }\n    if (uVar2 == 0x3000000) {\n      return uVar1 | 0x8000;\n    }\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "__clearfp",
      "entry": "0042cee1",
      "c": "\n/* Library Function - Single Match\n    __clearfp\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl __clearfp(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ushort in_FPUStatusWord;\n  \n  if (DAT_00461d20 < 1) {\n    uVar1 = 0;\n    if ((in_FPUStatusWord & 0x3f) != 0) {\n      if ((in_FPUStatusWord & 1) != 0) {\n        uVar1 = 0x10;\n      }\n      if ((in_FPUStatusWord & 4) != 0) {\n        uVar1 = uVar1 | 8;\n      }\n      if ((in_FPUStatusWord & 8) != 0) {\n        uVar1 = uVar1 | 4;\n      }\n      if ((in_FPUStatusWord & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n      }\n      if ((in_FPUStatusWord & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n      }\n      if ((in_FPUStatusWord & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n      }\n    }\n  }\n  else {\n    uVar1 = 0;\n    uVar2 = 0;\n    if ((in_FPUStatusWord & 0x3f) != 0) {\n      if ((in_FPUStatusWord & 1) != 0) {\n        uVar2 = 0x10;\n      }\n      if ((in_FPUStatusWord & 4) != 0) {\n        uVar2 = uVar2 | 8;\n      }\n      if ((in_FPUStatusWord & 8) != 0) {\n        uVar2 = uVar2 | 4;\n      }\n      if ((in_FPUStatusWord & 0x10) != 0) {\n        uVar2 = uVar2 | 2;\n      }\n      if ((in_FPUStatusWord & 0x20) != 0) {\n        uVar2 = uVar2 | 1;\n      }\n      if ((in_FPUStatusWord & 2) != 0) {\n        uVar2 = uVar2 | 0x80000;\n      }\n    }\n    if ((MXCSR & 0x3f) != 0) {\n      if ((MXCSR & 1) != 0) {\n        uVar1 = 0x10;\n      }\n      if ((MXCSR & 4) != 0) {\n        uVar1 = uVar1 | 8;\n      }\n      if ((MXCSR & 8) != 0) {\n        uVar1 = uVar1 | 4;\n      }\n      if ((MXCSR & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n      }\n      if ((MXCSR & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n      }\n      if ((MXCSR & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n      }\n    }\n    uVar1 = uVar1 | uVar2;\n    MXCSR = MXCSR & 0xffffffc0;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "__control87",
      "entry": "0042cfbf",
      "c": "\n/* Library Function - Single Match\n    __control87\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl __control87(uint _NewValue,uint _Mask)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ushort uVar3;\n  uint uVar4;\n  ushort in_FPUControlWord;\n  \n  uVar1 = 0;\n  if ((in_FPUControlWord & 1) != 0) {\n    uVar1 = 0x10;\n  }\n  if ((in_FPUControlWord & 4) != 0) {\n    uVar1 = uVar1 | 8;\n  }\n  if ((in_FPUControlWord & 8) != 0) {\n    uVar1 = uVar1 | 4;\n  }\n  if ((in_FPUControlWord & 0x10) != 0) {\n    uVar1 = uVar1 | 2;\n  }\n  if ((in_FPUControlWord & 0x20) != 0) {\n    uVar1 = uVar1 | 1;\n  }\n  if ((in_FPUControlWord & 2) != 0) {\n    uVar1 = uVar1 | 0x80000;\n  }\n  uVar3 = in_FPUControlWord & 0xc00;\n  if ((in_FPUControlWord & 0xc00) != 0) {\n    if (uVar3 == 0x400) {\n      uVar1 = uVar1 | 0x100;\n    }\n    else if (uVar3 == 0x800) {\n      uVar1 = uVar1 | 0x200;\n    }\n    else if (uVar3 == 0xc00) {\n      uVar1 = uVar1 | 0x300;\n    }\n  }\n  if ((in_FPUControlWord & 0x300) == 0) {\n    uVar1 = uVar1 | 0x20000;\n  }\n  else if ((in_FPUControlWord & 0x300) == 0x200) {\n    uVar1 = uVar1 | 0x10000;\n  }\n  if ((in_FPUControlWord & 0x1000) != 0) {\n    uVar1 = uVar1 | 0x40000;\n  }\n  uVar4 = ~_Mask & uVar1 | _NewValue & _Mask;\n  if (uVar4 != uVar1) {\n    uVar1 = __hw_cw(uVar4);\n    uVar4 = 0;\n    if ((uVar1 & 1) != 0) {\n      uVar4 = 0x10;\n    }\n    if ((uVar1 & 4) != 0) {\n      uVar4 = uVar4 | 8;\n    }\n    if ((uVar1 & 8) != 0) {\n      uVar4 = uVar4 | 4;\n    }\n    if ((uVar1 & 0x10) != 0) {\n      uVar4 = uVar4 | 2;\n    }\n    if ((uVar1 & 0x20) != 0) {\n      uVar4 = uVar4 | 1;\n    }\n    if ((uVar1 & 2) != 0) {\n      uVar4 = uVar4 | 0x80000;\n    }\n    uVar2 = uVar1 & 0xc00;\n    if ((uVar1 & 0xc00) != 0) {\n      if (uVar2 == 0x400) {\n        uVar4 = uVar4 | 0x100;\n      }\n      else if (uVar2 == 0x800) {\n        uVar4 = uVar4 | 0x200;\n      }\n      else if (uVar2 == 0xc00) {\n        uVar4 = uVar4 | 0x300;\n      }\n    }\n    if ((uVar1 & 0x300) == 0) {\n      uVar4 = uVar4 | 0x20000;\n    }\n    else if ((uVar1 & 0x300) == 0x200) {\n      uVar4 = uVar4 | 0x10000;\n    }\n    if ((uVar1 & 0x1000) != 0) {\n      uVar4 = uVar4 | 0x40000;\n    }\n  }\n  uVar1 = uVar4;\n  if (0 < DAT_00461d20) {\n    uVar2 = 0;\n    if ((char)MXCSR < '\\0') {\n      uVar2 = 0x10;\n    }\n    if ((MXCSR & 0x200) != 0) {\n      uVar2 = uVar2 | 8;\n    }\n    if ((MXCSR & 0x400) != 0) {\n      uVar2 = uVar2 | 4;\n    }\n    if ((MXCSR & 0x800) != 0) {\n      uVar2 = uVar2 | 2;\n    }\n    if ((MXCSR & 0x1000) != 0) {\n      uVar2 = uVar2 | 1;\n    }\n    if ((MXCSR & 0x100) != 0) {\n      uVar2 = uVar2 | 0x80000;\n    }\n    uVar1 = MXCSR & 0x6000;\n    if (uVar1 != 0) {\n      if (uVar1 == 0x2000) {\n        uVar2 = uVar2 | 0x100;\n      }\n      else if (uVar1 == 0x4000) {\n        uVar2 = uVar2 | 0x200;\n      }\n      else if (uVar1 == 0x6000) {\n        uVar2 = uVar2 | 0x300;\n      }\n    }\n    uVar1 = MXCSR & 0x8040;\n    if (uVar1 == 0x40) {\n      uVar2 = uVar2 | 0x2000000;\n    }\n    else if (uVar1 == 0x8000) {\n      uVar2 = uVar2 | 0x3000000;\n    }\n    else if (uVar1 == 0x8040) {\n      uVar2 = uVar2 | 0x1000000;\n    }\n    uVar1 = ~(_Mask & 0x308031f) & uVar2 | _Mask & 0x308031f & _NewValue;\n    if (uVar1 != uVar2) {\n      uVar1 = ___hw_cw_sse2(uVar1);\n      ___set_fpsr_sse2(uVar1);\n      uVar2 = 0;\n      if ((char)MXCSR < '\\0') {\n        uVar2 = 0x10;\n      }\n      if ((MXCSR & 0x200) != 0) {\n        uVar2 = uVar2 | 8;\n      }\n      if ((MXCSR & 0x400) != 0) {\n        uVar2 = uVar2 | 4;\n      }\n      if ((MXCSR & 0x800) != 0) {\n        uVar2 = uVar2 | 2;\n      }\n      if ((MXCSR & 0x1000) != 0) {\n        uVar2 = uVar2 | 1;\n      }\n      if ((MXCSR & 0x100) != 0) {\n        uVar2 = uVar2 | 0x80000;\n      }\n      uVar1 = MXCSR & 0x6000;\n      if (uVar1 != 0) {\n        if (uVar1 == 0x2000) {\n          uVar2 = uVar2 | 0x100;\n        }\n        else if (uVar1 == 0x4000) {\n          uVar2 = uVar2 | 0x200;\n        }\n        else if (uVar1 == 0x6000) {\n          uVar2 = uVar2 | 0x300;\n        }\n      }\n      uVar1 = MXCSR & 0x8040;\n      if (uVar1 == 0x40) {\n        uVar2 = uVar2 | 0x2000000;\n      }\n      else if (uVar1 == 0x8000) {\n        uVar2 = uVar2 | 0x3000000;\n      }\n      else if (uVar1 == 0x8040) {\n        uVar2 = uVar2 | 0x1000000;\n      }\n    }\n    uVar1 = uVar2 | uVar4;\n    if (((uVar2 ^ uVar4) & 0x8031f) != 0) {\n      uVar1 = uVar1 | 0x80000000;\n    }\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "__hw_cw",
      "entry": "0042d2c1",
      "c": "\n/* Library Function - Single Match\n    __hw_cw\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl __hw_cw(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar1 = (uint)((param_1 & 0x10) != 0);\n  if ((param_1 & 8) != 0) {\n    uVar1 = uVar1 | 4;\n  }\n  if ((param_1 & 4) != 0) {\n    uVar1 = uVar1 | 8;\n  }\n  if ((param_1 & 2) != 0) {\n    uVar1 = uVar1 | 0x10;\n  }\n  if ((param_1 & 1) != 0) {\n    uVar1 = uVar1 | 0x20;\n  }\n  if ((param_1 & 0x80000) != 0) {\n    uVar1 = uVar1 | 2;\n  }\n  uVar2 = param_1 & 0x300;\n  if (uVar2 != 0) {\n    if (uVar2 == 0x100) {\n      uVar1 = uVar1 | 0x400;\n    }\n    else if (uVar2 == 0x200) {\n      uVar1 = uVar1 | 0x800;\n    }\n    else if (uVar2 == 0x300) {\n      uVar1 = uVar1 | 0xc00;\n    }\n  }\n  if ((param_1 & 0x30000) == 0) {\n    uVar1 = uVar1 | 0x300;\n  }\n  else if ((param_1 & 0x30000) == 0x10000) {\n    uVar1 = uVar1 | 0x200;\n  }\n  if ((param_1 & 0x40000) != 0) {\n    uVar1 = uVar1 | 0x1000;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "___acrt_fp_strflt_to_string",
      "entry": "0042d35a",
      "c": "\n/* Library Function - Single Match\n    ___acrt_fp_strflt_to_string\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl ___acrt_fp_strflt_to_string(uint *param_1,uint param_2,int param_3,int param_4)\n\n{\n  uint uVar1;\n  int *piVar2;\n  char *pcVar3;\n  uint *puVar4;\n  char cVar5;\n  char *pcVar6;\n  int iVar7;\n  \n  if ((param_1 != (uint *)0x0) && (param_2 != 0)) {\n    *(undefined1 *)param_1 = 0;\n    iVar7 = param_3;\n    if (param_3 < 1) {\n      iVar7 = 0;\n    }\n    if (param_2 <= iVar7 + 1U) {\n      piVar2 = __errno();\n      iVar7 = 0x22;\n      goto LAB_0042d36e;\n    }\n    if (param_4 != 0) {\n      pcVar3 = (char *)((int)param_1 + 1);\n      pcVar6 = *(char **)(param_4 + 8);\n      *(undefined1 *)param_1 = 0x30;\n      if (0 < param_3) {\n        do {\n          cVar5 = *pcVar6;\n          if (cVar5 == '\\0') {\n            cVar5 = '0';\n          }\n          else {\n            pcVar6 = pcVar6 + 1;\n          }\n          *pcVar3 = cVar5;\n          pcVar3 = pcVar3 + 1;\n          param_3 = param_3 + -1;\n        } while (0 < param_3);\n      }\n      *pcVar3 = '\\0';\n      if ((-1 < param_3) && ('4' < *pcVar6)) {\n        while (pcVar3 = pcVar3 + -1, *pcVar3 == '9') {\n          *pcVar3 = '0';\n        }\n        *pcVar3 = *pcVar3 + '\\x01';\n      }\n      if ((char)*param_1 == '1') {\n        *(int *)(param_4 + 4) = *(int *)(param_4 + 4) + 1;\n      }\n      else {\n        puVar4 = (uint *)((int)param_1 + 1);\n        do {\n          uVar1 = *puVar4;\n          puVar4 = (uint *)((int)puVar4 + 1);\n        } while ((char)uVar1 != '\\0');\n        FUN_00420320(param_1,(uint *)((int)param_1 + 1),\n                     (uint)((int)puVar4 + (1 - ((int)param_1 + 2))));\n      }\n      return 0;\n    }\n  }\n  piVar2 = __errno();\n  iVar7 = 0x16;\nLAB_0042d36e:\n  *piVar2 = iVar7;\n  FUN_00429087();\n  return iVar7;\n}\n\n"
    },
    {
      "name": "scoped_fp_state_reset",
      "entry": "0042d416",
      "c": "\n/* Library Function - Single Match\n    public: __thiscall `anonymous namespace'::scoped_fp_state_reset::scoped_fp_state_reset(void)\n   \n   Library: Visual Studio 2015 Release */\n\nscoped_fp_state_reset * __thiscall\n_anon_3568B024::scoped_fp_state_reset::scoped_fp_state_reset(scoped_fp_state_reset *this)\n\n{\n  fegetenv((uint *)this);\n  if (((byte)*(undefined4 *)this & 0x1f) == 0x1f) {\n    this[8] = (scoped_fp_state_reset)0x0;\n  }\n  else {\n    feholdexcept((uint *)this);\n    this[8] = (scoped_fp_state_reset)0x1;\n  }\n  return this;\n}\n\n"
    },
    {
      "name": "divide",
      "entry": "0042d440",
      "c": "\n/* WARNING: Removing unreachable block (ram,0x0042d7a7) */\n/* WARNING: Removing unreachable block (ram,0x0042d782) */\n/* Library Function - Single Match\n    unsigned __int64 __cdecl __crt_strtox::divide(struct __crt_strtox::big_integer &,struct\n   __crt_strtox::big_integer const &)\n   \n   Library: Visual Studio 2015 Release */\n\n__uint64 __cdecl __crt_strtox::divide(big_integer *param_1,big_integer *param_2)\n\n{\n  int iVar1;\n  ulonglong uVar2;\n  uint uVar3;\n  uint extraout_ECX;\n  uint extraout_ECX_00;\n  uint uVar4;\n  uint uVar5;\n  big_integer *pbVar6;\n  uint uVar7;\n  big_integer *pbVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  bool bVar11;\n  undefined8 uVar12;\n  longlong lVar13;\n  ulonglong uVar14;\n  undefined1 local_21c [460];\n  big_integer *local_50;\n  undefined4 local_4c;\n  undefined8 local_48;\n  int local_40;\n  uint local_3c;\n  uint local_38;\n  uint local_34;\n  uint local_2c;\n  int local_28;\n  uint local_24;\n  int local_20;\n  int local_1c;\n  uint local_18;\n  big_integer *local_14;\n  uint local_10;\n  uint local_c;\n  uint local_8;\n  \n  iVar1 = *(int *)param_1;\n  if (iVar1 == 0) {\n    return 0;\n  }\n  local_3c = *(uint *)param_2;\n  if (local_3c == 0) {\n    return 0;\n  }\n  local_10 = iVar1 - 1;\n  uVar7 = local_3c - 1;\n  if (uVar7 == 0) {\n    local_2c = *(uint *)(param_2 + 4);\n    if (local_2c == 1) {\n      uVar7 = *(uint *)(param_1 + 4);\n      *(undefined4 *)param_1 = 0;\n      _memcpy_s(param_1 + 4,0x1cc,local_21c,0);\n      return (__uint64)uVar7;\n    }\n    if (local_10 == 0) {\n      uVar7 = *(uint *)(param_1 + 4);\n      *(undefined4 *)param_1 = 0;\n      _memcpy_s(param_1 + 4,0x1cc,local_21c,0);\n      uVar5 = uVar7 % local_2c;\n      *(uint *)(param_1 + 4) = uVar5;\n      *(uint *)param_1 = (uint)(uVar5 != 0);\n      return (ulonglong)uVar7 / (ulonglong)local_2c;\n    }\n    uVar7 = 0;\n    local_c = 0;\n    local_8 = 0;\n    local_14 = (big_integer *)0x0;\n    if (local_10 != 0xffffffff) {\n      pbVar6 = param_1 + iVar1 * 4;\n      local_20 = iVar1;\n      do {\n        uVar12 = __aulldvrm(*(uint *)pbVar6,uVar7,local_2c,0);\n        local_48 = CONCAT44((int)((ulonglong)uVar12 >> 0x20),(undefined4)local_48);\n        pbVar6 = pbVar6 + -4;\n        local_14 = param_1;\n        local_8 = local_c;\n        local_20 = local_20 + -1;\n        uVar7 = extraout_ECX;\n        local_c = (int)uVar12;\n      } while (local_20 != 0);\n      local_20 = 0;\n    }\n    *(undefined4 *)param_1 = 0;\n    _memcpy_s(param_1 + 4,0x1cc,local_21c,0);\n    *(uint *)(param_1 + 4) = uVar7;\n    *(big_integer **)(param_1 + 8) = local_14;\n    *(uint *)param_1 = (local_14 != (big_integer *)0x0) + 1;\n    return CONCAT44(local_8,local_c);\n  }\n  if (uVar7 <= local_10) {\n    local_20 = local_10 - uVar7;\n    if (local_20 <= (int)local_10) {\n      pbVar6 = param_1 + iVar1 * 4;\n      pbVar8 = param_2 + (local_10 - local_20) * 4 + 4;\n      uVar7 = local_10;\n      do {\n        if (*(int *)pbVar8 != *(int *)pbVar6) {\n          if (*(uint *)(param_1 + uVar7 * 4 + 4) <= *(uint *)(param_2 + (uVar7 - local_20) * 4 + 4))\n          goto LAB_0042d5f6;\n          break;\n        }\n        uVar7 = uVar7 - 1;\n        pbVar8 = pbVar8 + -4;\n        pbVar6 = pbVar6 + -4;\n      } while (local_20 <= (int)uVar7);\n    }\n    local_20 = local_20 + 1;\nLAB_0042d5f6:\n    if (local_20 != 0) {\n      local_38 = *(uint *)(param_2 + local_3c * 4);\n      local_24 = *(uint *)(param_2 + local_3c * 4 + -4);\n      local_28 = 0x1f;\n      if (local_38 != 0) {\n        for (; local_38 >> local_28 == 0; local_28 = local_28 + -1) {\n        }\n      }\n      if (local_38 == 0) {\n        local_28 = 0x20;\n      }\n      else {\n        local_28 = 0x1f - local_28;\n      }\n      local_40 = 0x20 - local_28;\n      if (local_28 != 0) {\n        uVar7 = local_24 >> ((byte)local_40 & 0x1f);\n        local_24 = local_24 << ((byte)local_28 & 0x1f);\n        local_38 = local_38 << ((byte)local_28 & 0x1f) | uVar7;\n        if (2 < local_3c) {\n          local_24 = local_24 | *(uint *)(param_2 + local_3c * 4 + -8) >> ((byte)local_40 & 0x1f);\n        }\n      }\n      local_4c = 0;\n      local_20 = local_20 + -1;\n      if (local_20 < 0) {\n        uVar10 = 0;\n        local_4c = 0;\n      }\n      else {\n        local_14 = param_1 + local_20 * 4 + 4;\n        local_c = local_20 + local_3c;\n        local_50 = param_1 + local_c * 4 + -4;\n        uVar10 = local_4c;\n        do {\n          local_4c = uVar10;\n          if (local_10 < local_c) {\n            local_34 = 0;\n          }\n          else {\n            local_34 = *(uint *)(local_50 + 8);\n          }\n          uVar7 = *(uint *)(local_50 + 4);\n          local_18 = *(uint *)local_50;\n          local_2c = 0;\n          local_8 = local_34;\n          if (local_28 != 0) {\n            uVar7 = local_18 >> ((byte)local_40 & 0x1f);\n            lVar13 = __allshl((byte)local_28,local_34);\n            local_8 = (uint)((ulonglong)lVar13 >> 0x20);\n            uVar7 = uVar7 | (uint)lVar13;\n            local_18 = local_18 << ((byte)local_28 & 0x1f);\n            if (2 < local_c) {\n              local_18 = local_18 |\n                         *(uint *)(param_1 + (local_3c + local_20) * 4 + -8) >>\n                         ((byte)local_40 & 0x1f);\n            }\n          }\n          local_48 = __aulldvrm(uVar7,local_8,local_38,0);\n          local_1c = (int)(local_48 >> 0x20);\n          local_8 = (uint)local_48;\n          local_2c = 0;\n          uVar14 = (ulonglong)extraout_ECX_00;\n          if (local_1c != 0) {\n            lVar13 = __allmul((uint)(local_48 - 0xffffffff),(int)(local_48 - 0xffffffff >> 0x20),\n                              local_38,0);\n            uVar14 = lVar13 + uVar14;\n            local_2c = (uint)(uVar14 >> 0x20);\n            local_48 = 0xffffffff;\n          }\n          local_1c = (int)(local_48 >> 0x20);\n          uVar7 = (uint)uVar14;\n          uVar2 = local_48;\n          if ((int)(uVar14 >> 0x20) == 0) {\n            while( true ) {\n              uVar5 = (uint)local_48;\n              local_8 = local_18;\n              uVar14 = __allmul(local_24,0,uVar5,(int)(local_48 >> 0x20));\n              if (uVar14 <= CONCAT44(uVar7,local_8)) break;\n              bVar11 = uVar5 != 0;\n              uVar5 = uVar5 - 1;\n              local_1c = local_1c + -1 + (uint)bVar11;\n              bVar11 = CARRY4(uVar7,local_38);\n              uVar7 = uVar7 + local_38;\n              local_48 = CONCAT44(local_1c,uVar5);\n              if (local_2c + bVar11 != 0) break;\n              local_2c = 0;\n            }\n            uVar2 = CONCAT44(local_1c,uVar5);\n          }\n          if (uVar2 != 0) {\n            uVar5 = 0;\n            uVar7 = 0;\n            if (local_3c != 0) {\n              pbVar8 = param_2 + 4;\n              local_10 = local_3c;\n              pbVar6 = local_14;\n              do {\n                lVar13 = (local_48 & 0xffffffff) * (ulonglong)*(uint *)pbVar8;\n                uVar3 = (uint)lVar13;\n                uVar9 = uVar5 + uVar3;\n                uVar5 = uVar7 + (int)((ulonglong)lVar13 >> 0x20) + local_48._4_4_ * *(uint *)pbVar8\n                        + (uint)CARRY4(uVar5,uVar3);\n                uVar7 = 0;\n                if (*(uint *)pbVar6 < uVar9) {\n                  bVar11 = 0xfffffffe < uVar5;\n                  uVar5 = uVar5 + 1;\n                  uVar7 = (uint)bVar11;\n                }\n                *(uint *)pbVar6 = *(uint *)pbVar6 - uVar9;\n                pbVar6 = pbVar6 + 4;\n                pbVar8 = pbVar8 + 4;\n                local_10 = local_10 - 1;\n              } while (local_10 != 0);\n            }\n            if ((uVar7 != 0) || (local_34 < uVar5)) {\n              if (local_3c != 0) {\n                uVar5 = 0;\n                pbVar8 = local_14;\n                uVar7 = local_3c;\n                pbVar6 = param_2;\n                do {\n                  pbVar6 = pbVar6 + 4;\n                  uVar3 = *(uint *)pbVar8;\n                  uVar9 = *(uint *)pbVar6;\n                  uVar4 = uVar3 + *(uint *)pbVar6;\n                  *(uint *)pbVar8 = uVar4 + uVar5;\n                  uVar5 = (uint)CARRY4(uVar3,uVar9) + (uint)CARRY4(uVar4,uVar5);\n                  uVar7 = uVar7 - 1;\n                  pbVar8 = pbVar8 + 4;\n                } while (uVar7 != 0);\n              }\n              uVar2 = uVar2 - 1;\n            }\n            local_10 = local_c - 1;\n          }\n          local_1c = (int)(uVar2 >> 0x20);\n          uVar10 = (undefined4)uVar2;\n          local_14 = local_14 + -4;\n          local_20 = local_20 + -1;\n          local_50 = local_50 + -4;\n          local_c = local_c - 1;\n        } while (-1 < local_20);\n      }\n      uVar7 = local_10 + 1;\n      if (uVar7 < *(uint *)param_1) {\n        pbVar6 = param_1 + (local_10 + 2) * 4;\n        uVar5 = uVar7;\n        do {\n          *(undefined4 *)pbVar6 = 0;\n          pbVar6 = pbVar6 + 4;\n          uVar5 = uVar5 + 1;\n        } while (uVar5 < *(uint *)param_1);\n      }\n      *(uint *)param_1 = uVar7;\n      while ((uVar7 != 0 && (*(int *)(param_1 + *(int *)param_1 * 4) == 0))) {\n        uVar7 = *(int *)param_1 - 1;\n        *(uint *)param_1 = uVar7;\n      }\n      return CONCAT44(local_4c,uVar10);\n    }\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "___acrt_fltout",
      "entry": "0042d8ee",
      "c": "\n/* Library Function - Single Match\n    ___acrt_fltout\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n___acrt_fltout(int param_1,uint param_2,int param_3,int *param_4,char *param_5,rsize_t param_6)\n\n{\n  byte bVar1;\n  ulonglong uVar2;\n  bool bVar3;\n  int *piVar4;\n  char cVar5;\n  __acrt_fp_class _Var6;\n  rsize_t rVar7;\n  uint uVar8;\n  errno_t eVar9;\n  uint uVar10;\n  int iVar11;\n  uint *puVar12;\n  int iVar13;\n  uint *puVar14;\n  uint *puVar15;\n  uint *puVar16;\n  char *pcVar17;\n  uint *puVar18;\n  uint uVar19;\n  float10 fVar20;\n  longlong lVar21;\n  __uint64 _Var22;\n  ulonglong uVar23;\n  char *_Src;\n  uint local_964 [115];\n  scoped_fp_state_reset local_798 [8];\n  char local_790;\n  int local_788;\n  int *local_784;\n  char *local_780;\n  char *local_77c;\n  uint local_778;\n  uint *local_774;\n  uint local_770;\n  undefined8 local_76c;\n  uint *local_764;\n  uint *local_760;\n  uint *local_75c;\n  uint *local_758;\n  uint *local_754;\n  uint *local_750;\n  undefined1 local_749;\n  uint *local_748;\n  uint local_744 [115];\n  uint *local_578;\n  uint local_574 [115];\n  uint *local_3a8;\n  uint local_3a4 [115];\n  uint *local_1d8;\n  uint local_1d4 [115];\n  uint local_8;\n  \n  pcVar17 = param_5;\n  piVar4 = param_4;\n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  local_784 = param_4;\n  local_780 = param_5;\n  _anon_3568B024::scoped_fp_state_reset::scoped_fp_state_reset(local_798);\n  uVar10 = param_2;\n  iVar11 = param_1;\n  cVar5 = '-';\n  if ((param_2 & 0x80000000) == 0) {\n    cVar5 = ' ';\n  }\n  *piVar4 = (int)cVar5;\n  piVar4[2] = (int)pcVar17;\n  if (((param_2 & 0x7ff00000) == 0) && (param_1 == 0 && (param_2 & 0xfffff) == 0)) {\n    _Src = \"0\";\n    local_784[1] = 0;\n  }\n  else {\n    _Var6 = __acrt_fp_classify((double *)&param_1);\n    if (_Var6 != 0) {\n      local_784[1] = 1;\n    }\n    if (_Var6 == 1) {\n      _Src = \"1#INF\";\n    }\n    else if (_Var6 == 2) {\n      _Src = \"1#QNAN\";\n    }\n    else if (_Var6 == 3) {\n      _Src = \"1#SNAN\";\n    }\n    else {\n      if (_Var6 != 4) {\n        param_2 = uVar10 & 0x7fffffff;\n        local_788 = 0;\n        local_77c = (char *)(param_3 + 1);\n        uVar23 = CONCAT44(uVar10,iVar11) & 0x7fffffffffffffff;\n        local_76c._4_4_ = (uint)(uVar23 >> 0x20);\n        uVar10 = local_76c._4_4_ >> 0x14;\n        if (uVar10 != 0) {\n          iVar13 = 0x100000;\n        }\n        else {\n          iVar13 = 0;\n        }\n        local_76c._0_4_ = (uint)uVar23;\n        uVar8 = (uint)local_76c;\n        uVar19 = (local_76c._4_4_ & 0xfffff) + iVar13;\n        puVar14 = (uint *)(uVar10 + ((uVar10 == 0) - 0x433));\n        param_1 = iVar11;\n        local_76c = uVar23;\n        local_750 = puVar14;\n        fVar20 = (float10)FUN_0042f460();\n        FUN_0042f570((double)fVar20);\n        local_770 = thunk_FUN_004323b0();\n        if ((local_770 == 0x7fffffff) || (local_770 == 0x80000000)) {\n          local_770 = 0;\n        }\n        local_1d4[0] = uVar8;\n        local_1d4[1] = uVar19;\n        uVar10 = (uint)(uVar19 != 0);\n        puVar12 = (uint *)(uVar10 + 1);\n        local_1d8 = puVar12;\n        if ((int)puVar14 < 0) {\n          if (puVar14 == (uint *)0xfffffc02) {\nLAB_0042df90:\n            uVar10 = local_1d4[uVar10];\n            local_76c = local_76c & 0xffffffff;\n            iVar11 = 0x1f;\n            if (uVar10 != 0) {\n              for (; uVar10 >> iVar11 == 0; iVar11 = iVar11 + -1) {\n              }\n            }\n            if (uVar10 == 0) {\n              iVar11 = 0;\n            }\n            else {\n              iVar11 = iVar11 + 1;\n            }\n            local_749 = iVar11 == 0x20;\n            if ((puVar12 == (uint *)0x73) && ((bool)local_749)) {\n              bVar3 = true;\n            }\n            else {\n              bVar3 = false;\n            }\n            if (((uint *)0x73 < puVar12) || (bVar3)) {\n              local_578 = (uint *)0x0;\n              local_1d8 = (uint *)0x0;\n              _memcpy_s(local_1d4,0x1cc,local_574,0);\n            }\n            else {\n              puVar15 = (uint *)0x72;\n              if (puVar12 < (uint *)0x72) {\n                puVar15 = puVar12;\n              }\n              if (puVar15 != (uint *)0xffffffff) {\n                puVar18 = local_1d4 + (int)puVar15;\n                puVar16 = puVar15;\n                local_758 = puVar18;\n                do {\n                  if (puVar16 < puVar12) {\n                    local_754 = (uint *)*puVar18;\n                  }\n                  else {\n                    local_754 = (uint *)0x0;\n                  }\n                  if ((uint *)((int)puVar16 + -1) < puVar12) {\n                    uVar10 = puVar18[-1];\n                  }\n                  else {\n                    uVar10 = 0;\n                  }\n                  puVar18 = puVar18 + -1;\n                  puVar16 = (uint *)((int)puVar16 + -1);\n                  *local_758 = uVar10 >> 0x1f ^ (int)local_754 * 2;\n                  local_758 = local_758 + -1;\n                  puVar12 = local_1d8;\n                  puVar14 = local_750;\n                } while (puVar16 != (uint *)0xffffffff);\n              }\n              local_1d8 = puVar15;\n              if ((bool)local_749) {\n                local_1d8 = (uint *)((int)puVar15 + 1);\n              }\n            }\n            uVar10 = 1U - (int)puVar14 >> 5;\n            _memset(local_574,0,uVar10 * 4);\n            local_574[uVar10] = 1 << ((byte)(1U - (int)puVar14) & 0x1f);\n          }\n          else {\n            local_574[0] = 0;\n            puVar15 = (uint *)0x2;\n            local_574[1] = 0x100000;\n            local_578 = (uint *)0x2;\n            if (puVar12 != (uint *)0x2) goto LAB_0042df90;\n            iVar11 = 0;\n            do {\n              if (*(int *)((int)local_574 + iVar11) != *(int *)((int)local_1d4 + iVar11))\n              goto LAB_0042df90;\n              iVar11 = iVar11 + 4;\n            } while (iVar11 != 8);\n            local_76c = local_76c & 0xffffffff;\n            iVar11 = 0x1f;\n            if (uVar19 != 0) {\n              for (; uVar19 >> iVar11 == 0; iVar11 = iVar11 + -1) {\n              }\n            }\n            if (uVar19 == 0) {\n              iVar11 = 0;\n            }\n            else {\n              iVar11 = iVar11 + 1;\n            }\n            local_749 = 0x20U - iVar11 < 2;\n            puVar14 = local_1d4 + 2;\n            local_758 = puVar14;\n            do {\n              if (puVar15 < puVar12) {\n                local_754 = (uint *)*puVar14;\n              }\n              else {\n                local_754 = (uint *)0x0;\n              }\n              if ((uint *)((int)puVar15 + -1) < puVar12) {\n                uVar10 = puVar14[-1];\n              }\n              else {\n                uVar10 = 0;\n              }\n              puVar14 = puVar14 + -1;\n              puVar15 = (uint *)((int)puVar15 + -1);\n              *local_758 = uVar10 >> 0x1e ^ (int)local_754 << 2;\n              local_758 = local_758 + -1;\n              puVar12 = local_1d8;\n            } while (puVar15 != (uint *)0xffffffff);\n            local_1d8 = (uint *)((byte)local_749 + 2);\n            local_75c = (uint *)(2 - (int)local_750);\n            uVar10 = (uint)local_75c >> 5;\n            _memset(local_574,0,uVar10 * 4);\n            local_574[uVar10] = 1 << ((byte)local_75c & 0x1f);\n          }\n          local_578 = (uint *)(uVar10 + 1);\n          local_3a8 = local_578;\n          _memcpy_s(local_3a4,0x1cc,local_574,(int)local_578 * 4);\n        }\n        else {\n          local_574[0] = 0;\n          local_574[1] = 0x100000;\n          local_578 = (uint *)0x2;\n          if (puVar12 == (uint *)0x2) {\n            iVar11 = 0;\n            do {\n              if (*(int *)((int)local_574 + iVar11) != *(int *)((int)local_1d4 + iVar11))\n              goto LAB_0042dca0;\n              iVar11 = iVar11 + 4;\n            } while (iVar11 != 8);\n            local_760 = (uint *)((int)local_750 + 2U & 0x1f);\n            local_774 = (uint *)(0x20 - (int)local_760);\n            puVar14 = (uint *)((int)local_750 + 2U >> 5);\n            local_754 = puVar14;\n            lVar21 = __allshl((byte)local_774,0);\n            local_76c = local_76c & 0xffffffff;\n            local_75c = (uint *)((int)lVar21 + -1);\n            iVar11 = 0x1f;\n            if (uVar19 != 0) {\n              for (; uVar19 >> iVar11 == 0; iVar11 = iVar11 + -1) {\n              }\n            }\n            local_778 = ~(uint)local_75c;\n            if (uVar19 == 0) {\n              iVar11 = 0;\n            }\n            else {\n              iVar11 = iVar11 + 1;\n            }\n            local_758 = (uint *)((int)puVar14 + 2);\n            local_749 = (uint *)(0x20 - iVar11) < local_760;\n            if ((local_758 == (uint *)0x73) && ((bool)local_749)) {\n              bVar3 = true;\n            }\n            else {\n              bVar3 = false;\n            }\n            if ((0x73 < local_758) || (bVar3)) {\n              local_578 = (uint *)0x0;\n              local_1d8 = (uint *)0x0;\n              _memcpy_s(local_1d4,0x1cc,local_574,0);\n            }\n            else {\n              if (0x71 < local_758) {\n                local_758 = (uint *)0x72;\n              }\n              local_764 = local_758;\n              if (local_758 != (uint *)0xffffffff) {\n                puVar15 = (uint *)((int)local_758 - (int)local_754);\n                local_750 = local_1d4 + (int)puVar15;\n                do {\n                  puVar14 = local_754;\n                  if (local_764 < local_754) break;\n                  if (puVar15 < puVar12) {\n                    uVar10 = *local_750;\n                  }\n                  else {\n                    uVar10 = 0;\n                  }\n                  if ((uint *)((int)puVar15 + -1) < puVar12) {\n                    uVar19 = local_750[-1];\n                  }\n                  else {\n                    uVar19 = 0;\n                  }\n                  local_1d4[(int)local_764] =\n                       (uVar19 & local_778) >> ((byte)local_774 & 0x1f) |\n                       (uVar10 & (uint)local_75c) << ((byte)local_760 & 0x1f);\n                  local_764 = (uint *)((int)local_764 + -1);\n                  puVar15 = (uint *)((int)puVar15 + -1);\n                  local_750 = local_750 + -1;\n                  puVar12 = local_1d8;\n                } while (local_764 != (uint *)0xffffffff);\n              }\n              if (puVar14 != (uint *)0x0) {\n                puVar12 = local_1d4;\n                for (; puVar14 != (uint *)0x0; puVar14 = (uint *)((int)puVar14 + -1)) {\n                  *puVar12 = 0;\n                  puVar12 = puVar12 + 1;\n                }\n              }\n              local_1d8 = local_758;\n              if ((bool)local_749) {\n                local_1d8 = (uint *)((int)local_758 + 1);\n              }\n            }\n            local_574[0] = 4;\n          }\n          else {\nLAB_0042dca0:\n            local_754 = (uint *)((int)local_750 + 1U & 0x1f);\n            local_774 = (uint *)(0x20 - (int)local_754);\n            puVar14 = (uint *)((int)local_750 + 1U >> 5);\n            local_750 = puVar14;\n            lVar21 = __allshl((byte)local_774,0);\n            uVar10 = local_1d4[uVar10];\n            local_75c = (uint *)((int)lVar21 + -1);\n            local_76c = local_76c & 0xffffffff;\n            iVar11 = 0x1f;\n            if (uVar10 != 0) {\n              for (; uVar10 >> iVar11 == 0; iVar11 = iVar11 + -1) {\n              }\n            }\n            local_778 = ~(uint)local_75c;\n            if (uVar10 == 0) {\n              iVar11 = 0;\n            }\n            else {\n              iVar11 = iVar11 + 1;\n            }\n            local_764 = (uint *)((int)puVar12 + (int)puVar14);\n            local_749 = (uint *)(0x20 - iVar11) < local_754;\n            if ((local_764 == (uint *)0x73) && ((bool)local_749)) {\n              bVar3 = true;\n            }\n            else {\n              bVar3 = false;\n            }\n            if (((uint *)0x73 < local_764) || (bVar3)) {\n              local_578 = (uint *)0x0;\n              local_1d8 = (uint *)0x0;\n              _memcpy_s(local_1d4,0x1cc,local_574,0);\n            }\n            else {\n              if ((uint *)0x71 < local_764) {\n                local_764 = (uint *)0x72;\n              }\n              local_758 = local_764;\n              if (local_764 != (uint *)0xffffffff) {\n                puVar15 = (uint *)((int)local_764 - (int)local_750);\n                local_760 = local_1d4 + (int)puVar15;\n                do {\n                  puVar14 = local_750;\n                  if (local_758 < local_750) break;\n                  if (puVar15 < puVar12) {\n                    uVar10 = *local_760;\n                  }\n                  else {\n                    uVar10 = 0;\n                  }\n                  if ((uint *)((int)puVar15 + -1) < puVar12) {\n                    uVar19 = local_760[-1];\n                  }\n                  else {\n                    uVar19 = 0;\n                  }\n                  local_760 = local_760 + -1;\n                  local_1d4[(int)local_758] =\n                       (uVar10 & (uint)local_75c) << ((byte)local_754 & 0x1f) |\n                       (uVar19 & local_778) >> ((byte)local_774 & 0x1f);\n                  local_758 = (uint *)((int)local_758 + -1);\n                  puVar15 = (uint *)((int)puVar15 + -1);\n                  puVar12 = local_1d8;\n                } while (local_758 != (uint *)0xffffffff);\n              }\n              if (puVar14 != (uint *)0x0) {\n                puVar12 = local_1d4;\n                for (; puVar14 != (uint *)0x0; puVar14 = (uint *)((int)puVar14 + -1)) {\n                  *puVar12 = 0;\n                  puVar12 = puVar12 + 1;\n                }\n              }\n              local_1d8 = local_764;\n              if ((bool)local_749) {\n                local_1d8 = (uint *)((int)local_764 + 1);\n              }\n            }\n            local_574[0] = 2;\n          }\n          local_3a8 = (uint *)0x1;\n          local_574[1] = 0;\n          local_578 = (uint *)0x1;\n          _memcpy_s(local_3a4,0x1cc,local_574,4);\n        }\n        local_778 = 10;\n        if ((int)local_770 < 0) {\n          local_75c = (uint *)(-local_770 % 10);\n          for (local_758 = (uint *)(-local_770 / 10); local_758 != (uint *)0x0;\n              local_758 = (uint *)((int)local_758 - (int)local_750)) {\n            local_750 = local_758;\n            if ((uint *)0x26 < local_758) {\n              local_750 = (uint *)0x26;\n            }\n            uVar10 = (uint)(byte)(&DAT_00438346)[(int)local_750 * 4];\n            bVar1 = (&DAT_00438347)[(int)local_750 * 4];\n            local_578 = (uint *)(uVar10 + bVar1);\n            _memset(local_574,0,uVar10 * 4);\n            FUN_00420320(local_574 + uVar10,\n                         (uint *)(&UNK_00437a40 +\n                                 (uint)*(ushort *)(&UNK_00438344 + (int)local_750 * 4) * 4),\n                         (uint)bVar1 << 2);\n            uVar10 = local_1d4[0];\n            local_764 = local_578;\n            if (local_578 < (uint *)0x2) {\n              if (local_574[0] == 0) {\nLAB_0042e619:\n                local_1d8 = (uint *)0x0;\n                rVar7 = 0;\n                puVar14 = local_964;\n                goto LAB_0042e8a5;\n              }\n              if ((local_574[0] == 1) || (local_1d8 == (uint *)0x0)) goto LAB_0042e8b6;\n              uVar19 = 0;\n              local_76c = CONCAT44(local_1d8,(uint)local_76c);\n              puVar14 = (uint *)0x0;\n              do {\n                lVar21 = (ulonglong)local_574[0] * (ulonglong)local_1d4[(int)puVar14] +\n                         (ulonglong)uVar19;\n                local_1d4[(int)puVar14] = (uint)lVar21;\n                uVar19 = (uint)((ulonglong)lVar21 >> 0x20);\n                puVar14 = (uint *)((int)puVar14 + 1);\n              } while (puVar14 != local_1d8);\nLAB_0042e679:\n              if (uVar19 == 0) goto LAB_0042e8b6;\n              if (local_1d8 < (uint *)0x73) {\n                local_1d4[(int)local_1d8] = uVar19;\n                local_1d8 = (uint *)((int)local_1d8 + 1);\n                goto LAB_0042e8b6;\n              }\nLAB_0042e954:\n              local_1d8 = (uint *)0x0;\n              _memcpy_s(local_1d4,0x1cc,local_964,0);\n              bVar3 = false;\n            }\n            else {\n              if (local_1d8 < (uint *)0x2) {\n                local_1d8 = local_578;\n                _memcpy_s(local_1d4,0x1cc,local_574,(int)local_578 << 2);\n                if (uVar10 != 0) {\n                  if ((uVar10 != 1) && (local_1d8 != (uint *)0x0)) {\n                    uVar19 = 0;\n                    local_76c = CONCAT44(local_1d8,(uint)local_76c);\n                    puVar14 = (uint *)0x0;\n                    do {\n                      lVar21 = (ulonglong)uVar10 * (ulonglong)local_1d4[(int)puVar14] +\n                               (ulonglong)uVar19;\n                      local_1d4[(int)puVar14] = (uint)lVar21;\n                      uVar19 = (uint)((ulonglong)lVar21 >> 0x20);\n                      puVar14 = (uint *)((int)puVar14 + 1);\n                    } while (puVar14 != local_1d8);\n                    goto LAB_0042e679;\n                  }\n                  goto LAB_0042e8b6;\n                }\n                goto LAB_0042e619;\n              }\n              puVar14 = local_574;\n              if (local_578 < local_1d8) {\n                local_774 = local_1d4;\n                local_764 = local_1d8;\n                local_754 = local_578;\n              }\n              else {\n                puVar14 = local_1d4;\n                local_774 = local_574;\n                local_754 = local_1d8;\n              }\n              local_1d8 = (uint *)0x0;\n              puVar12 = (uint *)0x0;\n              local_748 = (uint *)0x0;\n              if (local_754 != (uint *)0x0) {\n                local_788 = (int)puVar14 - (int)local_744;\n                do {\n                  uVar10 = *(uint *)((int)local_744 + local_788 + (int)puVar12 * 4);\n                  local_76c = CONCAT44(uVar10,(uint)local_76c);\n                  if (uVar10 == 0) {\n                    if (puVar12 == local_1d8) {\n                      local_744[(int)puVar12] = 0;\n                      local_1d8 = (uint *)((int)puVar12 + 1);\n                      local_748 = local_1d8;\n                    }\n                  }\n                  else {\n                    uVar19 = 0;\n                    local_760 = (uint *)0x0;\n                    puVar14 = puVar12;\n                    if (local_764 != (uint *)0x0) {\n                      do {\n                        if (puVar14 == (uint *)0x73) break;\n                        if (puVar14 == local_1d8) {\n                          local_744[(int)puVar14] = 0;\n                          local_748 = (uint *)((int)local_760 + 1U + (int)puVar12);\n                        }\n                        lVar21 = (ulonglong)local_774[(int)local_760] * (ulonglong)uVar10 +\n                                 (ulonglong)uVar19;\n                        uVar8 = (uint)lVar21;\n                        puVar15 = local_744 + (int)puVar14;\n                        uVar19 = *puVar15;\n                        *puVar15 = *puVar15 + uVar8;\n                        uVar19 = (int)((ulonglong)lVar21 >> 0x20) + (uint)CARRY4(uVar19,uVar8);\n                        local_760 = (uint *)((int)local_760 + 1);\n                        puVar14 = (uint *)((int)puVar14 + 1);\n                        local_1d8 = local_748;\n                      } while (local_760 != local_764);\n                      do {\n                        if (uVar19 == 0) break;\n                        if (puVar14 == (uint *)0x73) goto LAB_0042e954;\n                        if (puVar14 == local_1d8) {\n                          local_744[(int)puVar14] = 0;\n                          local_748 = (uint *)((int)puVar14 + 1);\n                        }\n                        puVar15 = local_744 + (int)puVar14;\n                        uVar10 = *puVar15;\n                        *puVar15 = *puVar15 + uVar19;\n                        uVar19 = (uint)CARRY4(uVar10,uVar19);\n                        puVar14 = (uint *)((int)puVar14 + 1);\n                        local_1d8 = local_748;\n                      } while( true );\n                    }\n                    if (puVar14 == (uint *)0x73) goto LAB_0042e954;\n                  }\n                  puVar12 = (uint *)((int)puVar12 + 1);\n                } while (puVar12 != local_754);\n              }\n              rVar7 = (int)local_1d8 << 2;\n              puVar14 = local_744;\nLAB_0042e8a5:\n              _memcpy_s(local_1d4,0x1cc,puVar14,rVar7);\nLAB_0042e8b6:\n              bVar3 = true;\n            }\n            if (!bVar3) goto LAB_0042e9a2;\n          }\n          if (local_75c != (uint *)0x0) {\n            uVar10 = *(uint *)(&DAT_004383dc + (int)local_75c * 2);\n            local_76c = CONCAT44(uVar10,(uint)local_76c);\n            if (uVar10 == 0) {\nLAB_0042e9a2:\n              local_1d8 = (uint *)0x0;\n              puVar14 = local_1d4;\n              goto LAB_0042e9af;\n            }\n            if ((uVar10 != 1) && (local_1d8 != (uint *)0x0)) {\n              uVar19 = 0;\n              puVar14 = (uint *)0x0;\n              do {\n                lVar21 = (ulonglong)uVar10 * (ulonglong)local_1d4[(int)puVar14] + (ulonglong)uVar19;\n                local_1d4[(int)puVar14] = (uint)lVar21;\n                uVar19 = (uint)((ulonglong)lVar21 >> 0x20);\n                puVar14 = (uint *)((int)puVar14 + 1);\n              } while (puVar14 != local_1d8);\n              if (uVar19 != 0) {\n                if ((uint *)0x72 < local_1d8) goto LAB_0042e9a2;\n                local_1d4[(int)local_1d8] = uVar19;\n                local_1d8 = (uint *)((int)local_1d8 + 1);\n              }\n            }\n          }\n        }\n        else {\n          local_774 = (uint *)(local_770 / 10);\n          local_76c = CONCAT44(local_770 % 10,(uint)local_76c);\n          uVar10 = local_770 % 10;\n          if (local_774 != (uint *)0x0) {\n            do {\n              local_760 = local_774;\n              if ((uint *)0x26 < local_774) {\n                local_760 = (uint *)0x26;\n              }\n              uVar10 = (uint)(byte)(&DAT_00438346)[(int)local_760 * 4];\n              bVar1 = (&DAT_00438347)[(int)local_760 * 4];\n              local_578 = (uint *)(uVar10 + bVar1);\n              _memset(local_574,0,uVar10 * 4);\n              FUN_00420320(local_574 + uVar10,\n                           (uint *)(&UNK_00437a40 +\n                                   (uint)*(ushort *)(&UNK_00438344 + (int)local_760 * 4) * 4),\n                           (uint)bVar1 << 2);\n              uVar10 = local_3a4[0];\n              local_764 = local_578;\n              if (local_578 < (uint *)0x2) {\n                if (local_574[0] == 0) {\n                  rVar7 = 0;\n                  local_748 = (uint *)0x0;\n                  local_3a8 = (uint *)0x0;\nLAB_0042e462:\n                  puVar14 = local_744;\n                  goto LAB_0042e469;\n                }\n                if ((local_574[0] == 1) || (local_3a8 == (uint *)0x0)) goto LAB_0042e47a;\n                uVar19 = 0;\n                puVar14 = (uint *)0x0;\n                do {\n                  lVar21 = (ulonglong)local_574[0] * (ulonglong)local_3a4[(int)puVar14] +\n                           (ulonglong)uVar19;\n                  local_3a4[(int)puVar14] = (uint)lVar21;\n                  uVar19 = (uint)((ulonglong)lVar21 >> 0x20);\n                  puVar14 = (uint *)((int)puVar14 + 1);\n                } while (puVar14 != local_3a8);\nLAB_0042e2ba:\n                local_75c = local_3a8;\n                if (uVar19 == 0) goto LAB_0042e47a;\n                if (local_3a8 < (uint *)0x73) {\n                  local_3a4[(int)local_3a8] = uVar19;\n                  local_3a8 = (uint *)((int)local_3a8 + 1);\n                  goto LAB_0042e47a;\n                }\n                local_578 = (uint *)0x0;\n                puVar14 = local_574;\nLAB_0042e4d7:\n                local_3a8 = (uint *)0x0;\n                _memcpy_s(local_3a4,0x1cc,puVar14,0);\n                bVar3 = false;\n              }\n              else {\n                if ((uint *)0x1 < local_3a8) {\n                  puVar14 = local_574;\n                  if (local_578 < local_3a8) {\n                    local_754 = local_3a4;\n                    local_764 = local_3a8;\n                    local_758 = local_578;\n                  }\n                  else {\n                    puVar14 = local_3a4;\n                    local_754 = local_574;\n                    local_758 = local_3a8;\n                  }\n                  local_3a8 = (uint *)0x0;\n                  puVar12 = (uint *)0x0;\n                  local_748 = (uint *)0x0;\n                  if (local_758 != (uint *)0x0) {\n                    local_788 = (int)puVar14 - (int)local_744;\n                    do {\n                      local_75c = *(uint **)((int)local_744 + local_788 + (int)puVar12 * 4);\n                      if (local_75c == (uint *)0x0) {\n                        if (puVar12 == local_3a8) {\n                          local_744[(int)puVar12] = 0;\n                          local_3a8 = (uint *)((int)puVar12 + 1);\n                          local_748 = local_3a8;\n                        }\n                      }\n                      else {\n                        uVar10 = 0;\n                        local_750 = (uint *)0x0;\n                        puVar14 = puVar12;\n                        if (local_764 != (uint *)0x0) {\n                          do {\n                            if (puVar14 == (uint *)0x73) break;\n                            if (puVar14 == local_3a8) {\n                              local_744[(int)puVar14] = 0;\n                              local_748 = (uint *)((int)local_750 + 1U + (int)puVar12);\n                            }\n                            lVar21 = (ulonglong)local_754[(int)local_750] * ZEXT48(local_75c) +\n                                     (ulonglong)uVar10;\n                            uVar19 = (uint)lVar21;\n                            puVar15 = local_744 + (int)puVar14;\n                            uVar10 = *puVar15;\n                            *puVar15 = *puVar15 + uVar19;\n                            uVar10 = (int)((ulonglong)lVar21 >> 0x20) + (uint)CARRY4(uVar10,uVar19);\n                            local_750 = (uint *)((int)local_750 + 1);\n                            puVar14 = (uint *)((int)puVar14 + 1);\n                            local_3a8 = local_748;\n                          } while (local_750 != local_764);\n                          do {\n                            if (uVar10 == 0) break;\n                            if (puVar14 == (uint *)0x73) goto LAB_0042e4c2;\n                            if (puVar14 == local_3a8) {\n                              local_744[(int)puVar14] = 0;\n                              local_748 = (uint *)((int)puVar14 + 1);\n                            }\n                            puVar15 = local_744 + (int)puVar14;\n                            uVar19 = *puVar15;\n                            *puVar15 = *puVar15 + uVar10;\n                            uVar10 = (uint)CARRY4(uVar19,uVar10);\n                            puVar14 = (uint *)((int)puVar14 + 1);\n                            local_3a8 = local_748;\n                          } while( true );\n                        }\n                        if (puVar14 == (uint *)0x73) {\nLAB_0042e4c2:\n                          puVar14 = local_964;\n                          goto LAB_0042e4d7;\n                        }\n                      }\n                      puVar12 = (uint *)((int)puVar12 + 1);\n                    } while (puVar12 != local_758);\n                  }\n                  rVar7 = (int)local_3a8 << 2;\n                  goto LAB_0042e462;\n                }\n                local_3a8 = local_578;\n                _memcpy_s(local_3a4,0x1cc,local_574,(int)local_578 << 2);\n                if (uVar10 != 0) {\n                  if ((uVar10 != 1) && (local_3a8 != (uint *)0x0)) {\n                    uVar19 = 0;\n                    puVar14 = (uint *)0x0;\n                    do {\n                      lVar21 = (ulonglong)uVar10 * (ulonglong)local_3a4[(int)puVar14] +\n                               (ulonglong)uVar19;\n                      local_3a4[(int)puVar14] = (uint)lVar21;\n                      uVar19 = (uint)((ulonglong)lVar21 >> 0x20);\n                      puVar14 = (uint *)((int)puVar14 + 1);\n                    } while (puVar14 != local_3a8);\n                    goto LAB_0042e2ba;\n                  }\n                  goto LAB_0042e47a;\n                }\n                local_578 = (uint *)0x0;\n                local_3a8 = (uint *)0x0;\n                rVar7 = 0;\n                puVar14 = local_574;\nLAB_0042e469:\n                _memcpy_s(local_3a4,0x1cc,puVar14,rVar7);\nLAB_0042e47a:\n                bVar3 = true;\n              }\n              if (!bVar3) goto LAB_0042e4fc;\n              local_774 = (uint *)((int)local_774 - (int)local_760);\n            } while (local_774 != (uint *)0x0);\n            uVar10 = local_76c._4_4_;\n          }\n          if (uVar10 != 0) {\n            uVar10 = *(uint *)(&DAT_004383dc + uVar10 * 2);\n            if (uVar10 == 0) {\nLAB_0042e4fc:\n              local_3a8 = (uint *)0x0;\n              puVar14 = local_3a4;\nLAB_0042e9af:\n              _memcpy_s(puVar14,0x1cc,local_964,0);\n            }\n            else if (uVar10 != 1) {\n              local_76c = CONCAT44(local_3a8,(uint)local_76c);\n              if (local_3a8 != (uint *)0x0) {\n                uVar19 = 0;\n                puVar14 = (uint *)0x0;\n                do {\n                  lVar21 = (ulonglong)uVar10 * (ulonglong)local_3a4[(int)puVar14] +\n                           (ulonglong)uVar19;\n                  local_3a4[(int)puVar14] = (uint)lVar21;\n                  uVar19 = (uint)((ulonglong)lVar21 >> 0x20);\n                  puVar14 = (uint *)((int)puVar14 + 1);\n                } while (puVar14 != local_3a8);\n                if (uVar19 != 0) {\n                  if ((uint *)0x72 < local_3a8) goto LAB_0042e4fc;\n                  local_3a4[(int)local_3a8] = uVar19;\n                  local_3a8 = (uint *)((int)local_3a8 + 1);\n                }\n              }\n            }\n          }\n        }\n        pcVar17 = local_780;\n        local_750 = (uint *)local_780;\n        if (local_1d8 != (uint *)0x0) {\n          uVar10 = 0;\n          puVar14 = (uint *)0x0;\n          do {\n            lVar21 = (ulonglong)local_1d4[(int)puVar14] * 10 + (ulonglong)uVar10;\n            local_1d4[(int)puVar14] = (uint)lVar21;\n            uVar10 = (uint)((ulonglong)lVar21 >> 0x20);\n            puVar14 = (uint *)((int)puVar14 + 1);\n          } while (puVar14 != local_1d8);\n          local_76c = CONCAT44(uVar10,(uint)local_76c);\n          if (uVar10 != 0) {\n            if (local_1d8 < (uint *)0x73) {\n              local_1d4[(int)local_1d8] = uVar10;\n              local_1d8 = (uint *)((int)local_1d8 + 1);\n            }\n            else {\n              local_1d8 = (uint *)0x0;\n              _memcpy_s(local_1d4,0x1cc,local_964,0);\n            }\n          }\n        }\n        _Var22 = __crt_strtox::divide((big_integer *)&local_1d8,(big_integer *)&local_3a8);\n        if ((int)_Var22 == 10) {\n          local_770 = local_770 + 1;\n          local_750 = (uint *)(pcVar17 + 1);\n          *pcVar17 = '1';\n          if (local_3a8 != (uint *)0x0) {\n            uVar10 = 0;\n            puVar14 = (uint *)0x0;\n            do {\n              lVar21 = (ulonglong)local_3a4[(int)puVar14] * 10 + (ulonglong)uVar10;\n              local_3a4[(int)puVar14] = (uint)lVar21;\n              uVar10 = (uint)((ulonglong)lVar21 >> 0x20);\n              puVar14 = (uint *)((int)puVar14 + 1);\n            } while (puVar14 != local_3a8);\n            if (uVar10 != 0) {\n              if (local_3a8 < (uint *)0x73) {\n                local_3a4[(int)local_3a8] = uVar10;\n                local_3a8 = (uint *)((int)local_3a8 + 1);\n              }\n              else {\n                local_3a8 = (uint *)0x0;\n                _memcpy_s(local_3a4,0x1cc,local_964,0);\n              }\n            }\n          }\nLAB_0042eb13:\n          pcVar17 = pcVar17 + 1;\n          uVar10 = local_770;\n        }\n        else {\n          if ((int)_Var22 != 0) {\n            local_750 = (uint *)(pcVar17 + 1);\n            *pcVar17 = (char)_Var22 + '0';\n            goto LAB_0042eb13;\n          }\n          uVar10 = local_770 - 1;\n        }\n        local_784[1] = uVar10;\n        if ((-1 < (int)uVar10) && (local_77c < 0x80000000)) {\n          local_77c = (char *)((int)local_77c + uVar10);\n        }\n        uVar10 = param_6 - 1;\n        if (local_77c <= param_6 - 1) {\n          uVar10 = (uint)local_77c;\n        }\n        local_77c = local_780 + uVar10;\n        if (pcVar17 != local_77c) {\n          do {\n            puVar14 = local_750;\n            if (local_1d8 == (uint *)0x0) break;\n            uVar10 = 0;\n            puVar12 = (uint *)0x0;\n            do {\n              lVar21 = (ulonglong)local_1d4[(int)puVar12] * 1000000000 + (ulonglong)uVar10;\n              local_1d4[(int)puVar12] = (uint)lVar21;\n              uVar10 = (uint)((ulonglong)lVar21 >> 0x20);\n              puVar12 = (uint *)((int)puVar12 + 1);\n            } while (puVar12 != local_1d8);\n            if (uVar10 != 0) {\n              if (local_1d8 < (uint *)0x73) {\n                local_1d4[(int)local_1d8] = uVar10;\n                local_1d8 = (uint *)((int)local_1d8 + 1);\n              }\n              else {\n                local_1d8 = (uint *)0x0;\n                _memcpy_s(local_1d4,0x1cc,local_964,0);\n              }\n            }\n            uVar23 = __crt_strtox::divide((big_integer *)&local_1d8,(big_integer *)&local_3a8);\n            uVar19 = 8;\n            uVar10 = (int)local_77c - (int)puVar14;\n            do {\n              uVar2 = uVar23 & 0xffffffff;\n              uVar23 = uVar2 / local_778;\n              if (uVar19 <= uVar10) {\n                *(char *)((int)puVar14 + uVar19) = (char)(uVar2 % (ulonglong)local_778) + '0';\n              }\n              uVar19 = uVar19 - 1;\n            } while (uVar19 != 0xffffffff);\n            if (9 < uVar10) {\n              uVar10 = 9;\n            }\n            pcVar17 = (char *)((int)puVar14 + uVar10);\n            local_750 = (uint *)pcVar17;\n          } while (pcVar17 != local_77c);\n        }\n        *pcVar17 = '\\0';\n        goto LAB_0042ec56;\n      }\n      _Src = \"1#IND\";\n    }\n  }\n  eVar9 = _strcpy_s(pcVar17,param_6,_Src);\n  if (eVar9 != 0) {\n                    /* WARNING: Subroutine does not return */\n    __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);\n  }\nLAB_0042ec56:\n  if (local_790 != '\\0') {\n    fesetenv((uint *)local_798);\n  }\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "__fcloseall",
      "entry": "0042ec8a",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    __fcloseall\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __fcloseall(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 local_20;\n  \n  local_20 = 0;\n  ___acrt_lock(8);\n  for (iVar2 = 3; iVar2 != DAT_00462274; iVar2 = iVar2 + 1) {\n    iVar1 = *(int *)(DAT_00462278 + iVar2 * 4);\n    if (iVar1 != 0) {\n      if ((*(uint *)(iVar1 + 0xc) >> 0xd & 1) != 0) {\n        iVar1 = _fclose(*(FILE **)(DAT_00462278 + iVar2 * 4));\n        if (iVar1 != -1) {\n          local_20 = local_20 + 1;\n        }\n      }\n      DeleteCriticalSection((LPCRITICAL_SECTION)(*(int *)(DAT_00462278 + iVar2 * 4) + 0x20));\n      FID_conflict__free(*(void **)(DAT_00462278 + iVar2 * 4));\n      *(undefined4 *)(DAT_00462278 + iVar2 * 4) = 0;\n    }\n  }\n  FUN_0042ed21();\n  return local_20;\n}\n\n"
    },
    {
      "name": "FUN_0042ed21",
      "entry": "0042ed21",
      "c": "\nvoid FUN_0042ed21(void)\n\n{\n  ___acrt_unlock(8);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_stdio_flush_nolock",
      "entry": "0042ed2a",
      "c": "\n/* Library Function - Single Match\n    ___acrt_stdio_flush_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __cdecl ___acrt_stdio_flush_nolock(FILE *param_1)\n\n{\n  int *piVar1;\n  int _FileHandle;\n  uint uVar2;\n  uint uVar3;\n  char *_Buf;\n  \n  piVar1 = &param_1->_flag;\n  if ((((byte)*piVar1 & 3) == 2) && ((*piVar1 & 0xc0U) != 0)) {\n    _Buf = (char *)param_1->_cnt;\n    uVar3 = (int)param_1->_ptr - (int)_Buf;\n    param_1->_ptr = _Buf;\n    param_1->_base = (char *)0x0;\n    if (0 < (int)uVar3) {\n      uVar2 = uVar3;\n      _FileHandle = __fileno(param_1);\n      uVar2 = __write(_FileHandle,_Buf,uVar2);\n      if (uVar3 != uVar2) {\n        LOCK();\n        *piVar1 = *piVar1 | 0x10;\n        UNLOCK();\n        return 0xffffffff;\n      }\n      if (((uint)*piVar1 >> 2 & 1) != 0) {\n        LOCK();\n        *piVar1 = *piVar1 & 0xfffffffd;\n        UNLOCK();\n      }\n    }\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "__fflush_nolock",
      "entry": "0042ed90",
      "c": "\n/* Library Function - Single Match\n    __fflush_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __fflush_nolock(FILE *_File)\n\n{\n  int iVar1;\n  \n  if (_File == (FILE *)0x0) {\n    iVar1 = common_flush_all(0);\n    return iVar1;\n  }\n  iVar1 = ___acrt_stdio_flush_nolock(_File);\n  if (iVar1 == 0) {\n    if (((uint)_File->_flag >> 0xb & 1) != 0) {\n      iVar1 = __fileno(_File);\n      iVar1 = __commit(iVar1);\n      if (iVar1 != 0) goto LAB_0042edb1;\n    }\n    iVar1 = 0;\n  }\n  else {\nLAB_0042edb1:\n    iVar1 = -1;\n  }\n  return iVar1;\n}\n\n"
    },
    {
      "name": "__flushall",
      "entry": "0042edd7",
      "c": "\n/* Library Function - Single Match\n    __flushall\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __flushall(void)\n\n{\n  int iVar1;\n  \n  iVar1 = common_flush_all(1);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "common_flush_all",
      "entry": "0042ede0",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    _common_flush_all\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl common_flush_all(int param_1)\n\n{\n  undefined4 *puVar1;\n  FILE *_File;\n  int iVar2;\n  undefined4 *puVar3;\n  int local_28;\n  int local_20;\n  \n  local_20 = 0;\n  local_28 = 0;\n  ___acrt_lock(8);\n  puVar1 = DAT_00462278 + DAT_00462274;\n  for (puVar3 = DAT_00462278; puVar3 != puVar1; puVar3 = puVar3 + 1) {\n    _File = (FILE *)*puVar3;\n    if (_File != (FILE *)0x0) {\n      __lock_file(_File);\n      if (((uint)_File->_flag >> 0xd & 1) != 0) {\n        if (param_1 == 1) {\n          iVar2 = __fflush_nolock(_File);\n          if (iVar2 != -1) {\n            local_20 = local_20 + 1;\n          }\n        }\n        else if ((param_1 == 0) && (((uint)_File->_flag >> 1 & 1) != 0)) {\n          iVar2 = __fflush_nolock(_File);\n          if (iVar2 == -1) {\n            local_28 = -1;\n          }\n        }\n      }\n      FUN_0042ee85();\n    }\n  }\n  FUN_0042eeaf();\n  if (param_1 != 1) {\n    local_20 = local_28;\n  }\n  return local_20;\n}\n\n"
    },
    {
      "name": "FUN_0042ee85",
      "entry": "0042ee85",
      "c": "\nvoid FUN_0042ee85(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0042a500(*(int *)(unaff_EBP + -0x28));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042eeaf",
      "entry": "0042eeaf",
      "c": "\nvoid FUN_0042eeaf(void)\n\n{\n  ___acrt_unlock(8);\n  return;\n}\n\n"
    },
    {
      "name": "___acrt_stdio_free_buffer_nolock",
      "entry": "0042eeb8",
      "c": "\n/* Library Function - Single Match\n    ___acrt_stdio_free_buffer_nolock\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nvoid __cdecl ___acrt_stdio_free_buffer_nolock(undefined4 *param_1)\n\n{\n  uint *puVar1;\n  \n  puVar1 = param_1 + 3;\n  if (((*puVar1 >> 0xd & 1) != 0) && ((*puVar1 >> 6 & 1) != 0)) {\n    FID_conflict__free((void *)param_1[1]);\n    LOCK();\n    *puVar1 = *puVar1 & 0xfffffebf;\n    UNLOCK();\n    param_1[1] = 0;\n    *param_1 = 0;\n    param_1[2] = 0;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__isatty",
      "entry": "0042eef6",
      "c": "\n/* Library Function - Single Match\n    __isatty\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __isatty(int _FileHandle)\n\n{\n  int *piVar1;\n  \n  if (_FileHandle == -2) {\n    piVar1 = __errno();\n    *piVar1 = 9;\n  }\n  else {\n    if ((-1 < _FileHandle) && ((uint)_FileHandle < DAT_00462490)) {\n      return *(byte *)((&DAT_00462290)[_FileHandle >> 6] + 0x28 + (_FileHandle & 0x3fU) * 0x30) &\n             0x40;\n    }\n    piVar1 = __errno();\n    *piVar1 = 9;\n    FUN_00429087();\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "___strncnt",
      "entry": "0042ef4c",
      "c": "\n/* Library Function - Single Match\n    ___strncnt\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___strncnt(char *param_1,int param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  cVar1 = *param_1;\n  while ((cVar1 != '\\0' && (iVar2 != param_2))) {\n    iVar2 = iVar2 + 1;\n    cVar1 = param_1[iVar2];\n  }\n  return;\n}\n\n"
    },
    {
      "name": "GetTableIndexFromLocaleName",
      "entry": "0042ef68",
      "c": "\n/* Library Function - Single Match\n    int __cdecl GetTableIndexFromLocaleName(wchar_t const *)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl GetTableIndexFromLocaleName(wchar_t *param_1)\n\n{\n  ushort uVar1;\n  int iVar2;\n  int iVar3;\n  ushort uVar4;\n  ushort *puVar5;\n  int local_10;\n  int local_c;\n  int local_8;\n  \n  local_10 = 0;\n  local_c = 0xe3;\n  while( true ) {\n    local_8 = 0x55;\n    iVar2 = (local_c + local_10) / 2;\n    puVar5 = (ushort *)(&PTR_DAT_00439548)[iVar2 * 2];\n    iVar3 = (int)param_1 - (int)puVar5;\n    do {\n      uVar4 = *(ushort *)(iVar3 + (int)puVar5);\n      if ((0x40 < uVar4) && (uVar4 < 0x5b)) {\n        uVar4 = uVar4 + 0x20;\n      }\n      uVar1 = *puVar5;\n      if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n        uVar1 = uVar1 + 0x20;\n      }\n      puVar5 = puVar5 + 1;\n      local_8 = local_8 + -1;\n    } while (((local_8 != 0) && (uVar4 != 0)) && (uVar4 == uVar1));\n    if ((uint)uVar4 == (uint)uVar1) break;\n    if ((int)((uint)uVar4 - (uint)uVar1) < 0) {\n      local_c = iVar2 + -1;\n    }\n    else {\n      local_10 = iVar2 + 1;\n    }\n    if (local_c < local_10) {\n      return -1;\n    }\n  }\n  return *(int *)(&DAT_0043954c + iVar2 * 8);\n}\n\n"
    },
    {
      "name": "___acrt_DownlevelLocaleNameToLCID",
      "entry": "0042f024",
      "c": "\n/* Library Function - Single Match\n    ___acrt_DownlevelLocaleNameToLCID\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __cdecl ___acrt_DownlevelLocaleNameToLCID(wchar_t *param_1)\n\n{\n  uint uVar1;\n  \n  if (param_1 != (wchar_t *)0x0) {\n    uVar1 = GetTableIndexFromLocaleName(param_1);\n    if ((-1 < (int)uVar1) && (uVar1 < 0xe4)) {\n      return *(undefined4 *)(&DAT_00438428 + uVar1 * 8);\n    }\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "common_tcsncpy_s<char>",
      "entry": "0042f050",
      "c": "\n/* Library Function - Single Match\n    int __cdecl common_tcsncpy_s<char>(char * const,unsigned int,char const * const,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl common_tcsncpy_s<char>(char *param_1,uint param_2,char *param_3,uint param_4)\n\n{\n  char cVar1;\n  int *piVar2;\n  uint uVar3;\n  uint uVar4;\n  char *pcVar5;\n  int iVar6;\n  \n  if (param_4 == 0) {\n    if (param_1 == (char *)0x0) {\n      if (param_2 == 0) {\n        return 0;\n      }\n    }\n    else {\nLAB_0042f072:\n      if (param_2 != 0) {\n        if (param_4 == 0) {\n          *param_1 = '\\0';\n          return 0;\n        }\n        if (param_3 != (char *)0x0) {\n          uVar3 = param_4;\n          uVar4 = param_2;\n          pcVar5 = param_1;\n          if (param_4 == 0xffffffff) {\n            do {\n              cVar1 = pcVar5[(int)param_3 - (int)param_1];\n              *pcVar5 = cVar1;\n              pcVar5 = pcVar5 + 1;\n              if (cVar1 == '\\0') break;\n              uVar4 = uVar4 - 1;\n            } while (uVar4 != 0);\n          }\n          else {\n            do {\n              cVar1 = pcVar5[(int)param_3 - (int)param_1];\n              *pcVar5 = cVar1;\n              pcVar5 = pcVar5 + 1;\n              if ((cVar1 == '\\0') || (uVar4 = uVar4 - 1, uVar4 == 0)) break;\n              uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            if (uVar3 == 0) {\n              *pcVar5 = '\\0';\n            }\n          }\n          if (uVar4 != 0) {\n            return 0;\n          }\n          if (param_4 == 0xffffffff) {\n            param_1[param_2 - 1] = '\\0';\n            return 0x50;\n          }\n          *param_1 = '\\0';\n          piVar2 = __errno();\n          iVar6 = 0x22;\n          goto LAB_0042f092;\n        }\n        *param_1 = '\\0';\n      }\n    }\n  }\n  else if (param_1 != (char *)0x0) goto LAB_0042f072;\n  piVar2 = __errno();\n  iVar6 = 0x16;\nLAB_0042f092:\n  *piVar2 = iVar6;\n  FUN_00429087();\n  return iVar6;\n}\n\n"
    },
    {
      "name": "FUN_0042f101",
      "entry": "0042f101",
      "c": "\nvoid __cdecl FUN_0042f101(char *param_1,uint param_2,char *param_3,uint param_4)\n\n{\n  common_tcsncpy_s<char>(param_1,param_2,param_3,param_4);\n  return;\n}\n\n"
    },
    {
      "name": "_strpbrk",
      "entry": "0042f110",
      "c": "\n/* Library Function - Single Match\n    _strpbrk\n   \n   Library: Visual Studio 2015 Release */\n\nchar * __cdecl _strpbrk(char *_Str,char *_Control)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  byte abStack_28 [32];\n  \n  abStack_28[0x1c] = 0;\n  abStack_28[0x1d] = 0;\n  abStack_28[0x1e] = 0;\n  abStack_28[0x1f] = 0;\n  abStack_28[0x18] = 0;\n  abStack_28[0x19] = 0;\n  abStack_28[0x1a] = 0;\n  abStack_28[0x1b] = 0;\n  abStack_28[0x14] = 0;\n  abStack_28[0x15] = 0;\n  abStack_28[0x16] = 0;\n  abStack_28[0x17] = 0;\n  abStack_28[0x10] = 0;\n  abStack_28[0x11] = 0;\n  abStack_28[0x12] = 0;\n  abStack_28[0x13] = 0;\n  abStack_28[0xc] = 0;\n  abStack_28[0xd] = 0;\n  abStack_28[0xe] = 0;\n  abStack_28[0xf] = 0;\n  abStack_28[8] = 0;\n  abStack_28[9] = 0;\n  abStack_28[10] = 0;\n  abStack_28[0xb] = 0;\n  abStack_28[4] = 0;\n  abStack_28[5] = 0;\n  abStack_28[6] = 0;\n  abStack_28[7] = 0;\n  abStack_28[0] = 0;\n  abStack_28[1] = 0;\n  abStack_28[2] = 0;\n  abStack_28[3] = 0;\n  while( true ) {\n    bVar1 = *_Control;\n    if (bVar1 == 0) break;\n    _Control = (char *)((byte *)_Control + 1);\n    abStack_28[(int)(uint)bVar1 >> 3] = abStack_28[(int)(uint)bVar1 >> 3] | '\\x01' << (bVar1 & 7);\n  }\n  do {\n    pbVar2 = (byte *)_Str;\n    bVar1 = *pbVar2;\n    if (bVar1 == 0) {\n      return (char *)(uint)bVar1;\n    }\n    _Str = (char *)(pbVar2 + 1);\n  } while ((abStack_28[(int)(uint)bVar1 >> 3] >> (bVar1 & 7) & 1) == 0);\n  return (char *)pbVar2;\n}\n\n"
    },
    {
      "name": "__mbsdec",
      "entry": "0042f150",
      "c": "\n/* Library Function - Single Match\n    __mbsdec\n   \n   Library: Visual Studio 2015 Release */\n\nuchar * __cdecl __mbsdec(uchar *_Start,uchar *_Pos)\n\n{\n  uchar *puVar1;\n  \n  puVar1 = __mbsdec_l(_Start,_Pos,(_locale_t)0x0);\n  return puVar1;\n}\n\n"
    },
    {
      "name": "__mbsdec_l",
      "entry": "0042f167",
      "c": "\n/* Library Function - Single Match\n    __mbsdec_l\n   \n   Library: Visual Studio 2015 Release */\n\nuchar * __cdecl __mbsdec_l(uchar *_Start,uchar *_Pos,_locale_t _Locale)\n\n{\n  int *piVar1;\n  byte *pbVar2;\n  int local_14 [2];\n  int local_c;\n  char local_8;\n  \n  if (_Start == (uchar *)0x0) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n  }\n  else if (_Pos == (uchar *)0x0) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n  }\n  else if (_Start < _Pos) {\n    _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)local_14,(__crt_locale_pointers *)_Locale);\n    if (*(int *)(local_c + 8) != 0) {\n      pbVar2 = _Pos + -1;\n      do {\n        pbVar2 = pbVar2 + -1;\n        if (pbVar2 < _Start) break;\n      } while ((*(byte *)(*pbVar2 + 0x19 + local_c) & 4) != 0);\n      _Pos = _Pos + -((int)_Pos - (int)pbVar2 & 1U);\n    }\n    if (local_8 != '\\0') {\n      *(uint *)(local_14[0] + 0x350) = *(uint *)(local_14[0] + 0x350) & 0xfffffffd;\n      return _Pos + -1;\n    }\n    return _Pos + -1;\n  }\n  return (uchar *)0x0;\n}\n\n"
    },
    {
      "name": "FUN_0042f200",
      "entry": "0042f200",
      "c": "\nbool FUN_0042f200(void)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = ___acrt_initialize_multibyte();\n  return (char)uVar1 == '\\0';\n}\n\n"
    },
    {
      "name": "FUN_0042f20f",
      "entry": "0042f20f",
      "c": "\nSIZE_T __cdecl FUN_0042f20f(LPCVOID param_1)\n\n{\n  int *piVar1;\n  SIZE_T SVar2;\n  \n  if (param_1 == (LPCVOID)0x0) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n    return 0xffffffff;\n  }\n  SVar2 = HeapSize(DAT_004626e4,0,param_1);\n  return SVar2;\n}\n\n"
    },
    {
      "name": "___set_fpsr_sse2",
      "entry": "0042f242",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    ___set_fpsr_sse2\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl ___set_fpsr_sse2(uint param_1)\n\n{\n  if (0 < DAT_00461d20) {\n    if (((param_1 & 0x40) == 0) || (DAT_0043ef00 == 0)) {\n      MXCSR = param_1 & 0xffffffbf;\n    }\n    else {\n      MXCSR = param_1;\n    }\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__clrfp",
      "entry": "0042f2b8",
      "c": "\n/* Library Function - Single Match\n    __clrfp\n   \n   Library: Visual Studio 2015 Release */\n\nint __clrfp(void)\n\n{\n  short in_FPUStatusWord;\n  \n  return (int)in_FPUStatusWord;\n}\n\n"
    },
    {
      "name": "__ctrlfp",
      "entry": "0042f2cb",
      "c": "\n/* Library Function - Single Match\n    __ctrlfp\n   \n   Library: Visual Studio 2015 Release */\n\nint __ctrlfp(void)\n\n{\n  short in_FPUControlWord;\n  \n  return (int)in_FPUControlWord;\n}\n\n"
    },
    {
      "name": "FUN_0042f2f7",
      "entry": "0042f2f7",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0042f2f7(void)\n\n{\n  return;\n}\n\n"
    },
    {
      "name": "__statfp",
      "entry": "0042f352",
      "c": "\n/* Library Function - Single Match\n    __statfp\n   \n   Library: Visual Studio 2015 Release */\n\nint __statfp(void)\n\n{\n  short in_FPUStatusWord;\n  \n  return (int)in_FPUStatusWord;\n}\n\n"
    },
    {
      "name": "fegetenv",
      "entry": "0042f364",
      "c": "\n/* Library Function - Single Match\n    _fegetenv\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __cdecl fegetenv(uint *param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = __getfpcontrolword();\n  *param_1 = uVar1;\n  uVar1 = __getfpstatusword();\n  param_1[1] = uVar1;\n  return 0;\n}\n\n"
    },
    {
      "name": "fesetenv",
      "entry": "0042f381",
      "c": "\n/* Library Function - Single Match\n    _fesetenv\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __cdecl fesetenv(uint *param_1)\n\n{\n  undefined4 uVar1;\n  uint local_c;\n  uint local_8;\n  \n  local_c = 0;\n  local_8 = 0;\n  __setfpcontrolword(*param_1);\n  __setfpstatusword(param_1[1]);\n  fegetenv(&local_c);\n  if ((*param_1 == local_c) && (param_1[1] == local_8)) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = 1;\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "feholdexcept",
      "entry": "0042f3ca",
      "c": "\n/* Library Function - Single Match\n    _feholdexcept\n   \n   Library: Visual Studio 2015 Release */\n\nundefined4 __cdecl feholdexcept(uint *param_1)\n\n{\n  int iVar1;\n  uint local_c;\n  uint local_8;\n  \n  local_c = 0;\n  local_8 = 0;\n  iVar1 = fegetenv(&local_c);\n  if (iVar1 == 0) {\n    param_1[1] = local_8;\n    *param_1 = local_c;\n    local_c = local_c | 0x1f;\n    iVar1 = fesetenv(&local_c);\n    if (iVar1 == 0) {\n      __clearfp();\n      return 0;\n    }\n  }\n  return 1;\n}\n\n"
    },
    {
      "name": "FUN_0042f460",
      "entry": "0042f460",
      "c": "\nvoid FUN_0042f460(void)\n\n{\n  ushort in_FPUControlWord;\n  float10 in_ST0;\n  double dVar1;\n  \n  if ((DAT_0046271c != 0) && ((MXCSR & 0x7f80) == 0x1f80 && (in_FPUControlWord & 0x7f) == 0x7f)) {\n    FUN_004308b0();\n    return;\n  }\n  dVar1 = (double)in_ST0;\n  FUN_00430fc8(SUB84(dVar1,0),(uint)((ulonglong)dVar1 >> 0x20));\n  FUN_0042f4b8(SUB84(dVar1,0),(uint)((ulonglong)dVar1 >> 0x20));\n  return;\n}\n\n"
    },
    {
      "name": "FUN_0042f4b8",
      "entry": "0042f4b8",
      "c": "\nuint __cdecl FUN_0042f4b8(int param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint in_EAX;\n  uint uVar2;\n  uint extraout_EAX;\n  bool in_ZF;\n  ushort in_FPUControlWord;\n  undefined4 unaff_retaddr;\n  \n  if (in_ZF) {\n    if (((in_EAX & 0xfffff) != 0) || (param_1 != 0)) {\n      uVar2 = FUN_00430f6c();\n      goto LAB_0042f551;\n    }\n    uVar2 = in_EAX & 0x80000000;\n    uVar1 = uVar2;\n  }\n  else {\n    uVar1 = param_2;\n    if ((param_2 & 0x7ff00000) == 0) {\n      if (((param_2 & 0xfffff) == 0) && (param_1 == 0)) {\n        uVar2 = 2;\n        goto LAB_0042f551;\n      }\n      uVar2 = param_2 & 0x80000000;\n    }\n    else {\n      uVar2 = param_2 & 0x80000000;\n    }\n  }\n  if (uVar2 == 0) {\n    if (DAT_00462704 != 0) {\n      return uVar1;\n    }\n    uVar2 = __math_exit(\"log10\",0x1b,unaff_retaddr,param_1,param_2);\n    return uVar2;\n  }\n  uVar2 = 1;\nLAB_0042f551:\n  if (DAT_00462704 != 0) {\n    return uVar2;\n  }\n  __startOneArgErrorHandling(\"log10\",0x1b,in_FPUControlWord,unaff_retaddr,param_1,param_2);\n  return extraout_EAX;\n}\n\n"
    },
    {
      "name": "FUN_0042f570",
      "entry": "0042f570",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nfloat10 __cdecl FUN_0042f570(double param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  ushort in_FPUControlWord;\n  float10 fVar4;\n  double dVar5;\n  longlong lVar6;\n  \n  if ((DAT_0046271c == 0) || ((MXCSR & 0x7f80) != 0x1f80 || (in_FPUControlWord & 0x7f) != 0x7f)) {\n    uVar2 = __ctrlfp();\n    if ((param_1._6_2_ & 0x7ff0) == 0x7ff0) {\n      iVar3 = __sptype(SUB84(param_1,0),(uint)((ulonglong)param_1 >> 0x20));\n      if (iVar3 - 1U < 3) {\n        __ctrlfp();\n        return (float10)param_1;\n      }\n      dVar5 = _DAT_0043a720 + param_1;\n      uVar1 = 8;\n    }\n    else {\n      fVar4 = FUN_004316d9(param_1);\n      dVar5 = (double)fVar4;\n      if (((float10)param_1 == fVar4) || ((uVar2 & 0x20) != 0)) {\n        __ctrlfp();\n        return (float10)dVar5;\n      }\n      dVar5 = (double)fVar4;\n      uVar1 = 0x10;\n    }\n    fVar4 = (float10)__except1(uVar1,0xc,param_1,dVar5,uVar2);\n    return fVar4;\n  }\n  uVar2 = (uint)((ulonglong)param_1 >> 0x20);\n  uVar1 = uVar2 >> 0x14;\n  lVar6 = CONCAT44(_UNK_0043a4d4,_DAT_0043a4d0 - (uVar2 >> 0x14 & _DAT_0043a4f0));\n  if ((uVar1 & 0x800) == 0) {\n    dVar5 = (double)(((ulonglong)param_1 >> lVar6) << lVar6);\n    if (uVar1 < 0x3ff) {\n      return (float10)(double)(-(ulonglong)(_DAT_0043a4e0 < param_1) & _DAT_0043a4c0);\n    }\n    if (uVar1 < 0x433) {\n      return (float10)(dVar5 + (double)(-(ulonglong)(dVar5 < param_1) & _DAT_0043a4c0));\n    }\n  }\n  else {\n    if (uVar1 < 0xbff) {\n      return (float10)_DAT_0043a500;\n    }\n    if (uVar1 < 0xc33) {\n      return (float10)(double)(((ulonglong)param_1 >> lVar6) << lVar6);\n    }\n  }\n  if (NAN(param_1)) {\n    ___libm_error_support(&param_1,&param_1,&param_1,0x3ec);\n  }\n  return (float10)param_1;\n}\n\n"
    },
    {
      "name": "write_double_translated_ansi_nolock",
      "entry": "0042f68d",
      "c": "\n/* Library Function - Single Match\n    struct `anonymous namespace'::write_result __cdecl write_double_translated_ansi_nolock(int,char\n   const * const,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl write_double_translated_ansi_nolock(int param_1,char *param_2,uint param_3)\n\n{\n  byte bVar1;\n  HANDLE hFile;\n  byte *pbVar2;\n  UINT CodePage;\n  ushort *puVar3;\n  int iVar4;\n  uint uVar5;\n  BOOL BVar6;\n  DWORD DVar7;\n  int iVar8;\n  int iVar9;\n  byte *pbVar10;\n  int in_stack_00000010;\n  byte *_SrcCh;\n  size_t _SrcSizeInBytes;\n  uint local_24;\n  undefined2 local_20;\n  wchar_t local_1c [2];\n  CHAR local_18 [8];\n  byte local_10;\n  undefined1 local_f;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  iVar8 = (int)param_2 >> 6;\n  iVar9 = ((uint)param_2 & 0x3f) * 0x30;\n  hFile = *(HANDLE *)((&DAT_00462290)[iVar8] + 0x18 + iVar9);\n  pbVar2 = (byte *)(in_stack_00000010 + param_3);\n  CodePage = GetConsoleCP();\n  *(undefined4 *)param_1 = 0;\n  *(undefined4 *)(param_1 + 4) = 0;\n  *(undefined4 *)(param_1 + 8) = 0;\n  pbVar10 = (byte *)param_3;\n  if (param_3 < pbVar2) {\n    do {\n      local_1c[0] = L'\\0';\n      local_20 = CONCAT11(*pbVar10,(undefined1)local_20);\n      iVar4 = (&DAT_00462290)[iVar8];\n      bVar1 = *(byte *)(iVar4 + 0x2d + iVar9);\n      if ((bVar1 & 4) == 0) {\n        puVar3 = ___pctype_func();\n        if ((puVar3[*pbVar10] & 0x8000) == 0) {\n          _SrcSizeInBytes = 1;\n          _SrcCh = pbVar10;\n          goto LAB_0042f761;\n        }\n        if (pbVar2 <= pbVar10) {\n          *(byte *)((&DAT_00462290)[iVar8] + 0x2e + iVar9) = *pbVar10;\n          pbVar10 = (byte *)((&DAT_00462290)[iVar8] + 0x2d + iVar9);\n          *pbVar10 = *pbVar10 | 4;\n          *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + 1;\n          break;\n        }\n        iVar4 = _mbtowc(local_1c,(char *)pbVar10,2);\n        if (iVar4 == -1) break;\n        pbVar10 = pbVar10 + 1;\n      }\n      else {\n        local_10 = *(byte *)(iVar4 + 0x2e + iVar9);\n        uVar5 = CONCAT11(*pbVar10,bVar1) & 0xfffffffb;\n        _SrcSizeInBytes = 2;\n        local_f = (undefined1)(uVar5 >> 8);\n        *(char *)(iVar4 + 0x2d + iVar9) = (char)uVar5;\n        _SrcCh = &local_10;\nLAB_0042f761:\n        iVar4 = _mbtowc(local_1c,(char *)_SrcCh,_SrcSizeInBytes);\n        if (iVar4 == -1) break;\n      }\n      pbVar10 = pbVar10 + 1;\n      uVar5 = WideCharToMultiByte(CodePage,0,local_1c,1,local_18,5,(LPCSTR)0x0,(LPBOOL)0x0);\n      if (uVar5 == 0) break;\n      BVar6 = WriteFile(hFile,local_18,uVar5,&local_24,(LPOVERLAPPED)0x0);\n      if (BVar6 == 0) {\nLAB_0042f825:\n        DVar7 = GetLastError();\n        *(DWORD *)param_1 = DVar7;\n        break;\n      }\n      *(byte **)(param_1 + 4) = pbVar10 + (*(int *)(param_1 + 8) - param_3);\n      if (local_24 < uVar5) break;\n      if (local_20._1_1_ == '\\n') {\n        local_20 = 0xd;\n        BVar6 = WriteFile(hFile,&local_20,1,&local_24,(LPOVERLAPPED)0x0);\n        if (BVar6 == 0) goto LAB_0042f825;\n        if (local_24 == 0) break;\n        *(int *)(param_1 + 8) = *(int *)(param_1 + 8) + 1;\n        *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + 1;\n      }\n    } while (pbVar10 < pbVar2);\n  }\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "write_double_translated_unicode_nolock",
      "entry": "0042f840",
      "c": "\n/* Library Function - Single Match\n    struct `anonymous namespace'::write_result __cdecl write_double_translated_unicode_nolock(char\n   const * const,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nchar * __cdecl write_double_translated_unicode_nolock(char *param_1,uint param_2)\n\n{\n  wchar_t _WCh;\n  wchar_t wVar1;\n  wint_t wVar2;\n  wchar_t *pwVar3;\n  DWORD DVar4;\n  int in_stack_0000000c;\n  \n  param_1[0] = '\\0';\n  param_1[1] = '\\0';\n  param_1[2] = '\\0';\n  param_1[3] = '\\0';\n  param_1[4] = '\\0';\n  param_1[5] = '\\0';\n  param_1[6] = '\\0';\n  param_1[7] = '\\0';\n  param_1[8] = '\\0';\n  param_1[9] = '\\0';\n  param_1[10] = '\\0';\n  param_1[0xb] = '\\0';\n  pwVar3 = (wchar_t *)(in_stack_0000000c + param_2);\n  if (param_2 < pwVar3) {\n    do {\n      _WCh = *(wchar_t *)param_2;\n      wVar1 = __putwch_nolock(_WCh);\n      if (wVar1 != _WCh) {\nLAB_0042f89c:\n        DVar4 = GetLastError();\n        *(DWORD *)param_1 = DVar4;\n        return param_1;\n      }\n      *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + 2;\n      if (_WCh == L'\\n') {\n        wVar2 = __putwch_nolock(L'\\r');\n        if (wVar2 != 0xd) goto LAB_0042f89c;\n        *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + 1;\n        *(int *)(param_1 + 8) = *(int *)(param_1 + 8) + 1;\n      }\n      param_2 = param_2 + 2;\n    } while (param_2 < pwVar3);\n  }\n  return param_1;\n}\n\n"
    },
    {
      "name": "write_requires_double_translation_nolock",
      "entry": "0042f8ad",
      "c": "\n/* Library Function - Single Match\n    bool __cdecl write_requires_double_translation_nolock(int)\n   \n   Library: Visual Studio 2015 Release */\n\nbool __cdecl write_requires_double_translation_nolock(int param_1)\n\n{\n  int iVar1;\n  __acrt_ptd *p_Var2;\n  BOOL BVar3;\n  int iVar4;\n  bool bVar5;\n  DWORD local_8;\n  \n  iVar1 = __isatty(param_1);\n  if (iVar1 == 0) {\n    bVar5 = false;\n  }\n  else {\n    iVar4 = param_1 >> 6;\n    iVar1 = (param_1 & 0x3fU) * 0x30;\n    if (((*(byte *)((&DAT_00462290)[iVar4] + 0x28 + iVar1) & 0x80) == 0) ||\n       ((p_Var2 = ___acrt_getptd(), *(int *)(*(int *)(p_Var2 + 0x4c) + 0xa8) == 0 &&\n        (*(char *)((&DAT_00462290)[iVar4] + 0x29 + iVar1) == '\\0')))) {\n      bVar5 = false;\n    }\n    else {\n      BVar3 = GetConsoleMode(*(HANDLE *)((&DAT_00462290)[iVar4] + 0x18 + iVar1),&local_8);\n      bVar5 = BVar3 != 0;\n    }\n  }\n  return bVar5;\n}\n\n"
    },
    {
      "name": "write_text_ansi_nolock",
      "entry": "0042f923",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n/* Library Function - Single Match\n    struct `anonymous namespace'::write_result __cdecl write_text_ansi_nolock(int,char const *\n   const,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl write_text_ansi_nolock(int param_1,char *param_2,uint param_3)\n\n{\n  char cVar1;\n  HANDLE hFile;\n  BOOL BVar2;\n  DWORD DVar3;\n  char *pcVar4;\n  int in_stack_00000010;\n  uint local_1410;\n  char *local_140c;\n  char local_1408 [5120];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  hFile = *(HANDLE *)((&DAT_00462290)[(int)param_2 >> 6] + 0x18 + ((uint)param_2 & 0x3f) * 0x30);\n  *(undefined4 *)param_1 = 0;\n  local_140c = (char *)(in_stack_00000010 + param_3);\n  *(undefined4 *)(param_1 + 4) = 0;\n  *(undefined4 *)(param_1 + 8) = 0;\n  do {\n    if (local_140c <= param_3) break;\n    pcVar4 = local_1408;\n    do {\n      if (local_140c <= param_3) break;\n      cVar1 = *(char *)param_3;\n      param_3 = param_3 + 1;\n      if (cVar1 == '\\n') {\n        *(int *)(param_1 + 8) = *(int *)(param_1 + 8) + 1;\n        *pcVar4 = '\\r';\n        pcVar4 = pcVar4 + 1;\n      }\n      *pcVar4 = cVar1;\n      pcVar4 = pcVar4 + 1;\n    } while (pcVar4 < local_1408 + 0x13ff);\n    BVar2 = WriteFile(hFile,local_1408,(int)pcVar4 - (int)local_1408,&local_1410,(LPOVERLAPPED)0x0);\n    if (BVar2 == 0) {\n      DVar3 = GetLastError();\n      *(DWORD *)param_1 = DVar3;\n      break;\n    }\n    *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + local_1410;\n  } while ((uint)((int)pcVar4 - (int)local_1408) <= local_1410);\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "write_text_utf16le_nolock",
      "entry": "0042fa02",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n/* Library Function - Single Match\n    struct `anonymous namespace'::write_result __cdecl write_text_utf16le_nolock(int,char const *\n   const,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl write_text_utf16le_nolock(int param_1,char *param_2,uint param_3)\n\n{\n  short sVar1;\n  HANDLE hFile;\n  BOOL BVar2;\n  DWORD DVar3;\n  short *psVar4;\n  int in_stack_00000010;\n  uint local_1410;\n  short *local_140c;\n  short local_1408 [2560];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  hFile = *(HANDLE *)((&DAT_00462290)[(int)param_2 >> 6] + 0x18 + ((uint)param_2 & 0x3f) * 0x30);\n  local_140c = (short *)(in_stack_00000010 + param_3);\n  *(undefined4 *)param_1 = 0;\n  *(undefined4 *)(param_1 + 4) = 0;\n  *(undefined4 *)(param_1 + 8) = 0;\n  do {\n    if (local_140c <= param_3) break;\n    psVar4 = local_1408;\n    do {\n      if (local_140c <= param_3) break;\n      sVar1 = *(short *)param_3;\n      param_3 = param_3 + 2;\n      if (sVar1 == 10) {\n        *(int *)(param_1 + 8) = *(int *)(param_1 + 8) + 2;\n        *psVar4 = 0xd;\n        psVar4 = psVar4 + 1;\n      }\n      *psVar4 = sVar1;\n      psVar4 = psVar4 + 1;\n    } while (psVar4 < local_1408 + 0x9ff);\n    BVar2 = WriteFile(hFile,local_1408,(int)psVar4 - (int)local_1408,&local_1410,(LPOVERLAPPED)0x0);\n    if (BVar2 == 0) {\n      DVar3 = GetLastError();\n      *(DWORD *)param_1 = DVar3;\n      break;\n    }\n    *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + local_1410;\n  } while ((uint)((int)psVar4 - (int)local_1408) <= local_1410);\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "write_text_utf8_nolock",
      "entry": "0042faf0",
      "c": "\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n/* Library Function - Single Match\n    struct `anonymous namespace'::write_result __cdecl write_text_utf8_nolock(int,char const *\n   const,unsigned int)\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl write_text_utf8_nolock(int param_1,char *param_2,uint param_3)\n\n{\n  WCHAR WVar1;\n  HANDLE hFile;\n  WCHAR *pWVar2;\n  uint uVar3;\n  BOOL BVar4;\n  DWORD DVar5;\n  uint uVar6;\n  WCHAR *pWVar7;\n  int in_stack_00000010;\n  DWORD local_1414;\n  WCHAR *local_1410;\n  CHAR local_140c [3416];\n  WCHAR local_6b4 [854];\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  hFile = *(HANDLE *)((&DAT_00462290)[(int)param_2 >> 6] + 0x18 + ((uint)param_2 & 0x3f) * 0x30);\n  local_1410 = (WCHAR *)(in_stack_00000010 + param_3);\n  *(undefined4 *)param_1 = 0;\n  *(undefined4 *)(param_1 + 4) = 0;\n  *(undefined4 *)(param_1 + 8) = 0;\n  pWVar7 = (WCHAR *)param_3;\n  if (param_3 < local_1410) {\n    do {\n      uVar6 = 0;\n      pWVar2 = local_6b4;\n      do {\n        if (local_1410 <= pWVar7) break;\n        WVar1 = *pWVar7;\n        pWVar7 = pWVar7 + 1;\n        if (WVar1 == L'\\n') {\n          *pWVar2 = L'\\r';\n          pWVar2 = pWVar2 + 1;\n        }\n        *pWVar2 = WVar1;\n        pWVar2 = pWVar2 + 1;\n      } while (pWVar2 < local_6b4 + 0x354);\n      uVar3 = WideCharToMultiByte(0xfde9,0,local_6b4,(int)pWVar2 - (int)local_6b4 >> 1,local_140c,\n                                  0xd55,(LPCSTR)0x0,(LPBOOL)0x0);\n      if (uVar3 == 0) {\nLAB_0042fc02:\n        DVar5 = GetLastError();\n        *(DWORD *)param_1 = DVar5;\n        break;\n      }\n      do {\n        BVar4 = WriteFile(hFile,local_140c + uVar6,uVar3 - uVar6,&local_1414,(LPOVERLAPPED)0x0);\n        if (BVar4 == 0) goto LAB_0042fc02;\n        uVar6 = uVar6 + local_1414;\n      } while (uVar6 < uVar3);\n      *(uint *)(param_1 + 4) = (int)pWVar7 - param_3;\n    } while (pWVar7 < local_1410);\n  }\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "__write",
      "entry": "0042fc1d",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    __write\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __write(int _FileHandle,void *_Buf,uint _MaxCharCount)\n\n{\n  ulong *puVar1;\n  int *piVar2;\n  int iVar3;\n  int iVar4;\n  \n  if (_FileHandle == -2) {\n    puVar1 = ___doserrno();\n    *puVar1 = 0;\n    piVar2 = __errno();\n    *piVar2 = 9;\n  }\n  else {\n    if ((-1 < _FileHandle) && ((uint)_FileHandle < DAT_00462490)) {\n      iVar3 = (_FileHandle & 0x3fU) * 0x30;\n      if ((*(byte *)((&DAT_00462290)[_FileHandle >> 6] + 0x28 + iVar3) & 1) != 0) {\n        ___acrt_lowio_lock_fh(_FileHandle);\n        iVar4 = -1;\n        if ((*(byte *)((&DAT_00462290)[_FileHandle >> 6] + 0x28 + iVar3) & 1) == 0) {\n          piVar2 = __errno();\n          *piVar2 = 9;\n          puVar1 = ___doserrno();\n          *puVar1 = 0;\n        }\n        else {\n          iVar4 = __write_nolock(_FileHandle,_Buf,_MaxCharCount);\n        }\n        FUN_0042fcdf();\n        return iVar4;\n      }\n    }\n    puVar1 = ___doserrno();\n    *puVar1 = 0;\n    piVar2 = __errno();\n    *piVar2 = 9;\n    FUN_00429087();\n  }\n  return -1;\n}\n\n"
    },
    {
      "name": "FUN_0042fcdf",
      "entry": "0042fcdf",
      "c": "\nvoid FUN_0042fcdf(void)\n\n{\n  uint unaff_ESI;\n  \n  ___acrt_lowio_unlock_fh(unaff_ESI);\n  return;\n}\n\n"
    },
    {
      "name": "__write_nolock",
      "entry": "0042fd08",
      "c": "\n/* Library Function - Single Match\n    __write_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __write_nolock(int _FileHandle,void *_Buf,uint _MaxCharCount)\n\n{\n  ulong uVar1;\n  char cVar2;\n  bool bVar3;\n  ulong *puVar4;\n  int *piVar5;\n  BOOL BVar6;\n  int iVar7;\n  int unaff_EBX;\n  int iVar8;\n  ulong local_18;\n  DWORD local_14 [2];\n  uint local_c;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  local_c = _MaxCharCount;\n  if (_MaxCharCount == 0) goto LAB_0042ff04;\n  if (_Buf == (void *)0x0) {\n    puVar4 = ___doserrno();\n    *puVar4 = 0;\n    piVar5 = __errno();\n    *piVar5 = 0x16;\n    FUN_00429087();\n    goto LAB_0042ff04;\n  }\n  iVar8 = _FileHandle >> 6;\n  iVar7 = (_FileHandle & 0x3fU) * 0x30;\n  cVar2 = *(char *)((&DAT_00462290)[iVar8] + 0x29 + iVar7);\n  if (((cVar2 == '\\x02') || (cVar2 == '\\x01')) && ((~_MaxCharCount & 1) == 0)) {\n    puVar4 = ___doserrno();\n    *puVar4 = 0;\n    piVar5 = __errno();\n    *piVar5 = 0x16;\n    FUN_00429087();\n    goto LAB_0042ff04;\n  }\n  if ((*(byte *)((&DAT_00462290)[iVar8] + 0x28 + iVar7) & 0x20) != 0) {\n    __lseeki64_nolock(_FileHandle,0x200000000,unaff_EBX);\n  }\n  bVar3 = write_requires_double_translation_nolock(_FileHandle);\n  if (bVar3) {\n    if (cVar2 == '\\0') {\n      puVar4 = (ulong *)write_double_translated_ansi_nolock\n                                  ((int)&local_18,(char *)_FileHandle,(uint)_Buf);\n      goto LAB_0042fe90;\n    }\n    if ((byte)(cVar2 - 1U) < 2) {\n      puVar4 = (ulong *)write_double_translated_unicode_nolock((char *)&local_18,(uint)_Buf);\n      goto LAB_0042fe90;\n    }\n  }\n  else {\n    if ((*(byte *)((&DAT_00462290)[iVar8] + 0x28 + iVar7) & 0x80) == 0) {\n      local_18 = 0;\n      local_14[0] = 0;\n      local_14[1] = 0;\n      BVar6 = WriteFile(*(HANDLE *)((&DAT_00462290)[iVar8] + 0x18 + iVar7),_Buf,local_c,local_14,\n                        (LPOVERLAPPED)0x0);\n      if (BVar6 == 0) {\n        local_18 = GetLastError();\n      }\n      puVar4 = &local_18;\n    }\n    else if (cVar2 == '\\0') {\n      puVar4 = (ulong *)write_text_ansi_nolock((int)&local_18,(char *)_FileHandle,(uint)_Buf);\n    }\n    else if (cVar2 == '\\x01') {\n      puVar4 = (ulong *)write_text_utf8_nolock((int)&local_18,(char *)_FileHandle,(uint)_Buf);\n    }\n    else {\n      if (cVar2 != '\\x02') goto LAB_0042fecb;\n      puVar4 = (ulong *)write_text_utf16le_nolock((int)&local_18,(char *)_FileHandle,(uint)_Buf);\n    }\nLAB_0042fe90:\n    uVar1 = *puVar4;\n    if (puVar4[1] != 0) goto LAB_0042ff04;\n    if (uVar1 != 0) {\n      if (uVar1 == 5) {\n        piVar5 = __errno();\n        *piVar5 = 9;\n        puVar4 = ___doserrno();\n        *puVar4 = 5;\n      }\n      else {\n        ___acrt_errno_map_os_error(uVar1);\n      }\n      goto LAB_0042ff04;\n    }\n  }\nLAB_0042fecb:\n                    /* WARNING: Load size is inaccurate */\n  if (((*(byte *)((&DAT_00462290)[iVar8] + 0x28 + iVar7) & 0x40) == 0) || (*_Buf != '\\x1a')) {\n    piVar5 = __errno();\n    *piVar5 = 0x1c;\n    puVar4 = ___doserrno();\n    *puVar4 = 0;\n  }\nLAB_0042ff04:\n  iVar7 = FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return iVar7;\n}\n\n"
    },
    {
      "name": "common_lseek_nolock<__int64>",
      "entry": "0042ff14",
      "c": "\n/* Library Function - Single Match\n    __int64 __cdecl common_lseek_nolock<__int64>(int,__int64,int)\n   \n   Library: Visual Studio 2015 Release */\n\n__int64 __cdecl common_lseek_nolock<__int64>(int param_1,__int64 param_2,int param_3)\n\n{\n  byte *pbVar1;\n  LARGE_INTEGER liDistanceToMove;\n  HANDLE hFile;\n  int *piVar2;\n  BOOL BVar3;\n  DWORD DVar4;\n  DWORD unaff_EDI;\n  uint local_c;\n  uint local_8;\n  \n  hFile = (HANDLE)__get_osfhandle(param_1);\n  if (hFile == (HANDLE)0xffffffff) {\n    piVar2 = __errno();\n    *piVar2 = 9;\n  }\n  else {\n    liDistanceToMove.s.HighPart = (LONG)&local_c;\n    liDistanceToMove.s.LowPart = (undefined4)param_2;\n    BVar3 = SetFilePointerEx(hFile,liDistanceToMove,param_2._4_4_,unaff_EDI);\n    if (BVar3 == 0) {\n      DVar4 = GetLastError();\n      ___acrt_errno_map_os_error(DVar4);\n    }\n    else if ((local_c & local_8) != 0xffffffff) {\n      pbVar1 = (byte *)((&DAT_00462290)[param_1 >> 6] + 0x28 + (param_1 & 0x3fU) * 0x30);\n      *pbVar1 = *pbVar1 & 0xfd;\n      goto LAB_0042ff8c;\n    }\n  }\n  local_c = 0xffffffff;\n  local_8 = 0xffffffff;\nLAB_0042ff8c:\n  return CONCAT44(local_8,local_c);\n}\n\n"
    },
    {
      "name": "__lseeki64_nolock",
      "entry": "0042ff92",
      "c": "\n/* Library Function - Single Match\n    __lseeki64_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nlonglong __cdecl __lseeki64_nolock(int _FileHandle,longlong _Offset,int _Origin)\n\n{\n  int unaff_EBP;\n  __int64 _Var1;\n  \n  _Var1 = common_lseek_nolock<__int64>(_FileHandle,_Offset,unaff_EBP);\n  return _Var1;\n}\n\n"
    },
    {
      "name": "__fclose_nolock",
      "entry": "0042ffad",
      "c": "\n/* Library Function - Single Match\n    __fclose_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __fclose_nolock(FILE *_File)\n\n{\n  int *piVar1;\n  int iVar2;\n  int iVar3;\n  \n  if (_File == (FILE *)0x0) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n    iVar2 = -1;\n  }\n  else {\n    iVar2 = -1;\n    if (((uint)_File->_flag >> 0xd & 1) != 0) {\n      iVar2 = ___acrt_stdio_flush_nolock(_File);\n      ___acrt_stdio_free_buffer_nolock(&_File->_ptr);\n      iVar3 = __fileno(_File);\n      iVar3 = __close(iVar3);\n      if (iVar3 < 0) {\n        iVar2 = -1;\n      }\n      else if (_File->_tmpfname != (char *)0x0) {\n        FID_conflict__free(_File->_tmpfname);\n        _File->_tmpfname = (char *)0x0;\n      }\n    }\n    __acrt_stdio_free_stream(_File);\n  }\n  return iVar2;\n}\n\n"
    },
    {
      "name": "_fclose",
      "entry": "00430023",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    _fclose\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl _fclose(FILE *_File)\n\n{\n  int *piVar1;\n  int iVar2;\n  \n  if (_File == (FILE *)0x0) {\n    piVar1 = __errno();\n    *piVar1 = 0x16;\n    FUN_00429087();\n  }\n  else {\n    if (((uint)_File->_flag >> 0xc & 1) == 0) {\n      __lock_file(_File);\n      iVar2 = __fclose_nolock(_File);\n      FUN_00430099();\n      return iVar2;\n    }\n    __acrt_stdio_free_stream();\n  }\n  return -1;\n}\n\n"
    },
    {
      "name": "FUN_00430099",
      "entry": "00430099",
      "c": "\nvoid FUN_00430099(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0042a500(*(int *)(unaff_EBP + -0x20));\n  return;\n}\n\n"
    },
    {
      "name": "operator()<class_<lambda_61cee617f5178ae960314fd4d05640a0>,class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>&,class_<lambda_9cd88cf8ad10232537feb2133f08c833>_>",
      "entry": "004300a3",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    public: int __thiscall __crt_seh_guarded_call<int>::operator()<class\n   <lambda_61cee617f5178ae960314fd4d05640a0>,class <lambda_6978c1fb23f02e42e1d9e99668cc68aa> &,class\n   <lambda_9cd88cf8ad10232537feb2133f08c833> >(class <lambda_61cee617f5178ae960314fd4d05640a0>\n   &&,class <lambda_6978c1fb23f02e42e1d9e99668cc68aa> &,class\n   <lambda_9cd88cf8ad10232537feb2133f08c833> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n__crt_seh_guarded_call<int>::\noperator()<class_<lambda_61cee617f5178ae960314fd4d05640a0>,class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>&,class_<lambda_9cd88cf8ad10232537feb2133f08c833>_>\n          (__crt_seh_guarded_call<int> *this,<lambda_61cee617f5178ae960314fd4d05640a0> *param_1,\n          <lambda_6978c1fb23f02e42e1d9e99668cc68aa> *param_2,\n          <lambda_9cd88cf8ad10232537feb2133f08c833> *param_3)\n\n{\n  uint _FileHandle;\n  HANDLE hFile;\n  BOOL BVar1;\n  ulong *puVar2;\n  DWORD DVar3;\n  int *piVar4;\n  int iVar5;\n  \n  iVar5 = 0;\n  ___acrt_lowio_lock_fh(*(uint *)param_1);\n  _FileHandle = **(uint **)param_2;\n  if ((*(byte *)((&DAT_00462290)[(int)_FileHandle >> 6] + 0x28 + (_FileHandle & 0x3f) * 0x30) & 1)\n      != 0) {\n    hFile = (HANDLE)__get_osfhandle(_FileHandle);\n    BVar1 = FlushFileBuffers(hFile);\n    if (BVar1 != 0) goto LAB_00430113;\n    puVar2 = ___doserrno();\n    DVar3 = GetLastError();\n    *puVar2 = DVar3;\n  }\n  piVar4 = __errno();\n  *piVar4 = 9;\n  iVar5 = -1;\nLAB_00430113:\n  FUN_0043012f();\n  return iVar5;\n}\n\n"
    },
    {
      "name": "FUN_0043012f",
      "entry": "0043012f",
      "c": "\nvoid FUN_0043012f(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_lowio_unlock_fh(**(uint **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lowio_lock_fh_and_call<class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>_>",
      "entry": "0043013b",
      "c": "\n/* Library Function - Single Match\n    int __cdecl __acrt_lowio_lock_fh_and_call<class <lambda_6978c1fb23f02e42e1d9e99668cc68aa>\n   >(int,class <lambda_6978c1fb23f02e42e1d9e99668cc68aa> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\n__acrt_lowio_lock_fh_and_call<class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>_>\n          (int param_1,<lambda_6978c1fb23f02e42e1d9e99668cc68aa> *param_2)\n\n{\n  int iVar1;\n  int local_10;\n  int local_c;\n  __crt_seh_guarded_call<int> local_5;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  iVar1 = __crt_seh_guarded_call<int>::\n          operator()<class_<lambda_61cee617f5178ae960314fd4d05640a0>,class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>&,class_<lambda_9cd88cf8ad10232537feb2133f08c833>_>\n                    (&local_5,(<lambda_61cee617f5178ae960314fd4d05640a0> *)&local_10,param_2,\n                     (<lambda_9cd88cf8ad10232537feb2133f08c833> *)&local_c);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "__commit",
      "entry": "00430163",
      "c": "\n/* Library Function - Single Match\n    __commit\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __commit(int _FileHandle)\n\n{\n  int *piVar1;\n  int iVar2;\n  int *local_8;\n  \n  if (_FileHandle == -2) {\n    piVar1 = __errno();\n    *piVar1 = 9;\n  }\n  else {\n    if (((-1 < _FileHandle) && ((uint)_FileHandle < DAT_00462490)) &&\n       ((*(byte *)((&DAT_00462290)[_FileHandle >> 6] + 0x28 + (_FileHandle & 0x3fU) * 0x30) & 1) !=\n        0)) {\n      local_8 = &_FileHandle;\n      iVar2 = __acrt_lowio_lock_fh_and_call<class_<lambda_6978c1fb23f02e42e1d9e99668cc68aa>_>\n                        (_FileHandle,(<lambda_6978c1fb23f02e42e1d9e99668cc68aa> *)&local_8);\n      return iVar2;\n    }\n    piVar1 = __errno();\n    *piVar1 = 9;\n    FUN_00429087();\n  }\n  return -1;\n}\n\n"
    },
    {
      "name": "___ascii_strnicmp",
      "entry": "004301e0",
      "c": "\n/* Library Function - Single Match\n    ___ascii_strnicmp\n   \n   Library: Visual Studio */\n\nint __cdecl ___ascii_strnicmp(char *_Str1,char *_Str2,size_t _MaxCount)\n\n{\n  char cVar1;\n  byte bVar2;\n  ushort uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  if (_MaxCount != 0) {\n    do {\n      bVar2 = *_Str1;\n      cVar1 = *_Str2;\n      uVar3 = CONCAT11(bVar2,cVar1);\n      if (bVar2 == 0) break;\n      uVar3 = CONCAT11(bVar2,cVar1);\n      uVar4 = (uint)uVar3;\n      if (cVar1 == '\\0') break;\n      _Str1 = (char *)((byte *)_Str1 + 1);\n      _Str2 = _Str2 + 1;\n      if ((0x40 < bVar2) && (bVar2 < 0x5b)) {\n        uVar4 = (uint)CONCAT11(bVar2 + 0x20,cVar1);\n      }\n      uVar3 = (ushort)uVar4;\n      bVar2 = (byte)uVar4;\n      if ((0x40 < bVar2) && (bVar2 < 0x5b)) {\n        uVar3 = (ushort)CONCAT31((int3)(uVar4 >> 8),bVar2 + 0x20);\n      }\n      bVar2 = (byte)(uVar3 >> 8);\n      bVar5 = bVar2 < (byte)uVar3;\n      if (bVar2 != (byte)uVar3) goto LAB_00430231;\n      _MaxCount = _MaxCount - 1;\n    } while (_MaxCount != 0);\n    _MaxCount = 0;\n    bVar2 = (byte)(uVar3 >> 8);\n    bVar5 = bVar2 < (byte)uVar3;\n    if (bVar2 != (byte)uVar3) {\nLAB_00430231:\n      _MaxCount = 0xffffffff;\n      if (!bVar5) {\n        _MaxCount = 1;\n      }\n    }\n  }\n  return _MaxCount;\n}\n\n"
    },
    {
      "name": "operator()<class_<lambda_123407a5e2ac06da108355a851863b7a>,class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>&,class_<lambda_ae55bdf541ad94d75914d381c370e64d>_>",
      "entry": "00430241",
      "c": "\n/* WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4 */\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n/* Library Function - Single Match\n    public: int __thiscall __crt_seh_guarded_call<int>::operator()<class\n   <lambda_123407a5e2ac06da108355a851863b7a>,class <lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec> &,class\n   <lambda_ae55bdf541ad94d75914d381c370e64d> >(class <lambda_123407a5e2ac06da108355a851863b7a>\n   &&,class <lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec> &,class\n   <lambda_ae55bdf541ad94d75914d381c370e64d> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __thiscall\n__crt_seh_guarded_call<int>::\noperator()<class_<lambda_123407a5e2ac06da108355a851863b7a>,class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>&,class_<lambda_ae55bdf541ad94d75914d381c370e64d>_>\n          (__crt_seh_guarded_call<int> *this,<lambda_123407a5e2ac06da108355a851863b7a> *param_1,\n          <lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec> *param_2,\n          <lambda_ae55bdf541ad94d75914d381c370e64d> *param_3)\n\n{\n  uint _FileHandle;\n  int iVar1;\n  int *piVar2;\n  \n  ___acrt_lowio_lock_fh(*(uint *)param_1);\n  _FileHandle = **(uint **)param_2;\n  if ((*(byte *)((&DAT_00462290)[(int)_FileHandle >> 6] + 0x28 + (_FileHandle & 0x3f) * 0x30) & 1)\n      == 0) {\n    piVar2 = __errno();\n    *piVar2 = 9;\n    iVar1 = -1;\n  }\n  else {\n    iVar1 = __close_nolock(_FileHandle);\n  }\n  FUN_004302b7();\n  return iVar1;\n}\n\n"
    },
    {
      "name": "FUN_004302b7",
      "entry": "004302b7",
      "c": "\nvoid FUN_004302b7(void)\n\n{\n  int unaff_EBP;\n  \n  ___acrt_lowio_unlock_fh(**(uint **)(unaff_EBP + 0x10));\n  return;\n}\n\n"
    },
    {
      "name": "__acrt_lowio_lock_fh_and_call<class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>_>",
      "entry": "004302c3",
      "c": "\n/* Library Function - Single Match\n    int __cdecl __acrt_lowio_lock_fh_and_call<class <lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>\n   >(int,class <lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec> &&)\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl\n__acrt_lowio_lock_fh_and_call<class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>_>\n          (int param_1,<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec> *param_2)\n\n{\n  int iVar1;\n  int local_10;\n  int local_c;\n  __crt_seh_guarded_call<int> local_5;\n  \n  local_c = param_1;\n  local_10 = param_1;\n  iVar1 = __crt_seh_guarded_call<int>::\n          operator()<class_<lambda_123407a5e2ac06da108355a851863b7a>,class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>&,class_<lambda_ae55bdf541ad94d75914d381c370e64d>_>\n                    (&local_5,(<lambda_123407a5e2ac06da108355a851863b7a> *)&local_10,param_2,\n                     (<lambda_ae55bdf541ad94d75914d381c370e64d> *)&local_c);\n  return iVar1;\n}\n\n"
    },
    {
      "name": "__close",
      "entry": "004302eb",
      "c": "\n/* Library Function - Single Match\n    __close\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __close(int _FileHandle)\n\n{\n  ulong *puVar1;\n  int *piVar2;\n  int iVar3;\n  int *local_8;\n  \n  if (_FileHandle == -2) {\n    puVar1 = ___doserrno();\n    *puVar1 = 0;\n    piVar2 = __errno();\n    *piVar2 = 9;\n  }\n  else {\n    if (((-1 < _FileHandle) && ((uint)_FileHandle < DAT_00462490)) &&\n       ((*(byte *)((&DAT_00462290)[_FileHandle >> 6] + 0x28 + (_FileHandle & 0x3fU) * 0x30) & 1) !=\n        0)) {\n      local_8 = &_FileHandle;\n      iVar3 = __acrt_lowio_lock_fh_and_call<class_<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>_>\n                        (_FileHandle,(<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec> *)&local_8);\n      return iVar3;\n    }\n    puVar1 = ___doserrno();\n    *puVar1 = 0;\n    piVar2 = __errno();\n    *piVar2 = 9;\n    FUN_00429087();\n  }\n  return -1;\n}\n\n"
    },
    {
      "name": "__close_nolock",
      "entry": "0043036a",
      "c": "\n/* Library Function - Single Match\n    __close_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nint __cdecl __close_nolock(int _FileHandle)\n\n{\n  intptr_t iVar1;\n  intptr_t iVar2;\n  HANDLE hObject;\n  BOOL BVar3;\n  int iVar4;\n  DWORD DVar5;\n  \n  iVar1 = __get_osfhandle(_FileHandle);\n  if (iVar1 != -1) {\n    if (((_FileHandle == 1) && ((*(byte *)(DAT_00462290 + 0x88) & 1) != 0)) ||\n       ((_FileHandle == 2 && ((*(byte *)(DAT_00462290 + 0x58) & 1) != 0)))) {\n      iVar1 = __get_osfhandle(2);\n      iVar2 = __get_osfhandle(1);\n      if (iVar2 == iVar1) goto LAB_00430380;\n    }\n    hObject = (HANDLE)__get_osfhandle(_FileHandle);\n    BVar3 = CloseHandle(hObject);\n    if (BVar3 == 0) {\n      DVar5 = GetLastError();\n      goto LAB_004303d2;\n    }\n  }\nLAB_00430380:\n  DVar5 = 0;\nLAB_004303d2:\n  __free_osfhnd(_FileHandle);\n  *(undefined1 *)((&DAT_00462290)[_FileHandle >> 6] + 0x28 + (_FileHandle & 0x3fU) * 0x30) = 0;\n  if (DVar5 == 0) {\n    iVar4 = 0;\n  }\n  else {\n    ___acrt_errno_map_os_error(DVar5);\n    iVar4 = -1;\n  }\n  return iVar4;\n}\n\n"
    },
    {
      "name": "___get_abstract_control_sse2",
      "entry": "00430406",
      "c": "\n/* Library Function - Single Match\n    ___get_abstract_control_sse2\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl ___get_abstract_control_sse2(uint param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if ((param_1 & 0x7e80) != 0) {\n    if ((char)param_1 < '\\0') {\n      uVar1 = 0x10;\n    }\n    if ((param_1 & 0x200) != 0) {\n      uVar1 = uVar1 | 8;\n    }\n    if ((param_1 & 0x400) != 0) {\n      uVar1 = uVar1 | 4;\n    }\n    if ((param_1 & 0x800) != 0) {\n      uVar1 = uVar1 | 2;\n    }\n    if ((param_1 & 0x1000) != 0) {\n      uVar1 = uVar1 | 1;\n    }\n    if ((param_1 & 0x6000) == 0x6000) {\n      uVar1 = uVar1 | 0x300;\n    }\n    else if ((param_1 & 0x4000) == 0) {\n      if ((param_1 & 0x2000) != 0) {\n        uVar1 = uVar1 | 0x200;\n      }\n    }\n    else {\n      uVar1 = uVar1 | 0x100;\n    }\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "___get_abstract_control_x87",
      "entry": "00430483",
      "c": "\n/* Library Function - Single Match\n    ___get_abstract_control_x87\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl ___get_abstract_control_x87(uint param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if ((param_1 & 0xc3d) != 0) {\n    if ((param_1 & 1) != 0) {\n      uVar1 = 0x10;\n    }\n    if ((param_1 & 4) != 0) {\n      uVar1 = uVar1 | 8;\n    }\n    if ((param_1 & 8) != 0) {\n      uVar1 = uVar1 | 4;\n    }\n    if ((param_1 & 0x10) != 0) {\n      uVar1 = uVar1 | 2;\n    }\n    if ((param_1 & 0x20) != 0) {\n      uVar1 = uVar1 | 1;\n    }\n    if ((param_1 & 0xc00) == 0xc00) {\n      uVar1 = uVar1 | 0x300;\n    }\n    else if ((param_1 & 0x800) == 0) {\n      if ((param_1 & 0x400) != 0) {\n        uVar1 = uVar1 | 0x200;\n      }\n    }\n    else {\n      uVar1 = uVar1 | 0x100;\n    }\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "___get_machine_control",
      "entry": "004304f6",
      "c": "\n/* Library Function - Single Match\n    ___get_machine_control\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl ___get_machine_control(uint param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if ((param_1 & 799) != 0) {\n    uVar1 = (uint)((param_1 & 0x10) != 0);\n    if ((param_1 & 8) != 0) {\n      uVar1 = uVar1 | 4;\n    }\n    if ((param_1 & 4) != 0) {\n      uVar1 = uVar1 | 8;\n    }\n    if ((param_1 & 2) != 0) {\n      uVar1 = uVar1 | 0x10;\n    }\n    if ((param_1 & 1) != 0) {\n      uVar1 = uVar1 | 0x20;\n    }\n    if ((param_1 & 0x300) == 0x300) {\n      uVar1 = uVar1 | 0xc00;\n    }\n    else if ((param_1 & 0x200) == 0) {\n      if ((param_1 & 0x100) != 0) {\n        uVar1 = uVar1 | 0x800;\n      }\n    }\n    else {\n      uVar1 = uVar1 | 0x400;\n    }\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "___get_machine_control_sse2",
      "entry": "00430567",
      "c": "\n/* Library Function - Single Match\n    ___get_machine_control_sse2\n   \n   Library: Visual Studio 2015 Release */\n\nuint __cdecl ___get_machine_control_sse2(uint param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if ((param_1 & 799) != 0) {\n    if ((param_1 & 0x10) != 0) {\n      uVar1 = 0x80;\n    }\n    if ((param_1 & 8) != 0) {\n      uVar1 = uVar1 | 0x200;\n    }\n    if ((param_1 & 4) != 0) {\n      uVar1 = uVar1 | 0x400;\n    }\n    if ((param_1 & 2) != 0) {\n      uVar1 = uVar1 | 0x800;\n    }\n    if ((param_1 & 1) != 0) {\n      uVar1 = uVar1 | 0x1000;\n    }\n    if ((param_1 & 0x300) == 0x300) {\n      uVar1 = uVar1 | 0x6000;\n    }\n    else if ((param_1 & 0x200) == 0) {\n      if ((param_1 & 0x100) != 0) {\n        uVar1 = uVar1 | 0x4000;\n      }\n    }\n    else {\n      uVar1 = uVar1 | 0x2000;\n    }\n  }\n  return uVar1;\n}\n\n"
    },
    {
      "name": "___get_machine_status_sse2",
      "entry": "004305e7",
      "c": "\n/* Library Function - Single Match\n    ___get_machine_status_sse2\n   \n   Library: Visual Studio 2015 Release */\n\nbyte __cdecl ___get_machine_status_sse2(uint param_1)\n\n{\n  byte bVar1;\n  \n  bVar1 = 0;\n  if ((param_1 & 0x1f) != 0) {\n    bVar1 = (param_1 & 0x10000010) == 0x10000010;\n    if ((param_1 & 0x8000008) == 0x8000008) {\n      bVar1 = bVar1 | 4;\n    }\n    if ((param_1 & 0x4000004) == 0x4000004) {\n      bVar1 = bVar1 | 8;\n    }\n    if ((param_1 & 0x2000002) == 0x2000002) {\n      bVar1 = bVar1 | 0x10;\n    }\n    if ((param_1 & 0x1000001) == 0x1000001) {\n      bVar1 = bVar1 | 0x20;\n    }\n  }\n  return bVar1;\n}\n\n"
    },
    {
      "name": "___get_machine_status_x87",
      "entry": "00430648",
      "c": "\n/* Library Function - Single Match\n    ___get_machine_status_x87\n   \n   Library: Visual Studio 2015 Release */\n\nbyte __cdecl ___get_machine_status_x87(uint param_1)\n\n{\n  byte bVar1;\n  \n  bVar1 = 0;\n  if ((param_1 & 0x1f) != 0) {\n    bVar1 = (param_1 & 0x100010) == 0x100010;\n    if ((param_1 & 0x80008) == 0x80008) {\n      bVar1 = bVar1 | 4;\n    }\n    if ((param_1 & 0x40004) == 0x40004) {\n      bVar1 = bVar1 | 8;\n    }\n    if ((param_1 & 0x20002) == 0x20002) {\n      bVar1 = bVar1 | 0x10;\n    }\n    if ((param_1 & 0x10001) == 0x10001) {\n      bVar1 = bVar1 | 0x20;\n    }\n  }\n  return bVar1;\n}\n\n"
    },
    {
      "name": "__getfpcontrolword",
      "entry": "004306a9",
      "c": "\n/* Library Function - Single Match\n    __getfpcontrolword\n   \n   Library: Visual Studio 2015 Release */\n\nuint __getfpcontrolword(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ushort in_FPUControlWord;\n  undefined4 local_c;\n  \n  local_c = 0;\n  if (0 < DAT_00461d20) {\n    local_c = MXCSR;\n  }\n  uVar1 = ___get_abstract_control_x87((uint)in_FPUControlWord);\n  uVar2 = ___get_abstract_control_sse2(local_c);\n  return (uVar2 | uVar1) & 799;\n}\n\n"
    },
    {
      "name": "__getfpstatusword",
      "entry": "004306ec",
      "c": "\n/* Library Function - Single Match\n    __getfpstatusword\n   \n   Library: Visual Studio 2015 Release */\n\nuint __getfpstatusword(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ushort in_FPUStatusWord;\n  undefined4 local_c;\n  \n  uVar2 = 0;\n  local_c = 0;\n  if (0 < DAT_00461d20) {\n    local_c = MXCSR;\n  }\n  uVar1 = 0;\n  if ((in_FPUStatusWord & 0x3d) != 0) {\n    if ((in_FPUStatusWord & 1) != 0) {\n      uVar1 = 0x100010;\n    }\n    if ((in_FPUStatusWord & 4) != 0) {\n      uVar1 = uVar1 | 0x80008;\n    }\n    if ((in_FPUStatusWord & 8) != 0) {\n      uVar1 = uVar1 | 0x40004;\n    }\n    if ((in_FPUStatusWord & 0x10) != 0) {\n      uVar1 = uVar1 | 0x20002;\n    }\n    if ((in_FPUStatusWord & 0x20) != 0) {\n      uVar1 = uVar1 | 0x10001;\n    }\n  }\n  if ((local_c & 0x3d) != 0) {\n    if ((local_c & 1) != 0) {\n      uVar2 = 0x10000010;\n    }\n    if ((local_c & 4) != 0) {\n      uVar2 = uVar2 | 0x8000008;\n    }\n    if ((local_c & 8) != 0) {\n      uVar2 = uVar2 | 0x4000004;\n    }\n    if ((local_c & 0x10) != 0) {\n      uVar2 = uVar2 | 0x2000002;\n    }\n    if ((local_c & 0x20) != 0) {\n      uVar2 = uVar2 | 0x1000001;\n    }\n  }\n  return uVar1 | uVar2;\n}\n\n"
    },
    {
      "name": "__setfpcontrolword",
      "entry": "00430794",
      "c": "\n/* Library Function - Single Match\n    __setfpcontrolword\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __setfpcontrolword(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  ___get_machine_control(799);\n  ___get_machine_control(param_1);\n  uVar1 = MXCSR;\n  if (0 < DAT_00461d20) {\n    uVar2 = ___get_machine_control_sse2(799);\n    MXCSR = ___get_machine_control_sse2(param_1);\n    MXCSR = ~uVar2 & uVar1 | MXCSR;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__setfpstatusword",
      "entry": "00430814",
      "c": "\n/* Library Function - Single Match\n    __setfpstatusword\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __setfpstatusword(uint param_1)\n\n{\n  uint uVar1;\n  byte bVar2;\n  byte bVar3;\n  undefined3 extraout_var;\n  undefined3 extraout_var_00;\n  \n  ___get_machine_status_x87(0x1f1f001f);\n  ___get_machine_status_x87(param_1);\n  uVar1 = MXCSR;\n  if (0 < DAT_00461d20) {\n    bVar2 = ___get_machine_status_sse2(0x1f1f001f);\n    bVar3 = ___get_machine_status_sse2(param_1);\n    MXCSR = ~CONCAT31(extraout_var,bVar2) & uVar1 | CONCAT31(extraout_var_00,bVar3);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004308a0",
      "entry": "004308a0",
      "c": "\nundefined4 FUN_004308a0(void)\n\n{\n  DAT_0046271c = IsProcessorFeaturePresent(10);\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_004308b0",
      "entry": "004308b0",
      "c": "\nvoid FUN_004308b0(void)\n\n{\n  float10 in_ST0;\n  \n  FUN_004308ce((double)in_ST0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004308ce",
      "entry": "004308ce",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nfloat10 __cdecl FUN_004308ce(double param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  double dVar6;\n  double dVar7;\n  undefined1 in_XMM0 [16];\n  double dVar8;\n  double dVar9;\n  double dVar10;\n  double local_c;\n  \n  iVar4 = 0;\n  while( true ) {\n    uVar2 = (uint)(ushort)(in_XMM0._6_2_ >> 4);\n    dVar6 = (double)(in_XMM0._0_8_ & (ulonglong)_DAT_0043a510 | (ulonglong)DAT_0043a580);\n    dVar7 = (double)(in_XMM0._0_8_ & _UNK_0043a518 | _UNK_0043a588);\n    uVar1 = SUB82(_DAT_0043a530 + dVar6,0) & 0x7f0;\n    dVar10 = (double)(_UNK_0043a548 & (ulonglong)dVar7);\n    dVar9 = (double)(_DAT_0043a540 & (ulonglong)dVar6) * *(double *)(&DAT_0043ab40 + uVar1) -\n            _DAT_0043a520;\n    dVar6 = (dVar6 - (double)(_DAT_0043a540 & (ulonglong)dVar6)) *\n            *(double *)(&DAT_0043ab40 + uVar1);\n    dVar8 = (dVar7 - dVar10) * *(double *)(&UNK_0043ab48 + uVar1);\n    dVar7 = dVar6 + dVar9;\n    in_XMM0._8_8_ = dVar8 + (dVar10 * *(double *)(&UNK_0043ab48 + uVar1) - _UNK_0043a528);\n    uVar3 = uVar2 - 1;\n    if (uVar3 < 0x7fe) {\n      iVar4 = (uVar2 - 0x3ff) + iVar4;\n      dVar10 = (double)iVar4;\n      iVar5 = 0;\n      if (uVar1 + iVar4 * 0x400 == 0) {\n        iVar5 = 0x10;\n      }\n      return (float10)(((_UNK_0043a5d8 * in_XMM0._8_8_ + _UNK_0043a5e8) * in_XMM0._8_8_ +\n                       _UNK_0043a5f8) * in_XMM0._8_8_ * in_XMM0._8_8_ +\n                       ((_DAT_0043a5d0 * dVar7 + _DAT_0043a5e0) * dVar7 + _DAT_0043a5f0) *\n                       dVar7 * dVar7 * dVar7 * dVar7 * dVar7 + _DAT_0043a600 * dVar7 +\n                       *(double *)(&UNK_0043a738 + uVar1) + dVar10 * _UNK_0043a558 +\n                       (double)((ulonglong)dVar8 & *(ulonglong *)(&UNK_0043a568 + iVar5)) +\n                      *(double *)(&DAT_0043a730 + uVar1) + dVar9 + dVar10 * _DAT_0043a550 +\n                      (double)((ulonglong)dVar6 & *(ulonglong *)(&DAT_0043a560 + iVar5)));\n    }\n    local_c = (double)-(ulonglong)(_DAT_0043a590 == param_1);\n    if (SUB82(local_c,0) != 0) break;\n    if (uVar3 != 0xffffffff) {\n      if (uVar3 < 0x7ff) {\n        if (DAT_0043a580 ==\n            (double)((ulonglong)param_1 & (ulonglong)_DAT_0043a510 | (ulonglong)DAT_0043a580)) {\n          return (float10)_DAT_0043a5b8;\n        }\n        iVar4 = 0x3e9;\n        local_c = _DAT_0043a510;\n      }\n      else if (((uVar2 & 0x7ff) < 0x7ff) ||\n              (SUB84(param_1,0) == 0 && ((ulonglong)param_1 & 0xfffff00000000) == 0)) {\n        local_c = -NAN;\n        iVar4 = 9;\n      }\n      else {\n        iVar4 = 0x3e9;\n      }\n      goto LAB_00430ada;\n    }\n    in_XMM0._0_8_ = param_1 * DAT_0043a5a0;\n    iVar4 = -0x34;\n  }\n  iVar4 = 8;\n  local_c = DAT_0043a5b0;\nLAB_00430ada:\n  ___libm_error_support(&param_1,&param_1,&local_c,iVar4);\n  return (float10)local_c;\n}\n\n"
    },
    {
      "name": "FUN_00430f6c",
      "entry": "00430f6c",
      "c": "\nundefined4 FUN_00430f6c(void)\n\n{\n  uint in_EAX;\n  \n  if ((in_EAX & 0x80000) != 0) {\n    return 0;\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00430fc8",
      "entry": "00430fc8",
      "c": "\nuint __cdecl FUN_00430fc8(undefined4 param_1,uint param_2)\n\n{\n  if ((param_2 & 0x7ff00000) != 0x7ff00000) {\n    return param_2 & 0x7ff00000;\n  }\n  return param_2;\n}\n\n"
    },
    {
      "name": "__math_exit",
      "entry": "00430feb",
      "c": "\n/* Library Function - Single Match\n    __math_exit\n   \n   Library: Visual Studio */\n\nvoid __fastcall\n__math_exit(undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5)\n\n{\n  ushort in_FPUStatusWord;\n  ushort unaff_retaddr;\n  \n  if (((unaff_retaddr != 0x27f) && ((unaff_retaddr & 0x20) != 0)) &&\n     ((in_FPUStatusWord & 0x20) != 0)) {\n    __startOneArgErrorHandling(param_1,param_2,unaff_retaddr,param_3,param_4,param_5);\n    return;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004310d0",
      "entry": "004310d0",
      "c": "\nfloat10 __fastcall\nFUN_004310d0(undefined4 param_1,int param_2,undefined2 param_3,undefined4 param_4,undefined4 param_5\n            ,undefined4 param_6,undefined4 param_7,undefined4 param_8)\n\n{\n  float10 in_ST0;\n  int local_24;\n  undefined4 uStack_20;\n  undefined4 uStack_1c;\n  undefined4 uStack_18;\n  undefined4 local_14;\n  undefined4 local_10;\n  double dStack_c;\n  \n  local_14 = param_7;\n  local_10 = param_8;\n  dStack_c = (double)in_ST0;\n  uStack_1c = param_5;\n  uStack_18 = param_6;\n  uStack_20 = param_1;\n  __87except(param_2,&local_24,&param_3);\n  return (float10)dStack_c;\n}\n\n"
    },
    {
      "name": "__startOneArgErrorHandling",
      "entry": "004310e7",
      "c": "\n/* Library Function - Single Match\n    __startOneArgErrorHandling\n   \n   Library: Visual Studio 2015 Release */\n\nfloat10 __fastcall\n__startOneArgErrorHandling\n          (undefined4 param_1,int param_2,ushort param_3,undefined4 param_4,undefined4 param_5,\n          undefined4 param_6)\n\n{\n  float10 in_ST0;\n  int local_24;\n  undefined4 local_20;\n  undefined4 local_1c;\n  undefined4 local_18;\n  double local_c;\n  \n  local_c = (double)in_ST0;\n  local_1c = param_5;\n  local_18 = param_6;\n  local_20 = param_1;\n  __87except(param_2,&local_24,&param_3);\n  return (float10)local_c;\n}\n\n"
    },
    {
      "name": "___libm_error_support",
      "entry": "00431123",
      "c": "\n/* Library Function - Single Match\n    ___libm_error_support\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n___libm_error_support(undefined8 *param_1,undefined8 *param_2,undefined8 *param_3,int param_4)\n\n{\n  undefined8 uVar1;\n  code *pcVar2;\n  int iVar3;\n  int *piVar4;\n  undefined4 local_28;\n  char *local_24;\n  undefined8 local_20;\n  undefined8 local_18;\n  undefined8 local_10;\n  uint local_8;\n  \n  local_8 = DAT_0043e7ac ^ (uint)&stack0xfffffffc;\n  if (DAT_00462708 == 0) {\n    pcVar2 = ___acrt_invoke_user_matherr;\n  }\n  else {\n    pcVar2 = (code *)DecodePointer(DAT_00462718);\n  }\n  if (0x1a < param_4) {\n    if (param_4 != 0x1b) {\n      if (param_4 == 0x1c) {\n        local_24 = \"pow\";\n      }\n      else if (param_4 == 0x31) {\n        local_24 = \"sqrt\";\n      }\n      else if (param_4 == 0x3a) {\n        local_24 = \"acos\";\n      }\n      else {\n        if (param_4 != 0x3d) {\n          if ((param_4 != 1000) && (param_4 != 0x3e9)) goto LAB_0043132b;\n          uVar1 = *param_1;\n          goto LAB_00431278;\n        }\n        local_24 = \"asin\";\n      }\n      goto LAB_00431197;\n    }\n    local_28 = 2;\nLAB_004312e9:\n    local_24 = \"pow\";\n    goto LAB_004312f0;\n  }\n  if (param_4 == 0x1a) {\n    uVar1 = 0x3ff0000000000000;\nLAB_00431278:\n    *param_3 = uVar1;\n    goto LAB_0043132b;\n  }\n  if (param_4 < 0xf) {\n    if (param_4 == 0xe) {\n      local_28 = 3;\n      local_24 = \"exp\";\n    }\n    else {\n      if (param_4 != 2) {\n        if (param_4 == 3) {\n          local_24 = \"log\";\n        }\n        else {\n          if (param_4 == 8) {\n            local_28 = 2;\n            local_24 = \"log10\";\n            goto LAB_004312f0;\n          }\n          if (param_4 != 9) goto LAB_0043132b;\n          local_24 = \"log10\";\n        }\nLAB_00431197:\n        local_28 = 1;\n        local_20 = *param_1;\n        local_18 = *param_2;\n        local_10 = *param_3;\n        (*(code *)PTR_guard_check_icall_00433278)(&local_28);\n        iVar3 = (*pcVar2)();\n        if (iVar3 == 0) {\n          piVar4 = __errno();\n          *piVar4 = 0x21;\n        }\n        goto LAB_00431326;\n      }\n      local_28 = 2;\n      local_24 = \"log\";\n    }\nLAB_004312f0:\n    local_20 = *param_1;\n    local_18 = *param_2;\n    local_10 = *param_3;\n    (*(code *)PTR_guard_check_icall_00433278)(&local_28);\n    iVar3 = (*pcVar2)();\n    if (iVar3 == 0) {\n      piVar4 = __errno();\n      *piVar4 = 0x22;\n    }\n  }\n  else {\n    if (param_4 == 0xf) {\n      local_24 = \"exp\";\n    }\n    else {\n      if (param_4 == 0x18) {\n        local_28 = 3;\n        goto LAB_004312e9;\n      }\n      if (param_4 != 0x19) goto LAB_0043132b;\n      local_24 = \"pow\";\n    }\n    local_28 = 4;\n    local_20 = *param_1;\n    local_18 = *param_2;\n    local_10 = *param_3;\n    (*(code *)PTR_guard_check_icall_00433278)(&local_28);\n    (*pcVar2)();\n  }\nLAB_00431326:\n  *param_3 = local_10;\nLAB_0043132b:\n  FUN_0041fbbc(local_8 ^ (uint)&stack0xfffffffc);\n  return;\n}\n\n"
    },
    {
      "name": "__putwch_nolock",
      "entry": "004313f4",
      "c": "\n/* Library Function - Single Match\n    __putwch_nolock\n   \n   Library: Visual Studio 2015 Release */\n\nwint_t __cdecl __putwch_nolock(wchar_t _WCh)\n\n{\n  BOOL BVar1;\n  DWORD local_8;\n  \n  if (DAT_0043ef10 == (HANDLE)0xfffffffe) {\n    ___dcrt_lowio_initialize_console_output();\n  }\n  if ((DAT_0043ef10 == (HANDLE)0xffffffff) ||\n     (BVar1 = WriteConsoleW(DAT_0043ef10,&_WCh,1,&local_8,(LPVOID)0x0), BVar1 == 0)) {\n    _WCh = L'\\xffff';\n  }\n  return _WCh;\n}\n\n"
    },
    {
      "name": "FUN_00431439",
      "entry": "00431439",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 __cdecl FUN_00431439(double param_1)\n\n{\n  uint uVar1;\n  float10 fVar2;\n  float10 fVar3;\n  \n  uVar1 = __fpclass(param_1);\n  if ((uVar1 & 0x90) == 0) {\n    fVar2 = FUN_004316d9(param_1);\n    if ((float10)param_1 == fVar2) {\n      fVar2 = (float10)param_1 * (float10)_DAT_0043af50;\n      fVar3 = FUN_004316d9((double)fVar2);\n      if ((float10)(double)fVar2 == fVar3) {\n        return 2;\n      }\n      return 1;\n    }\n  }\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_004314a3",
      "entry": "004314a3",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 __cdecl FUN_004314a3(int param_1,int param_2,int param_3,int param_4,undefined8 *param_5)\n\n{\n  double dVar1;\n  double dVar2;\n  int iVar3;\n  \n  dVar1 = ABS((double)CONCAT44(param_2,param_1));\n  dVar2 = _DAT_0043b0e0;\n  if (param_4 == 0x7ff00000) {\n    if (param_3 == 0) {\n      if ((dVar1 <= 1.0) && (dVar2 = 1.0, dVar1 < 1.0)) {\n        dVar2 = 0.0;\n      }\n      goto LAB_004315c8;\n    }\n  }\n  else if ((param_4 == -0x100000) && (param_3 == 0)) {\n    if (dVar1 <= 1.0) {\n      dVar2 = 1.0;\n      if (dVar1 < 1.0) {\n        dVar2 = _DAT_0043b0e0;\n      }\n    }\n    else {\n      dVar2 = 0.0;\n    }\n    goto LAB_004315c8;\n  }\n  if (param_2 == 0x7ff00000) {\n    if (param_1 != 0) {\n      return 0;\n    }\n    if (((double)CONCAT44(param_4,param_3) <= 0.0) &&\n       (dVar2 = 0.0, 0.0 <= (double)CONCAT44(param_4,param_3))) {\n      dVar2 = 1.0;\n    }\n  }\n  else {\n    if (param_2 != -0x100000) {\n      return 0;\n    }\n    if (param_1 != 0) {\n      return 0;\n    }\n    iVar3 = FUN_00431439((double)CONCAT44(param_4,param_3));\n    if ((double)CONCAT44(param_4,param_3) <= 0.0) {\n      if (0.0 <= (double)CONCAT44(param_4,param_3)) {\n        dVar2 = 1.0;\n      }\n      else {\n        dVar2 = 0.0;\n        if (iVar3 == 1) {\n          dVar2 = _DAT_0043b0f0;\n        }\n      }\n    }\n    else {\n      dVar2 = _DAT_0043b0e0;\n      if (iVar3 == 1) {\n        dVar2 = -_DAT_0043b0e0;\n      }\n    }\n  }\nLAB_004315c8:\n  *param_5 = dVar2;\n  return 0;\n}\n\n"
    },
    {
      "name": "__87except",
      "entry": "004315ce",
      "c": "\n/* Library Function - Single Match\n    __87except\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __87except(int param_1,int *param_2,ushort *param_3)\n\n{\n  bool bVar1;\n  undefined3 extraout_var;\n  int iVar2;\n  uint uVar3;\n  uint local_94;\n  uint local_90 [12];\n  undefined8 local_60;\n  uint local_50;\n  uint local_14;\n  \n  local_14 = DAT_0043e7ac ^ (uint)&stack0xfffffff0;\n  local_94 = (uint)*param_3;\n  iVar2 = *param_2;\n  if (iVar2 == 1) {\nLAB_00431636:\n    uVar3 = 8;\n  }\n  else if (iVar2 == 2) {\n    uVar3 = 4;\n  }\n  else if (iVar2 == 3) {\n    uVar3 = 0x11;\n  }\n  else if (iVar2 == 4) {\n    uVar3 = 0x12;\n  }\n  else {\n    if (iVar2 == 5) goto LAB_00431636;\n    if (iVar2 != 8) goto LAB_00431698;\n    uVar3 = 0x10;\n  }\n  bVar1 = __handle_exc(uVar3,(double *)(param_2 + 6),local_94);\n  if (CONCAT31(extraout_var,bVar1) == 0) {\n    if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {\n      local_60 = *(undefined8 *)(param_2 + 4);\n      local_50 = local_50 & 0xffffffe3 | 3;\n    }\n    else {\n      local_50 = local_50 & 0xfffffffe;\n    }\n    __raise_exc(local_90,&local_94,uVar3,param_1,(uint *)(param_2 + 2),(uint *)(param_2 + 6));\n  }\nLAB_00431698:\n  __ctrlfp();\n  if (((*param_2 == 8) || (bVar1 = ___acrt_has_user_matherr(), !bVar1)) ||\n     (iVar2 = ___acrt_invoke_user_matherr(param_2), iVar2 == 0)) {\n    __set_errno_from_matherr(*param_2);\n  }\n  FUN_0041fbbc(local_14 ^ (uint)&stack0xfffffff0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_004316d9",
      "entry": "004316d9",
      "c": "\nfloat10 __cdecl FUN_004316d9(double param_1)\n\n{\n  return (float10)ROUND(param_1);\n}\n\n"
    },
    {
      "name": "__errcode",
      "entry": "004316ef",
      "c": "\n/* Library Function - Single Match\n    __errcode\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nint __cdecl __errcode(uint param_1)\n\n{\n  undefined4 uStack_8;\n  \n  if ((param_1 & 0x20) == 0) {\n    if ((param_1 & 8) != 0) {\n      return 1;\n    }\n    if ((param_1 & 4) == 0) {\n      if ((param_1 & 1) == 0) {\n        return (param_1 & 2) * 2;\n      }\n      uStack_8 = 3;\n    }\n    else {\n      uStack_8 = 2;\n    }\n  }\n  else {\n    uStack_8 = 5;\n  }\n  return uStack_8;\n}\n\n"
    },
    {
      "name": "__except1",
      "entry": "00431723",
      "c": "\n/* Library Function - Single Match\n    __except1\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __except1(uint param_1,int param_2,undefined8 param_3,double param_4,uint param_5)\n\n{\n  bool bVar1;\n  undefined3 extraout_var;\n  int iVar2;\n  uint local_90 [16];\n  uint local_50;\n  uint local_14;\n  \n  local_14 = DAT_0043e7ac ^ (uint)&stack0xfffffff0;\n  bVar1 = __handle_exc(param_1,&param_4,param_5);\n  if (CONCAT31(extraout_var,bVar1) == 0) {\n    local_50 = local_50 & 0xfffffffe;\n    __raise_exc_ex(local_90,&param_5,param_1,param_2,(uint *)&param_3,(uint *)&param_4,0);\n  }\n  iVar2 = __errcode(param_1);\n  bVar1 = ___acrt_has_user_matherr();\n  if ((bVar1) && (iVar2 != 0)) {\n    __umatherr(iVar2,param_2,(int)param_3,(int)((ulonglong)param_3 >> 0x20),0,0,SUB84(param_4,0),\n               (int)((ulonglong)param_4 >> 0x20));\n  }\n  else {\n    __set_errno_from_matherr(iVar2);\n    __ctrlfp();\n  }\n  FUN_0041fbbc(local_14 ^ (uint)&stack0xfffffff0);\n  return;\n}\n\n"
    },
    {
      "name": "__handle_exc",
      "entry": "004317f1",
      "c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* Library Function - Single Match\n    __handle_exc\n   \n   Library: Visual Studio 2015 Release */\n\nbool __cdecl __handle_exc(uint param_1,double *param_2,uint param_3)\n\n{\n  double dVar1;\n  double dVar2;\n  double dVar3;\n  int iVar4;\n  uint uVar5;\n  bool bVar6;\n  float10 fVar7;\n  float10 fVar8;\n  uint local_14;\n  byte bStack_10;\n  undefined1 uStack_f;\n  ushort uStack_e;\n  int local_8;\n  \n  uVar5 = param_1 & 0x1f;\n  if (((param_1 & 8) != 0) && ((param_3 & 1) != 0)) {\n    FUN_0042f2f7();\n    uVar5 = param_1 & 0x17;\n    goto LAB_004319ae;\n  }\n  if ((param_1 & param_3 & 4) != 0) {\n    FUN_0042f2f7();\n    uVar5 = param_1 & 0x1b;\n    goto LAB_004319ae;\n  }\n  if (((param_1 & 1) == 0) || ((param_3 & 8) == 0)) {\n    if (((param_1 & 2) != 0) && ((param_3 & 0x10) != 0)) {\n      bVar6 = (param_1 & 0x10) != 0;\n      if (*param_2 == 0.0) {\n        bVar6 = true;\n      }\n      else {\n        fVar7 = (float10)FUN_00431db6(SUB84(*param_2,0),(uint)((ulonglong)*param_2 >> 0x20),&local_8\n                                     );\n        local_8 = local_8 + -0x600;\n        dVar2 = (double)fVar7;\n        local_14 = SUB84(dVar2,0);\n        bStack_10 = (byte)((ulonglong)dVar2 >> 0x20);\n        uStack_f = (undefined1)((ulonglong)dVar2 >> 0x28);\n        uStack_e = (ushort)((ulonglong)dVar2 >> 0x30);\n        if (local_8 < -0x432) {\n          fVar8 = (float10)0 * fVar7;\n          bVar6 = true;\n        }\n        else {\n          uStack_e = uStack_e & 0xf | 0x10;\n          if (local_8 < -0x3fd) {\n            iVar4 = -0x3fd - local_8;\n            do {\n              if (((local_14 & 1) != 0) && (!bVar6)) {\n                bVar6 = true;\n              }\n              local_14 = local_14 >> 1;\n              if ((bStack_10 & 1) != 0) {\n                local_14 = local_14 | 0x80000000;\n              }\n              uVar5 = CONCAT22(uStack_e,CONCAT11(uStack_f,bStack_10)) >> 1;\n              bStack_10 = (byte)uVar5;\n              uStack_f = (undefined1)(uVar5 >> 8);\n              uStack_e = uStack_e >> 1;\n              iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n          }\n          fVar8 = (float10)(double)CONCAT26(uStack_e,CONCAT15(uStack_f,CONCAT14(bStack_10,local_14))\n                                           );\n          if (fVar7 < (float10)0) {\n            fVar8 = -fVar8;\n          }\n        }\n        *param_2 = (double)fVar8;\n      }\n      if (bVar6) {\n        FUN_0042f2f7();\n      }\n      uVar5 = param_1 & 0x1d;\n    }\n    goto LAB_004319ae;\n  }\n  FUN_0042f2f7();\n  uVar5 = param_3 & 0xc00;\n  dVar2 = _DAT_0043b0e0;\n  dVar3 = _DAT_0043b0e0;\n  if (uVar5 == 0) {\n    dVar1 = *param_2;\njoined_r0x00431892:\n    if (dVar1 <= 0.0) {\n      dVar2 = -dVar3;\n    }\n    *param_2 = dVar2;\n  }\n  else {\n    if (uVar5 == 0x400) {\n      dVar1 = *param_2;\n      dVar2 = _DAT_0043b0e8;\n      goto joined_r0x00431892;\n    }\n    dVar3 = _DAT_0043b0e8;\n    if (uVar5 == 0x800) {\n      dVar1 = *param_2;\n      goto joined_r0x00431892;\n    }\n    if (uVar5 == 0xc00) {\n      dVar1 = *param_2;\n      dVar2 = _DAT_0043b0e8;\n      goto joined_r0x00431892;\n    }\n  }\n  uVar5 = param_1 & 0x1e;\nLAB_004319ae:\n  if (((param_1 & 0x10) != 0) && ((param_3 & 0x20) != 0)) {\n    FUN_0042f2f7();\n    uVar5 = uVar5 & 0xffffffef;\n  }\n  return uVar5 == 0;\n}\n\n"
    },
    {
      "name": "__raise_exc",
      "entry": "004319d1",
      "c": "\n/* Library Function - Single Match\n    __raise_exc\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__raise_exc(uint *param_1,uint *param_2,uint param_3,int param_4,uint *param_5,uint *param_6)\n\n{\n  __raise_exc_ex(param_1,param_2,param_3,param_4,param_5,param_6,0);\n  return;\n}\n\n"
    },
    {
      "name": "__raise_exc_ex",
      "entry": "004319f4",
      "c": "\n/* Library Function - Single Match\n    __raise_exc_ex\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl\n__raise_exc_ex(uint *param_1,uint *param_2,uint param_3,int param_4,uint *param_5,uint *param_6,\n              int param_7)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint uVar3;\n  DWORD dwExceptionCode;\n  \n  puVar1 = param_2;\n  param_1[1] = 0;\n  dwExceptionCode = 0xc000000d;\n  param_1[2] = 0;\n  param_1[3] = 0;\n  if ((param_3 & 0x10) != 0) {\n    dwExceptionCode = 0xc000008f;\n    param_1[1] = param_1[1] | 1;\n  }\n  if ((param_3 & 2) != 0) {\n    dwExceptionCode = 0xc0000093;\n    param_1[1] = param_1[1] | 2;\n  }\n  if ((param_3 & 1) != 0) {\n    dwExceptionCode = 0xc0000091;\n    param_1[1] = param_1[1] | 4;\n  }\n  if ((param_3 & 4) != 0) {\n    dwExceptionCode = 0xc000008e;\n    param_1[1] = param_1[1] | 8;\n  }\n  if ((param_3 & 8) != 0) {\n    dwExceptionCode = 0xc0000090;\n    param_1[1] = param_1[1] | 0x10;\n  }\n  param_1[2] = param_1[2] ^ (~(*param_2 << 4) ^ param_1[2]) & 0x10;\n  param_1[2] = param_1[2] ^ (~(*param_2 * 2) ^ param_1[2]) & 8;\n  param_1[2] = param_1[2] ^ (~(*param_2 >> 1) ^ param_1[2]) & 4;\n  param_1[2] = param_1[2] ^ (~(*param_2 >> 3) ^ param_1[2]) & 2;\n  param_1[2] = param_1[2] ^ (~(*param_2 >> 5) ^ param_1[2]) & 1;\n  uVar3 = __statfp();\n  puVar2 = param_6;\n  if ((uVar3 & 1) != 0) {\n    param_1[3] = param_1[3] | 0x10;\n  }\n  if ((uVar3 & 4) != 0) {\n    param_1[3] = param_1[3] | 8;\n  }\n  if ((uVar3 & 8) != 0) {\n    param_1[3] = param_1[3] | 4;\n  }\n  if ((uVar3 & 0x10) != 0) {\n    param_1[3] = param_1[3] | 2;\n  }\n  if ((uVar3 & 0x20) != 0) {\n    param_1[3] = param_1[3] | 1;\n  }\n  uVar3 = *puVar1 & 0xc00;\n  if (uVar3 == 0) {\n    *param_1 = *param_1 & 0xfffffffc;\n  }\n  else {\n    if (uVar3 == 0x400) {\n      uVar3 = *param_1 & 0xfffffffd | 1;\n    }\n    else {\n      if (uVar3 != 0x800) {\n        if (uVar3 == 0xc00) {\n          *param_1 = *param_1 | 3;\n        }\n        goto LAB_00431b56;\n      }\n      uVar3 = *param_1 & 0xfffffffe | 2;\n    }\n    *param_1 = uVar3;\n  }\nLAB_00431b56:\n  uVar3 = *puVar1 & 0x300;\n  if (uVar3 == 0) {\n    uVar3 = *param_1 & 0xffffffeb | 8;\nLAB_00431b8c:\n    *param_1 = uVar3;\n  }\n  else {\n    if (uVar3 == 0x200) {\n      uVar3 = *param_1 & 0xffffffe7 | 4;\n      goto LAB_00431b8c;\n    }\n    if (uVar3 == 0x300) {\n      *param_1 = *param_1 & 0xffffffe3;\n    }\n  }\n  *param_1 = *param_1 ^ (param_4 << 5 ^ *param_1) & 0x1ffe0;\n  param_1[8] = param_1[8] | 1;\n  if (param_7 == 0) {\n    param_1[8] = param_1[8] & 0xffffffe3 | 2;\n    *(undefined8 *)(param_1 + 4) = *(undefined8 *)param_5;\n    param_1[0x18] = param_1[0x18] | 1;\n    param_1[0x18] = param_1[0x18] & 0xffffffe3 | 2;\n    *(undefined8 *)(param_1 + 0x14) = *(undefined8 *)param_6;\n  }\n  else {\n    param_1[8] = param_1[8] & 0xffffffe1;\n    param_1[4] = *param_5;\n    param_1[0x18] = param_1[0x18] | 1;\n    param_1[0x18] = param_1[0x18] & 0xffffffe1;\n    param_1[0x14] = *param_6;\n  }\n  __clrfp();\n  RaiseException(dwExceptionCode,0,1,(ULONG_PTR *)&param_1);\n  if ((param_1[2] & 0x10) != 0) {\n    *puVar1 = *puVar1 & 0xfffffffe;\n  }\n  if ((param_1[2] & 8) != 0) {\n    *puVar1 = *puVar1 & 0xfffffffb;\n  }\n  if ((param_1[2] & 4) != 0) {\n    *puVar1 = *puVar1 & 0xfffffff7;\n  }\n  if ((param_1[2] & 2) != 0) {\n    *puVar1 = *puVar1 & 0xffffffef;\n  }\n  if ((param_1[2] & 1) != 0) {\n    *puVar1 = *puVar1 & 0xffffffdf;\n  }\n  uVar3 = *param_1 & 3;\n  if (uVar3 == 0) {\n    *puVar1 = *puVar1 & 0xfffff3ff;\n  }\n  else {\n    if (uVar3 == 1) {\n      uVar3 = *puVar1 & 0xfffff7ff | 0x400;\n    }\n    else {\n      if (uVar3 != 2) {\n        if (uVar3 == 3) {\n          *puVar1 = *puVar1 | 0xc00;\n        }\n        goto LAB_00431c9d;\n      }\n      uVar3 = *puVar1 & 0xfffffbff | 0x800;\n    }\n    *puVar1 = uVar3;\n  }\nLAB_00431c9d:\n  uVar3 = *param_1 >> 2 & 7;\n  if (uVar3 == 0) {\n    uVar3 = *puVar1 & 0xfffff3ff | 0x300;\n  }\n  else {\n    if (uVar3 != 1) {\n      if (uVar3 == 2) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n      }\n      goto LAB_00431cce;\n    }\n    uVar3 = *puVar1 & 0xfffff3ff | 0x200;\n  }\n  *puVar1 = uVar3;\nLAB_00431cce:\n  if (param_7 == 0) {\n    *(undefined8 *)puVar2 = *(undefined8 *)(param_1 + 0x14);\n  }\n  else {\n    *puVar2 = param_1[0x14];\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__set_errno_from_matherr",
      "entry": "00431ce5",
      "c": "\n/* Library Function - Single Match\n    __set_errno_from_matherr\n   \n   Library: Visual Studio 2015 Release */\n\nvoid __cdecl __set_errno_from_matherr(int param_1)\n\n{\n  int *piVar1;\n  \n  if (param_1 == 1) {\n    piVar1 = __errno();\n    *piVar1 = 0x21;\n  }\n  else if (param_1 - 2U < 2) {\n    piVar1 = __errno();\n    *piVar1 = 0x22;\n    return;\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__umatherr",
      "entry": "00431d14",
      "c": "\n/* Library Function - Single Match\n    __umatherr\n   \n   Library: Visual Studio 2015 Release */\n\nfloat10 __cdecl\n__umatherr(int param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,\n          undefined4 param_6,undefined4 param_7,undefined4 param_8)\n\n{\n  double dVar1;\n  int iVar2;\n  int local_24;\n  int local_20;\n  undefined4 local_1c;\n  undefined4 local_18;\n  undefined4 local_14;\n  undefined4 local_10;\n  undefined4 local_c;\n  undefined4 uStack_8;\n  \n  local_20 = 0;\n  iVar2 = 0;\n  do {\n    if ((&DAT_0043afe8)[iVar2 * 2] == param_2) {\n      local_20 = *(int *)(&UNK_0043afec + iVar2 * 8);\n      break;\n    }\n    iVar2 = iVar2 + 1;\n  } while (iVar2 < 0x1d);\n  if (local_20 == 0) {\n    __ctrlfp();\n    __set_errno_from_matherr(param_1);\n    dVar1 = (double)CONCAT44(param_8,param_7);\n  }\n  else {\n    local_1c = param_3;\n    local_18 = param_4;\n    local_14 = param_5;\n    local_10 = param_6;\n    local_c = param_7;\n    local_24 = param_1;\n    uStack_8 = param_8;\n    __ctrlfp();\n    iVar2 = ___acrt_invoke_user_matherr(&local_24);\n    if (iVar2 == 0) {\n      __set_errno_from_matherr(param_1);\n    }\n    dVar1 = (double)CONCAT44(uStack_8,local_c);\n  }\n  return (float10)dVar1;\n}\n\n"
    },
    {
      "name": "FUN_00431db6",
      "entry": "00431db6",
      "c": "\nvoid __cdecl FUN_00431db6(int param_1,uint param_2,int *param_3)\n\n{\n  uint uVar1;\n  double dVar2;\n  uint uVar3;\n  ushort uVar4;\n  int iVar5;\n  \n  dVar2 = (double)CONCAT17(param_2._3_1_,\n                           CONCAT16(param_2._2_1_,CONCAT24((undefined2)param_2,param_1)));\n  if (dVar2 == 0.0) {\n    iVar5 = 0;\n  }\n  else if (((param_2 & 0x7ff00000) == 0) && (((param_2 & 0xfffff) != 0 || (param_1 != 0)))) {\n    iVar5 = -0x3fd;\n    uVar3 = param_2;\n    if ((param_2 & 0x100000) == 0) {\n      do {\n        uVar1 = uVar3 * 2;\n        param_2._0_2_ = (undefined2)uVar1;\n        uVar3 = uVar1;\n        if (param_1 < 0) {\n          uVar3 = uVar1 | 1;\n          param_2._0_2_ = (undefined2)uVar3;\n        }\n        param_1 = param_1 * 2;\n        iVar5 = iVar5 + -1;\n      } while ((uVar1 & 0x100000) == 0);\n      param_2 = CONCAT22((short)(uVar1 >> 0x10),(undefined2)param_2);\n    }\n    uVar4 = (ushort)(param_2 >> 0x10) & 0xffef;\n    param_2._2_1_ = (undefined1)uVar4;\n    param_2._3_1_ = (byte)(uVar4 >> 8);\n    if (dVar2 < 0.0) {\n      param_2._3_1_ = param_2._3_1_ | 0x80;\n    }\n    __set_exp(CONCAT17(param_2._3_1_,CONCAT16(param_2._2_1_,CONCAT24((undefined2)param_2,param_1))),\n              0);\n  }\n  else {\n    __set_exp(dVar2,0);\n    iVar5 = (param_2 >> 0x14 & 0x7ff) - 0x3fe;\n  }\n  *param_3 = iVar5;\n  return;\n}\n\n"
    },
    {
      "name": "__set_exp",
      "entry": "00431e8a",
      "c": "\n/* Library Function - Single Match\n    __set_exp\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release */\n\nfloat10 __cdecl __set_exp(undefined8 param_1,short param_2)\n\n{\n  undefined8 local_c;\n  \n  local_c = (double)CONCAT26((param_2 + 0x3fe) * 0x10 | param_1._6_2_ & 0x800f,(int6)param_1);\n  return (float10)local_c;\n}\n\n"
    },
    {
      "name": "__sptype",
      "entry": "00431eb9",
      "c": "\n/* Library Function - Single Match\n    __sptype\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nundefined4 __cdecl __sptype(int param_1,uint param_2)\n\n{\n  undefined4 uStack_8;\n  \n  if (param_2 == 0x7ff00000) {\n    if (param_1 == 0) {\n      return 1;\n    }\n  }\n  else if ((param_2 == 0xfff00000) && (param_1 == 0)) {\n    return 2;\n  }\n  if ((param_2._2_2_ & 0x7ff8) == 0x7ff8) {\n    uStack_8 = 3;\n  }\n  else {\n    if (((param_2._2_2_ & 0x7ff8) != 0x7ff0) || (((param_2 & 0x7ffff) == 0 && (param_1 == 0)))) {\n      return 0;\n    }\n    uStack_8 = 4;\n  }\n  return uStack_8;\n}\n\n"
    },
    {
      "name": "___dcrt_lowio_initialize_console_output",
      "entry": "00431f17",
      "c": "\n/* Library Function - Single Match\n    ___dcrt_lowio_initialize_console_output\n   \n   Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release */\n\nvoid ___dcrt_lowio_initialize_console_output(void)\n\n{\n  DAT_0043ef10 = CreateFileW(L\"CONOUT$\",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00431f40",
      "entry": "00431f40",
      "c": "\nvoid FUN_00431f40(void)\n\n{\n  if ((DAT_0043ef10 != (HANDLE)0xffffffff) && (DAT_0043ef10 != (HANDLE)0xfffffffe)) {\n    CloseHandle(DAT_0043ef10);\n  }\n  return;\n}\n\n"
    },
    {
      "name": "__fpclass",
      "entry": "00431f57",
      "c": "\n/* Library Function - Single Match\n    __fpclass\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nint __cdecl __fpclass(double _X)\n\n{\n  int iVar1;\n  \n  if ((_X._6_2_ & 0x7ff0) == 0x7ff0) {\n    iVar1 = __sptype(_X._0_4_,(uint)((ulonglong)_X >> 0x20));\n    if (iVar1 == 1) {\n      return 0x200;\n    }\n    if (iVar1 == 2) {\n      iVar1 = 4;\n    }\n    else {\n      if (iVar1 != 3) {\n        return 1;\n      }\n      iVar1 = 2;\n    }\n    return iVar1;\n  }\n  if ((((ulonglong)_X & 0x7ff0000000000000) == 0) &&\n     ((((ulonglong)_X & 0xfffff00000000) != 0 || (_X._0_4_ != 0)))) {\n    return (-(uint)(((ulonglong)_X & 0x8000000000000000) != 0) & 0xffffff90) + 0x80;\n  }\n  if (_X == 0.0) {\n    return (-(uint)(((ulonglong)_X & 0x8000000000000000) != 0) & 0xffffffe0) + 0x40;\n  }\n  return (-(uint)(((ulonglong)_X & 0x8000000000000000) != 0) & 0xffffff08) + 0x100;\n}\n\n"
    },
    {
      "name": "IsProcessorFeaturePresent",
      "entry": "00431ffe",
      "c": "\nBOOL IsProcessorFeaturePresent(DWORD ProcessorFeature)\n\n{\n  BOOL BVar1;\n  \n                    /* WARNING: Could not recover jumptable at 0x00431ffe. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  BVar1 = IsProcessorFeaturePresent(ProcessorFeature);\n  return BVar1;\n}\n\n"
    },
    {
      "name": "__alloca_probe_16",
      "entry": "00432010",
      "c": "\n/* WARNING: This is an inlined function */\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n/* Library Function - Single Match\n    __alloca_probe_16\n   \n   Library: Visual Studio 2015 Release */\n\nuint __alloca_probe_16(void)\n\n{\n  uint in_EAX;\n  uint uVar1;\n  \n  uVar1 = 4 - in_EAX & 0xf;\n  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);\n}\n\n"
    },
    {
      "name": "__alloca_probe_8",
      "entry": "00432026",
      "c": "\n/* WARNING: This is an inlined function */\n/* WARNING: Function: __alloca_probe replaced with injection: alloca_probe */\n/* Library Function - Single Match\n    __alloca_probe_8\n   \n   Library: Visual Studio */\n\nuint __alloca_probe_8(void)\n\n{\n  uint in_EAX;\n  uint uVar1;\n  \n  uVar1 = 4 - in_EAX & 7;\n  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);\n}\n\n"
    },
    {
      "name": "__FindPESection",
      "entry": "00432040",
      "c": "\n/* Library Function - Single Match\n    __FindPESection\n   \n   Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release */\n\nPIMAGE_SECTION_HEADER __cdecl __FindPESection(PBYTE pImageBase,DWORD_PTR rva)\n\n{\n  int iVar1;\n  PIMAGE_SECTION_HEADER p_Var2;\n  uint uVar3;\n  \n  uVar3 = 0;\n  iVar1 = *(int *)(pImageBase + 0x3c);\n  p_Var2 = (PIMAGE_SECTION_HEADER)\n           (pImageBase + *(ushort *)(pImageBase + iVar1 + 0x14) + 0x18 + iVar1);\n  if (*(ushort *)(pImageBase + iVar1 + 6) != 0) {\n    do {\n      if ((p_Var2->VirtualAddress <= rva) &&\n         (rva < (p_Var2->Misc).PhysicalAddress + p_Var2->VirtualAddress)) {\n        return p_Var2;\n      }\n      uVar3 = uVar3 + 1;\n      p_Var2 = p_Var2 + 1;\n    } while (uVar3 < *(ushort *)(pImageBase + iVar1 + 6));\n  }\n  return (PIMAGE_SECTION_HEADER)0x0;\n}\n\n"
    },
    {
      "name": "__IsNonwritableInCurrentImage",
      "entry": "00432090",
      "c": "\n/* Library Function - Single Match\n    __IsNonwritableInCurrentImage\n   \n   Library: Visual Studio 2019 Release */\n\nBOOL __cdecl __IsNonwritableInCurrentImage(PBYTE pTarget)\n\n{\n  bool bVar1;\n  undefined3 extraout_var;\n  PIMAGE_SECTION_HEADER p_Var2;\n  void *local_14;\n  code *pcStack_10;\n  uint local_c;\n  undefined4 local_8;\n  \n  pcStack_10 = __except_handler4;\n  local_14 = ExceptionList;\n  local_c = DAT_0043e7ac ^ 0x43c5d0;\n  ExceptionList = &local_14;\n  local_8 = 0;\n  bVar1 = FUN_00432150((short *)&IMAGE_DOS_HEADER_00400000);\n  if (CONCAT31(extraout_var,bVar1) != 0) {\n    p_Var2 = __FindPESection((PBYTE)&IMAGE_DOS_HEADER_00400000,(DWORD_PTR)(pTarget + -0x400000));\n    if (p_Var2 != (PIMAGE_SECTION_HEADER)0x0) {\n      ExceptionList = local_14;\n      return ~(p_Var2->Characteristics >> 0x1f) & 1;\n    }\n  }\n  ExceptionList = local_14;\n  return 0;\n}\n\n"
    },
    {
      "name": "FUN_00432150",
      "entry": "00432150",
      "c": "\nbool __cdecl FUN_00432150(short *param_1)\n\n{\n  if ((*param_1 == 0x5a4d) && (*(int *)(*(int *)(param_1 + 0x1e) + (int)param_1) == 0x4550)) {\n    return (short)((int *)(*(int *)(param_1 + 0x1e) + (int)param_1))[6] == 0x10b;\n  }\n  return false;\n}\n\n"
    },
    {
      "name": "__EH_prolog3_catch",
      "entry": "00432181",
      "c": "\n/* WARNING: This is an inlined function */\n/* WARNING: Unable to track spacebase fully for stack */\n/* WARNING: Variable defined which should be unmapped: param_1 */\n/* Library Function - Single Match\n    __EH_prolog3_catch\n   \n   Libraries: Visual Studio 2005, Visual Studio 2008, Visual Studio 2010, Visual Studio 2012 */\n\nvoid __cdecl __EH_prolog3_catch(int param_1)\n\n{\n  int iVar1;\n  undefined4 unaff_EBX;\n  undefined4 unaff_ESI;\n  undefined4 unaff_EDI;\n  undefined4 unaff_retaddr;\n  uint auStack_1c [5];\n  undefined1 local_8 [8];\n  \n  iVar1 = -param_1;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 0x10) = unaff_EBX;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 0xc) = unaff_ESI;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 8) = unaff_EDI;\n  *(uint *)((int)auStack_1c + iVar1 + 4) = DAT_0043e7ac ^ (uint)&param_1;\n  *(undefined4 *)((int)auStack_1c + iVar1) = unaff_retaddr;\n  ExceptionList = local_8;\n  return;\n}\n\n"
    },
    {
      "name": "__aulldvrm",
      "entry": "004321c0",
      "c": "\n/* Library Function - Single Match\n    __aulldvrm\n   \n   Library: Visual Studio 2015 Release */\n\nundefined8 __aulldvrm(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  \n  uVar3 = param_1;\n  uVar8 = param_4;\n  uVar6 = param_2;\n  uVar9 = param_3;\n  if (param_4 == 0) {\n    uVar3 = param_2 / param_3;\n    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /\n                 (ulonglong)param_3);\n  }\n  else {\n    do {\n      uVar5 = uVar8 >> 1;\n      uVar9 = uVar9 >> 1 | (uint)((uVar8 & 1) != 0) << 0x1f;\n      uVar7 = uVar6 >> 1;\n      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;\n      uVar8 = uVar5;\n      uVar6 = uVar7;\n    } while (uVar5 != 0);\n    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar9;\n    iVar4 = (int)uVar1;\n    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    uVar8 = uVar3 + iVar4 * param_4;\n    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar8)) ||\n       ((param_2 <= uVar8 && (param_1 < (uint)lVar2)))) {\n      iVar4 = iVar4 + -1;\n    }\n    uVar3 = 0;\n  }\n  return CONCAT44(uVar3,iVar4);\n}\n\n"
    },
    {
      "name": "__alldvrm",
      "entry": "00432260",
      "c": "\n/* Library Function - Single Match\n    __alldvrm\n   \n   Library: Visual Studio 2015 Release */\n\nundefined8 __alldvrm(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  bool bVar10;\n  char cVar11;\n  uint uVar9;\n  \n  cVar11 = (int)param_2 < 0;\n  if ((bool)cVar11) {\n    bVar10 = param_1 != 0;\n    param_1 = -param_1;\n    param_2 = -(uint)bVar10 - param_2;\n  }\n  if ((int)param_4 < 0) {\n    cVar11 = cVar11 + '\\x01';\n    bVar10 = param_3 != 0;\n    param_3 = -param_3;\n    param_4 = -(uint)bVar10 - param_4;\n  }\n  uVar3 = param_1;\n  uVar5 = param_3;\n  uVar6 = param_2;\n  uVar9 = param_4;\n  if (param_4 == 0) {\n    uVar3 = param_2 / param_3;\n    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /\n                 (ulonglong)param_3);\n  }\n  else {\n    do {\n      uVar8 = uVar9 >> 1;\n      uVar5 = uVar5 >> 1 | (uint)((uVar9 & 1) != 0) << 0x1f;\n      uVar7 = uVar6 >> 1;\n      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;\n      uVar6 = uVar7;\n      uVar9 = uVar8;\n    } while (uVar8 != 0);\n    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar5;\n    iVar4 = (int)uVar1;\n    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    uVar5 = uVar3 + iVar4 * param_4;\n    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar5)) ||\n       ((param_2 <= uVar5 && (param_1 < (uint)lVar2)))) {\n      iVar4 = iVar4 + -1;\n    }\n    uVar3 = 0;\n  }\n  if (cVar11 == '\\x01') {\n    bVar10 = iVar4 != 0;\n    iVar4 = -iVar4;\n    uVar3 = -(uint)bVar10 - uVar3;\n  }\n  return CONCAT44(uVar3,iVar4);\n}\n\n"
    },
    {
      "name": "__SEH_prolog4_GS",
      "entry": "00432340",
      "c": "\n/* WARNING: This is an inlined function */\n/* WARNING: Unable to track spacebase fully for stack */\n/* WARNING: Variable defined which should be unmapped: param_2 */\n/* Library Function - Single Match\n    __SEH_prolog4_GS\n   \n   Library: Visual Studio */\n\nvoid __cdecl __SEH_prolog4_GS(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 unaff_EBX;\n  undefined4 unaff_ESI;\n  undefined4 unaff_EDI;\n  undefined4 unaff_retaddr;\n  uint auStack_1c [5];\n  undefined1 local_8 [8];\n  \n  iVar1 = -param_2;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 0x10) = unaff_EBX;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 0xc) = unaff_ESI;\n  *(undefined4 *)((int)auStack_1c + iVar1 + 8) = unaff_EDI;\n  *(uint *)((int)auStack_1c + iVar1 + 4) = DAT_0043e7ac ^ (uint)&param_2;\n  *(undefined4 *)((int)auStack_1c + iVar1) = unaff_retaddr;\n  ExceptionList = local_8;\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432390",
      "entry": "00432390",
      "c": "\n/* WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3 */\n\nvoid FUN_00432390(void)\n\n{\n  uint unaff_EBP;\n  \n  FUN_0041fbbc(*(uint *)(unaff_EBP - 0x1c) ^ unaff_EBP);\n  return;\n}\n\n"
    },
    {
      "name": "thunk_FUN_004323b0",
      "entry": "004323a0",
      "c": "\nuint thunk_FUN_004323b0(void)\n\n{\n  uint uVar1;\n  ushort uVar2;\n  float10 in_ST0;\n  undefined4 uStack_1c;\n  undefined2 uStack_18;\n  \n  if (1 < DAT_00461d20) {\n    return (int)in_ST0;\n  }\n  uStack_1c = (uint)((unkuint10)in_ST0 >> 0x20);\n  uStack_18 = (ushort)((unkuint10)in_ST0 >> 0x40);\n  uVar2 = uStack_18 & 0x7fff;\n  uVar1 = (uint)((short)uStack_18 < 0);\n  if (uVar2 < 0x3fff) {\n    return 0;\n  }\n  if ((int)uStack_1c < 0) {\n    if (uVar2 < 0x401e) {\n      return (uStack_1c >> (0x3eU - (char)uVar2 & 0x1f) ^ -uVar1) + uVar1;\n    }\n    if (((uVar2 < 0x401f) && (uVar1 != 0)) && (uStack_1c == 0x80000000)) {\n      return uStack_1c;\n    }\n  }\n  return 0x80000000;\n}\n\n"
    },
    {
      "name": "FUN_004323b0",
      "entry": "004323b0",
      "c": "\nuint FUN_004323b0(void)\n\n{\n  uint uVar1;\n  ushort uVar2;\n  float10 in_ST0;\n  undefined4 uStack_1c;\n  undefined2 uStack_18;\n  \n  if (1 < DAT_00461d20) {\n    return (int)in_ST0;\n  }\n  uStack_1c = (uint)((unkuint10)in_ST0 >> 0x20);\n  uStack_18 = (ushort)((unkuint10)in_ST0 >> 0x40);\n  uVar2 = uStack_18 & 0x7fff;\n  uVar1 = (uint)((short)uStack_18 < 0);\n  if (uVar2 < 0x3fff) {\n    return 0;\n  }\n  if ((int)uStack_1c < 0) {\n    if (uVar2 < 0x401e) {\n      return (uStack_1c >> (0x3eU - (char)uVar2 & 0x1f) ^ -uVar1) + uVar1;\n    }\n    if (((uVar2 < 0x401f) && (uVar1 != 0)) && (uStack_1c == 0x80000000)) {\n      return uStack_1c;\n    }\n  }\n  return 0x80000000;\n}\n\n"
    },
    {
      "name": "FUN_00432430",
      "entry": "00432430",
      "c": "\nundefined1 (*) [16] __cdecl FUN_00432430(undefined1 (*param_1) [16],byte param_2)\n\n{\n  byte bVar1;\n  undefined1 *puVar2;\n  uint uVar3;\n  undefined1 (*pauVar4) [16];\n  uint uVar5;\n  int iVar6;\n  undefined1 (*pauVar7) [16];\n  char *pcVar8;\n  byte *pbVar9;\n  undefined1 auVar11 [16];\n  undefined1 auVar12 [16];\n  undefined1 auVar13 [16];\n  undefined1 auVar14 [16];\n  byte *pbVar10;\n  \n  if (DAT_00461d20 != 0) {\n    if (DAT_00461d20 < 2) {\n      auVar14 = pshuflw(ZEXT216(CONCAT11(param_2,param_2)),ZEXT216(CONCAT11(param_2,param_2)),0);\n      uVar3 = -1 << (sbyte)((uint)param_1 & 0xf);\n      pcVar8 = (char *)((int)param_1 - ((uint)param_1 & 0xf));\n      pauVar7 = (undefined1 (*) [16])0x0;\n      while( true ) {\n        auVar13[0] = -(*pcVar8 == '\\0');\n        auVar13[1] = -(pcVar8[1] == '\\0');\n        auVar13[2] = -(pcVar8[2] == '\\0');\n        auVar13[3] = -(pcVar8[3] == '\\0');\n        auVar13[4] = -(pcVar8[4] == '\\0');\n        auVar13[5] = -(pcVar8[5] == '\\0');\n        auVar13[6] = -(pcVar8[6] == '\\0');\n        auVar13[7] = -(pcVar8[7] == '\\0');\n        auVar13[8] = -(pcVar8[8] == '\\0');\n        auVar13[9] = -(pcVar8[9] == '\\0');\n        auVar13[10] = -(pcVar8[10] == '\\0');\n        auVar13[0xb] = -(pcVar8[0xb] == '\\0');\n        auVar13[0xc] = -(pcVar8[0xc] == '\\0');\n        auVar13[0xd] = -(pcVar8[0xd] == '\\0');\n        auVar13[0xe] = -(pcVar8[0xe] == '\\0');\n        auVar13[0xf] = -(pcVar8[0xf] == '\\0');\n        auVar12[0] = -(*pcVar8 == auVar14[0]);\n        auVar12[1] = -(pcVar8[1] == auVar14[1]);\n        auVar12[2] = -(pcVar8[2] == auVar14[2]);\n        auVar12[3] = -(pcVar8[3] == auVar14[3]);\n        auVar12[4] = -(pcVar8[4] == auVar14[4]);\n        auVar12[5] = -(pcVar8[5] == auVar14[5]);\n        auVar12[6] = -(pcVar8[6] == auVar14[6]);\n        auVar12[7] = -(pcVar8[7] == auVar14[7]);\n        auVar12[8] = -(pcVar8[8] == auVar14[0]);\n        auVar12[9] = -(pcVar8[9] == auVar14[1]);\n        auVar12[10] = -(pcVar8[10] == auVar14[2]);\n        auVar12[0xb] = -(pcVar8[0xb] == auVar14[3]);\n        auVar12[0xc] = -(pcVar8[0xc] == auVar14[4]);\n        auVar12[0xd] = -(pcVar8[0xd] == auVar14[5]);\n        auVar12[0xe] = -(pcVar8[0xe] == auVar14[6]);\n        auVar12[0xf] = -(pcVar8[0xf] == auVar14[7]);\n        uVar5 = (ushort)((ushort)(SUB161(auVar13 >> 7,0) & 1) |\n                         (ushort)(SUB161(auVar13 >> 0xf,0) & 1) << 1 |\n                         (ushort)(SUB161(auVar13 >> 0x17,0) & 1) << 2 |\n                         (ushort)(SUB161(auVar13 >> 0x1f,0) & 1) << 3 |\n                         (ushort)(SUB161(auVar13 >> 0x27,0) & 1) << 4 |\n                         (ushort)(SUB161(auVar13 >> 0x2f,0) & 1) << 5 |\n                         (ushort)(SUB161(auVar13 >> 0x37,0) & 1) << 6 |\n                         (ushort)(SUB161(auVar13 >> 0x3f,0) & 1) << 7 |\n                         (ushort)(SUB161(auVar13 >> 0x47,0) & 1) << 8 |\n                         (ushort)(SUB161(auVar13 >> 0x4f,0) & 1) << 9 |\n                         (ushort)(SUB161(auVar13 >> 0x57,0) & 1) << 10 |\n                         (ushort)(SUB161(auVar13 >> 0x5f,0) & 1) << 0xb |\n                         (ushort)(SUB161(auVar13 >> 0x67,0) & 1) << 0xc |\n                         (ushort)(SUB161(auVar13 >> 0x6f,0) & 1) << 0xd |\n                         (ushort)(SUB161(auVar13 >> 0x77,0) & 1) << 0xe |\n                        (ushort)(auVar13[0xf] >> 7) << 0xf) & uVar3;\n        if (uVar5 != 0) break;\n        uVar3 = (ushort)((ushort)(SUB161(auVar12 >> 7,0) & 1) |\n                         (ushort)(SUB161(auVar12 >> 0xf,0) & 1) << 1 |\n                         (ushort)(SUB161(auVar12 >> 0x17,0) & 1) << 2 |\n                         (ushort)(SUB161(auVar12 >> 0x1f,0) & 1) << 3 |\n                         (ushort)(SUB161(auVar12 >> 0x27,0) & 1) << 4 |\n                         (ushort)(SUB161(auVar12 >> 0x2f,0) & 1) << 5 |\n                         (ushort)(SUB161(auVar12 >> 0x37,0) & 1) << 6 |\n                         (ushort)(SUB161(auVar12 >> 0x3f,0) & 1) << 7 |\n                         (ushort)(SUB161(auVar12 >> 0x47,0) & 1) << 8 |\n                         (ushort)(SUB161(auVar12 >> 0x4f,0) & 1) << 9 |\n                         (ushort)(SUB161(auVar12 >> 0x57,0) & 1) << 10 |\n                         (ushort)(SUB161(auVar12 >> 0x5f,0) & 1) << 0xb |\n                         (ushort)(SUB161(auVar12 >> 0x67,0) & 1) << 0xc |\n                         (ushort)(SUB161(auVar12 >> 0x6f,0) & 1) << 0xd |\n                         (ushort)(SUB161(auVar12 >> 0x77,0) & 1) << 0xe |\n                        (ushort)(auVar12[0xf] >> 7) << 0xf) & uVar3;\n        iVar6 = 0x1f;\n        if (uVar3 != 0) {\n          for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n          }\n        }\n        if (uVar3 != 0) {\n          pauVar7 = (undefined1 (*) [16])(pcVar8 + iVar6);\n        }\n        uVar3 = 0xffffffff;\n        pcVar8 = pcVar8 + 0x10;\n      }\n      uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n              (ushort)((ushort)(SUB161(auVar12 >> 7,0) & 1) |\n                       (ushort)(SUB161(auVar12 >> 0xf,0) & 1) << 1 |\n                       (ushort)(SUB161(auVar12 >> 0x17,0) & 1) << 2 |\n                       (ushort)(SUB161(auVar12 >> 0x1f,0) & 1) << 3 |\n                       (ushort)(SUB161(auVar12 >> 0x27,0) & 1) << 4 |\n                       (ushort)(SUB161(auVar12 >> 0x2f,0) & 1) << 5 |\n                       (ushort)(SUB161(auVar12 >> 0x37,0) & 1) << 6 |\n                       (ushort)(SUB161(auVar12 >> 0x3f,0) & 1) << 7 |\n                       (ushort)(SUB161(auVar12 >> 0x47,0) & 1) << 8 |\n                       (ushort)(SUB161(auVar12 >> 0x4f,0) & 1) << 9 |\n                       (ushort)(SUB161(auVar12 >> 0x57,0) & 1) << 10 |\n                       (ushort)(SUB161(auVar12 >> 0x5f,0) & 1) << 0xb |\n                       (ushort)(SUB161(auVar12 >> 0x67,0) & 1) << 0xc |\n                       (ushort)(SUB161(auVar12 >> 0x6f,0) & 1) << 0xd |\n                       (ushort)(SUB161(auVar12 >> 0x77,0) & 1) << 0xe |\n                      (ushort)(auVar12[0xf] >> 7) << 0xf) & uVar3;\n      iVar6 = 0x1f;\n      if (uVar3 != 0) {\n        for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n        }\n      }\n      pauVar4 = (undefined1 (*) [16])(pcVar8 + iVar6);\n      if (uVar3 == 0) {\n        pauVar4 = pauVar7;\n      }\n      return pauVar4;\n    }\n    uVar3 = (uint)param_2;\n    if (uVar3 == 0) {\n      pcVar8 = (char *)((uint)param_1 & 0xfffffff0);\n      auVar14[0] = -(*pcVar8 == '\\0');\n      auVar14[1] = -(pcVar8[1] == '\\0');\n      auVar14[2] = -(pcVar8[2] == '\\0');\n      auVar14[3] = -(pcVar8[3] == '\\0');\n      auVar14[4] = -(pcVar8[4] == '\\0');\n      auVar14[5] = -(pcVar8[5] == '\\0');\n      auVar14[6] = -(pcVar8[6] == '\\0');\n      auVar14[7] = -(pcVar8[7] == '\\0');\n      auVar14[8] = -(pcVar8[8] == '\\0');\n      auVar14[9] = -(pcVar8[9] == '\\0');\n      auVar14[10] = -(pcVar8[10] == '\\0');\n      auVar14[0xb] = -(pcVar8[0xb] == '\\0');\n      auVar14[0xc] = -(pcVar8[0xc] == '\\0');\n      auVar14[0xd] = -(pcVar8[0xd] == '\\0');\n      auVar14[0xe] = -(pcVar8[0xe] == '\\0');\n      auVar14[0xf] = -(pcVar8[0xf] == '\\0');\n      uVar3 = (uint)(ushort)((ushort)(SUB161(auVar14 >> 7,0) & 1) |\n                             (ushort)(SUB161(auVar14 >> 0xf,0) & 1) << 1 |\n                             (ushort)(SUB161(auVar14 >> 0x17,0) & 1) << 2 |\n                             (ushort)(SUB161(auVar14 >> 0x1f,0) & 1) << 3 |\n                             (ushort)(SUB161(auVar14 >> 0x27,0) & 1) << 4 |\n                             (ushort)(SUB161(auVar14 >> 0x2f,0) & 1) << 5 |\n                             (ushort)(SUB161(auVar14 >> 0x37,0) & 1) << 6 |\n                             (ushort)(SUB161(auVar14 >> 0x3f,0) & 1) << 7 |\n                             (ushort)(SUB161(auVar14 >> 0x47,0) & 1) << 8 |\n                             (ushort)(SUB161(auVar14 >> 0x4f,0) & 1) << 9 |\n                             (ushort)(SUB161(auVar14 >> 0x57,0) & 1) << 10 |\n                             (ushort)(SUB161(auVar14 >> 0x5f,0) & 1) << 0xb |\n                             (ushort)(SUB161(auVar14 >> 0x67,0) & 1) << 0xc |\n                             (ushort)(SUB161(auVar14 >> 0x6f,0) & 1) << 0xd |\n                             (ushort)(SUB161(auVar14 >> 0x77,0) & 1) << 0xe |\n                            (ushort)(auVar14[0xf] >> 7) << 0xf) & -1 << ((byte)param_1 & 0xf);\n      while (uVar3 == 0) {\n        auVar11[0] = -(pcVar8[0x10] == '\\0');\n        auVar11[1] = -(pcVar8[0x11] == '\\0');\n        auVar11[2] = -(pcVar8[0x12] == '\\0');\n        auVar11[3] = -(pcVar8[0x13] == '\\0');\n        auVar11[4] = -(pcVar8[0x14] == '\\0');\n        auVar11[5] = -(pcVar8[0x15] == '\\0');\n        auVar11[6] = -(pcVar8[0x16] == '\\0');\n        auVar11[7] = -(pcVar8[0x17] == '\\0');\n        auVar11[8] = -(pcVar8[0x18] == '\\0');\n        auVar11[9] = -(pcVar8[0x19] == '\\0');\n        auVar11[10] = -(pcVar8[0x1a] == '\\0');\n        auVar11[0xb] = -(pcVar8[0x1b] == '\\0');\n        auVar11[0xc] = -(pcVar8[0x1c] == '\\0');\n        auVar11[0xd] = -(pcVar8[0x1d] == '\\0');\n        auVar11[0xe] = -(pcVar8[0x1e] == '\\0');\n        auVar11[0xf] = -(pcVar8[0x1f] == '\\0');\n        pcVar8 = pcVar8 + 0x10;\n        uVar3 = (uint)(ushort)((ushort)(SUB161(auVar11 >> 7,0) & 1) |\n                               (ushort)(SUB161(auVar11 >> 0xf,0) & 1) << 1 |\n                               (ushort)(SUB161(auVar11 >> 0x17,0) & 1) << 2 |\n                               (ushort)(SUB161(auVar11 >> 0x1f,0) & 1) << 3 |\n                               (ushort)(SUB161(auVar11 >> 0x27,0) & 1) << 4 |\n                               (ushort)(SUB161(auVar11 >> 0x2f,0) & 1) << 5 |\n                               (ushort)(SUB161(auVar11 >> 0x37,0) & 1) << 6 |\n                               (ushort)(SUB161(auVar11 >> 0x3f,0) & 1) << 7 |\n                               (ushort)(SUB161(auVar11 >> 0x47,0) & 1) << 8 |\n                               (ushort)(SUB161(auVar11 >> 0x4f,0) & 1) << 9 |\n                               (ushort)(SUB161(auVar11 >> 0x57,0) & 1) << 10 |\n                               (ushort)(SUB161(auVar11 >> 0x5f,0) & 1) << 0xb |\n                               (ushort)(SUB161(auVar11 >> 0x67,0) & 1) << 0xc |\n                               (ushort)(SUB161(auVar11 >> 0x6f,0) & 1) << 0xd |\n                               (ushort)(SUB161(auVar11 >> 0x77,0) & 1) << 0xe |\n                              (ushort)(auVar11[0xf] >> 7) << 0xf);\n      }\n      iVar6 = 0;\n      if (uVar3 != 0) {\n        for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n        }\n      }\n      pauVar7 = (undefined1 (*) [16])(pcVar8 + iVar6);\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])0x0;\n      uVar5 = (uint)param_1 & 0xf;\n      while (uVar5 != 0) {\n        if ((byte)(*param_1)[0] == uVar3) {\n          pauVar7 = param_1;\n        }\n        if ((byte)(*param_1)[0] == 0) {\n          return pauVar7;\n        }\n        param_1 = (undefined1 (*) [16])(*param_1 + 1);\n        uVar5 = (uint)param_1 & 0xf;\n      }\n      do {\n        pauVar4 = param_1 + 1;\n        iVar6 = pcmpistri(ZEXT416(uVar3),*param_1,0x40);\n        if ((undefined1 (*) [16])0xffffffef < param_1) {\n          pauVar7 = (undefined1 (*) [16])(pauVar4[-1] + iVar6);\n        }\n        param_1 = pauVar4;\n      } while (pauVar4 != (undefined1 (*) [16])0x0);\n    }\n    return pauVar7;\n  }\n  iVar6 = -1;\n  do {\n    pauVar7 = param_1;\n    if (iVar6 == 0) break;\n    iVar6 = iVar6 + -1;\n    pauVar7 = (undefined1 (*) [16])(*param_1 + 1);\n    puVar2 = *param_1;\n    param_1 = pauVar7;\n  } while (*puVar2 != '\\0');\n  iVar6 = -(iVar6 + 1);\n  pbVar10 = pauVar7[-1] + 0xf;\n  do {\n    pbVar9 = pbVar10;\n    if (iVar6 == 0) break;\n    iVar6 = iVar6 + -1;\n    pbVar9 = pbVar10 + -1;\n    bVar1 = *pbVar10;\n    pbVar10 = pbVar9;\n  } while (param_2 != bVar1);\n  pauVar7 = (undefined1 (*) [16])(pbVar9 + 1);\n  if ((*pauVar7)[0] != param_2) {\n    pauVar7 = (undefined1 (*) [16])0x0;\n  }\n  return pauVar7;\n}\n\n"
    },
    {
      "name": "__filter_x86_sse2_floating_point_exception_default",
      "entry": "00432567",
      "c": "\n/* Library Function - Single Match\n    __filter_x86_sse2_floating_point_exception_default\n   \n   Library: Visual Studio 2019 Release */\n\nint __cdecl __filter_x86_sse2_floating_point_exception_default(int param_1)\n\n{\n  uint uVar1;\n  \n  if ((DAT_00461d20 < 1) || ((param_1 != -0x3ffffd4c && (param_1 != -0x3ffffd4b)))) {\n    return param_1;\n  }\n  uVar1 = MXCSR ^ 0x3f;\n  if ((uVar1 & 0x81) != 0) {\n    if ((uVar1 & 0x204) == 0) {\n      return -0x3fffff72;\n    }\n    if ((uVar1 & 0x102) != 0) {\n      if ((uVar1 & 0x408) == 0) {\n        return -0x3fffff6f;\n      }\n      if ((uVar1 & 0x810) != 0) {\n        if ((uVar1 & 0x1020) != 0) {\n          return param_1;\n        }\n        return -0x3fffff71;\n      }\n      return -0x3fffff6d;\n    }\n  }\n  return -0x3fffff70;\n}\n\n"
    },
    {
      "name": "Unwind@004325e0",
      "entry": "004325e0",
      "c": "\nvoid Unwind_004325e0(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a(*(int **)(unaff_EBP + -0x10));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004325e8",
      "entry": "004325e8",
      "c": "\nvoid Unwind_004325e8(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00405f02((undefined1 *)(*(int *)(unaff_EBP + -0x10) + 0x1038));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004325f6",
      "entry": "004325f6",
      "c": "\nvoid Unwind_004325f6(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040cee1(*(int *)(unaff_EBP + -0x10) + 0x20f8);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432604",
      "entry": "00432604",
      "c": "\nvoid Unwind_00432604(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004016f8(*(int *)(unaff_EBP + -0x10) + 0x2298);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432612",
      "entry": "00432612",
      "c": "\nvoid Unwind_00432612(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004016f8(*(int *)(unaff_EBP + -0x10) + 0x45e8);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432620",
      "entry": "00432620",
      "c": "\nvoid Unwind_00432620(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041eb68(*(void **)(unaff_EBP + -0x14));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043264d",
      "entry": "0043264d",
      "c": "\nvoid Unwind_0043264d(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x38));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432666",
      "entry": "00432666",
      "c": "\nvoid Unwind_00432666(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x24));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043267f",
      "entry": "0043267f",
      "c": "\nvoid Unwind_0043267f(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00401645((int *)(unaff_EBP + -0x20));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432698",
      "entry": "00432698",
      "c": "\nvoid Unwind_00432698(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_004015fb((int *)(unaff_EBP + 0x1c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004326b1",
      "entry": "004326b1",
      "c": "\nvoid Unwind_004326b1(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_004015fb((int *)(unaff_EBP + 0x30));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004326ca",
      "entry": "004326ca",
      "c": "\nvoid Unwind_004326ca(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00412297((void *)(unaff_EBP + -0xe6ec));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004326e6",
      "entry": "004326e6",
      "c": "\nvoid Unwind_004326e6(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040b5f4(*(void **)(unaff_EBP + -0x10));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004326ee",
      "entry": "004326ee",
      "c": "\nvoid Unwind_004326ee(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_00401645((int *)(*(int *)(unaff_EBP + -0x10) + 0xb31c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004326fc",
      "entry": "004326fc",
      "c": "\nvoid Unwind_004326fc(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_00401645((int *)(*(int *)(unaff_EBP + -0x10) + 0xb37c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043270a",
      "entry": "0043270a",
      "c": "\nvoid Unwind_0043270a(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_00401645((int *)(*(int *)(unaff_EBP + -0x10) + 0xb3dc));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432718",
      "entry": "00432718",
      "c": "\nvoid Unwind_00432718(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_00401645((int *)(*(int *)(unaff_EBP + -0x10) + 0xb43c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432726",
      "entry": "00432726",
      "c": "\nvoid Unwind_00432726(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_00401645((int *)(*(int *)(unaff_EBP + -0x10) + 0xb49c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432745",
      "entry": "00432745",
      "c": "\nvoid Unwind_00432745(void)\n\n{\n  int unaff_EBP;\n  \n  _eh_vector_destructor_iterator_(*(void **)(unaff_EBP + -0x10),300,4,FUN_00405f80);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043275a",
      "entry": "0043275a",
      "c": "\nvoid Unwind_0043275a(void)\n\n{\n  int unaff_EBP;\n  \n  _eh_vector_destructor_iterator_\n            ((void *)(*(int *)(unaff_EBP + -0x10) + 0x4b4),0x178,4,FUN_00405f80);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432786",
      "entry": "00432786",
      "c": "\nvoid Unwind_00432786(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x2c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043278e",
      "entry": "0043278e",
      "c": "\nvoid Unwind_0043278e(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x30b4));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004327aa",
      "entry": "004327aa",
      "c": "\nvoid Unwind_004327aa(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x20));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004327c3",
      "entry": "004327c3",
      "c": "\nvoid Unwind_004327c3(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x6104));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004327ce",
      "entry": "004327ce",
      "c": "\nvoid Unwind_004327ce(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x204c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004327d9",
      "entry": "004327d9",
      "c": "\nvoid Unwind_004327d9(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x50cc));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004327f5",
      "entry": "004327f5",
      "c": "\nvoid Unwind_004327f5(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040cee1(*(int *)(unaff_EBP + -0x10) + 0x10);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432800",
      "entry": "00432800",
      "c": "\nvoid Unwind_00432800(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041eb68(*(void **)(unaff_EBP + -0x14));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432821",
      "entry": "00432821",
      "c": "\nvoid Unwind_00432821(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00401692((int *)(unaff_EBP + -0x9d70));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043283d",
      "entry": "0043283d",
      "c": "\nvoid Unwind_0043283d(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_0040f279((undefined1 *)(unaff_EBP + -0x1174));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432848",
      "entry": "00432848",
      "c": "\nvoid Unwind_00432848(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x1070));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432864",
      "entry": "00432864",
      "c": "\nvoid Unwind_00432864(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x1058));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043286f",
      "entry": "0043286f",
      "c": "\nvoid Unwind_0043286f(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x20));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432888",
      "entry": "00432888",
      "c": "\nvoid Unwind_00432888(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x20));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004328a1",
      "entry": "004328a1",
      "c": "\nvoid Unwind_004328a1(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x2048));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004328bd",
      "entry": "004328bd",
      "c": "\nvoid Unwind_004328bd(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041eb68(*(void **)(unaff_EBP + -0x10));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004328de",
      "entry": "004328de",
      "c": "\nvoid Unwind_004328de(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041eb68(*(void **)(unaff_EBP + -0x10));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004328fc",
      "entry": "004328fc",
      "c": "\nvoid Unwind_004328fc(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040ae7f((undefined4 *)(unaff_EBP + -0x20));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432904",
      "entry": "00432904",
      "c": "\nvoid Unwind_00432904(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040ae7f((undefined4 *)(unaff_EBP + -0x28));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043290c",
      "entry": "0043290c",
      "c": "\nvoid Unwind_0043290c(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040ae7f((undefined4 *)(unaff_EBP + -0x20));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432925",
      "entry": "00432925",
      "c": "\nvoid Unwind_00432925(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_0040f279((undefined1 *)(*(int *)(unaff_EBP + -0x10) + 0x6024));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432933",
      "entry": "00432933",
      "c": "\nvoid Unwind_00432933(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040b5a6((int *)(*(int *)(unaff_EBP + -0x10) + 0x7170));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432952",
      "entry": "00432952",
      "c": "\nvoid Unwind_00432952(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040a99e(*(int *)(unaff_EBP + -0x10) + 0x98);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432960",
      "entry": "00432960",
      "c": "\nvoid Unwind_00432960(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040a99e(*(int *)(unaff_EBP + -0x10) + 0xac);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043296e",
      "entry": "0043296e",
      "c": "\nvoid Unwind_0043296e(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040a99e(*(int *)(unaff_EBP + -0x10) + 0xc0);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043297c",
      "entry": "0043297c",
      "c": "\nvoid Unwind_0043297c(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041eb68(*(void **)(unaff_EBP + -0x14));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@0043298c",
      "entry": "0043298c",
      "c": "\nvoid Unwind_0043298c(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041eb68(*(void **)(unaff_EBP + -0x14));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004329ad",
      "entry": "004329ad",
      "c": "\nvoid Unwind_004329ad(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x4208));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004329c9",
      "entry": "004329c9",
      "c": "\nvoid Unwind_004329c9(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x24));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004329e2",
      "entry": "004329e2",
      "c": "\nvoid Unwind_004329e2(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040a84a(*(int *)(unaff_EBP + -0x10) + 4);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004329ed",
      "entry": "004329ed",
      "c": "\nvoid Unwind_004329ed(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(*(int *)(unaff_EBP + -0x10) + 0x24));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@004329f8",
      "entry": "004329f8",
      "c": "\nvoid Unwind_004329f8(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(*(int *)(unaff_EBP + -0x10) + 0x38));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432a03",
      "entry": "00432a03",
      "c": "\nvoid Unwind_00432a03(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00412239((int *)(*(int *)(unaff_EBP + -0x10) + 0x4c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432a0e",
      "entry": "00432a0e",
      "c": "\nvoid Unwind_00432a0e(void)\n\n{\n  int unaff_EBP;\n  \n  thunk_FUN_00414872(*(int *)(unaff_EBP + -0x10) + 0x4b44);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432a1c",
      "entry": "00432a1c",
      "c": "\nvoid Unwind_00432a1c(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041228c(*(int *)(unaff_EBP + -0x10) + 0x98d8);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432a2a",
      "entry": "00432a2a",
      "c": "\nvoid Unwind_00432a2a(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040c3b6((undefined4 *)(*(int *)(unaff_EBP + -0x10) + 0xe664));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432a49",
      "entry": "00432a49",
      "c": "\nvoid Unwind_00432a49(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x40));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432a62",
      "entry": "00432a62",
      "c": "\nvoid Unwind_00432a62(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0041f2c5(*(void **)(unaff_EBP + -0x14));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432a9e",
      "entry": "00432a9e",
      "c": "\nvoid Unwind_00432a9e(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x2c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432ab7",
      "entry": "00432ab7",
      "c": "\nvoid Unwind_00432ab7(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_004015fb((int *)(unaff_EBP + -0x28));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432ad0",
      "entry": "00432ad0",
      "c": "\nvoid Unwind_00432ad0(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00401692((int *)(unaff_EBP + -0x7d3c));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432adb",
      "entry": "00432adb",
      "c": "\nvoid Unwind_00432adb(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00401645((int *)(unaff_EBP + -0x24));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432af4",
      "entry": "00432af4",
      "c": "\nvoid Unwind_00432af4(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040959a((int *)(unaff_EBP + -0x34ac));\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432b10",
      "entry": "00432b10",
      "c": "\nvoid Unwind_00432b10(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_0040a55a(unaff_EBP + -0x8894);\n  return;\n}\n\n"
    },
    {
      "name": "Unwind@00432b2c",
      "entry": "00432b2c",
      "c": "\nvoid Unwind_00432b2c(void)\n\n{\n  int unaff_EBP;\n  \n  FUN_00407b9e(unaff_EBP + -0x2118);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432b70",
      "entry": "00432b70",
      "c": "\nvoid FUN_00432b70(void)\n\n{\n  FUN_0040d459((int *)&DAT_00441030);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432b80",
      "entry": "00432b80",
      "c": "\nvoid FUN_00432b80(void)\n\n{\n  FUN_0040f1e8((int *)&DAT_004481c8);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432b90",
      "entry": "00432b90",
      "c": "\nvoid FUN_00432b90(void)\n\n{\n  thunk_FUN_0040f279((undefined1 *)&DAT_00457a78);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432ba0",
      "entry": "00432ba0",
      "c": "\nvoid FUN_00432ba0(void)\n\n{\n  thunk_FUN_0040f279((undefined1 *)&DAT_0045eb82);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432bb0",
      "entry": "00432bb0",
      "c": "\nvoid FUN_00432bb0(void)\n\n{\n  thunk_FUN_0040f279((undefined1 *)&DAT_0044c472);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432bc0",
      "entry": "00432bc0",
      "c": "\nvoid FUN_00432bc0(void)\n\n{\n  FUN_0041acce(&DAT_0044c578);\n  return;\n}\n\n"
    },
    {
      "name": "FUN_00432bd0",
      "entry": "00432bd0",
      "c": "\nvoid FUN_00432bd0(void)\n\n{\n  Ordinal_9(&DAT_0043e7b8);\n  return;\n}\n\n"
    }
  ]
}